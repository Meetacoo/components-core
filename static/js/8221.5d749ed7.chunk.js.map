{"version":3,"file":"static/js/8221.5d749ed7.chunk.js","mappings":"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","sources":["components/Common/README.md","components/ConfirmButton/README.md","components/Content/README.md","components/Descriptions/README.md","components/Drawer/README.md","components/Enum/README.md","components/ExportTable/README.md","components/Features/README.md","components/File/README.md","components/FileList/README.md","components/FilePreview/README.md","components/Filter/README.md","components/FlexBox/README.md","components/FormInfo/README.md","components/FullCalendar/README.md","components/Global/README.md","components/HelperGuide/README.md","components/Highlight/README.md","components/HistoryStore/README.md","components/Icon/README.md","components/Image/README.md","components/InfoPage/README.md","components/Intl/doc/locale/en-US.js","components/Intl/doc/locale/zh-CN.js","components/Intl/README.md","components/Layout/README.md","components/LoadingButton/README.md","components/Menu/README.md","components/Modal/README.md","components/Navigation/README.md","components/Notification/README.md","components/Permissions/README.md","components/RichEditor/README.md","components/StateBar/README.md","components/StateTag/README.md","components/Table/README.md","components/TablePage/README.md","components/Tooltip/README.md","webpack://@kne-components/components-core/./src/components/Content/style.module.scss?6a0e","components/Content/index.js","webpack://@kne-components/components-core/./src/components/Descriptions/style.module.scss?d348","components/Descriptions/index.js","components/ExportTable/locale/index.js","webpack://@kne-components/components-core/./src/components/ExportTable/style.module.scss?7343","components/ExportTable/index.js","components/File/Download.js","webpack://@kne-components/components-core/./src/components/File/style.module.scss?4020","components/File/useFileModal.js","components/File/locale/index.js","components/File/List/OptionButtons.js","webpack://@kne-components/components-core/./src/components/File/List/style.module.scss?58ad","components/File/List/index.js","components/File/File.js","components/File/FileLink.js","webpack://@kne-components/components-core/./src/components/FileList/style.module.scss?bd2d","components/FileList/Title.js","components/FileList/locale/index.js","components/FileList/context.js","components/FileList/DragArea.js","components/FileList/FileList.js","components/FileList/FileUpload.js","webpack://@kne-components/components-core/./src/components/FilePreview/style.module.scss?a805","components/FilePreview/HtmlPreview.js","components/FilePreview/OfficePreview.js","components/FilePreview/PdfPreview.js","components/FilePreview/TextPreview.js","components/FilePreview/UnknownPreview.js","components/FilePreview/ImagePreview.js","components/FilePreview/typeFormat.js","components/FilePreview/OSSFilePreview.js","components/FilePreview/FilePreview.js","components/FlexBox/index.js","components/FormInfo/ErrorTip.js","components/FormInfo/FieldList.js","components/FormInfo/Form.js","components/FormInfo/FormApiButton.js","components/FormInfo/FormDrawer.js","components/FormInfo/FormInfo.js","components/FormInfo/FormItem.js","components/FormInfo/FormLangProvider.js","components/FormInfo/FormModal.js","components/FormInfo/FormStepModal.js","components/FormInfo/HelperGuideLabel.js","components/FormInfo/List.js","webpack://@kne-components/components-core/./src/components/FormInfo/SelectInnerInput/style.module.scss?b967","components/FormInfo/SelectInnerInput/context.js","components/FormInfo/SelectInnerInput/index.js","components/FormInfo/TableList.js","components/FormInfo/fields/AddressSelect.js","components/FormInfo/fields/AdvancedSelect.js","webpack://@kne-components/components-core/./src/components/FormInfo/fields/Avatar/style.module.scss?d6b0","components/FormInfo/fields/Avatar/index.js","components/FormInfo/fields/Cascader.js","components/FormInfo/fields/FunctionSelect.js","components/FormInfo/fields/IndustrySelect.js","components/FormInfo/fields/InputUpperCase/index.js","webpack://@kne-components/components-core/./src/components/FormInfo/fields/MoneyInput/style.module.scss?25be","components/FormInfo/fields/MoneyInput/index.js","webpack://@kne-components/components-core/./src/components/FormInfo/fields/PhoneNumber/style.module.scss?c00f","components/FormInfo/fields/PhoneNumber/index.js","components/FormInfo/fields/Rate/index.js","webpack://@kne-components/components-core/./src/components/FormInfo/fields/SalaryInput/style.module.scss?6af8","components/FormInfo/fields/SalaryInput/index.js","webpack://@kne-components/components-core/./src/components/FormInfo/fields/TableInput/style.module.scss?72b7","components/FormInfo/fields/TableInput/index.js","components/FormInfo/fields/TypeDateRangePicker.js","webpack://@kne-components/components-core/./src/components/FormInfo/fields/Upload/style.module.scss?391a","components/FormInfo/fields/Upload/index.js","components/FormInfo/fields/index.js","components/FormInfo/fields/Text/index.js","components/FormInfo/formModule.js","components/FormInfo/index.js","components/FormInfo/preset.js","webpack://@kne-components/components-core/./src/components/FullCalendar/style.module.scss?012e","components/FullCalendar/FullCalendar.js","webpack://@kne-components/components-core/./src/components/Highlight/style.module.scss?a31a","components/Highlight/index.js","webpack://@kne-components/components-core/./src/components/HistoryStore/style.module.scss?1856","components/HistoryStore/index.js","webpack://@kne-components/components-core/./src/components/InfoPage/style.module.scss?d163","components/InfoPage/Collapse.js","components/InfoPage/index.js","webpack://@kne-components/components-core/./src/components/Notification/style.module.scss?659e","components/Notification/index.js","webpack://@kne-components/components-core/./src/components/RichEditor/style.module.scss?912b","common/utils/base64ToFile.js","common/utils/isHref.js","components/RichEditor/ReactRichEditor.js","components/RichEditor/index.js","webpack://@kne-components/components-core/./src/components/Tooltip/style.module.scss?c30c","components/Tooltip/tooltip.js","components/Tooltip/tooltipInfoLabel.js","components/Tooltip/tooltipFetch.js","webpack://@kne-components/components-core/./src/components/FormInfo/style.module.scss?d1ff"],"sourcesContent":["import * as component_1 from '@components/Common';\nimport * as component_2 from '@kne/react-fetch';\nimport * as component_3 from 'lodash';\nconst readmeConfig = {\n    name: `Common`,\n    summary: `<p>为组件库提供通用的组件、方法、hooks</p>\n<h3>组件</h3>\n<ol>\n<li>FetchButton Button触发加载数据</li>\n<li>ScrollLoader 下拉滚动加载组件</li>\n<li>SearchInput 提供防抖的查询输入框</li>\n<li>SimpleBarBox</li>\n</ol>\n<h3>方法</h3>\n<ol>\n<li>changeMoneyToChinese 将金额转化为大写的人民币金额</li>\n<li>getPopupContainer</li>\n<li>getScrollEl</li>\n<li>getContainerBody</li>\n</ol>\n<h3>hooks</h3>\n<ol>\n<li>withOSSFile</li>\n</ol>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Common_d13bc`,\n        style: `.Common_d13bc .scroll-list {\n  max-height: 300px; }\n`,\n        list: [{\n    title: `FetchButton`,\n    description: `这里填写示例说明`,\n    code: `const Common = _Common;\n\nconst { FetchButton } = Common;\n\nconst BaseExample = () => {\n  return (\n    <FetchButton\n      api={{\n        loader: () => {\n          return [\n            { label: \"1\", content: \"11\" },\n            { label: \"2\", content: \"22\" },\n          ];\n        },\n      }}\n      modalProps={({ data }) => {\n        console.log(data);\n        alert(JSON.stringify(data));\n        return {\n          children: (\n            <div>\n              <div>我是一个弹窗</div>\n              <div>{data[0].label}</div>\n              <div>{data[0].content}</div>\n              <div>{data[1].label}</div>\n              <div>{data[1].content}</div>\n            </div>\n          ),\n        };\n      }}\n      modalFunc={() => {}}\n    >\n      FetchButton\n    </FetchButton>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Common\",\n    packageName: \"@components/Common\",\n    component: component_1\n}]\n},{\n    title: `ScrollLoader`,\n    description: `这里填写示例说明`,\n    code: `const { get, merge, range } = lodash;\nconst Common = _Common;\nconst { default: Fetch } = _reactFetch;\n\nconst { ScrollLoader } = Common;\n\nconst BaseExample = () => {\n  console.log(Fetch, _reactFetch);\n  return (\n    <Fetch\n      loader={({ data }) => {\n        const params = Object.assign(\n          {\n            perPage: 20,\n            currentPage: 1,\n          },\n          data\n        );\n        return new Promise((resolve) => {\n          const start = (params.currentPage - 1) * params.perPage;\n          setTimeout(() => {\n            resolve({\n              totalCount: 100,\n              pageData: range(start, start + params.perPage).map((key) => {\n                return {\n                  label: \\`第\\${key + 1}项\\`,\n                  value: key + 1,\n                };\n              }),\n            });\n          }, 500);\n        });\n      }}\n      render={(fetchApi) => {\n        const pagination = {\n          paramsType: \"data\",\n          current: \"currentPage\",\n          pageSize: \"perPage\",\n          defaultPageSize: 20,\n        };\n        const current = get(\n            fetchApi.requestParams,\n            [pagination.paramsType, pagination.current],\n            1\n          ),\n          pageSize =\n            get(fetchApi.requestParams, [\n              pagination.paramsType,\n              pagination.pageSize,\n            ]) || pagination.defaultPageSize;\n\n        const formatData = {\n          list: fetchApi.data.pageData,\n          total: fetchApi.data.totalCount,\n        };\n        return (\n          <ScrollLoader\n            completeTips=\"\"\n            className=\"scroll-list\"\n            isLoading={!fetchApi.isComplete}\n            noMore={!formatData.total || current * pageSize >= formatData.total}\n            onLoader={async () => {\n              await fetchApi.loadMore(\n                merge({\n                  data: {\n                    [pagination.pageSize]: pageSize,\n                    [pagination.current]: current + 1,\n                  },\n                }),\n                (data, newData) => {\n                  return Object.assign({}, newData, {\n                    pageData: data.pageData.concat(newData.pageData),\n                  });\n                }\n              );\n            }}\n          >\n            {formatData.list.map((item) => {\n              return <div>{item.label}</div>;\n            })}\n          </ScrollLoader>\n        );\n      }}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Common\",\n    packageName: \"@components/Common\",\n    component: component_1\n},{\n    name: \"_reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_2\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_3\n}]\n},{\n    title: `SearchInput`,\n    description: `搜索框`,\n    code: `const Common = _Common;\n\nconst { SearchInput } = Common;\nconst { useState } = React;\n\nconst BaseExample = () => {\n  const [value, setValue] = useState(\"\");\n  return (\n    <SearchInput\n      value={value}\n      onSearch={(value) => {\n        setValue(value);\n        console.log(value);\n      }}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Common\",\n    packageName: \"@components/Common\",\n    component: component_1\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_4 from '@components/ConfirmButton';\nimport * as component_5 from 'antd';\nimport * as component_6 from '@components/Global';\nconst readmeConfig = {\n    name: `ConfirmButton`,\n    summary: `<h3>何时使用</h3>\n<p>执行操作前确认后再执行</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>message</td>\n<td>删除提示</td>\n<td>jsx</td>\n<td>确定要删除吗？</td>\n</tr>\n<tr>\n<td>title</td>\n<td>删除提示标题</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>isDelete</td>\n<td>是否为删除操作</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>onClick</td>\n<td>点击确认后执行的事件</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>点击取消后执行的事件</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>按钮是否禁用</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>showCancel</td>\n<td>是否显示取消按钮</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancelText</td>\n<td>取消按钮文案</td>\n<td>string</td>\n<td>取消</td>\n</tr>\n<tr>\n<td>okText</td>\n<td>确认按钮文案</td>\n<td>string</td>\n<td>确认</td>\n</tr>\n<tr>\n<td>isModal</td>\n<td>是否以弹窗方式展示，默认为Popconfirm</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>placement</td>\n<td>当isModal为false时生效，指定Popconfirm的弹出方向</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getContainer</td>\n<td>指定Popconfirm或Modal弹出位置，一般不需要指定</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>ConfirmLink</h3>\n<p>另外的一种按钮形式参数同ConfirmButton</p>\n<h3>withConfirm</h3>\n<p>高阶组件可以自定义按钮</p>`,\n    example: {\n        isFull: false,\n        className: `ConfirmButton_5f815`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: ConfirmButton, ConfirmLink } = _ConfirmButton;\nconst { Space } = antd;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <Space>\n      <ConfirmButton\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        删除\n      </ConfirmButton>\n      <ConfirmButton\n        isModal\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        Modal确认删除\n      </ConfirmButton>\n      <ConfirmLink\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        Link删除\n      </ConfirmLink>\n      <ConfirmButton\n        title=\"确定要删除吗？\"\n        message=\"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\"\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        有title的删除\n      </ConfirmButton>\n      <ConfirmButton\n        isModal\n        title=\"确定要删除吗？\"\n        message=\"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\"\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        有title的Modal确认删除\n      </ConfirmButton>\n\n      <ConfirmButton\n        title=\"确定要删除吗？\"\n        isDelete={false}\n        message=\"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\"\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        非警告有title的删除\n      </ConfirmButton>\n      <ConfirmButton\n        isModal\n        title=\"确定要删除吗？\"\n        isDelete={false}\n        message=\"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\"\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        非警告有title的Modal确认删除\n      </ConfirmButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_ConfirmButton\",\n    packageName: \"@components/ConfirmButton\",\n    component: component_4\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_5\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_6\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_8 from '@components/Content';\nconst readmeConfig = {\n    name: `Content`,\n    summary: `<h3>何时使用</h3>\n<p>成组展示多个字段，常见于详情页的信息展示</p>\n<h3>特点</h3>\n<p>labelAlign不为auto时会自动计算label的最小宽度使所有label的宽度等于最长的label宽度使视觉上更加整齐有秩序感</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>list</td>\n<td>内容，为一个数组，数组里面每一个值{label,content}</td>\n<td>array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>labelAlign</td>\n<td>label的对齐方式可以传入的值 left,right,center,auto,为auto时label不计算最小宽度</td>\n<td>string</td>\n<td>left</td>\n</tr>\n<tr>\n<td>col</td>\n<td>显示列数</td>\n<td>number</td>\n<td>1</td>\n</tr>\n<tr>\n<td>gutter</td>\n<td>栅格间隔，可以写成像素值或支持响应式的对象写法来设置水平间隔 { xs: 8, sm: 16, md: 24}。或者使用数组形式同时设置 [水平间距, 垂直间距]</td>\n<td>number</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Content_f15c1`,\n        style: ``,\n        list: [{\n    title: `基本示例`,\n    description: `展示了一个基本内容`,\n    code: `const {default:Content} = _Content;\nconst BaseExample = ()=>{\n    return <Content list={[\n        {label:'标题',content:'内容'},\n        {label:'标题标题',content:'内容内容'},\n        {label:'标题标',content:'内容内容内容内容内容内容内容内容内容内容'},\n        {label:'标题标题标题',content:'内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容'}\n    ]}/>;\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_8\n}]\n},{\n    title: `labelAlign auto`,\n    description: `展示了设置labelAlign为auto的情况`,\n    code: `const {default: Content} = _Content;\nconst BaseExample = () => {\n    return <Content labelAlign=\"auto\" list={[\n        {label: '标题', content: '内容'},\n        {label: '标题标题', content: '内容内容'},\n        {label: '标题标', content: '内容内容内容内容内容内容内容内容内容内容'},\n        {\n            label: '标题标题标题',\n            content: '内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容'\n        }\n    ]}/>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_8\n}]\n},{\n    title: `多列`,\n    description: `展示了两列的情况`,\n    code: `const {default: Content} = _Content;\nconst BaseExample = () => {\n    return <Content col={2} labelAlign=\"auto\" list={[\n        {label: '标题', content: '内容'},\n        {label: '标题标题', content: '内容内容'},\n        {label: '标题标', content: '内容内容内容内容内容内容内容内容内容内容'},\n        {\n            label: '标题标题标题',\n            content: '内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容'\n        }\n    ]}/>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_8\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_7 from '@components/Descriptions';\nconst readmeConfig = {\n    name: `Descriptions`,\n    summary: `<h3>何时使用</h3>\n<p>常见于详情页的信息展示</p>\n<h3>特点</h3>\n<ul>\n<li>最多支持两列数据展示，多余的列将不展示</li>\n<li>支持Features控制列内容开启和关闭</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dataSource</td>\n<td>详情数据源，内部每个数组为一行数据，每行数据中每个对象为一列数据，每行最多包含2列内容，多余的会被丢弃</td>\n<td>array[[{display,label,content,featureId}]]</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[[{display}]]</td>\n<td>数据是否展示,当为function时可以接收到(item,dataSource)参数，item为当前项配置，dataSource为整个组件的dataSource配置</td>\n<td>boolean,function</td>\n<td>true</td>\n</tr>\n<tr>\n<td>dataSource[[{label}]]</td>\n<td>数据展示的label</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[[{content}]]</td>\n<td>数据展示的内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[[{featureId}]]</td>\n<td>Features控制的id，参考Features组件的id参数</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Descriptions_8bc84`,\n        style: ``,\n        list: [{\n    title: `展示一个信息详情`,\n    description: `展示一个信息详情`,\n    code: `const { default: Descriptions } = _Descriptions;\nconst BaseExample = () => {\n  return (\n    <Descriptions\n      dataSource={[\n        [\n          { label: \"客户名称\", content: \"腾讯\" },\n          {\n            label: \"发票抬头\",\n            content: \"腾讯科技公司\",\n          },\n        ],\n        [\n          { label: \"发票类型\", content: \"增值税专用发票\" },\n          {\n            label: \"发票开具日期\",\n            content: \"2022-08-15\",\n          },\n        ],\n        [{ label: \"退票金额\", content: \"22000.00元\" }],\n        [\n          {\n            label: \"发票号\",\n            content: (\n              <div>\n                <div>00384895992774</div>\n                <div>00384895992774</div>\n                <div>00384895992774</div>\n                <div>00384895992774</div>\n              </div>\n            ),\n          },\n        ],\n        [\n          { label: \"是否需要重开发票\", content: \"否\" },\n          {\n            label: \"是否涉及金融变动\",\n            content: \"否\",\n          },\n        ],\n        [\n          { label: \"是否造成实质损失\", content: \"否\" },\n          { label: \"责任归属\", content: \"客户原因\" },\n        ],\n        [\n          {\n            label: \"退票原因\",\n            content: \"退票原因的描述退票原因的描述退票原因的描\",\n          },\n        ],\n        [{ label: \"附件\", content: \"附件名称\" }],\n        [\n          { label: \"操作时间\", content: \"2022-08-01 16:32\" },\n          {\n            label: \"操作人\",\n            content: \"西西歪\",\n          },\n        ],\n        [\n          {\n            label: \"超长内容\",\n            content:\n              \"超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容\",\n          },\n          {\n            label: \"超长英文\",\n            content:\n              \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n          },\n        ],\n      ]}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Descriptions\",\n    packageName: \"@components/Descriptions\",\n    component: component_7\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_9 from '@components/Drawer';\nimport * as component_10 from '@components/Global';\nimport * as component_11 from '@components/Content';\nimport * as component_12 from 'antd';\nimport * as component_13 from 'lodash';\nconst readmeConfig = {\n    name: `Drawer`,\n    summary: `<p>屏幕边缘滑出的浮层面板</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>footer</td>\n<td>弹窗的footer，当其被显式设置成null且footerButtons没有设置过时弹窗不显示footer。当它类型为function时可以得到close方法和withDecorator设置的props</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>footerButtons</td>\n<td>弹窗footer的按钮区，默认为确认和取消按钮，默认按钮分别响应onConfirm和onCancel方法，如果自定义设置footerButtons则需要自行传入onClick参数，onConfirm和onCancel方法将不生效</td>\n<td>array</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>弹窗关闭时调用，弹窗受控时由该方法将外部open状态修改</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onConfirm</td>\n<td>当footerButtons未自定义设置时点击确认按钮触发执行该方法，当其返回Promise点击后Promise，resolve之前确认按钮显示为loading状态，返回值为false或者Promise的resolve值为false时弹窗不会被关闭，其他情况弹窗默认关闭</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>和onConfirm类似，其为点击取消按钮触发</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>弹窗内容，可以为jsx或者function，为function时可以接收到close和withDecorator设置的props</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>withDecorator</td>\n<td>弹窗修饰器，会接收到弹窗children的render方法，可以在其外部添加修饰内容后执行render方法，给render方法传入的值可以在children,footer,rightOptions类型为function时接收到对应的参数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>maskClosable</td>\n<td>点击蒙层是否允许关闭</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数参考antd Drawer组件</p>\n<h3>AppDrawer</h3>\n<p>全局抽屉包裹组件，提供消费上下文的默认环境，提供可消费 React context 的 drawer 的静态方法，可以简化 useDrawer 等方法需要手动植入 contextHolder 的问题。</p>\n<h3>useDrawer</h3>\n<p>获取一个执行后可以弹出一个Drawer组件的方法,前置条件是需要再全局注入AppDrawer包裹组件</p>\n<h4>return:drawer</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>drawer</td>\n<td>执行后可以弹出一个Drawer弹窗，参数同Drawer组件参数</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>\n<h3>DrawerButton</h3>\n<p>点击以后可以执行获取数据，在数据未返回时按钮展示为loading状态，数据返回后弹出Drawer弹窗</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>@kne/react-fetch 所需参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>drawerProps</td>\n<td>同Drawer参数,当它为function时，执行function后返回的值作为drawerProps</td>\n<td>object,function({data,fetchApi,close})</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数同antd Button 组件</p>`,\n    example: {\n        isFull: false,\n        className: `Drawer_9b1ed`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Drawer, useDrawer, DrawerButton } = _Drawer;\nconst { Button, Space } = antd;\nconst { range } = lodash;\nconst { useRef, useState } = React;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst api = {\n  loader: () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve([\n          {\n            label: \"内容1\",\n            content:\n              \"内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1\",\n          },\n          {\n            label: \"内容2\",\n            content:\n              \"内容2内容2内内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n        ]);\n      }, 1000);\n    });\n  },\n};\n\nconst BaseExample = () => {\n  const drawer = useDrawer();\n  const [open, setOpen] = useState(false);\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        open 组件打开\n      </Button>\n      <Button\n        onClick={() => {\n          drawer({\n            title: \"标题\",\n            children: \"打开了一个抽屉\",\n          });\n        }}\n      >\n        hook 打开\n      </Button>\n      <DrawerButton\n        api={api}\n        modalProps={({ data }) => {\n          return {\n            title: \"加载数据的弹窗\",\n            children: <Content list={data} col={1} />,\n          };\n        }}\n      >\n        按钮点击加载数据\n      </DrawerButton>\n      <Drawer title=\"Basic Drawer\" onClose={() => setOpen(false)} open={open}>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n      </Drawer>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Drawer\",\n    packageName: \"@components/Drawer\",\n    component: component_9\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_10\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_11\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_12\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_13\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_22 from '@components/Enum';\nimport * as component_23 from 'antd';\nimport * as component_24 from '@components/Global';\nconst readmeConfig = {\n    name: `Enum`,\n    summary: ``,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Enum_cf204`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Enum } = _Enum;\nconst { PureGlobal } = global;\nconst { Space, Select } = antd;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        locale: \"zh-CN\",\n        enums: {\n          testEnums: async ({ locale }) => {\n            console.log(locale);\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve([\n                  { value: \"1\", description: \"第一项\" },\n                  { value: \"2\", description: \"第二项\" },\n                  {\n                    value: \"3\",\n                    description: \"第三项\",\n                  },\n                ]);\n              }, 1000);\n            });\n          },\n        },\n      }}\n    >\n      <Space>\n        <Enum moduleName=\"gender\" name=\"M\">\n          {(data) => data.description}\n        </Enum>\n        <Enum moduleName=\"testEnums\" name=\"1\">\n          {(data) => data.description}\n        </Enum>\n        <Enum moduleName=\"testEnums\" name=\"2\">\n          {(data) => data.description}\n        </Enum>\n        <Enum moduleName=\"testEnums\">\n          {(list) => {\n            return (\n              <Select\n                placeholder=\"请选择\"\n                options={list.map((item) => ({\n                  value: item.value,\n                  label: item.description,\n                }))}\n              />\n            );\n          }}\n        </Enum>\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Enum\",\n    packageName: \"@components/Enum\",\n    component: component_22\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_14 from '@components/ExportTable';\nimport * as component_15 from '@components/Global';\nimport * as component_16 from '@kne/react-fetch';\nconst readmeConfig = {\n    name: `ExportTable`,\n    summary: `<p>自定义表格导出列 <em><strong>（已废弃请勿使用）</strong></em></p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>columns</td>\n<td>配置同TablePage列,属性key对应后端导出的字段名，不需要参与导出的列可以配置属性exportHidden:true</td>\n<td>function, array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>name</td>\n<td>缓存的名称key（导出接口的key）</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>onExport</td>\n<td>导出事件</td>\n<td>function({name,downloadBlobFile})</td>\n<td></td>\n</tr>\n<tr>\n<td>saveDataApi</td>\n<td>保存接口APi,如果配置优先取当前值，否则取全局中的配置</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>getDataApi</td>\n<td>获取上一次保存的列名数据，如果配置优先取当前值，否则取全局中的配置</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `ExportTable_487be`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: ExportTable } = _ExportTable;\nconst { default: Global } = global;\nconst { preset } = reactFetch;\n\nconst ajax = (config) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: {\n          code: 0,\n          data: [\"remark1\", \"remark3\"],\n        },\n      });\n    }, 100);\n  });\n};\n\npreset({\n  ajax,\n});\nconst BaseExample = () => {\n  return (\n    <Global\n      preset={{\n        ajax,\n        exportTableServerApis: {\n          getDataApi: (name) => {\n            return {\n              url: \"/api/v1/client/client/get_client_export_column\",\n              method: \"POST\",\n              data: {\n                key: name,\n              },\n              transformResponse: (response) => {\n                const { data } = response;\n                response.data = Object.assign({}, data, {\n                  data: (() => {\n                    try {\n                      return data.data ? JSON.parse(data.data) : [];\n                    } catch (e) {\n                      return [];\n                    }\n                  })(),\n                });\n                response.data = {\n                  code: response.data.code === 0 ? 200 : data.code,\n                  msg: response.data.msg,\n                  results: response.data.data,\n                };\n                return response;\n              },\n            };\n          },\n          saveDataApi: ({ name, data }) => {\n            return ajax({\n              url: \"/api/v1/client/client/save_client_export_column\",\n              method: \"POST\",\n              data: {\n                exportColumn: data,\n                key: name,\n              },\n            });\n          },\n        },\n      }}\n    >\n      <ExportTable\n        name=\"ExportTableInvoice\"\n        columns={[\n          {\n            title: \"发票备注1\",\n            groupName: \"开票信息\",\n            hidden: true,\n            name: \"remark1\",\n            key: \"remark1\",\n            width: 150,\n          },\n          {\n            title: \"发票备注2\",\n            groupName: \"开票信息\",\n            hidden: true,\n            name: \"remark2\",\n            key: \"remark2\",\n            width: 150,\n          },\n          {\n            title: \"发票备注3\",\n            groupName: \"开票信息1\",\n            hidden: true,\n            name: \"remark3\",\n            key: \"remark3\",\n            width: 150,\n          },\n          {\n            title: \"发票备注4\",\n            groupName: \"开票信息1\",\n            hidden: true,\n            name: \"remark4\",\n            key: \"remark4\",\n            width: 150,\n          },\n          {\n            title: \"发票备注5\",\n            groupName: \"开票信息3\",\n            hidden: true,\n            name: \"remark5\",\n            key: \"remark5\",\n            width: 150,\n          },\n          {\n            title: \"发票备注6\",\n            groupName: \"开票信息3\",\n            hidden: true,\n            name: \"remark6\",\n            key: \"remark6\",\n            width: 150,\n          },\n          {\n            title: \"发票备注7\",\n            groupName: \"开票信息4\",\n            hidden: true,\n            name: \"remark7\",\n            key: \"remark7\",\n            width: 150,\n          },\n          {\n            title: \"发票备注8\",\n            groupName: \"开票信息4\",\n            hidden: true,\n            name: \"remark8\",\n            key: \"remark8\",\n            width: 150,\n          },\n        ]}\n      />\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ExportTable\",\n    packageName: \"@components/ExportTable\",\n    component: component_14\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_15\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_16\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_17 from '@components/Features';\nimport * as component_18 from '@components/Global';\nimport * as component_19 from '@components/Layout';\nimport * as component_20 from 'react-router-dom';\nimport * as component_21 from 'antd';\nconst readmeConfig = {\n    name: `Features`,\n    summary: `<h3>何时使用</h3>\n<p>在系统中需要通过一些条件，系统性地让整个系统的某些功能屏蔽或者有另外的一些展现方式，可以用该组件来实现</p>\n<h3>特点</h3>\n<ul>\n<li>全局性配置，一次性声明，避免将各种判断语句散落在项目各处造成难以维护</li>\n<li>具有特征判断和依赖性判断，即当系统描述性文件中含有某个模块且含有所有依赖项模块则判断该组件为正常状态，其他情况为关闭状态</li>\n<li>可以通过配置文件给正常状态和关闭状态的组件传递不同的props来控制两种状态下组件的不同逻辑</li>\n<li>在配置文件中，组件的id是简写，只需要保证同一层级的组件id不重复就可以了，它的真实id会通过其所在的上下级关系，通过冒号将每一层的组件id链接起来组成其真实的id，你可以打开调试模式查看每一个组件实际运行时的id和判断状态</li>\n<li>组件的type可以设置为三种：system,module,feature。system为配置文件最顶级组件，module为功能模块，默认Layout的Page组件openFeatures为true时它的name会被设置成module，feature为具体的功能项</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>模块或功能id，通过Global里面的preset的features配置确定该模块开启或者关闭</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>features 参数设置</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>debug</td>\n<td>是否开启调试模式，开启后控制台会打印所有模块的id和判断结果</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>profile</td>\n<td>模块配置列表，具体参考下面profile参数说明</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>profile参数说明</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>模块的唯一标识符，需要保证在当前一级中不重复，实际id为所有父级的id用’:‘链接的字符串</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>type</td>\n<td>可能取值为system,module,feature，注意最外层的type必须为system</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>name</td>\n<td>模块的中文名称，不参与判断，只标识模块名帮助开发者识别</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>close</td>\n<td>模块是否关闭，可以缺省该值，缺省时profile里面存在某id的模块即为模块开启，不存在即为关闭。在特殊情况下，在profile存在该模块配置但是希望其关闭时可以显示指定该参数为true来关闭模块</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>dependencies</td>\n<td>依赖模块列表，每一项为一个模块id（该id必须为完整的id串，即带有所有父级id的用’:‘链接起来的字符串）,当所有id的指代模块都被判断开启时，该模块被判断为开启</td>\n<td>array[string]</td>\n<td>-</td>\n</tr>\n<tr>\n<td>options</td>\n<td>模块开启时获取的参数</td>\n<td>any</td>\n<td>-</td>\n</tr>\n<tr>\n<td>rejectedOptions</td>\n<td>模块关闭时获取的参数</td>\n<td>any</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>被控制的模块，为function时可以接收到({isPass,options})参数 isPass为模块是否开启，options在模块开启时为options参数，在模块关闭时为rejectedOptions参数，其不为function类型时当模块关闭则不显示children，模块开启时正常显示children</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Features_98f77`,\n        style: ``,\n        list: [{\n    title: `展示了一个系统中功能一开启功能二关闭的情况`,\n    description: `展示了一个系统中功能一开启功能二关闭的情况`,\n    code: `const { default: Features } = _Features;\nconst { default: Layout, PermissionsPage } = layout;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        features: {\n          debug: true,\n          profile: {\n            id: \"erc\",\n            type: \"system\",\n            name: \"业务系统\",\n            children: [\n              {\n                id: \"home\",\n                type: \"module\",\n                name: \"首页\",\n                children: [\n                  {\n                    id: \"test\",\n                    type: \"feature\",\n                    name: \"测试功能\",\n                    dependencies: [\"erc:client\"],\n                  },\n                ],\n              },\n              {\n                id: \"position\",\n                type: \"module\",\n                name: \"职位\",\n                children: [\n                  {\n                    id: \"position-list\",\n                    type: \"feature\",\n                    options: [],\n                    rejectedOptions: [],\n                  },\n                ],\n              },\n              {\n                id: \"client\",\n                type: \"module\",\n                name: \"客户\",\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <Layout navigation={{ isFixed: false }}>\n        <PermissionsPage name=\"home\" openFeatures>\n          <Features id=\"test\">功能模块一</Features>\n          <Features id=\"test2\">功能模块二</Features>\n        </PermissionsPage>\n      </Layout>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Features\",\n    packageName: \"@components/Features\",\n    component: component_17\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_18\n},{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_19\n}]\n},{\n    title: `展示了打开页面特性配置开启和关闭的情况`,\n    description: `展示了打开页面特性配置开启和关闭的情况`,\n    code: `const { default: Features } = _Features;\nconst { default: Layout, PermissionsPage } = layout;\nconst { PureGlobal } = global;\nconst { Route, Routes } = Router;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        features: {\n          debug: true,\n          profile: {\n            id: \"erc\",\n            type: \"system\",\n            name: \"业务系统\",\n            children: [\n              {\n                id: \"home\",\n                type: \"module\",\n                name: \"首页\",\n                children: [\n                  {\n                    id: \"test\",\n                    type: \"feature\",\n                    name: \"测试功能\",\n                  },\n                  {\n                    id: \"test2\",\n                    type: \"feature\",\n                    name: \"测试功能2\",\n                    dependencies: [\"erc:client\"],\n                  },\n                ],\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <Layout\n        navigation={{\n          isFixed: false,\n          list: [\n            {\n              key: \"position\",\n              title: \"职位\",\n              path: \"/position\",\n            },\n            {\n              key: \"client\",\n              title: \"客户\",\n              path: \"/client\",\n            },\n          ],\n        }}\n      >\n        <Routes>\n          <Route\n            index\n            element={\n              <PermissionsPage name=\"home\" openFeatures>\n                home页面模块\n                <div>\n                  <Features id=\"test\">开启模块</Features>\n                  <Features id=\"test2\">关闭模块</Features>\n                </div>\n              </PermissionsPage>\n            }\n          />\n          <Route\n            path=\"/position\"\n            element={\n              <PermissionsPage name=\"position\" openFeatures>\n                position页面模块\n              </PermissionsPage>\n            }\n          />\n          <Route\n            path=\"/client\"\n            element={\n              <PermissionsPage name=\"client\">\n                client页面模块,未打开features\n              </PermissionsPage>\n            }\n          />\n        </Routes>\n      </Layout>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Features\",\n    packageName: \"@components/Features\",\n    component: component_17\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_18\n},{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_19\n},{\n    name: \"Router\",\n    packageName: \"react-router-dom\",\n    component: component_20\n}]\n},{\n    title: `展示了一个系统中功能开启和关闭参数获取`,\n    description: `展示了一个系统中功能开启和关闭参数获取`,\n    code: `const { default: Features } = _Features;\nconst { default: Layout, PermissionsPage } = layout;\nconst { PureGlobal } = global;\nconst { useState } = React;\nconst { Button, Space } = antd;\nconst BaseExample = () => {\n  const [close, setClose] = useState(false);\n  return (\n    <PureGlobal\n      preset={{\n        features: {\n          debug: true,\n          profile: {\n            id: \"erc\",\n            type: \"system\",\n            name: \"业务系统\",\n            children: [\n              {\n                id: \"home\",\n                type: \"module\",\n                name: \"首页\",\n                children: [\n                  {\n                    id: \"test\",\n                    type: \"feature\",\n                    name: \"测试功能\",\n                    options: {\n                      state: \"开启\",\n                    },\n                    rejectedOptions: {\n                      state: \"关闭\",\n                    },\n                    close: close,\n                  },\n                ],\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <Space direction=\"vertical\">\n        <Button\n          onClick={() => {\n            setClose((value) => !value);\n          }}\n        >\n          切换\n        </Button>\n        <Layout navigation={{ isFixed: false }}>\n          <PermissionsPage name=\"home\" openFeatures>\n            <Features id=\"test\">\n              {({ isPass, options }) => {\n                return isPass\n                  ? \"模块开启,options:\" + JSON.stringify(options)\n                  : \"模块关闭,options:\" + JSON.stringify(options);\n              }}\n            </Features>\n          </PermissionsPage>\n        </Layout>\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Features\",\n    packageName: \"@components/Features\",\n    component: component_17\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_18\n},{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_19\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_21\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_25 from '@components/File';\nimport * as component_26 from '@components/Global';\nimport * as component_27 from '@kne/remote-loader';\nimport * as component_28 from 'lodash';\nimport * as component_29 from 'antd';\nconst readmeConfig = {\n    name: `File`,\n    summary: `<p>提供文件展示，OSS文件id转换访问地址，文件列表，下载等操作</p>\n<p>注意：</p>\n<ul>\n<li>如果需要显示或者转换oss id的文件，需要Global的preset apis设置过oss接口或者传入apis.oss参数，oss返回访问地址</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>如果文件为oss文件，传入ossId</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>url</td>\n<td>如果文件为普通文件地址，传入该参数</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>error</td>\n<td>加载文件失败展示组件</td>\n<td>jsx</td>\n<td>null</td>\n</tr>\n<tr>\n<td>apis</td>\n<td>通过oss id获取oss文件地址接口{oss} oss为一个@kne/react-fetch参数，如果Global的preset已设置该值，切当前组件也需要应用该值时可以不传</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>加载文件loading过程中显示组件</td>\n<td>jsx</td>\n<td>null</td>\n</tr>\n</tbody>\n</table>\n<h4>Download</h4>\n<p>下载文件按钮</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filename</td>\n<td>下载文件的文件名</td>\n<td>string</td>\n<td>未命名下载文件</td>\n</tr>\n<tr>\n<td>onSuccess</td>\n<td>下载成功回调函数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onError</td>\n<td>下载失败回调函数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>id</td>\n<td>如果文件为oss文件，传入ossId</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>url</td>\n<td>如果文件为普通文件地址，传入该参数</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>apis</td>\n<td>通过oss id获取oss文件地址接口{oss} oss为一个@kne/react-fetch参数，如果Global的preset已设置该值，切当前组件也需要应用该值时可以不传</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>List</h4>\n<p>显示文件列表，可以带有编辑文件名称，文件预览，文件删除等功能</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dataSource</td>\n<td>文件列表</td>\n<td>array[{id,type,filename,date,userName}]</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>dataSource[].id</td>\n<td>id:文件的id，一般为ossId</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[].type</td>\n<td>文件状态为uploading时该行文件展示为loading状态</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[].filename</td>\n<td>文件名</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[].date</td>\n<td>文件上传日期</td>\n<td>Date,date timestamp</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[].userName</td>\n<td>文件上传人</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getPermission</td>\n<td>获取操作权限，会在render每条数据时调用，获取到参数列表[type,itemData],type:preview预览,edit编辑,download下载，返回false为没有权限，其他情况为有权限</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>hasPreview</td>\n<td>是否开启预览功能，和getPermission type:preview预览结果同事控制，全都判断通过才能开启预览功能</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>infoItemRenders</td>\n<td>自定义列</td>\n<td>array[{span,render}]</td>\n<td>-</td>\n</tr>\n<tr>\n<td>infoItemRenders[].span</td>\n<td>当前列栅格数</td>\n<td>number</td>\n<td>4</td>\n</tr>\n<tr>\n<td>infoItemRenders[].render</td>\n<td>render函数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>apis</td>\n<td>用于操作的api</td>\n<td>object{onEdit,onPreview,onDelete}</td>\n<td>-</td>\n</tr>\n<tr>\n<td>apis.onEdit</td>\n<td>文件名编辑回调接口</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>apis.onPreview</td>\n<td>文件预览回调接口</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>apis.onDelete</td>\n<td>文件删除回调接口</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>OptionButtons</h4>\n<p>文件操作按钮，可以带有编辑文件名称，文件预览，文件删除等功能</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>apis</td>\n<td>用于操作的api</td>\n<td>object{onEdit,onPreview,onDelete}</td>\n<td>-</td>\n</tr>\n<tr>\n<td>apis.onEdit</td>\n<td>文件名编辑回调接口</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>apis.onPreview</td>\n<td>文件预览回调接口</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>apis.onDelete</td>\n<td>文件删除回调接口</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>hasPreview</td>\n<td>是否开启预览功能，和getPermission type:preview预览结果同事控制，全都判断通过才能开启预览功能</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<h4>FileLink</h4>\n<p>外观类似Link的组件，点击后可以弹出文件预览框</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>弹窗标题</td>\n<td>string,jsx</td>\n<td>originName</td>\n</tr>\n<tr>\n<td>id</td>\n<td>文件oss id</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>originName</td>\n<td>文件名称</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>apis</td>\n<td>通过oss id获取oss文件地址接口{oss} oss为一个@kne/react-fetch参数，如果Global的preset已设置该值，切当前组件也需要应用该值时可以不传</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>openDownload</td>\n<td>是否开启文件下载</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>modalProps</td>\n<td>modal的其他参数，参考Modal组件</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>downloadBlobFile(target, filename)</h4>\n<p>下载文件的方法</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>target</td>\n<td>下载链接地址,或者二进制数据</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>filename</td>\n<td>下载后的文件名</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>{isLoading,download,...others} = useDownload({id,filename,apis,onError,onSuccess});</h4>\n<p>生成下载文件function的hooks，带有下载中的状态控制</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>文件ossId</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>filename</td>\n<td>下载后的文件名</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onError</td>\n<td>下载失败回调</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onSuccess</td>\n<td>下载成功回调</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>apis</td>\n<td>通过oss id获取oss文件地址接口{oss} oss为一个@kne/react-fetch参数，如果Global的preset已设置该值，切当前组件也需要应用该值时可以不传</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>isLoading</td>\n<td>是否正在下载中</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>download</td>\n<td>执行该方法开始下载</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>others</td>\n<td>其他@kne/react-fetch useFetch参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>modal = useFileModal()</h4>\n<p>文件预览弹框方法生成的hooks</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>modal</td>\n<td>执行后弹出文件预览弹窗</td>\n<td>function({title, id, originName, apis, openDownload, ...modalProps})</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modal({title})</td>\n<td>弹窗标题</td>\n<td>string,jsx</td>\n<td>originName</td>\n</tr>\n<tr>\n<td>modal({id})</td>\n<td>文件oss id</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modal({originName})</td>\n<td>文件名称</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modal({apis})</td>\n<td>通过oss id获取oss文件地址接口{oss} oss为一个@kne/react-fetch参数，如果Global的preset已设置该值，切当前组件也需要应用该值时可以不传</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modal({openDownload})</td>\n<td>是否开启文件下载</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>modalProps</td>\n<td>modal的其他参数，参考Modal组件</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `File_0b279`,\n        style: ``,\n        list: [{\n    title: `获取文件地址`,\n    description: `通过一个ossId获取文件地址`,\n    code: `const { default: File } = _File;\nconst { PureGlobal } = global;\nconst { getPublicPath } = remoteLoader;\nconst BaseExample = () => {\n  return <File id=\"qqq\">{({ url }) => url}</File>;\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      apis: {\n        oss: {\n          loader: async ({ params }) => {\n            console.log(params);\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve(getPublicPath(\"components-core\") + \"/avatar.png\");\n              }, 1000);\n            });\n          },\n        },\n      },\n    }}\n  >\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_File\",\n    packageName: \"@components/File\",\n    component: component_25\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_26\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_27\n}]\n},{\n    title: `文件下载`,\n    description: `展示文件下载`,\n    code: `const { Download } = _File;\nconst { PureGlobal } = global;\nconst { getPublicPath } = remoteLoader;\nconst BaseExample = () => {\n  return (\n    <Download\n      id=\"123\"\n      filename=\"下载的文件\"\n      onSuccess={() => {\n        console.log(\"下载成功\");\n      }}\n    >\n      文件下载\n    </Download>\n  );\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      apis: {\n        oss: {\n          loader: async ({ params }) => {\n            console.log(params);\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve(getPublicPath(\"components-core\") + \"/avatar.png\");\n              }, 1000);\n            });\n          },\n        },\n      },\n    }}\n  >\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_File\",\n    packageName: \"@components/File\",\n    component: component_25\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_26\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_27\n}]\n},{\n    title: `文件列表`,\n    description: `展示文件列表`,\n    code: `const { List } = _FileList;\nconst { Space } = antd;\nconst { PureGlobal } = global;\nconst { getPublicPath } = remoteLoader;\n\nconst BaseExample = () => {\n  return (\n    <Space direction=\"vertical\">\n      <List\n        dataSource={[\n          {\n            uuid: \"121233\",\n            type: \"uploading\",\n            filename: \"张三的简历.doc\",\n          },\n          {\n            id: \"xxxxx\",\n            filename: \"我是一份简历.pdf\",\n            date: \"2022-07-15T11:09:15.000+08:00\",\n            userName: \"用户名\",\n          },\n        ]}\n      />\n      <List dataSource={[]} />\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      apis: {\n        oss: {\n          loader: async ({ params }) => {\n            console.log(params);\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve(getPublicPath(\"components-core\") + \"/mock/demo.pdf\");\n              }, 1000);\n            });\n          },\n        },\n      },\n    }}\n  >\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FileList\",\n    packageName: \"@components/File\",\n    component: component_25\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_28\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_26\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_29\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_27\n}]\n},{\n    title: `文件链接`,\n    description: `展示文件链接`,\n    code: `const { FileLink } = _File;\nconst { getPublicPath } = remoteLoader;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        apis: {\n          oss: {\n            loader: async ({ params }) => {\n              const mapping = {\n                \"01\": \"/avatar.png\",\n                \"02\": \"/mock/demo.html\",\n                \"03\": \"/mock/1_王晶简历-2023_06_2.pdf\",\n              };\n              return new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve(\n                    getPublicPath(\"components-core\") + mapping[params.id]\n                  );\n                }, 1000);\n              });\n            },\n          },\n        },\n      }}\n    >\n      <FileLink id=\"01\" originName=\"我是一个图片.jpg\" />\n      <FileLink id=\"02\" originName=\"我是一个网页.html\" />\n      <FileLink id=\"03\" originName=\"我是一个pdf.pdf\" />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_File\",\n    packageName: \"@components/File\",\n    component: component_25\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_27\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_26\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_30 from '@components/FileList';\nimport * as component_31 from '@kne/remote-loader';\nimport * as component_32 from 'lodash';\nimport * as component_33 from 'antd';\nconst readmeConfig = {\n    name: `FileList`,\n    summary: `<p>文件列表展示，预览，上传</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `FileList_a785a`,\n        style: ``,\n        list: [{\n    title: `完整示例`,\n    description: `提供一个上传文件，显示文件列表，预览文件的展示`,\n    code: `const { default: FileList } = _FileList;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\nconst { useState } = React;\nconst { uniqueId } = lodash;\n\nconst ajax = {\n  postForm: (config) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({\n          data: {\n            code: 0,\n            data: {\n              id: \"uBFNeYQBnHRXlZaTGZpA\",\n              originalName: config.file.name,\n            },\n          },\n        });\n      }, 1000);\n    });\n  },\n};\n\nconst apis = {\n  onSave: async ({ data }) => {\n    return {\n      ossId: uniqueId(),\n      filename: data.originalName,\n      date: new Date(),\n      userName: \"哈哈哈\",\n    };\n  },\n  onDelete: () => {},\n};\n\nconst preset = {\n  apis: {\n    oss: {\n      loader: async ({ params }) => {\n        const mapping = {\n          \"01\": \"/avatar.png\",\n          \"02\": \"/mock/demo.html\",\n          \"03\": \"/mock/1_王晶简历-2023_06_2.pdf\",\n        };\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(getPublicPath(\"components-core\") + mapping[\"03\"]);\n          }, 1000);\n        });\n      },\n    },\n    previewOffice: {\n      loader: async () => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve({\n              name: \"测试开发_夏永昱_本科_5年.docx\",\n              data: [\n                {\n                  id: \"gWw26Y0BeK_D6zxND5vh\",\n                  originalName: \"attachment/gWw26Y0BeK_D6zxND5vh.pdf\",\n                  url:\n                    getPublicPath(\"components-core\") +\n                    \"/mock/1_王晶简历-2023_06_2.pdf\",\n                },\n              ],\n            });\n          }, 1000);\n        });\n      },\n    },\n    ossUpload: ({ file }) => {\n      return ajax.postForm({ file });\n    },\n  },\n};\n\nconst BaseExample = createWithRemoteLoader({\n  modules: [\"components-core:Global@PureGlobal\"],\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n  const [list, setList] = useState([]);\n  console.log(list);\n  return (\n    <PureGlobal preset={preset}>\n      <FileList list={list} setList={setList} apis={apis} />\n    </PureGlobal>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FileList\",\n    packageName: \"@components/FileList\",\n    component: component_30\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_31\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_32\n}]\n},{\n    title: `上传文件列表`,\n    description: `展示一个上传文件展示上传成功文件列表`,\n    code: `const { FileUpload } = _FileList;\nconst { createWithRemoteLoader, getPublicPath } = remoteLoader;\nconst { useState } = React;\nconst { uniqueId } = lodash;\n\nconst ajax = {\n  postForm: (config) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({\n          data: {\n            code: 0,\n            data: {\n              id: \"uBFNeYQBnHRXlZaTGZpA\",\n              originalName: config.file.name,\n            },\n          },\n        });\n      }, 1000);\n    });\n  },\n};\n\nconst apis = {\n  onSave: async ({ data }) => {\n    const id = uniqueId();\n    return {\n      id: id,\n      ossId: id,\n      filename: data.originalName,\n      date: new Date(),\n      userName: \"哈哈哈\",\n    };\n  },\n  onDelete: () => {},\n};\n\nconst preset = {\n  apis: {\n    oss: {\n      loader: async ({ params }) => {\n        const mapping = {\n          \"01\": \"/avatar.png\",\n          \"02\": \"/mock/demo.html\",\n          \"03\": \"/mock/1_王晶简历-2023_06_2.pdf\",\n        };\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(getPublicPath(\"components-core\") + mapping[\"03\"]);\n          }, 1000);\n        });\n      },\n    },\n    ossUpload: ({ file }) => {\n      return ajax.postForm({ file });\n    },\n  },\n};\n\nconst BaseExample = createWithRemoteLoader({\n  modules: [\"components-core:Global@PureGlobal\"],\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n  const [list, setList] = useState([]);\n  console.log(list);\n  return (\n    <PureGlobal preset={preset}>\n      <FileUpload list={list} setList={setList} apis={apis} />\n    </PureGlobal>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FileList\",\n    packageName: \"@components/FileList\",\n    component: component_30\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_31\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_32\n}]\n},{\n    title: `拖拽上传`,\n    description: `展示一个拖拽上传文件，得到File对象`,\n    code: `const { DragArea, DragAreaOuter, UploadButton, DragButton } = _FileList;\nconst { Row, Col, Divider, Space } = antd;\n\nconst BaseExample = () => {\n  return (\n    <DragAreaOuter\n      title={\n        <Row>\n          <Col flex={1}>标题</Col>\n          <Col>\n            <Space split={<Divider type=\"vertical\" />}>\n              <DragButton />\n              <UploadButton>上传</UploadButton>\n            </Space>\n          </Col>\n        </Row>\n      }\n      onFileSelected={(fileList) => {\n        console.log(fileList);\n      }}\n    >\n      <DragArea />\n    </DragAreaOuter>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FileList\",\n    packageName: \"@components/FileList\",\n    component: component_30\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_33\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_34 from '@components/FilePreview';\nimport * as component_35 from '@kne/remote-loader';\nconst readmeConfig = {\n    name: `FilePreview`,\n    summary: `<p>文件预览</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `FilePreview_143ff`,\n        style: ``,\n        list: [{\n    title: `HtmlPreview`,\n    description: `这里填写示例说明`,\n    code: `const { default: FilePreview, HtmlPreview } = _FilePreview;\nconst { getPublicPath } = remoteLoader;\nconst BaseExample = () => {\n  return (\n    <HtmlPreview\n      maxWidth={900}\n      url={getPublicPath(\"components-core\") + \"/mock/demo2.html\"}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_34\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_35\n}]\n},{\n    title: `PdfPreview`,\n    description: `这里填写示例说明`,\n    code: `const { PdfPreview } = _FilePreview;\nconst { getPublicPath } = remoteLoader;\nconst BaseExample = () => {\n  return (\n    <PdfPreview\n      maxWidth={900}\n      url={getPublicPath(\"components-core\") + \"/mock/1_王晶简历-2023_06_2.pdf\"}\n      renderTextLayer={true}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_34\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_35\n}]\n},{\n    title: `TextPreview`,\n    description: `这里填写示例说明`,\n    code: `const { TextPreview } = _FilePreview;\nconst { getPublicPath } = remoteLoader;\nconst BaseExample = () => {\n  return (\n    <TextPreview\n      maxWidth={900}\n      url={getPublicPath(\"components-core\") + \"/mock/demo.txt\"}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_34\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_35\n}]\n},{\n    title: `ImagePreview`,\n    description: `这里填写示例说明`,\n    code: `const { ImagePreview } = _FilePreview;\nconst { getPublicPath } = remoteLoader;\nconst BaseExample = () => {\n  return (\n    <ImagePreview url={getPublicPath(\"components-core\") + \"/mock/demo2.jpg\"} />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_34\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_35\n}]\n},{\n    title: `unknown`,\n    description: `这里填写示例说明`,\n    code: `const { UnknownPreview } = _FilePreview;\nconst { getPublicPath } = remoteLoader;\nconst BaseExample = () => {\n  return (\n    <UnknownPreview url={getPublicPath(\"components-core\") + \"/mock/demo.des\"} />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_34\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_35\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_36 from '@components/Filter';\nimport * as component_37 from 'antd';\nimport * as component_38 from '@components/Filter/doc/mock/tree-data.json';\nconst readmeConfig = {\n    name: `Filter`,\n    summary: ``,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Filter_d7778`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {\n  FilterValueDisplay,\n  FilterItem,\n  FilterLines,\n  PopoverItem,\n  InputFilterItem,\n  CityFilterItem,\n  AdvancedSelectFilterItem,\n  UserFilterItem,\n  FunctionSelectFilterItem,\n  IndustrySelectFilterItem,\n} = _Filter;\nconst { Space, Input } = antd;\nconst { useState } = React;\nconst BaseExample = () => {\n  const [value, setValue] = useState([\n    {\n      label: \"城市\",\n      name: \"city\",\n      value: [\n        { label: \"上海\", value: \"010\" },\n        { label: \"北京\", value: \"020\" },\n      ],\n    },\n    {\n      label: \"职能\",\n      name: \"function\",\n      value: [\n        { label: \"产品经理\", value: \"010\" },\n        { label: \"销售\", value: \"020\" },\n        {\n          label: \"客户经理\",\n          value: \"030\",\n        },\n      ],\n    },\n  ]);\n  return (\n    <Space direction=\"vertical\">\n      <FilterValueDisplay value={value} onChange={setValue} />\n      <Space>\n        <FilterItem label=\"客户\" />\n        <FilterItem label=\"客户\" active />\n        <FilterItem label=\"客户\" open />\n        <FilterItem label=\"超长超长超长超长超长超长超长超长\" active open />\n      </Space>\n      <FilterLines\n        list={[\n          [\n            <FilterItem label=\"客户\" />,\n            <FilterItem label=\"职位\" />,\n            <FilterItem label=\"职位负责人\" />,\n          ],\n          [\n            <FilterItem label=\"开始时间\" />,\n            <FilterItem label=\"结束时间\" />,\n            <FilterItem label=\"职位BD人\" />,\n          ],\n          [\n            <FilterItem label=\"开始时间\" />,\n            <FilterItem label=\"结束时间\" />,\n            <FilterItem label=\"职位BD人\" />,\n          ],\n          [\n            <FilterItem label=\"开始时间\" />,\n            <FilterItem label=\"结束时间\" />,\n            <FilterItem label=\"职位BD人\" />,\n          ],\n        ]}\n      />\n      <PopoverItem label=\"客户\">\n        {({ value, onChange }) => (\n          <Input value={value} onChange={(e) => onChange(e.target.value)} />\n        )}\n      </PopoverItem>\n      <FilterLines\n        list={[\n          [\n            <InputFilterItem label=\"文字\" />,\n            <CityFilterItem label=\"城市\" />,\n            <AdvancedSelectFilterItem\n              label=\"高级选择\"\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1 },\n                      { label: \"第二项\", value: 2, disabled: true },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n            />,\n            <UserFilterItem\n              label=\"用户选择\"\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        value: 1,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户二\",\n                        value: 2,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户三\",\n                        value: 3,\n                        description: \"我是用户描述\",\n                      },\n                    ],\n                  };\n                },\n              }}\n            />,\n            <FunctionSelectFilterItem label=\"职能选择\" />,\n            <IndustrySelectFilterItem label=\"行业选择\" />,\n          ],\n        ]}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Filter\",\n    packageName: \"@components/Filter\",\n    component: component_36\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_37\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {\n  default: Filter,\n  InputFilterItem,\n  DatePickerFilterItem,\n  DateRangePickerFilterItem,\n  TypeDateRangePickerFilterItem,\n  CityFilterItem,\n  AdvancedSelectFilterItem,\n  UserFilterItem,\n  FunctionSelectFilterItem,\n  IndustrySelectFilterItem,\n  getFilterValue,\n  FilterItemContainer,\n} = _Filter;\nconst { useState } = React;\nconst BaseExample = () => {\n  const [value, onChange] = useState([]);\n  return (\n    <Filter\n      value={value}\n      onChange={(value) => {\n        console.log(getFilterValue(value));\n        onChange(value);\n      }}\n      list={[\n        [\n          <InputFilterItem label=\"文字\" name=\"text\" />,\n          <CityFilterItem label=\"城市\" name=\"city\" />,\n          <FilterItemContainer name=\"select\" label=\"高级选择\">\n            {(props) => (\n              <div>\n                <AdvancedSelectFilterItem\n                  {...props}\n                  api={{\n                    loader: () => {\n                      return {\n                        pageData: [\n                          { label: \"第一项\", value: 1 },\n                          {\n                            label: \"第二项\",\n                            value: 2,\n                            disabled: true,\n                          },\n                          {\n                            label: \"第三项\",\n                            value: 3,\n                          },\n                        ],\n                      };\n                    },\n                  }}\n                />\n              </div>\n            )}\n          </FilterItemContainer>,\n          <DatePickerFilterItem label=\"日期\" name=\"date\" picker=\"week\" />,\n          <TypeDateRangePickerFilterItem\n            label=\"复杂日期范围\"\n            name=\"type-data-range\"\n            allowEmpty={[true, true]}\n          />,\n          <DateRangePickerFilterItem label=\"日期范围\" name=\"date-range\" />,\n          <UserFilterItem\n            label=\"用户选择\"\n            name=\"user\"\n            api={{\n              loader: () => {\n                return {\n                  pageData: [\n                    {\n                      label: \"用户一\",\n                      value: 1,\n                      description: \"我是用户描述\",\n                    },\n                    {\n                      label: \"用户二\",\n                      value: 2,\n                      description: \"我是用户描述\",\n                    },\n                    {\n                      label: \"用户三\",\n                      value: 3,\n                      description: \"我是用户描述\",\n                    },\n                  ],\n                };\n              },\n            }}\n          />,\n          <FunctionSelectFilterItem\n            label=\"职能选择\"\n            name=\"function\"\n            onlyAllowLastLevel\n            single\n          />,\n          <IndustrySelectFilterItem\n            label=\"行业选择\"\n            name=\"industry\"\n            onlyAllowLastLevel\n          />,\n        ],\n      ]}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Filter\",\n    packageName: \"@components/Filter\",\n    component: component_36\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Filter, TreeFilterItem } = _Filter;\nconst { default: treeData } = _data;\nconst { useState } = React;\nconst { Space } = antd;\n\nconst BaseExample = () => {\n  const [filter, setFilter] = useState([]);\n  const [filter2, setFilter2] = useState([]);\n\n  return (\n    <Space direction=\"vertical\">\n      <Filter\n        value={filter}\n        onChange={setFilter}\n        list={[\n          [\n            <TreeFilterItem\n              name=\"tree\"\n              single\n              label=\"树组件\"\n              fieldNames={{\n                title: \"name\",\n                key: \"id\",\n                children: \"children\",\n              }}\n              api={{\n                loader: () => {\n                  return treeData.children;\n                },\n              }}\n            />,\n          ],\n        ]}\n      />\n      <Filter\n        value={filter2}\n        onChange={setFilter2}\n        list={[\n          [\n            <TreeFilterItem\n              name=\"tree\"\n              label=\"树组件\"\n              fieldNames={{\n                title: \"name\",\n                key: \"id\",\n                children: \"children\",\n              }}\n              api={{\n                loader: () => {\n                  return treeData.children;\n                },\n              }}\n            />,\n          ],\n        ]}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Filter\",\n    packageName: \"@components/Filter\",\n    component: component_36\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_37\n},{\n    name: \"_data\",\n    packageName: \"@components/Filter/doc/mock/tree-data.json\",\n    component: component_38\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_39 from '@components/FlexBox';\nimport * as component_40 from 'antd';\nimport * as component_41 from 'lodash';\nconst readmeConfig = {\n    name: `FlexBox`,\n    summary: `<p>用于根据盒子大小响应式展示不同列</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `FlexBox_51df0`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: FlexBox } = _FlexBox;\nconst { Card } = antd;\nconst BaseExample = () => {\n  return (\n    <FlexBox\n      dataSource={[\n        {\n          title: \"Title 1\",\n        },\n        {\n          title: \"Title 2\",\n        },\n        {\n          title: \"Title 3\",\n        },\n        {\n          title: \"Title 4\",\n        },\n        {\n          title: \"Title 5\",\n        },\n        {\n          title: \"Title 6\",\n        },\n      ]}\n      renderItem={(item) => (\n        <FlexBox.Item>\n          <Card title={item.title}>Card content</Card>\n        </FlexBox.Item>\n      )}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FlexBox\",\n    packageName: \"@components/FlexBox\",\n    component: component_39\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_40\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: FlexBox } = _FlexBox;\nconst { Card, Button } = antd;\nconst { range } = lodash;\nconst { useRef } = React;\nconst BaseExample = () => {\n  const ref = useRef();\n  return (\n    <div>\n      <FlexBox.Fetch\n        ref={ref}\n        getFetchApi={({ size }) => {\n          return {\n            data: {\n              pageSize: size,\n            },\n            loader: ({ data }) => {\n              return new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve({\n                    pageData: range(0, data.pageSize).map((index) => {\n                      return {\n                        key: index,\n                        title: \\`第\\${index}项\\`,\n                      };\n                    }),\n                  });\n                }, 1000);\n              });\n            },\n          };\n        }}\n        renderItem={(item) => (\n          <FlexBox.Item>\n            <Card title={item.title}>Card content</Card>\n          </FlexBox.Item>\n        )}\n      />\n      <Button\n        onClick={() => {\n          console.log(ref.current);\n        }}\n      >\n        获取FetchApi\n      </Button>\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FlexBox\",\n    packageName: \"@components/FlexBox\",\n    component: component_39\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_40\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_41\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_42 from '@components/FormInfo';\nimport * as component_43 from '@components/Global';\nimport * as component_44 from '@components/Modal';\nimport * as component_45 from 'lodash';\nimport * as component_46 from 'antd';\nimport * as component_47 from '@kne/react-fetch';\nimport * as component_48 from '@components/Content';\nimport * as component_49 from '@components/Icon';\nimport * as component_50 from 'dayjs';\nconst readmeConfig = {\n    name: `FormInfo`,\n    summary: `<p>表单控件，自带数据域管理。包含数据录入、校验以及对应样式</p>\n<h3>何时使用</h3>\n<ul>\n<li>用于创建或编辑一个实体或收集信息</li>\n<li>需要对输入的数据类型进行校验时</li>\n</ul>\n<h3>概念</h3>\n<ul>\n<li>Form Data：\nForm提交时获取到的输出值通常用来提交给后端，不包含Form的校验信息，只包含Form组件可以向外部提供的数据输出信息。</li>\n<li>Form State：\nForm中用来存储一切状态的值，包含Field信息，校验信息，Form的值（需要一定的转换从才能变成Form Data），表单是否验证通过，表单错误信息等值。</li>\n<li>字段或称Field：\nForm中的一个项，必须拥有参数name,label,可选参数rule。name作为Form提交时获取到data的key值。\nlabel为字段展示给用户的名字以及字段报错时提示用户错误的语句中指代该字段的名字。\nrule为下方介绍的RULE。\n一个Field的取值可以是简单的Number，Boolean，String也可以是复杂的Array，Object等，所以在考虑一些值需要分成多个Field还是集中在一个Field时非常重要的。\n一个通用的规则是：<em><strong>对于Form来说，它的最小校验单元是一个Field</strong></em>。</li>\n<li>Field组件：\nField组件是Field的一部分，可以由用户自己实现也可以由组件库提供，通过Form提供的Field hooks将其变成Field。\nfield hooks主要接管Field组件的value，onChange参数，用来把Field组件的值获取到Form管理。Field组件必须为<em><strong>受控组件</strong></em>。\nfield hooks还会接管triggerValidate，用来获取Field的校验时机。field hooks会向Field组件提供Field的校验状态和校验错误信息。</li>\n<li>RULE：\n用于字段的校验。RULE可以为一个function或者正则表达式，不过推荐以大写字符串调用。\n字符串形式的RULE以空格为间隔可以传入多条规则，如：\"REQ TEL\"，\n执行校验时会从左至右依次校验，如果左侧的规则校验失败则不再执行其右侧规则，返回校验失败状态及该规则失败原因提示作为字段校验失败原因。\n字符串RULE允许传入参数，参数以中划线隔开，可传入多个参数，如：\"LEN-3-10\"。\n字符串RULE使用前必须在Form组件中有所声明，Form的RULE声明有3个级别：\n默认级，包含于Form内部，提供了一些基本的校验规则。preset级：在项目的preset中声明，应该把项目中常用的或者是比较复杂的RULE声明集中维护于此。\nForm级：以rules参数传入Form组件，主要是某Form单独使用的RULE。\n如果声明字符相同，会以 Form级&gt;preset级&gt;默认级 进行覆盖。\nRULE声明为一个对象，key和去掉参数的字符串RULE相同，value为一个function称为校验函数。此function接收到的参数有三部分(\nvalue,[...args]\n,{data,{field}}),第一个参数value为当前字段的值，最后一个参数为form的状态，data是form的当前值，field是form里面当前字段的信息，\n中间参数args为字符串参数如：\"LEN-3-10\"会接收到3和20两个参数。校验函数返回{result,errMsg}，\n或者一个Promise.resolve({result,errMsg})的Promise对象。result为校验是否通过，errMsg为失败提示，失败提示可以用%s占位，展示时会替换成字段的label。</li>\n<li>校验或称Validate：\nForm会在Field组件执行triggerValidate时执行当前Field的Validate，表单提交时执行所有Field的Validate。\nValidate会串行执行RULE里面的所有规则的校验函数，校验函数返回Promise时也会等待左边的校验函数的Promise完成再执行右边的规则校验函数。\n表单提交时，正在执行异步的校验函数的Field将不会重复执行Validate。表单提交时所有Field的校验状态为通过时才会执行onSubmit方法，否则会执行onError方法，\nonPrevSubmit方法在用户点击提交按钮时就会触发，不管Validate结果是否为通过。</li>\n<li>Event：\nForm采用了事件驱动的方式来设计，用以满足多种异步校验，和给Form提供强大的可扩展性。\nForm的API里面可以获取到的emitter就是Form内部的事件发射器，可以触发Form内部定义的事件，也可以自定义一些事件。同时可以通过emitter.addListener监听事件。\nForm内部定义的事件有：\nform-field-add：Field被添加进Form时触发，\nform-field-edit：Field的参数发生改变时触发，\norm-field-remove：Field被卸载时触发，\nform-field-validate：Field执行Validate时触发，\nform-field-data-change：Field的值发生修改时触发，\nform-data-reset：Form组件重置data时触发，\nform-data-set-field：Form组件给data赋值时触发，\nform-data-set-field-validate：Field被赋值时触发，\nform-validate-all：Form执行全部Field的Validate时触发，一般为表单提交时，\nform-submit：表单提交时触发。</li>\n<li>拦截器或称Interceptor：\n没有Field可以接收一个interceptor参数，字符串类型，和RULE类似可以再preset或者Form的interceptors props中声明以后使用，可以配置多个用空格连接。\n拦截器的作用是，在Field接收到一个新的值时，会串行执行拦截器的output部分，把其返回值输出到Form Data。\n在执行Form Data的赋值操作时把赋值作为输入串行执行拦截器的input部分，把其结果作为Form Data的输入。\n现在有个Field是日期选择，输出Date类型值，但是Form Data输出希望将其格式化为日期字符串，在表单编辑时Form\nData输入格式化后的日期字符串，但是Field只接收Date类型的值，\n以下例子可以来解决此问题：<pre><code class=\"language-jsx\">interceptors.input.use(\"date-string\", (value) =&gt; {\n  return value ? new Date(value) : null;\n});\n\ninterceptors.output.use(\"date-string\", (value) =&gt; {\n  return value ? dayjs(value).format(\"YYYY-MM-DD\") : \"\";\n});\n\n&lt;Field name=\"date\" label=\"日期\" interceptor=\"date-string\"/&gt;\n</code></pre>\n</li>\n<li>Group：\n当Form的data需要接收到一个复杂值的时候，可以使用Group来实现，如：<pre><code class=\"language-jsx\">&lt;Group name=\"baseInfo\"&gt;\n  &lt;Field name=\"name\" label=\"名称\"/&gt;\n  &lt;Field name=\"des\" label=\"说明\"/&gt;\n&lt;/Group&gt;\n</code></pre>\nForm的data可以接收到 {baseInfo:{name:\"xxx\",des:\"xxx\"}}，Group的name和Field的name一致时也可以用来表示数组如：<pre><code class=\"language-jsx\">&lt;Group name=\"name\"&gt;\n  &lt;Field name=\"name\" label=\"名称\"/&gt;\n&lt;/Group&gt;\n&lt;Group name=\"des\"&gt;\n  &lt;Field name=\"des\" label=\"说明\"/&gt;\n&lt;/Group&gt;\n</code></pre>\nForm的data可以接收到 {name:[\"name1\",\"name2\"],des:[\"des1\",\"des2\"]}。\nGroup可以嵌套，如<pre><code class=\"language-jsx\">&lt;Group name=\"baseInfo\"&gt;\n  &lt;Group name=\"info\"&gt;\n    &lt;Field name=\"name\" label=\"名称\"/&gt;\n  &lt;/Group&gt;\n  &lt;Field name=\"des\" label=\"说明\"/&gt;\n&lt;/Group&gt;\n</code></pre>\nForm的data可以接收到 {baseInfo:{info:{name:'xxx'},des:'xxx'}}。\n支持点操作，如：<pre><code class=\"language-jsx\">&lt;Group name=\"baseInfo.info\"&gt;\n  &lt;Field name=\"name\" label=\"名称\"/&gt;\n  &lt;Field name=\"des\" label=\"说明\"/&gt;\n&lt;/Group&gt;\n</code></pre>\nForm的data可以接收到 {baseInfo:{info:{name:'xxx',des:'xxx'}}}。</li>\n<li>GroupList：\n使用Group实现的一个特殊的区域用来更方便的实现多段式的表单如：<pre><code class=\"language-jsx\">&lt;Button onClick={()=&gt;ref.current.onAdd()}&gt;添加&lt;/Button&gt;\n&lt;GroupList name=\"edu\" ref={ref}&gt;\n  {(key,{index,length,onAdd,onRemore})=&gt;&lt;&gt;\n    &lt;Button onClick={onRemore}&gt;删除&lt;/Button&gt;\n    &lt;Field name=\"schoolName\" label=\"学校名称\"/&gt;\n    &lt;Field name=\"degree\" label=\"学历\"/&gt;\n    &lt;Field name=\"des\" label=\"说明\"/&gt;\n  &lt;/&gt;}\n&lt;/GroupList&gt;\n</code></pre>\n以上是一个简历的学历列表的实现，可以点击添加按钮添加多段学历Field，可以点击删除按钮删除当前一段学历Field，\nForm的data可以接收到的 {edu:[{schoolName:'xxx',degree:'xxx',des:'xxx'}]}。\n当然你可以不用使用这样底层的API，FormInfo.List 已经帮你处理好一切。</li>\n</ul>\n<h3>特点</h3>\n<ul>\n<li>集中化校验规则管理，分层抽象，调用简便</li>\n<li>支持异步校验规则</li>\n<li>事件驱动式架构设计，便于扩展</li>\n<li>支持Group及GroupList，可轻松实现复杂表单</li>\n<li>UI，校验逻辑分层抽象，一次封装使用简单</li>\n<li>context和ref双重API暴露，在Form内还是Form外都能轻松获取</li>\n<li>form-helper提供基本的表单封装，灵活组合</li>\n<li>支持拦截器，便捷实现FormData和Field的值之间的转换</li>\n</ul>\n<h3>Field实现规范</h3>\n<ul>\n<li>FormInfo里面的Field都会放置在fields文件夹，其中每个文件夹代表一个Field</li>\n<li>一个Field只能默认导出会被引用，其他的方法枚举等需要放置在默认导出的组件的function的静态属性上</li>\n<li>一个Field的默认导出组件只能被放置在Form中作为Field被使用，它的Field组件会被挂载在默认导出的组件的function的Field静态属性上</li>\n<li>一个Field的Field组件必须支持受控和非受控两种形式</li>\n<li>一个Field的导出必须被包含在FormInfo导出的formModule中和FormInfo中，即：以下两种方法都可以获取到该Field<pre><code class=\"language-jsx\">import {SomeField} from \"@component/FormInfo\";\n</code></pre>\n<pre><code class=\"language-jsx\">import {formModule} from \"@component/FormInfo\";\nconst {SomeField} = formModule;\n</code></pre>\n</li>\n</ul>\n<h3>选择器类型Field组件实现规范</h3>\n<ul>\n<li>必须使用SelectInnerInput作为选择器的值显示和触发的输入框</li>\n<li>SelectInnerInput可以通过isPopup提供popup和modal两种展示形态和交互逻辑，Field组件可以通过自身的默认值或者调用SelectInnerInput时显式指定来设置最佳推荐的默认形式，一般情况一种选择器需要良好支持两种形式</li>\n<li>SelectInnerInput可以通过single决定输出值是单项还是多项，单项和多项的交互逻辑也可能不同，SelectInnerInput的内部value state都是使用多项值来处理的，在输入值和在onChange输出时根据参数转化成数组，一般情况一种选择器需要支持两种情况</li>\n<li>选择器可能会在顶部有一个搜索框，通过使用时是否传入getSearchProps来决定搜索框是否显示，在FormInfo/common中提供了默认的SearchInput实现，SelectInnerInput中管理了其searchText和setSearchText状态</li>\n<li>FormInfo/fields/AdvancedSelect/createList.js 实现了一个列表式选择器，实现了包括搜索，下拉加载等逻辑，只需要实现列表渲染逻辑就可以方便的扩展出新的List类型选择器</li>\n<li>通过SelectInnerInput.useContext 可以拿到选择器的用户传入属性（props），值到选项的映射（mapping），搜索框的state（searchText,setSearchText），数据加载器的API（fetchApi）原始value值（valueState），添加映射方法（appendItems）</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>debug</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>rules</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>interceptors</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>noFilter</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onError</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onSubmit</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onPrevSubmit</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>SelectInnerInput</h3>\n<h3>formModule</h3>\n<h3>FormInfo</h3>\n<h3>preset</h3>\n<h3>List</h3>\n<h3>Form</h3>\n<p>同default导出组件</p>\n<h3>useField</h3>\n<h3>useReset</h3>\n<h3>useSubmit</h3>\n<h3>Group</h3>\n<h3>GroupList</h3>\n<h3>useFormContext</h3>\n<h3>RULES</h3>\n<h3>interceptors</h3>\n<h3>SubmitButton</h3>\n<h3>CancelButton</h3>\n<h3>ResetButton</h3>\n<h3>Field类型:antd组件</h3>\n<p>以下组件请参考antd具体的组件文档此处不再赘述</p>\n<p>Checkbox,CheckboxGroup,DatePicker,Input,InputNumber,RadioGroup,Select,Switch,TextArea,TimePicker,TreeSelect</p>\n<h3>Field类型:@kne/react-form-antd实现组件</h3>\n<p>DatePickerToday</p>\n<h3>Field类型:components-core实现组件</h3>\n<p>AddressSelect</p>\n<p>AdvancedSelect</p>\n<p>Avatar</p>\n<p>Cascader</p>\n<p>FunctionSelect</p>\n<p>IndustrySelect</p>\n<p>Money</p>\n<p>PartSelect</p>\n<p>PhoneNumber</p>\n<p>TableDataSelect</p>\n<p>Upload</p>\n<h3>FormModal</h3>\n<p>一个Form和Modal组合起来的组件，它预置了Form组件，children传入的内容和footer区域均在Form的context内</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>formProps</td>\n<td>同Form组件参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>useFormModal</h3>\n<p>获取一个执行后可以弹出一个FormModal组件的方法</p>\n<h4>return:formModal</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>formModal</td>\n<td>执行后可以弹出一个FormModal弹窗，参数同FormModal组件参数</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>\n<h3>FormModalButton</h3>\n<p>点击以后可以执行获取数据，在数据未返回时按钮展示为loading状态，数据返回后弹出FormModal弹窗</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>@kne/react-fetch 所需参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modalProps</td>\n<td>同FormModal参数,当它为function时，执行function后返回的值作为modalProps</td>\n<td>object,function({data,fetchApi,close})</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数同antd Button 组件</p>`,\n    example: {\n        isFull: true,\n        className: `FormInfo_f344c`,\n        style: `.FormInfo_f344c .input > .ant-row > .ant-col {\n  padding: 10px 0; }\n\n.FormInfo_f344c .input .ant-space-item:last-child {\n  width: 100%; }\n`,\n        list: [{\n    title: `一个简单表单示例`,\n    description: `展示了一个简单表单示例`,\n    code: `const { default: FormInfo, Form, SubmitButton, ErrorTip, fields } = _FormInfo;\nconst { PureGlobal } = global;\nconst { useModal } = _Modal;\nconst { uniqueId } = lodash;\n\nconst { Input, TextArea, Upload, Avatar, TypeDateRangePicker } = fields;\n\nconst BaseExample = () => {\n  const modal = useModal();\n  return (\n    <Form\n      helperGuideName=\"test-from\"\n      lang={[\n        \"cn\",\n        {\n          name: \"EnUS\",\n          label: \"英文\",\n          options: {\n            //labelTransform: (label) => label + \"(en)\",\n            ignore: [{ name: \"avatar\" }, { name: \"photo\" }],\n            disabled: [{ name: \"file\" }], //fields:[{name:'name'}]\n          },\n        },\n      ]}\n      rules={{\n        REP: (value) => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                result: false,\n                errMsg: \"%s重复\",\n                data: {\n                  user: \"我是一个重复的东西\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n      onSubmit={(data) => {\n        modal({\n          title: \"表单提交数据\",\n          children: <pre>{JSON.stringify(data, null, 2)}</pre>,\n        });\n      }}\n    >\n      <FormInfo\n        title=\"基本信息\"\n        list={[\n          <Avatar name=\"avatar\" label=\"头像\" labelHidden block />,\n          <Avatar\n            name=\"photo\"\n            label=\"证件照\"\n            dropModalSize=\"default\"\n            border={50}\n            width={960}\n            height={540}\n            block\n          />,\n          <ErrorTip\n            name=\"name\"\n            errorRender={({ validateData }) => {\n              console.log(validateData);\n              if (!validateData.REP) {\n                return null;\n              }\n              return <div>哈哈哈{validateData.REP.user}</div>;\n            }}\n          >\n            <Input\n              name=\"name\"\n              label=\"姓名\"\n              rule=\"REQ LEN-3-10 REP\"\n              tips=\"请输入姓名\"\n            />\n          </ErrorTip>,\n          <Input name=\"phone\" label=\"手机\" rule=\"REQ TEL\" />,\n          <Input name=\"email\" label=\"邮箱\" rule=\"EMAIL\" />,\n          <Upload name=\"file\" label=\"文件\" block />,\n          <TypeDateRangePicker\n            name=\"type_date\"\n            label=\"日期时间段\"\n            rule=\"REQ\"\n          />,\n          <TextArea name=\"des\" label=\"备注\" block />,\n          <SubmitButton>提交</SubmitButton>,\n        ]}\n      />\n    </Form>\n  );\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      locale: \"en-US\",\n      enums: {\n        helperGuide: () => [\n          {\n            value: \"test-from-name\",\n            content: \"测试帮助文档\",\n            url: \"/\",\n          },\n        ],\n      },\n      apis: {\n        oss: {\n          loader: () => {\n            return window.PUBLIC_URL + \"/avatar.png\";\n          },\n        },\n        ossUpload: async ({ file }) => {\n          console.log(file);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              const id = uniqueId(\"file-\");\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id,\n                    originalName: id + \"简历.pdf\",\n                  },\n                },\n              });\n            }, 1000);\n          });\n        },\n      },\n    }}\n  >\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_44\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_45\n}]\n},{\n    title: `一个含有多段列表的表单示例`,\n    description: `展示了一个含有多段列表的表单示例，列表的最大长度为5，在添加5段之后添加按钮自动隐藏`,\n    code: `const {\n  default: FormInfo,\n  Form,\n  List,\n  AdvancedSelect,\n  TableList,\n  Input,\n  TextArea,\n  SubmitButton,\n  FormApiButton,\n} = _FormInfo;\nconst { PureGlobal } = global;\nconst { useModal } = _Modal;\nconst { Space } = antd;\n\nconst BaseExample = () => {\n  const modal = useModal();\n  return (\n    <Form\n      onSubmit={(data) => {\n        modal({\n          title: \"表单提交数据\",\n          children: <pre>{JSON.stringify(data, null, 2)}</pre>,\n        });\n      }}\n    >\n      <Space direction=\"vertical\" size={16}>\n        <FormInfo\n          title=\"基本信息\"\n          list={[\n            <Input name=\"name\" label=\"基本名称\" rule=\"REQ\" block />,\n            <TextArea name=\"des\" label=\"基本描述\" block />,\n          ]}\n        />\n        <List\n          name=\"list\"\n          title=\"列表\"\n          itemTitle={({ index }) => \\`经历\\${index + 1}\\`}\n          maxLength={5}\n          list={[\n            <Input name=\"name\" label=\"名称\" rule=\"REQ\" />,\n            <Input name=\"title\" label=\"标题\" rule=\"REQ\" />,\n            <TextArea name=\"des\" label=\"描述\" block rule=\"REQ\" />,\n          ]}\n        />\n        <TableList\n          name=\"tableList\"\n          title=\"表格列表\"\n          maxLength={5}\n          minLength={1}\n          list={[\n            <Input name=\"name\" label=\"名称\" rule=\"REQ\" value=\"xxxxx\" />,\n            <Input name=\"title\" label=\"标题\" rule=\"REQ\" />,\n            <AdvancedSelect\n              name=\"select\"\n              label=\"选项\"\n              rule=\"REQ\"\n              value={[1]}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"第一项\",\n                        value: 1,\n                      },\n                      {\n                        label: \"第二项\",\n                        value: 2,\n                        disabled: true,\n                      },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n            />,\n          ]}\n        />\n        <FormInfo\n          list={[\n            <SubmitButton>提交</SubmitButton>,\n            <FormApiButton\n              onClick={({ openApi }) => {\n                openApi.setFields(\n                  [\n                    {\n                      groupName: \"tableList\",\n                      name: \"name\",\n                      value: \"\",\n                    },\n                    {\n                      groupName: \"tableList\",\n                      name: \"title\",\n                      value: \"ssssssss\",\n                    },\n                  ],\n                  { runValidate: false }\n                );\n              }}\n            >\n              设置表单值\n            </FormApiButton>,\n          ]}\n        />\n      </Space>\n    </Form>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_44\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_46\n}]\n},{\n    title: `Modal Form弹窗`,\n    description: `展示一个form弹窗`,\n    code: `const { Space, Button } = antd;\nconst { PureGlobal } = global;\nconst {\n  default: FormInfo,\n  List,\n  Input,\n  TextArea,\n  FormModal,\n  useFormModal,\n  CancelButton,\n  FormApiButton,\n  SubmitButton,\n  FormModalButton,\n} = _FormInfo;\nconst { useState } = React;\nconst { default: Fetch } = fetch;\n\nconst BaseExample = () => {\n  const [open, setOpen] = useState(false);\n  const formModal = useFormModal();\n  return (\n    <Space wrap>\n      <FormModal\n        open={open}\n        title=\"表单弹窗\"\n        onClose={() => {\n          setOpen(false);\n        }}\n        formProps={{\n          data: {\n            field1: \"field1field1field1field1\",\n          },\n          onSubmit: async (data) => {\n            console.log(data);\n            await new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n              }, 1000);\n            });\n            setOpen(false);\n          },\n        }}\n      >\n        <FormInfo\n          title=\"基本信息\"\n          list={[\n            <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n            <TextArea name=\"field3\" label=\"字段3\" />,\n          ]}\n        />\n        <List\n          title=\"列表\"\n          name=\"list\"\n          maxLength={3}\n          list={[\n            <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n            <TextArea name=\"field3\" label=\"字段3\" />,\n          ]}\n        />\n      </FormModal>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        组件调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            formProps: ({ data }) => {\n              return {\n                data: data,\n                onSubmit: async (data) => {\n                  console.log(data);\n                  await new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                  api.close();\n                },\n              };\n            },\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve({\n                        field1: \"我接口获取的数据\",\n                      });\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks加载form数据调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            footerButtons: [\n              { ButtonComponent: CancelButton, children: \"取消\" },\n              {\n                ButtonComponent: FormApiButton,\n                autoClose: false,\n                onClick: (context) => {\n                  console.log(context);\n                },\n                children: \"FormApiButton\",\n              },\n              {\n                ButtonComponent: SubmitButton,\n                autoClose: false,\n                children: \"提交\",\n              },\n            ],\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        自定义footerButtons\n      </Button>\n      <FormModalButton\n        api={{\n          loader: () => {\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve({\n                  name: \"Lucy\",\n                  desc: \"个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍\",\n                });\n              }, 1000);\n            });\n          },\n        }}\n        modalProps={({ data, close }) => {\n          return {\n            title: \"加载数据的form弹窗\",\n            formProps: {\n              data,\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                close();\n              },\n            },\n            children: (\n              <FormInfo\n                title=\"基本信息\"\n                column={1}\n                list={[\n                  <Input name=\"name\" label=\"姓名\" rule=\"REQ\" />,\n                  <TextArea name=\"desc\" label=\"介绍\" rule=\"REQ\" />,\n                ]}\n              />\n            ),\n          };\n        }}\n      >\n        加载form数据按钮\n      </FormModalButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_46\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_47\n}]\n},{\n    title: `Modal Step Form弹窗`,\n    description: `展示一个step form弹窗`,\n    code: `const { Space, Button } = antd;\nconst { PureGlobal } = global;\nconst {\n  default: FormInfo,\n  List,\n  Input,\n  TextArea,\n  FormModal,\n  FormStepModal,\n  useFormModal,\n  useFormStepModal,\n  CancelButton,\n  FormApiButton,\n  SubmitButton,\n  FormModalButton,\n} = _FormInfo;\nconst { useState } = React;\nconst { default: Fetch } = fetch;\n\nconst BaseExample = () => {\n  const [open, setOpen] = useState(false);\n  const formModal = useFormStepModal();\n  return (\n    <Space wrap>\n      <FormStepModal\n        open={open}\n        title=\"表单弹窗\"\n        onClose={() => {\n          setOpen(false);\n        }}\n        formProps={{\n          data: {\n            field1: \"field1field1field1field1\",\n          },\n          onSubmit: async (data) => {\n            console.log(data);\n            await new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n              }, 1000);\n            });\n            setOpen(false);\n          },\n        }}\n        items={[\n          {\n            name: \"basic\",\n            title: \"基本信息\",\n            children: (\n              <FormInfo\n                title=\"基本信息\"\n                list={[\n                  <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                  <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                  <TextArea name=\"field3\" label=\"字段3\" />,\n                ]}\n              />\n            ),\n          },\n          {\n            name: \"list\",\n            title: \"列表信息\",\n            children: (\n              <List\n                title=\"列表\"\n                name=\"list\"\n                maxLength={3}\n                list={[\n                  <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                  <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                  <TextArea name=\"field3\" label=\"字段3\" />,\n                ]}\n              />\n            ),\n          },\n        ]}\n      ></FormStepModal>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        组件调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            formProps: ({ data }) => {\n              return {\n                data: data,\n                onSubmit: async (data) => {\n                  console.log(data);\n                  await new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                  api.close();\n                },\n              };\n            },\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve({\n                        field1: \"我接口获取的数据\",\n                      });\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks加载form数据调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            footerButtons: [\n              { ButtonComponent: CancelButton, children: \"取消\" },\n              {\n                ButtonComponent: FormApiButton,\n                autoClose: false,\n                onClick: (context) => {\n                  console.log(context);\n                },\n                children: \"FormApiButton\",\n              },\n              {\n                ButtonComponent: SubmitButton,\n                autoClose: false,\n                children: \"提交\",\n              },\n            ],\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        自定义footerButtons\n      </Button>\n      <FormModalButton\n        api={{\n          loader: () => {\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve({\n                  name: \"Lucy\",\n                  desc: \"个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍\",\n                });\n              }, 1000);\n            });\n          },\n        }}\n        modalProps={({ data, close }) => {\n          return {\n            title: \"加载数据的form弹窗\",\n            formProps: {\n              data,\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                close();\n              },\n            },\n            children: (\n              <FormInfo\n                title=\"基本信息\"\n                column={1}\n                list={[\n                  <Input name=\"name\" label=\"姓名\" rule=\"REQ\" />,\n                  <TextArea name=\"desc\" label=\"介绍\" rule=\"REQ\" />,\n                ]}\n              />\n            ),\n          };\n        }}\n      >\n        加载form数据按钮\n      </FormModalButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_46\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_47\n}]\n},{\n    title: `Drawer Form 抽屉弹窗`,\n    description: `展示一个form抽屉弹窗`,\n    code: `const { Space, Button } = antd;\nconst { PureGlobal } = global;\nconst {\n  default: FormInfo,\n  List,\n  Input,\n  TextArea,\n  FormDrawer,\n  useFormDrawer,\n  CancelButton,\n  FormApiButton,\n  SubmitButton,\n  FormDrawerButton,\n} = _FormInfo;\nconst { useState } = React;\nconst { default: Fetch } = fetch;\n\nconst BaseExample = () => {\n  const [open, setOpen] = useState(false);\n  const formDrawer = useFormDrawer();\n  return (\n    <Space wrap>\n      <FormDrawer\n        open={open}\n        title=\"表单弹窗\"\n        onClose={() => {\n          setOpen(false);\n        }}\n        formProps={{\n          data: {\n            field1: \"field1field1field1field1\",\n          },\n          onSubmit: async (data) => {\n            console.log(data);\n            await new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n              }, 1000);\n            });\n            setOpen(false);\n          },\n        }}\n      >\n        <FormInfo\n          title=\"基本信息\"\n          list={[\n            <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n            <TextArea name=\"field3\" label=\"字段3\" />,\n          ]}\n        />\n        <List\n          title=\"列表\"\n          name=\"list\"\n          maxLength={3}\n          list={[\n            <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n            <TextArea name=\"field3\" label=\"字段3\" />,\n          ]}\n        />\n      </FormDrawer>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        组件调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formDrawer({\n            title: \"表单弹窗\",\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formDrawer({\n            title: \"表单弹窗\",\n            formProps: ({ data }) => {\n              return {\n                data: data,\n                onSubmit: async (data) => {\n                  console.log(data);\n                  await new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                  api.close();\n                },\n              };\n            },\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve({\n                        field1: \"我接口获取的数据\",\n                      });\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks加载form数据调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formDrawer({\n            title: \"表单弹窗\",\n            footerButtons: [\n              { ButtonComponent: CancelButton, children: \"取消\" },\n              {\n                ButtonComponent: FormApiButton,\n                autoClose: false,\n                onClick: (context) => {\n                  console.log(context);\n                },\n                children: \"FormApiButton\",\n              },\n              {\n                ButtonComponent: SubmitButton,\n                autoClose: false,\n                children: \"提交\",\n              },\n            ],\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        自定义footerButtons\n      </Button>\n      <FormDrawerButton\n        api={{\n          loader: () => {\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve({\n                  name: \"Lucy\",\n                  desc: \"个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍\",\n                });\n              }, 1000);\n            });\n          },\n        }}\n        modalProps={({ data, close }) => {\n          return {\n            title: \"加载数据的form弹窗\",\n            formProps: {\n              data,\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                close();\n              },\n            },\n            children: (\n              <FormInfo\n                title=\"基本信息\"\n                column={1}\n                list={[\n                  <Input name=\"name\" label=\"姓名\" rule=\"REQ\" />,\n                  <TextArea name=\"desc\" label=\"介绍\" rule=\"REQ\" />,\n                ]}\n              />\n            ),\n          };\n        }}\n      >\n        加载form数据按钮\n      </FormDrawerButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_46\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_47\n}]\n},{\n    title: `选择控件的数据展示框`,\n    description: `展示了一个选择控件的数据展示框，它是其他选择器的子组件一般不独立使用，开放该组件是为了方面自定义新的选择控件，但是请谨慎使用`,\n    code: `const { SelectInnerInput } = _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button, List } = antd;\nconst { default: Content } = _Content;\nconst { useState } = React;\n\nconst ControlledSelectInnerInput = (props) => {\n  const [value, setValue] = useState([1, 2, 3]);\n\n  return <SelectInnerInput {...props} value={value} onChange={setValue} />;\n};\n\nconst useSelectInnerContext = SelectInnerInput.useContext;\n\nconst ResetMapping = () => {\n  const { mapping, appendMapping } = useSelectInnerContext();\n  return (\n    <span>\n      <Button\n        onClick={() => {\n          appendMapping([\n            { label: \"修改的项\", value: 1 },\n            { label: \"新增的项\", value: 4 },\n          ]);\n        }}\n      >\n        点击设置mapping值\n      </Button>\n      <List\n        dataSource={mapping.values()}\n        renderItem={(item) => <div>{item.label}</div>}\n      />\n    </span>\n  );\n};\n\nconst BaseExample = () => {\n  const children = \"选区内容\";\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"非受控状态\",\n          content: (\n            <SelectInnerInput\n              defaultValue={[1, 2, 3]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"受控状态\",\n          content: (\n            <ControlledSelectInnerInput>{children}</ControlledSelectInnerInput>\n          ),\n        },\n        {\n          label: \"mapping值显示\",\n          content: (\n            <SelectInnerInput\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        { label: \"第一项\", value: 1 },\n                        { label: \"第二项\", value: 2 },\n                        {\n                          label: \"第三项\",\n                          value: 3,\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"单项值显示\",\n          content: (\n            <SelectInnerInput\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        { label: \"第一项\", value: 1 },\n                        { label: \"第二项\", value: 2 },\n                        {\n                          label: \"第三项\",\n                          value: 3,\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"多项超出情况\",\n          content: (\n            <SelectInnerInput\n              defaultValue={[1, 2, 3, 4, 5, 6, 7, 8, 9]}\n              api={{\n                loader: () => {\n                  return [\n                    {\n                      label:\n                        \"第一项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 1,\n                    },\n                    {\n                      label:\n                        \"第二项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 2,\n                    },\n                    {\n                      label: \"第三项\",\n                      value: 3,\n                    },\n                    {\n                      label:\n                        \"第四项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 4,\n                    },\n                    {\n                      label:\n                        \"第五项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 5,\n                    },\n                    {\n                      label:\n                        \"第六项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 6,\n                    },\n                    {\n                      label:\n                        \"第七项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 7,\n                    },\n                    { label: \"第八项\", value: 8 },\n                    { label: \"第九项\", value: 9 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"单项超出情况\",\n          content: (\n            <SelectInnerInput\n              defaultValue={1}\n              single\n              api={{\n                loader: () => {\n                  return [\n                    {\n                      label:\n                        \"第一项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 1,\n                    },\n                    {\n                      label:\n                        \"第二项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 2,\n                    },\n                    {\n                      label: \"第三项\",\n                      value: 3,\n                    },\n                    {\n                      label:\n                        \"第四项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 4,\n                    },\n                    {\n                      label:\n                        \"第五项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 5,\n                    },\n                    {\n                      label:\n                        \"第六项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 6,\n                    },\n                    {\n                      label:\n                        \"第七项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 7,\n                    },\n                    { label: \"第八项\", value: 8 },\n                    { label: \"第九项\", value: 9 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"popup多项超出情况\",\n          content: (\n            <SelectInnerInput\n              isPopup\n              defaultValue={[1, 2, 3, 4, 5, 6, 7, 8]}\n              api={{\n                loader: () => {\n                  return [\n                    {\n                      label:\n                        \"第一项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 1,\n                    },\n                    {\n                      label:\n                        \"第二项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 2,\n                    },\n                    {\n                      label: \"第三项\",\n                      value: 3,\n                    },\n                    {\n                      label:\n                        \"第四项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 4,\n                    },\n                    {\n                      label: \"第五项\",\n                      value: 5,\n                    },\n                    {\n                      label: \"第六项\",\n                      value: 6,\n                    },\n                    { label: \"第七项\", value: 7 },\n                    { label: \"第八项\", value: 8 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"popup选区\",\n          content: (\n            <SelectInnerInput\n              single\n              isPopup\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        { label: \"第一项\", value: 1 },\n                        { label: \"第二项\", value: 2 },\n                        {\n                          label: \"第三项\",\n                          value: 3,\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"更新mapping\",\n          content: (\n            <SelectInnerInput\n              single\n              isPopup\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        { label: \"第一项\", value: 1 },\n                        { label: \"第二项\", value: 2 },\n                        {\n                          label: \"第三项\",\n                          value: 3,\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n            >\n              <ResetMapping />\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"隐藏已选标签\",\n          content: (\n            <SelectInnerInput\n              showSelectedTag={false}\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"popup隐藏已选标签\",\n          content: (\n            <SelectInnerInput\n              isPopup\n              showSelectedTag={false}\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"extra\",\n          content: (\n            <SelectInnerInput\n              extra={<Button>添加</Button>}\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"popup的extra\",\n          content: (\n            <SelectInnerInput\n              isPopup\n              extra={({ close }) => <Button onClick={close}>添加</Button>}\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"valueType为all\",\n          content: (\n            <SelectInnerInput\n              isPopup\n              valueType=\"all\"\n              defaultValue={[\n                { label: \"额外的一项\", value: 100 },\n                { label: \"额外的二项\", value: 200 },\n              ]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_48\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_46\n}]\n},{\n    title: `高级选择组件`,\n    description: `展示了高级选择组件的List形态`,\n    code: `const { AdvancedSelect: _AdvancedSelect, SelectInnerInput } = _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button } = antd;\nconst { default: Content } = _Content;\nconst { range, uniqueId } = lodash;\n\nconst AdvancedSelect = _AdvancedSelect.Field;\n\nconst useSelectInnerContext = SelectInnerInput.useContext;\n\nconst AddExtraButton = () => {\n  const { appendItems, fetchApi } = useSelectInnerContext();\n\n  return (\n    <Button\n      type=\"link\"\n      onClick={() => {\n        const id = uniqueId(\"new_item_\");\n        appendItems({\n          pageData: [\n            {\n              label: \"添加的新项目_\" + id,\n              value: id,\n            },\n            ...fetchApi.data.pageData,\n          ],\n          totalCount: fetchApi.data.totalCount,\n        });\n      }}\n    >\n      添加\n    </Button>\n  );\n};\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"多选\",\n          content: (\n            <AdvancedSelect\n              defaultValue={[1]}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1 },\n                      { label: \"第二项\", value: 2, disabled: true },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选\",\n          content: (\n            <AdvancedSelect\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: range(0, 100).map((key) => {\n                      return {\n                        label: \\`第\\${key + 1}项\\`,\n                        value: key + 1,\n                        disabled: key === 2,\n                      };\n                    }),\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"多选modal\",\n          content: (\n            <AdvancedSelect\n              defaultValue={[1]}\n              isPopup={false}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1 },\n                      { label: \"第二项\", value: 2 },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选modal\",\n          content: (\n            <AdvancedSelect\n              single\n              defaultValue={1}\n              isPopup={false}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1 },\n                      { label: \"第二项\", value: 2 },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"描述信息\",\n          content: (\n            <AdvancedSelect\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1, description: \"描述信息\" },\n                      {\n                        label: \"第二项\",\n                        value: 2,\n                        description: \"描述信息\",\n                      },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                        description: \"描述信息\",\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"分页加载数据\",\n          content: (\n            <AdvancedSelect\n              single\n              defaultValue={90}\n              getSearchProps={(text) => {\n                return {\n                  data: { keyword: text },\n                };\n              }}\n              displayItems={[{ label: \"第九十项\", value: 90 }]}\n              extra={<AddExtraButton />}\n              api={{\n                loader: ({ data }) => {\n                  const params = Object.assign(\n                    {\n                      perPage: 20,\n                      currentPage: 1,\n                    },\n                    data\n                  );\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      const start = (params.currentPage - 1) * params.perPage;\n                      resolve({\n                        totalCount: 100,\n                        pageData: range(start, start + 20)\n                          .map((key) => {\n                            return {\n                              label: \\`第\\${key + 1}项\\`,\n                              value: key + 1,\n                            };\n                          })\n                          .filter(({ label }) => {\n                            return params.keyword\n                              ? label.indexOf(params.keyword) > -1\n                              : true;\n                          }),\n                      });\n                    }, 1000);\n                  });\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal分页加载数据\",\n          content: (\n            <AdvancedSelect\n              defaultValue={[90]}\n              isPopup={false}\n              extra={<AddExtraButton />}\n              getSearchProps={(text) => {\n                return {\n                  data: { keyword: text },\n                };\n              }}\n              displayItems={[{ label: \"第九十项\", value: 90 }]}\n              api={{\n                data: {\n                  perPage: 10,\n                },\n                loader: ({ data }) => {\n                  const params = Object.assign(\n                    {\n                      perPage: 20,\n                      currentPage: 1,\n                    },\n                    data\n                  );\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      const start = (params.currentPage - 1) * params.perPage;\n                      resolve({\n                        totalCount: 100,\n                        pageData: range(start, start + params.perPage)\n                          .map((key) => {\n                            return {\n                              label: \\`第\\${key + 1}项\\`,\n                              value: key + 1,\n                            };\n                          })\n                          .filter(({ label }) => {\n                            return params.keyword\n                              ? label.indexOf(params.keyword) > -1\n                              : true;\n                          }),\n                      });\n                    }, 1000);\n                  });\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_48\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_46\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_45\n}]\n},{\n    title: `用户选择组件`,\n    description: `在List的交互逻辑基础上扩展出的不同列表样式`,\n    code: `const { AdvancedSelect: _AdvancedSelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button } = antd;\nconst { default: Content } = _Content;\nconst { range, uniqueId } = lodash;\n\nconst UserSelect = _AdvancedSelect.User.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"多选\",\n          content: (\n            <UserSelect\n              defaultValue={[1]}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        value: 1,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户二\",\n                        value: 2,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户三\",\n                        value: 3,\n                        description: \"我是用户描述\",\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选\",\n          content: (\n            <UserSelect\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: range(0, 30).map((key) => {\n                      return {\n                        label: \\`用户\\${key + 1}\\`,\n                        description: \"我是用户描述\",\n                        value: key + 1,\n                      };\n                    }),\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"多选modal\",\n          content: (\n            <UserSelect\n              defaultValue={[1]}\n              isPopup={false}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        value: 1,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户二\",\n                        value: 2,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户三\",\n                        value: 3,\n                        description: \"我是用户描述\",\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选modal\",\n          content: (\n            <UserSelect\n              single\n              defaultValue={1}\n              isPopup={false}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        value: 1,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户二\",\n                        value: 2,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户三\",\n                        value: 3,\n                        description: \"我是用户描述\",\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_48\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_46\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_45\n}]\n},{\n    title: `表格选择组件`,\n    description: `在List的交互逻辑基础上扩展出的不同列表样式`,\n    code: `const { AdvancedSelect: _AdvancedSelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button } = antd;\nconst { default: Content } = _Content;\nconst { range, uniqueId } = lodash;\n\nconst TableSelect = _AdvancedSelect.Table.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"多选\",\n          content: (\n            <TableSelect\n              defaultValue={[1]}\n              getSearchProps={(text) => {\n                return {\n                  data: { keyword: text },\n                };\n              }}\n              api={{\n                data: {\n                  perPage: 10,\n                },\n                loader: ({ data }) => {\n                  const params = Object.assign(\n                    {\n                      perPage: 20,\n                      currentPage: 1,\n                    },\n                    data\n                  );\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      const start = (params.currentPage - 1) * params.perPage;\n                      resolve({\n                        totalCount: 100,\n                        pageData: range(start, start + params.perPage)\n                          .map((key) => {\n                            return {\n                              label: \\`员工\\${key + 1}\\`,\n                              company: \"北京科技有限公司\",\n                              department: \"技术部\",\n                              value: key + 1,\n                            };\n                          })\n                          .filter(({ label }) => {\n                            return params.keyword\n                              ? label.indexOf(params.keyword) > -1\n                              : true;\n                          }),\n                      });\n                    }, 1000);\n                  });\n                },\n              }}\n              columns={[\n                {\n                  title: \"姓名\",\n                  dataIndex: \"label\",\n                },\n                {\n                  title: \"所属公司\",\n                  dataIndex: \"company\",\n                },\n                {\n                  title: \"所属部门\",\n                  dataIndex: \"department\",\n                },\n              ]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选\",\n          content: (\n            <TableSelect\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        company: \"北京科技有限公司\",\n                        department: \"财务部\",\n                        value: 1,\n                      },\n                      {\n                        label: \"用户二\",\n                        company: \"北京科技有限公司\",\n                        department: \"技术部\",\n                        value: 2,\n                      },\n                      {\n                        label: \"用户三\",\n                        company: \"北京科技有限公司\",\n                        department: \"商务部\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              columns={[\n                {\n                  title: \"姓名\",\n                  dataIndex: \"label\",\n                },\n                {\n                  title: \"所属公司\",\n                  dataIndex: \"company\",\n                },\n                {\n                  title: \"所属部门\",\n                  dataIndex: \"department\",\n                },\n              ]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"多选modal\",\n          content: (\n            <TableSelect\n              defaultValue={[1]}\n              isPopup={false}\n              getSearchProps={(text) => {\n                return {\n                  data: { keyword: text },\n                };\n              }}\n              api={{\n                data: {\n                  perPage: 10,\n                },\n                loader: ({ data }) => {\n                  const params = Object.assign(\n                    {\n                      perPage: 20,\n                      currentPage: 1,\n                    },\n                    data\n                  );\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      const start = (params.currentPage - 1) * params.perPage;\n                      resolve({\n                        totalCount: 100,\n                        pageData: range(start, start + params.perPage)\n                          .map((key) => {\n                            return {\n                              label: \\`员工\\${key + 1}\\`,\n                              company: \"北京科技有限公司\",\n                              department: \"技术部\",\n                              value: key + 1,\n                            };\n                          })\n                          .filter(({ label }) => {\n                            return params.keyword\n                              ? label.indexOf(params.keyword) > -1\n                              : true;\n                          }),\n                      });\n                    }, 1000);\n                  });\n                },\n              }}\n              columns={[\n                {\n                  title: \"姓名\",\n                  dataIndex: \"label\",\n                },\n                {\n                  title: \"所属公司\",\n                  dataIndex: \"company\",\n                },\n                {\n                  title: \"所属部门\",\n                  dataIndex: \"department\",\n                },\n              ]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选modal\",\n          content: (\n            <TableSelect\n              single\n              isPopup={false}\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        company: \"北京科技有限公司\",\n                        department: \"财务部\",\n                        value: 1,\n                      },\n                      {\n                        label: \"用户二\",\n                        company: \"北京科技有限公司\",\n                        department: \"技术部\",\n                        value: 2,\n                      },\n                      {\n                        label: \"用户三\",\n                        company: \"北京科技有限公司\",\n                        department: \"商务部\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              columns={[\n                {\n                  title: \"姓名\",\n                  dataIndex: \"label\",\n                },\n                {\n                  title: \"所属公司\",\n                  dataIndex: \"company\",\n                },\n                {\n                  title: \"所属部门\",\n                  dataIndex: \"department\",\n                },\n              ]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_48\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_46\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_45\n}]\n},{\n    title: `地址选择组件`,\n    description: `展示地址选择组件`,\n    code: `const { AddressSelect: _AddressSelect, AddressInput: _AddressInput } =\n  _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button } = antd;\nconst { default: Content } = _Content;\nconst { range, uniqueId } = lodash;\n\nconst AddressSelect = _AddressSelect.Field;\nconst AddressEnum = _AddressSelect.AddressEnum;\nconst AddressInput = _AddressInput.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"多选\",\n          content: (\n            <AddressSelect\n              maxLength={3}\n              defaultValue={[\"110\"]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选\",\n          content: (\n            <AddressSelect\n              single\n              defaultValue={\"110\"}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal多选\",\n          content: (\n            <AddressSelect\n              maxLength={3}\n              isPopup={false}\n              defaultValue={[\"110\"]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal单选\",\n          content: (\n            <AddressSelect\n              isPopup={false}\n              single\n              defaultValue={\"110\"}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"valueType为all\",\n          content: (\n            <AddressSelect\n              valueType=\"all\"\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"地址显示\",\n          content: <AddressEnum name=\"270070\" />,\n        },\n        {\n          label: \"显示父级\",\n          content: <AddressEnum name=\"270070\" displayParent />,\n        },\n        {\n          label: \"地址输入\",\n          content: (\n            <AddressInput\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal preset={{ locale: \"en-US\" }}>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_48\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_46\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_45\n}]\n},{\n    title: `级联选择组件`,\n    description: `展示级联选择组件`,\n    code: `const { Cascader: _Cascader } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst { range, get } = lodash;\n\nconst Cascader = _Cascader.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"一次性获取数据\",\n          content: (\n            <Cascader\n              onlyAllowLastLevel\n              single\n              api={{\n                loader: async () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        {\n                          id: \"client\",\n                          value: \"client\",\n                          type: \"module\",\n                          name: \"客户\",\n                          label: \"客户\",\n                          children: [\n                            {\n                              id: \"client-list\",\n                              value: \"client-list\",\n                              type: \"feature\",\n                              name: \"客户列表页\",\n                              label: \"客户列表页\",\n                            },\n                            {\n                              id: \"client-detail\",\n                              value: \"client-detail\",\n                              type: \"module\",\n                              name: \"客户详情页\",\n                              label: \"客户详情页\",\n                              children: [\n                                {\n                                  id: \"contract\",\n                                  value: \"contract\",\n                                  type: \"module\",\n                                  name: \"合同信息\",\n                                  label: \"合同信息\",\n                                },\n                              ],\n                            },\n                            {\n                              id: \"client-form\",\n                              value: \"client-form\",\n                              type: \"feature\",\n                              name: \"客户表单\",\n                              label: \"客户表单\",\n                              children: [\n                                {\n                                  id: \"taxpayerIdNumber\",\n                                  value: \"taxpayerIdNumber\",\n                                  type: \"feature\",\n                                  name: \"税号\",\n                                  label: \"税号\",\n                                },\n                              ],\n                            },\n                          ],\n                        },\n                        {\n                          id: \"position\",\n                          value: \"position\",\n                          type: \"module\",\n                          name: \"职位\",\n                          label: \"职位\",\n                          children: [\n                            {\n                              id: \"position-list\",\n                              value: \"position-list\",\n                              type: \"feature\",\n                              name: \"职位列表页\",\n                              label: \"职位列表页\",\n                            },\n                            {\n                              id: \"position-detail\",\n                              value: \"position-detail\",\n                              type: \"module\",\n                              name: \"职位详情页\",\n                              label: \"职位详情页\",\n                            },\n                            {\n                              id: \"position-form\",\n                              value: \"position-form\",\n                              type: \"feature\",\n                              name: \"职位表单\",\n                              label: \"职位表单\",\n                              children: [\n                                {\n                                  id: \"industry\",\n                                  value: \"industry\",\n                                  type: \"feature\",\n                                  name: \"行业\",\n                                  label: \"行业\",\n                                },\n                              ],\n                            },\n                          ],\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"分层加载数据\",\n          content: (\n            <Cascader\n              openLoadData\n              onSearch={async (searchText) => {\n                return range(0, 20).map((key) => {\n                  const parentId = \"2\";\n                  return {\n                    id: \\`\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${key + 1}\\`,\n                    label: \\`节点-\\${searchText}-\\${\n                      parentId ? \\`\\${parentId}-\\` : \"\"\n                    }\\${key + 1}\\`,\n                    parentId,\n                  };\n                });\n              }}\n              api={{\n                loader: async ({ data }) => {\n                  const parentId = get(data, \"id\", \"\");\n                  const level = parentId.split(\"-\").length;\n                  console.log(\"loadData\", parentId, level);\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve(\n                        range(0, 20).map((key) => {\n                          return Object.assign(\n                            {\n                              id: \\`\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${key + 1}\\`,\n                              label: \\`节点-\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${\n                                key + 1\n                              }\\`,\n                              parentId,\n                            },\n                            level >= 3 ? { children: null } : {}\n                          );\n                        })\n                      );\n                    }, 1000);\n                  });\n                },\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal分层加载数据\",\n          content: (\n            <Cascader\n              openLoadData\n              isPopup={false}\n              api={{\n                loader: async ({ data }) => {\n                  const parentId = get(data, \"id\", \"\");\n                  const level = parentId.split(\"-\").length;\n                  console.log(\"loadData\", parentId, level);\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve(\n                        range(0, 20).map((key) => {\n                          return Object.assign(\n                            {\n                              id: \\`\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${key + 1}\\`,\n                              label: \\`节点-\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${\n                                key + 1\n                              }\\`,\n                              parentId,\n                            },\n                            level >= 3 ? { children: null } : {}\n                          );\n                        })\n                      );\n                    }, 1000);\n                  });\n                },\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_48\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_45\n}]\n},{\n    title: `职能选择`,\n    description: `展示行业职能选择`,\n    code: `const { FunctionSelect: _FunctionSelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst { range, get } = lodash;\n\nconst FunctionSelect = _FunctionSelect.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"职能选择\",\n          content: (\n            <FunctionSelect\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal职能选择\",\n          content: (\n            <FunctionSelect\n              isPopup={false}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"职能选择无搜索\",\n          content: (\n            <FunctionSelect\n              search={null}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"职能枚举显示\",\n          content: <FunctionSelect.Enum name=\"001\" />,\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal preset={{ locale: \"en-US\" }}>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_48\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_45\n}]\n},{\n    title: `行业选择`,\n    description: `展示行业选择组件`,\n    code: `const { IndustrySelect: _IndustrySelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst { range, get } = lodash;\n\nconst IndustrySelect = _IndustrySelect.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"行业选择\",\n          content: (\n            <IndustrySelect\n              defaultValue={[\"001\"]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal行业选择\",\n          content: (\n            <IndustrySelect\n              isPopup={false}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"职能枚举显示\",\n          content: <IndustrySelect.Enum name=\"004\" />,\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal preset={{ locale: \"en-US\" }}>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_48\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_45\n}]\n},{\n    title: `金额输入`,\n    description: `展示金额输入组件`,\n    code: `const { MoneyInput: _MoneyInput } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst MoneyInput = _MoneyInput.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"金额输入\",\n          content: <MoneyInput />,\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_48\n}]\n},{\n    title: `电话号码输入`,\n    description: `展示电话号码输入组件`,\n    code: `const { PhoneNumber: _PhoneNumber } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst PhoneNumber = _PhoneNumber.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"电话输入\",\n          content: (\n            <PhoneNumber\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_48\n}]\n},{\n    title: `薪资组件`,\n    description: `展示填写薪资范围输入组件`,\n    code: `const { SalaryInput, Form } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst SalaryInputField = SalaryInput.Field;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <Content\n        col={1}\n        list={[\n          {\n            label: \"薪资范围\",\n            content: (\n              <SalaryInputField\n                onChange={(value) => {\n                  console.log(value);\n                }}\n              />\n            ),\n          },\n        ]}\n      />\n      <Form\n        rules={{\n          SALARYRANGE: ({ min, max, type }) => {\n            if (type !== 1) {\n              if (!min || !max) {\n                return {\n                  result: false,\n                  errMsg: \\`\\${!min ? \"最低薪资\" : \"最高薪资\"}不能为空\\`,\n                };\n              }\n              if (min > max) {\n                return {\n                  result: false,\n                  errMsg: \"最高薪资应大于最低薪资\",\n                };\n              }\n            }\n            return {\n              result: true,\n              errMsg: \"\",\n            };\n          },\n        }}\n        data={{ salaryRange: { type: 5, month: 12 } }}\n      >\n        <SalaryInput\n          name=\"salaryRange\"\n          label=\"薪资范围\"\n          rule=\"REQ SALARYRANGE\"\n          remindUnit\n        />\n      </Form>\n    </div>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_48\n}]\n},{\n    title: `可编辑的表格表单`,\n    description: `可编辑的表格表单`,\n    code: `const { TableInput, Form, Input, SubmitButton } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <Form\n        data={{\n          tableInput: {\n            1: { otherCode: \"111\" },\n            2: { otherCode: \"222\" },\n          },\n        }}\n        onSubmit={(formData) => {\n          console.log(formData);\n        }}\n      >\n        <TableInput\n          controllerOpen={false}\n          name=\"tableInput\"\n          label=\"表格表单\"\n          columns={[\n            {\n              title: \"系统字段\",\n              dataIndex: \"systemCode\",\n              key: \"systemCode\",\n              width: 200,\n            },\n            {\n              title: \"对应的字段\",\n              dataIndex: \"otherCode\",\n              key: \"otherCode\",\n              editable: (text, record, index) => index !== 0,\n              field: {\n                type: Input,\n                rule: \"REQ\",\n                getValue: (e) => e.target.value,\n              },\n            },\n          ]}\n          api={{\n            loader: () => {\n              return {\n                pageData: [\n                  {\n                    id: 1,\n                    systemCode: \"流水号\",\n                  },\n                  {\n                    id: 2,\n                    systemCode: \"流水号2\",\n                  },\n                ],\n              };\n            },\n          }}\n          onChange={(value) => {\n            console.log(value);\n          }}\n        />\n        <SubmitButton>提交</SubmitButton>\n      </Form>\n    </div>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_48\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_46\n}]\n},{\n    title: `可扩展的AdvanceSelect`,\n    description: `AdvanceSelect支持左右布局`,\n    code: `const { AdvancedSelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Icon } = icon;\nconst { useState } = React;\nconst { range, merge, get } = _lodash;\nconst dayjs = _dayjs;\nconst { Col } = _antd;\n\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax: () => {\n          return Promise.resolve({ data: { code: 0, data: [] } });\n        },\n      }}\n    >\n      <AdvancedSelect.Field\n        getSearchProps={(text) => {\n          return {\n            data: { keyword: text },\n          };\n        }}\n        displayItems={[{ label: \"第九十项\", value: 90 }]}\n        api={{\n          loader: ({ data }) => {\n            const params = Object.assign(\n              {\n                perPage: 20,\n                currentPage: 1,\n              },\n              data\n            );\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                const start = (params.currentPage - 1) * params.perPage;\n                resolve({\n                  totalCount: 100,\n                  pageData: range(start, start + 20)\n                    .map((key) => {\n                      return {\n                        label: \\`第\\${key + 1}项\\`,\n                        value: key + 1,\n                      };\n                    })\n                    .filter(({ label }) => {\n                      return params.keyword\n                        ? label.indexOf(params.keyword) > -1\n                        : true;\n                    }),\n                });\n              }, 1000);\n            });\n          },\n        }}\n        onChange={(value) => {\n          console.log(value);\n        }}\n        single\n        isPopup={false}\n        label={\"面试官\"}\n        placeholder={\"选择面试官\"}\n        modalSize={\"large\"}\n        wrapClassName={\"calendar-modal\"}\n        selectIcon={\n          <div>\n            <Icon type={\"icon-gouxuan\"} />\n          </div>\n        }\n        leftSpan={6}\n        right={() => (\n          <Col flex={1}>\n            <div>我是header</div>\n            <div>我是body</div>\n          </Col>\n        )}\n        leftBottom={() => <div>我是leftBottom</div>}\n      />\n    </PureGlobal>\n  );\n};\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_42\n},{\n    name: \"icon\",\n    packageName: \"@components/Icon\",\n    component: component_49\n},{\n    name: \"_antd\",\n    packageName: \"antd\",\n    component: component_46\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_43\n},{\n    name: \"_lodash\",\n    packageName: \"lodash\",\n    component: component_45\n},{\n    name: \"_dayjs\",\n    packageName: \"dayjs\",\n    component: component_50\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_51 from '@components/FullCalendar';\nimport * as component_52 from 'antd';\nimport * as component_53 from '@kne/remote-loader';\nimport * as component_54 from 'lodash';\nimport * as component_55 from 'dayjs';\nconst readmeConfig = {\n    name: `FullCalendar`,\n    summary: `<p>日程组件</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `FullCalendar_850b7`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: FullCalendar, transformEvents } = _FullCalendar;\nconst { createWithRemoteLoader } = _remoteLoader;\nconst { useState } = React;\nconst { cloneDeep, merge, get } = _lodash;\nconst dayjs = _dayjs;\n\nconst defaultEvents = [\n  {\n    id: 1,\n    title: \"我已预约\",\n    start: \"2023-08-22 13:23\",\n    end: \"2023-08-23 14:23\",\n    bookable: 0,\n  },\n  {\n    id: 2,\n    title: \"zhangjian\",\n    bookable: 0,\n    start: \"2023-08-23 13:23\",\n    end: \"2023-08-23 16:23\",\n  },\n  {\n    id: 3,\n    title: \"sssssadsf\",\n    start: \"2023-08-23 12:23\",\n    end: \"2023-08-23 14:23\",\n  },\n  {\n    id: 4,\n    title: \"我已预约\",\n    start: \"2023-08-23 12:23\",\n    end: \"2023-08-23 14:23\",\n  },\n  {\n    id: 5,\n    title: \"我已预约\",\n    start: \"2023-08-22 12:23\",\n    end: \"2023-08-23 14:23\",\n  },\n];\n\nconst Content = ({ remoteModules }) => {\n  const [events, setEvents] = useState(defaultEvents);\n  const [_, useFormModal] = remoteModules;\n  const formModal = useFormModal();\n\n  const onSuccess = ({ start, end, id }) => {\n    const obj = {\n      title: \"已预约\",\n      start,\n      end,\n      id: id ? id : null,\n    };\n    setEvents((events) => {\n      const _events = cloneDeep(events);\n      const index = _events.findIndex((item) => item.id === id);\n\n      if (index === -1) {\n        _events.push(obj);\n      } else {\n        _events.splice(index, 1, obj);\n      }\n\n      return _events;\n    });\n  };\n\n  const deleteDate = (id) => {\n    setEvents((events) => {\n      const _events = cloneDeep(events);\n      const index = _events.findIndex((item) => item.id === id);\n\n      _events.splice(index, 1);\n\n      return _events;\n    });\n  };\n\n  return (\n    <FullCalendar\n      eventSources={[transformEvents(events)]}\n      // events={(eventInfo = {}, successCallback) => {\n      //   let newData = {};\n      //   if (eventInfo.start && eventInfo.end) {\n      //     newData = defaultEvents;\n      //   }\n      //\n      //   return successCallback(newData);\n      // }}\n      dateClick={(eventInfo) => {\n        formModal({\n          title: \"添加\",\n          children: <div>11111</div>,\n        });\n      }}\n      eventClick={(eventInfo) => {\n        const currentData = get(eventInfo, \"event._def.extendedProps.main\");\n        console.log(1111, currentData);\n\n        formModal({\n          title: \"编辑\",\n          children: <div>11111</div>,\n        });\n      }}\n    />\n  );\n};\n\nconst BaseExample = createWithRemoteLoader({\n  modules: [\n    \"components-core:Global@PureGlobal\",\n    \"components-core:FormInfo@useFormModal\",\n  ],\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n\n  return (\n    <PureGlobal>\n      <Content remoteModules={remoteModules} />\n    </PureGlobal>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FullCalendar\",\n    packageName: \"@components/FullCalendar\",\n    component: component_51\n},{\n    name: \"_antd\",\n    packageName: \"antd\",\n    component: component_52\n},{\n    name: \"_remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_53\n},{\n    name: \"_lodash\",\n    packageName: \"lodash\",\n    component: component_54\n},{\n    name: \"_dayjs\",\n    packageName: \"dayjs\",\n    component: component_55\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_59 from '@components/Global';\nimport * as component_60 from 'antd';\nimport * as component_61 from '@components/Icon';\nconst readmeConfig = {\n    name: `Global`,\n    summary: `<h3>何时使用</h3>\n<p>在使用components-core的任何组件的业务系统，需要将该组件放置于最外层，并且按照要求正确设置preset。</p>\n<p>以下是components-core组件系统中需要设置的preset值，及使用这些值的组件</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>类型</th>\n<th>使用组件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>permissions</td>\n<td>配置功能权限列表，Permissions根据该列表里面是否存在某权限名称判断用户是否具有该功能权限，来控制对应操作行为</td>\n<td>array</td>\n<td>Permissions</td>\n</tr>\n<tr>\n<td>ajax</td>\n<td>用于发送ajax请求的方法，一般情况下其应该是一个axios对象</td>\n<td>object</td>\n<td>Image</td>\n</tr>\n<tr>\n<td>apis</td>\n<td>用于和后端进行一些交互行为的接口集合</td>\n<td>object</td>\n<td>Image</td>\n</tr>\n<tr>\n<td>apis.oss</td>\n<td>用于通过一个ossId向后端oss服务获取一个可以访问到指定文件的url</td>\n<td>object</td>\n<td>Image</td>\n</tr>\n<tr>\n<td>apis.ossUpload</td>\n<td>用于向oss服务上传一个文件</td>\n<td>object</td>\n<td>FormInfo.Upload,FormInfo.Avatar</td>\n</tr>\n<tr>\n<td>features</td>\n<td>用于配置系统的特性参数</td>\n<td>object</td>\n<td>Features</td>\n</tr>\n<tr>\n<td>features.profile</td>\n<td>系统的特性列表参考组件Features</td>\n<td>object</td>\n<td>Features</td>\n</tr>\n<tr>\n<td>features.debug</td>\n<td>特性的调试模式，可以在控制台打印Features的id和状态</td>\n<td>boolean</td>\n<td>Features</td>\n</tr>\n<tr>\n<td>enums</td>\n<td>公共枚举值，详情参看Enum组件</td>\n<td>object</td>\n<td>Enum</td>\n</tr>\n<tr>\n<td>enums.helperGuide</td>\n<td>帮助文档枚举配置</td>\n<td>function</td>\n<td>HelperGuide</td>\n</tr>\n<tr>\n<td>formInfo</td>\n<td>表单配置</td>\n<td>object</td>\n<td>FormInfo.formModule</td>\n</tr>\n<tr>\n<td>formInfo.rules</td>\n<td>表单规则配置</td>\n<td>object</td>\n<td>FormInfo.formModule</td>\n</tr>\n</tbody>\n</table>\n<p>全局context管理设置及默认样式</p>\n<ul>\n<li>请将全局覆盖性的样式放在此组件中</li>\n<li>请将字体文件的引用放在此组件中</li>\n<li>请将antd的覆盖性样式放在此组件中</li>\n<li>该组件需要放置在应用根位置</li>\n</ul>\n<p>更新字体文件:</p>\n<ul>\n<li>将iconfont上下载的字体包解压后放在public文件夹下面</li>\n<li>更新src/common/params.js 中的变量 iconfontBase</li>\n<li>修改后构建该项目发布到对应环境</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>preset</td>\n<td>全局预设参数，可以通过usePreset获取，由业务系统设置</td>\n<td>object</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>themeToken</td>\n<td>设置主题，参看antd的themeToken，一般只需要设置{colorPrimary}</td>\n<td>object</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>init</td>\n<td>初始化方法，在系统首次加载时执行，可以返回Promise。用来放置系统显示之前的异步操作</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>PureGlobal</h3>\n<p>api同Global，但是少了页面错误捕获和className:container-body带来的默认最小宽度等样式设置，主要用在组件库的演示环境和弹窗中</p>\n<h3>usePreset</h3>\n<p>获取预设的preset，已经确定为系统需要使用的key值:permissions,apis,formOptions,modalOptions</p>\n<h3>useGlobalContext</h3>\n<p>获取和设置全局状态，该状态保存在Global组件一级，不会随着内部组件本身的销毁而销毁。\n主要给组件内部使用，业务应该避免使用该api设置新的global变量。业务如果有需要应当自行在顶级组件中设置context。</p>\n<h4>params:useGlobalContext(globalKey)</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>globalKey</td>\n<td>全局参数的key，当存在globalKey时，默认获取和设置都是global[key]，当不存在globalKey获取和设置的都是global，除非存在多个获取和设置global的key-value，否则不推荐直接使用不存在globalKey的情况</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>return:{global,setGlobal}</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>global</td>\n<td>当前的global值</td>\n<td>any</td>\n</tr>\n<tr>\n<td>setGlobal</td>\n<td>设置当前的global值</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Global_4cc66`,\n        style: `.Global_4cc66 .label {\n  font-weight: bold; }\n`,\n        list: [{\n    title: `基本示例`,\n    description: `展示了文字大小颜色行高的设置`,\n    code: `const { PureGlobal } = _Global;\nconst { Space, Divider } = antd;\nconst BaseExample = () => {\n    return (\n        <PureGlobal>\n            <Space direction=\"vertical\">\n                <div className=\"label\">文字大小:</div>\n                <div style={{ fontSize: 'var(--font-size-large)' }}>大号文字</div>\n                <div>默认大小文字</div>\n                <div style={{ fontSize: 'var(--font-size-small)' }}>小号文字</div>\n                <Divider />\n                <div className=\"label\">文字颜色:</div>\n                <div style={{ color: 'var(--font-color)' }}>默认颜色</div>\n                <div style={{ color: 'var(--font-color-grey)' }}>灰色</div>\n                <div style={{ color: 'var(--font-color-grey-1)' }}>灰色1</div>\n                <div style={{ color: 'var(--font-color-grey-2)' }}>灰色2</div>\n                <Divider />\n                <div className=\"label\">行高:</div>\n                <div style={{ lineHeight: 'var(--line-height-large)' }}>\n                    宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高\n                </div>\n                <div>\n                    默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高\n                </div>\n                <div style={{ lineHeight: 'var(--line-height-small)' }}>\n                    紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高\n                </div>\n            </Space>\n        </PureGlobal>\n    );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_59\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_60\n}]\n},{\n    title: `警告提示`,\n    description: `展示了警告提示的覆盖样式`,\n    code: `const { PureGlobal } = _Global;\nconst { Alert, Space } = antd;\n\nconst BasicExample = () => {\n  return (\n      <PureGlobal>\n          <Space direction=\"vertical\">\n              <Alert message=\"提示提示提示提示提示提示提示提示提示\" type=\"success\" showIcon />\n              <Alert message=\"提示提示提示提示提示提示提示提示提示\" type=\"info\" showIcon />\n              <Alert message=\"提示提示提示提示提示提示提示提示提示\" type=\"warning\" showIcon />\n              <Alert message=\"提示提示提示提示提示提示提示提示提示\" type=\"error\" showIcon />\n\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"success\" showIcon />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"info\" showIcon />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"warning\" showIcon />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"error\" showIcon />\n\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"success\" showIcon closable />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"info\" showIcon closable />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"warning\" showIcon closable />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"error\" showIcon closable />\n          </Space>\n      </PureGlobal>\n  );\n};\n\nrender(<BasicExample />);\n\n`,\n    scope: [{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_59\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_60\n}]\n},{\n    title: `按钮`,\n    description: `展示了按钮的覆盖样式`,\n    code: `const { PureGlobal } = _Global;\nconst { Button, Typography, Space } = antd;\nconst { default: Icon } = icon;\n\nconst BaseExample = () => {\n  return (\n    <PureGlobal>\n      <Space direction=\"vertical\">\n        <Space>\n          <Button size=\"large\">大按钮</Button>\n          <Button>默认按钮</Button>\n          <Button size=\"small\">小按钮</Button>\n        </Space>\n        <Space>\n          <Button type=\"primary\">按钮</Button>\n          <Button type=\"link\">按钮</Button>\n          <Button type=\"text\">按钮</Button>\n        </Space>\n        <Space>\n          <Button danger>危险按钮</Button>\n          <Button type=\"primary\" danger>\n            危险按钮\n          </Button>\n          <Button type=\"link\" danger>\n            危险按钮\n          </Button>\n          <Button type=\"text\" danger>\n            危险按钮\n          </Button>\n        </Space>\n        <Space>\n          <Button disabled>禁用按钮</Button>\n          <Button type=\"primary\" danger disabled>\n            禁用危险按钮\n          </Button>\n          <Button type=\"link\" disabled>\n            禁用Link按钮\n          </Button>\n          <Button type=\"text\" disabled>\n            禁用Text按钮\n          </Button>\n        </Space>\n        <Space>\n          <Button type=\"text\" icon={<Icon type=\"icon-tianjia\" />}>\n            图标按钮\n          </Button>\n          <Button type=\"text\">\n            图标按钮右\n            <Icon type=\"icon-arrow-thin-down\" />\n          </Button>\n        </Space>\n        <Space>\n          <Button type=\"primary\" icon={<Icon type=\"icon-tianjia\" />} />\n          <Button icon={<Icon type=\"icon-tianjia\" />} />\n          <Button danger icon={<Icon type=\"icon-tianjia\" />} />\n          <Button type=\"link\" icon={<Icon type=\"icon-tianjia\" />} />\n          <Button type=\"text\" icon={<Icon type=\"icon-tianjia\" />} />\n        </Space>\n        <Space>\n          <Button type=\"primary\" disabled icon={<Icon type=\"icon-tianjia\" />} />\n          <Button disabled icon={<Icon type=\"icon-tianjia\" />} />\n          <Button disabled danger icon={<Icon type=\"icon-tianjia\" />} />\n          <Button disabled type=\"link\" icon={<Icon type=\"icon-tianjia\" />} />\n          <Button disabled type=\"text\" icon={<Icon type=\"icon-tianjia\" />} />\n        </Space>\n        <Space>\n          <Typography.Link>Link文字</Typography.Link>\n          <Typography.Text className=\"ant-btn\">文字</Typography.Text>\n          <Typography.Link>\n            <Icon type=\"icon-tianjia\" />\n            Link文字\n          </Typography.Link>\n          <Typography.Text className=\"ant-btn\">\n            <Icon type=\"icon-tianjia\" />\n            文字\n          </Typography.Text>\n          <Typography.Link className=\"ant-btn-dangerous\">\n            Link文字\n          </Typography.Link>\n        </Space>\n        <Space>\n          <Button className=\"btn-no-padding\" type=\"link\" size=\"large\">\n            大按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\">\n            默认按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\" size=\"small\">\n            小按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"text\" size=\"large\">\n            大按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"text\">\n            默认按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"text\" size=\"small\">\n            小按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\" size=\"large\" danger>\n            大按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\" danger>\n            默认按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\" size=\"small\" danger>\n            小按钮\n          </Button>\n        </Space>\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_59\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_60\n},{\n    name: \"icon\",\n    packageName: \"@components/Icon\",\n    component: component_61\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_56 from '@components/HelperGuide';\nimport * as component_57 from '@components/Global';\nconst readmeConfig = {\n    name: `HelperGuide`,\n    summary: `<p>给用户提供帮助文档</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `HelperGuide_4e237`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: HelperGuide } = _HelperGuide;\nconst { PureGlobal } = Global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        enums: {\n          helperGuide: () => [\n            {\n              value: \"test\",\n              content:\n                \"哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈\",\n              url: \"/xxxx\",\n            },\n          ],\n        },\n      }}\n    >\n      <HelperGuide name=\"test\" />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_HelperGuide\",\n    packageName: \"@components/HelperGuide\",\n    component: component_56\n},{\n    name: \"Global\",\n    packageName: \"@components/Global\",\n    component: component_57\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_58 from '@components/Highlight';\nconst readmeConfig = {\n    name: `Highlight`,\n    summary: `<p>用于显示文本高亮</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Highlight_0b905`,\n        style: ``,\n        list: [{\n    title: `基本文字高亮`,\n    description: `展示基本文字高亮`,\n    code: `const { default: Highlight, HighlightProvider } = _Highlight;\nconst BaseExample = () => {\n  return (\n    <HighlightProvider list={[\"哈\", \"呃呃\"]}>\n      <Highlight>哈哈哈西西西西呃呃呃</Highlight>\n    </HighlightProvider>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Highlight\",\n    packageName: \"@components/Highlight\",\n    component: component_58\n}]\n},{\n    title: `xss测试`,\n    description: `xss测试`,\n    code: `const { default: Highlight, HighlightProvider } = _Highlight;\nconst BaseExample = () => {\n  const str = '<img src=\"/aaaa\"/>';\n  return (\n    <HighlightProvider list={[\"哈\", \"呃呃\"]}>\n      <Highlight>哈哈哈西西西西呃呃呃{str}</Highlight>\n    </HighlightProvider>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Highlight\",\n    packageName: \"@components/Highlight\",\n    component: component_58\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_62 from '@components/HistoryStore';\nimport * as component_63 from 'antd';\nconst readmeConfig = {\n    name: `HistoryStore`,\n    summary: `<p>历史记录提示</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `HistoryStore_a963f`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: HistoryStore } = _HistoryStore;\nconst { Input } = antd;\nconst { useState } = React;\nconst BaseExample = () => {\n  const [value, setValue] = useState(\"\");\n  return (\n    <HistoryStore\n      onSelect={(value) => {\n        setValue(value);\n      }}\n    >\n      {({ appendHistory, openHistory }) => (\n        <Input.Search\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n          onFocus={openHistory}\n          onSearch={(value) => {\n            appendHistory({\n              value,\n              label: value,\n            });\n          }}\n        />\n      )}\n    </HistoryStore>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_HistoryStore\",\n    packageName: \"@components/HistoryStore\",\n    component: component_62\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_63\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_76 from '@components/Icon';\nimport * as component_77 from 'antd';\nimport * as component_78 from '@kne/react-fetch';\nimport * as component_79 from '@components/Global';\nimport * as component_80 from 'axios';\nimport * as component_81 from '@kne/remote-loader';\nconst readmeConfig = {\n    name: `Icon`,\n    summary: `<p>可以显示一个图标，图标必须在字体文件中被定义过</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>图标类型，参考示例下的字符串</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>colorful</td>\n<td>是否是彩色图标</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>图标前缀</td>\n<td>string</td>\n<td>\"\"</td>\n</tr>\n<tr>\n<td>size</td>\n<td>图标大小</td>\n<td>number</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Icon_81743`,\n        style: `.Icon_81743 .item {\n  width: 150px;\n  word-break: break-all; }\n`,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Icon } = _Icon;\nconst { Slider, Space } = antd;\nconst { useState } = React;\nconst { createWithFetch } = ReactFetch;\nconst { loadFont } = Global;\nconst { default: axios } = _axios;\nconst { createWithRemoteLoader } = remoteLoader;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: [\"components-iconfont:Font\"],\n})(({ remoteModules }) => {\n  const [Font] = remoteModules;\n  const [value, setValue] = useState(30);\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <div>调整大小:</div>\n        <Slider\n          style={{ width: 100 }}\n          max={60}\n          min={12}\n          value={value}\n          onChange={setValue}\n        />\n        <div>{value}px</div>\n      </Space>\n      {\n        <Font>\n          {({ list }) => {\n            return (\n              <Space wrap align=\"top\" size=\"large\">\n                {list.map(({ name, font_class }) => {\n                  return (\n                    <Space\n                      className=\"item\"\n                      direction=\"vertical\"\n                      align=\"center\"\n                      key={name}\n                    >\n                      <Icon type={font_class} size={value} />\n                      <div>{name}</div>\n                    </Space>\n                  );\n                })}\n              </Space>\n            );\n          }}\n        </Font>\n      }\n    </Space>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Icon\",\n    packageName: \"@components/Icon\",\n    component: component_76\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_77\n},{\n    name: \"ReactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_78\n},{\n    name: \"Global\",\n    packageName: \"@components/Global\",\n    component: component_79\n},{\n    name: \"_axios\",\n    packageName: \"axios\",\n    component: component_80\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_81\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Icon } = _Icon;\nconst { Space, Slider } = antd;\nconst { useState } = React;\nconst { createWithFetch } = ReactFetch;\nconst { createWithRemoteLoader } = remoteLoader;\nconst { default: axios } = _axios;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: [\"components-iconfont:ColorfulFont\"],\n})(({ remoteModules }) => {\n  const [ColorfulFont] = remoteModules;\n  const [value, setValue] = useState(30);\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <div>调整大小:</div>\n        <Slider\n          style={{ width: 100 }}\n          max={60}\n          min={12}\n          value={value}\n          onChange={setValue}\n        />\n        <div>{value}px</div>\n      </Space>\n      <ColorfulFont>\n        {({ list }) => (\n          <Space wrap align=\"top\" size=\"large\">\n            {list.map(({ name }) => {\n              return (\n                <Space\n                  className=\"item\"\n                  direction=\"vertical\"\n                  align=\"center\"\n                  key={name}\n                >\n                  <Icon colorful type={name} size={value} />\n                  <div>{name}</div>\n                </Space>\n              );\n            })}\n          </Space>\n        )}\n      </ColorfulFont>\n    </Space>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Icon\",\n    packageName: \"@components/Icon\",\n    component: component_76\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_77\n},{\n    name: \"ReactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_78\n},{\n    name: \"Global\",\n    packageName: \"@components/Global\",\n    component: component_79\n},{\n    name: \"_axios\",\n    packageName: \"axios\",\n    component: component_80\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_81\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_64 from '@components/Image';\nimport * as component_65 from '@components/Global';\nimport * as component_66 from 'antd';\nconst readmeConfig = {\n    name: `Image`,\n    summary: `<p>用于展示一张图片，和img标签不同的是，可以展示一张普通图片，也可以通过id加载一张oss图片，在加载oss地址和图片数据的时候会显示loading状态</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src</td>\n<td>图片的src地址</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>id</td>\n<td>oss的id</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>加载时显示的组件</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>error</td>\n<td>加载错误时显示的组件</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Image.Avatar</h3>\n<p>用antd的Avatar来显示图片，可以显示默认的男女头像，其他参数参考antd的Avatar组件</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>gender</td>\n<td>性别 F，female，f为女其他为男</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Image_be53a`,\n        style: ``,\n        list: [{\n    title: `通过src加载一个普通图片`,\n    description: `通过src加载一个普通图片`,\n    code: `const {default: Image} = _Image;\nconst BaseExample = () => {\n    return <Image src={window.PUBLIC_URL + \"/logo512.png\"} style={{width: '100px', height: '100px'}}/>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Image\",\n    packageName: \"@components/Image\",\n    component: component_64\n}]\n},{\n    title: `通过id加载一个oss图片`,\n    description: `图片一加载成功，图片二加载中，图片三加载失败`,\n    code: `const {default: Image} = _Image;\nconst {PureGlobal} = global;\nconst {Space} = antd;\nconst BaseExample = () => {\n    return <PureGlobal preset={{\n        apis: {\n            oss: {\n                loader: ({params}) => {\n                    if(params.id ==='logo513.png'){\n                        return new Promise(()=>{\n\n                        });\n                    }\n                    return new Promise((resolve) => {\n                        resolve(window.PUBLIC_URL + '/' + params.id);\n                    });\n\n                }\n            }\n        }\n    }}>\n        <Space>\n            <Image id=\"logo512.png\" style={{width: '100px', height: '100px'}}/>\n            <Image id=\"logo513.png\" style={{width: '100px', height: '100px'}}/>\n            <Image id=\"logo511.png\" style={{width: '100px', height: '100px'}}/>\n        </Space>\n    </PureGlobal>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Image\",\n    packageName: \"@components/Image\",\n    component: component_64\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_65\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_66\n}]\n},{\n    title: `显示一个头像`,\n    description: `显示图片头像和默认头像`,\n    code: `const { default: Image } = _Image;\nconst { Space } = antd;\nconst BaseExample = () => {\n  return (\n    <Space>\n      <Image.Avatar src={window.PUBLIC_URL + \"/avatar.png\"} shape=\"circle\" />\n      <Image.Avatar\n        src={window.PUBLIC_URL + \"/avatar.png\"}\n        shape=\"circle\"\n        size={80}\n      />\n      <Image.Avatar\n        src={window.PUBLIC_URL + \"/avatar.png\"}\n        shape=\"circle\"\n        size={50}\n      />\n\n      <Image.Avatar shape=\"circle\" />\n      <Image.Avatar gender=\"M\" shape=\"circle\" size={80} />\n      <Image.Avatar gender=\"female\" shape=\"circle\" size={50} />\n      <Image.Avatar gender=\"m\" shape=\"circle\" size={50} />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Image\",\n    packageName: \"@components/Image\",\n    component: component_64\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_66\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_72 from '@components/InfoPage';\nimport * as component_73 from '@components/Content';\nimport * as component_74 from '@components/Descriptions';\nimport * as component_75 from 'antd';\nconst readmeConfig = {\n    name: `InfoPage`,\n    summary: `<h3>何时使用</h3>\n<p>一般用在复杂的详情展示页面，InfoPage提供了一个标准的展示信息的格式</p>\n<h3>特点</h3>\n<ul>\n<li>支持Content组件Descriptions组件的组合</li>\n<li>支持Collapse组件组合</li>\n<li>InfoPage.Part 需要放在InfoPage之下，InfoPage.Collapse,Content,Descriptions 需要放在 InfoPage.Part之下</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children</td>\n<td>内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>InfoPage.Part</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>标题</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>extra</td>\n<td>额外内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>InfoPage.Collapse</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children</td>\n<td>内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `InfoPage_fb7ea`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: InfoPage } = _InfoPage;\nconst { default: Content } = _Content;\nconst { default: Descriptions } = _Descriptions;\nconst { Space } = antd;\nconst BaseExample = () => {\n  return (\n    <InfoPage>\n      <InfoPage.Part title=\"退票信息\">\n        <Descriptions\n          dataSource={[\n            [\n              { label: \"客户名称\", content: \"腾讯\" },\n              { label: \"发票抬头\", content: \"腾讯科技公司\" },\n            ],\n            [\n              { label: \"发票类型\", content: \"增值税专用发票\" },\n              { label: \"发票开具日期\", content: \"2022-08-15\" },\n            ],\n            [{ label: \"退票金额\", content: \"22000.00元\" }],\n            [\n              {\n                label: \"发票号\",\n                content: (\n                  <div>\n                    <div>00384895992774</div>\n                    <div>00384895992774</div>\n                    <div>00384895992774</div>\n                    <div>00384895992774</div>\n                  </div>\n                ),\n              },\n            ],\n            [\n              { label: \"是否需要重开发票\", content: \"否\" },\n              { label: \"是否涉及金融变动\", content: \"否\" },\n            ],\n            [\n              { label: \"是否造成实质损失\", content: \"否\" },\n              { label: \"责任归属\", content: \"客户原因\" },\n            ],\n            [\n              {\n                label: \"退票原因\",\n                content: \"退票原因的描述退票原因的描述退票原因的描\",\n              },\n            ],\n            [{ label: \"附件\", content: \"附件名称\" }],\n            [\n              { label: \"操作时间\", content: \"2022-08-01 16:32\" },\n              { label: \"操作人\", content: \"西西歪\" },\n            ],\n          ]}\n        />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"开票信息\">\n        <Space direction=\"vertical\" size={24}>\n          <Descriptions\n            dataSource={[\n              [{ label: \"客户名称\", content: \"腾讯\" }],\n              [{ label: \"合同\", content: \"合同3\" }],\n            ]}\n          />\n          <InfoPage.Part title=\"发票费用信息\">\n            <Space direction=\"vertical\">\n              <InfoPage.Collapse defaultActiveKey={[\"0\", \"1\"]}>\n                <InfoPage.Collapse.Panel key=\"0\" header=\"项目类型1\">\n                  <Content\n                    labelAlign=\"auto\"\n                    col={3}\n                    gutter={[0, 12]}\n                    list={[\n                      { label: \"项目类型\", content: \"面试到岗\" },\n                      { label: \"费用类型\", content: \"服务费\" },\n                      { label: \"费用总金额\", content: \"10,000元\" },\n                      { label: \"本次支付费用比例\", content: \"30%\" },\n                      { label: \"本次支付费用金额\", content: \"3,000元\" },\n                      { label: \"开票候选人\", content: \"李小萌\" },\n                    ]}\n                  />\n                </InfoPage.Collapse.Panel>\n                <InfoPage.Collapse.Panel key=\"1\" header=\"项目类型2\">\n                  <Content\n                    labelAlign=\"auto\"\n                    col={3}\n                    gutter={[0, 12]}\n                    list={[\n                      { label: \"项目类型\", content: \"面试到岗\" },\n                      { label: \"费用类型\", content: \"服务费\" },\n                      { label: \"费用总金额\", content: \"10,000元\" },\n                      { label: \"本次支付费用比例\", content: \"30%\" },\n                      { label: \"本次支付费用金额\", content: \"3,000元\" },\n                      { label: \"开票候选人\", content: \"李小萌\" },\n                    ]}\n                  />\n                </InfoPage.Collapse.Panel>\n              </InfoPage.Collapse>\n              <Descriptions\n                dataSource={[\n                  [\n                    { label: \"客户付税比例\", content: \"1%\" },\n                    { label: \"客户所付税金\", content: \"30元\" },\n                  ],\n                  [\n                    { label: \"服务费\", content: \"2886.29元\" },\n                    { label: \"发票增值税\", content: \"172.38元\" },\n                  ],\n                  [{ label: \"发票金额\", content: \"22000.00元\" }],\n                  [\n                    {\n                      label: \"发票备注\",\n                      content: \"备注的内容备注的内容备注的内容备注的内容\",\n                    },\n                  ],\n                ]}\n              />\n            </Space>\n          </InfoPage.Part>\n          <InfoPage.Part title=\"发票信息\">\n            <Descriptions\n              dataSource={[\n                [{ label: \"付款信息\", content: \"ASB54492789374983798\" }],\n                [{ label: \"发票收件人\", content: \"西西歪\" }],\n                [{ label: \"附件\", content: \"附件名称\" }],\n                [{ label: \"预计入职日期\", content: \"2022-08-15\" }],\n              ]}\n            />\n          </InfoPage.Part>\n          <InfoPage.Part title=\"业绩分配\">\n            <InfoPage.Collapse defaultActiveKey={[\"0\", \"1\"]}>\n              <InfoPage.Collapse.Panel key=\"0\" header=\"项目类型1\">\n                <Content\n                  labelAlign=\"auto\"\n                  col={3}\n                  gutter={[0, 12]}\n                  list={[\n                    { label: \"分配用户\", content: \"王亚男\" },\n                    { label: \"分配比例\", content: \"40%\" },\n                    { label: \"分配金额\", content: \"1,200元\" },\n                  ]}\n                />\n              </InfoPage.Collapse.Panel>\n              <InfoPage.Collapse.Panel key=\"1\" header=\"项目类型2\">\n                <Content\n                  labelAlign=\"auto\"\n                  col={3}\n                  gutter={[0, 12]}\n                  list={[\n                    { label: \"分配用户\", content: \"王亚男\" },\n                    { label: \"分配比例\", content: \"40%\" },\n                    { label: \"分配金额\", content: \"1,200元\" },\n                  ]}\n                />\n              </InfoPage.Collapse.Panel>\n            </InfoPage.Collapse>\n          </InfoPage.Part>\n        </Space>\n      </InfoPage.Part>\n    </InfoPage>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_InfoPage\",\n    packageName: \"@components/InfoPage\",\n    component: component_72\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_73\n},{\n    name: \"_Descriptions\",\n    packageName: \"@components/Descriptions\",\n    component: component_74\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_75\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","const message = {\n    ButtonText: \"confirm\"\n};\n\nexport default message;","const message = {\n    ButtonText: \"确定\"\n};\n\nexport default message;","import * as component_67 from '@components/Intl';\nimport * as component_68 from '@components/Global';\nimport * as component_69 from 'antd';\nimport * as component_70 from '@components/Intl/doc/locale/en-US';\nimport * as component_71 from '@components/Intl/doc/locale/zh-CN';\nconst readmeConfig = {\n    name: `Intl`,\n    summary: `<p>支持系统国际化</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Intl_51734`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {FormattedMessage, IntlProvider} = _Intl;\nconst {PureGlobal} = global;\nconst {Select, Space} = antd;\nconst {default: en} = localeEN;\nconst {default: cn} = localeCN;\nconst {useState} = React;\nconst BaseExample = () => {\n    const [locale, setLocale] = useState('zh-CN');\n    return (<Space>\n        <Select value={locale} onChange={setLocale}\n                options={['zh-CN', 'en-US'].map(key => ({value: key, label: key}))}/>\n        <PureGlobal\n            preset={{\n                locale\n            }}\n        >\n            <IntlProvider locale={locale} importMessages={locale => {\n                return {\n                    default: {\n                        'zh-CN': cn, 'en-US': en\n                    }[locale]\n                };\n            }}>\n                <FormattedMessage defaultMessage=\"按钮\" id=\"ButtonText\">\n                    {text => <div>{text}</div>}\n                </FormattedMessage>\n            </IntlProvider>\n\n        </PureGlobal>\n    </Space>);\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Intl\",\n    packageName: \"@components/Intl\",\n    component: component_67\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_68\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_69\n},{\n    name: \"localeEN\",\n    packageName: \"@components/Intl/doc/locale/en-US\",\n    component: component_70\n},{\n    name: \"localeCN\",\n    packageName: \"@components/Intl/doc/locale/zh-CN\",\n    component: component_71\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_82 from '@components/Layout';\nimport * as component_83 from '@components/Global';\nimport * as component_84 from 'antd';\nimport * as component_85 from '@components/Filter';\nconst readmeConfig = {\n    name: `Layout`,\n    summary: `<h3>何时使用</h3>\n<p>每个登录后的系统页面都应该在Layout的框架之下，它定义了页面的基本框架。根据设计对于页面的不同要求，适当选择不同的组合</p>\n<h3>特点</h3>\n<p>Layout将整个页面划分成以下几个区域</p>\n<ol>\n<li>导航区</li>\n<li>内容区</li>\n<li>左菜单区</li>\n<li>右操作区</li>\n<li>页头区</li>\n<li>页头信息区</li>\n<li>页面标题区</li>\n</ol>\n<p>通过给Page配置不同的参数实现不同区域的显示</p>\n<h3>注意</h3>\n<ul>\n<li>Page的name参数必须要传，用来在页面跳转时确定Page是不是同一个，决定着Page是否走install周期</li>\n<li>Page组件的参数是通过Context保存在Layout中的，这样做的目的是为了让页面跳转时，除页面区以外的区域在前后俩页面差别不大的情况下走更新周期而不是install周期，以此带来更快的渲染速度避免不必要的重复安装和卸载</li>\n<li>请尽量通过Page提供的参数来配置出设计要求的页面，不要自行用css实现，以便于Layout组件能从整体控制页面的基本形式和不同区域的padding和margin，让系统更加统一化标准化</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>navigation</td>\n<td>导航参数参考 Navigation 组件参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>一般放置Page组件</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Page</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>menu</td>\n<td>左菜单区内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>页面标题位置筛选器参数,参考 Filter 组件参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>menuOpen</td>\n<td>左菜单是否默认打开</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>menuWidth</td>\n<td>左菜单宽度</td>\n<td>string</td>\n<td>240px</td>\n</tr>\n<tr>\n<td>menuFixed</td>\n<td>左菜单是否fixed布局</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>menuCloseButton</td>\n<td>控制左菜单显示隐藏的按钮是否显示</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>header</td>\n<td>页头区内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>headerFixed</td>\n<td>页头区是否fixed布局</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>headerInfo</td>\n<td>页头信息区内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>backUrl</td>\n<td>右侧内容区的标题前展示返回按钮，并返回到该url</td>\n<td>参考 useNavigate</td>\n<td>-</td>\n</tr>\n<tr>\n<td>title</td>\n<td>页面标题</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>titleExtra</td>\n<td>页面标题区右侧位置内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>titleLeftExtra</td>\n<td>页面标题区左侧位置内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>noMargin</td>\n<td>页面内容区是否去掉Margin</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>noPadding</td>\n<td>页面内容区是否去掉Padding</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>option</td>\n<td>右操作区内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>optionWidth</td>\n<td>右操作区宽度</td>\n<td>string</td>\n<td>400px</td>\n</tr>\n<tr>\n<td>optionNoPadding</td>\n<td>右操作区是否去掉Padding</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>optionFixed</td>\n<td>右操作区是否fixed布局</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>optionFooter</td>\n<td>右操作区底部内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>openFeatures</td>\n<td>Page是否启用Features，启用时如果配置文件中没有该模块id则判断为模块关闭，会将name作为Features的id进行设置</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3>Affix</h3>\n<p>可以控制其中的内容是否是fixed布局</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>isFixed</td>\n<td>内容是否fixed布局</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>offsetTop</td>\n<td>距离窗口顶部达到指定偏移量后触发</td>\n<td>number</td>\n<td>0</td>\n</tr>\n<tr>\n<td>offsetBottom</td>\n<td>距离窗口底部达到指定偏移量后触发</td>\n<td>number</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>固定状态改变时触发的回调函数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Menu</h3>\n<p>显示一个菜单，最多支持两级，支持第一级展开收起，支持路径匹配自动高亮</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>items</td>\n<td>菜单项</td>\n<td>array[object]</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>items[].label</td>\n<td>菜单项显示内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].key</td>\n<td>菜单项的key要求必须唯一</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].iconType</td>\n<td>菜单项前面的icon类型参考 Icon组件的type参数</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].path</td>\n<td>菜单项的路径</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].onClick</td>\n<td>菜单项点击触发事件，注意：如果菜单项已经传入path参数则该参数不生效</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].children</td>\n<td>菜单项的第二级项列表，参考items参数。注意该组件只支持两级菜单，所以该参数内部的菜单项不再支持children参数</td>\n<td>array[object]</td>\n<td>-</td>\n</tr>\n<tr>\n<td>currentKey</td>\n<td>当前被选中的菜单项的key，如果菜单项又path参数，不需要传递该参数，组件会根据路由自动判断选中项</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>currentKey产生修改时触发函数，注意：如果菜单项已经传入path参数则该参数不生效</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>allowCollapsed</td>\n<td>是否允许一级菜单收起</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>defaultOpenKeys</td>\n<td>初始展开的 SubMenu 菜单项 key 数组</td>\n<td>string[]</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>PermissionsPage</h3>\n<p>加入权限判断的Page，错误类型默认为error，即在该页面没有权限时显示错误</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>permissions</td>\n<td>权限列表参考 Permissions 组件参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Layout_ebd9b`,\n        style: `.Layout_ebd9b .layout-content {\n  color: #fff;\n  background: var(--primary-color-4);\n  height: 100%;\n  text-align: center;\n  line-height: 300px; }\n\n.Layout_ebd9b .with-title-layout-content {\n  height: 100%; }\n\n.Layout_ebd9b .layout-menu {\n  background: #ff9c6e;\n  color: #fff;\n  height: 110vh;\n  text-align: center;\n  line-height: 300px; }\n\n.Layout_ebd9b .header {\n  background: #ff9c6e;\n  height: 100px;\n  padding: 10px;\n  color: #fff; }\n\n.Layout_ebd9b .right-options {\n  background: var(--primary-color-4);\n  height: 110vh;\n  color: #fff; }\n\n.Layout_ebd9b .header-info {\n  padding: 10px;\n  height: 100px;\n  background: var(--primary-color-4);\n  color: #fff; }\n`,\n        list: [{\n    title: `基础上下布局`,\n    description: `展示最基础的上导航栏，下内容的布局`,\n    code: `const { default: Layout, Page } = _Layout;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        enums: {\n          helperGuide: () => [\n            {\n              value: \"base-detail\",\n              content: \"测试帮助文档\",\n              url: \"/\",\n            },\n          ],\n        },\n      }}\n    >\n      <Layout navigation={{ isFixed: false }}>\n        <Page name=\"base\" helperGuideName=\"base-detail\">\n          <div className=\"layout-content\">内容区</div>\n        </Page>\n      </Layout>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Layout\",\n    packageName: \"@components/Layout\",\n    component: component_82\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_83\n}]\n},{\n    title: `带有左侧菜单布局`,\n    description: `展示带有左侧菜单布局`,\n    code: `const { default: Layout, Page, Menu } = layout;\nconst { Button, Space } = antd;\nconst { PureGlobal } = global;\n\nconst Example = () => {\n  return (\n    <Layout navigation={{ isFixed: false }}>\n      <Page\n        name=\"left-menu\"\n        menuFixed={false}\n        menu={\n          <Menu\n            items={[\n              {\n                label: \"父级标题1\",\n                key: \"p-0\",\n                iconType: \"icon-zhanghaodenglu\",\n                children: [\n                  {\n                    label: \"子标题1\",\n                    key: \"s-0\",\n                    path: \"/link1\",\n                  },\n                  {\n                    label: \"子标题2\",\n                    key: \"s-1\",\n                    path: \"/link2\",\n                  },\n                ],\n              },\n              {\n                label: \"父级标题2\",\n                key: \"p-1\",\n                iconType: \"icon-zhanghaodenglu\",\n                children: [\n                  {\n                    label: \"子标题1\",\n                    key: \"s-2\",\n                    path: \"/link3\",\n                  },\n                  {\n                    label: \"子标题2\",\n                    key: \"s-3\",\n                    path: \"/link4\",\n                  },\n                ],\n              },\n              {\n                label: \"父级标题3\",\n                key: \"p-2\",\n                iconType: \"icon-zhanghaodenglu\",\n                path: \"/link5\",\n              },\n            ]}\n          />\n        }\n        titleExtra={\n          <Space>\n            <Button type=\"primary\">新建</Button>\n          </Space>\n        }\n        backUrl={\"/\"}\n        title=\"标题\"\n      >\n        <div className=\"layout-content with-title-layout-content\">内容区</div>\n      </Page>\n    </Layout>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <Example />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_82\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_84\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_83\n}]\n},{\n    title: `左侧固定带Header`,\n    description: `展示带有header的左侧固定菜单布局`,\n    code: `const { default: Layout, Page } = layout;\nconst { Button, Space } = antd;\nconst { PureGlobal } = global;\n\nconst Example = () => {\n  return (\n    <Space className=\"container\" direction=\"vertical\">\n      <Layout navigation={{ isFixed: false }}>\n        <Page\n          name=\"with-header\"\n          helperGuideName=\"base-detail\"\n          menu={<div className=\"layout-menu\">左侧菜单区</div>}\n          titleExtra={\n            <Space>\n              <Button type=\"primary\">新建</Button>\n            </Space>\n          }\n          title=\"标题\"\n          hideCloseSvg={true}\n          headerHeight=\"40px\"\n          menuFixed={false}\n          header={<div className=\"header\">header</div>}\n          headerFixed={false}\n          headerInfo={<div className=\"header-info\">header info区域</div>}\n        >\n          <div>内容区</div>\n        </Page>\n      </Layout>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      enums: {\n        helperGuide: () => [\n          {\n            value: \"base-detail\",\n            content: \"测试帮助文档\",\n            url: \"/\",\n          },\n        ],\n      },\n    }}\n  >\n    <Example />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_82\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_84\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_83\n}]\n},{\n    title: `右侧固定`,\n    description: `展示带有header的右侧固定菜单布局`,\n    code: `const { default: Layout, Page } = layout;\nconst { Button, Space } = antd;\nconst { PureGlobal } = global;\n\nconst Example = () => {\n  return (\n    <Layout navigation={{ isFixed: false }}>\n      <Page\n        name=\"fix-right-menu\"\n        optionFixed={false}\n        option={<div className=\"right-options\">右侧操作区域</div>}\n        optionFooter={\n          <Space>\n            <Button type=\"primary\">新建</Button>\n          </Space>\n        }\n        titleExtra={\n          <Space>\n            <Button type=\"primary\">新建</Button>\n          </Space>\n        }\n        title=\"标题\"\n        header={<div className=\"header\">header</div>}\n        headerFixed={false}\n        menuFixed={false}\n      >\n        <div>内容区</div>\n      </Page>\n    </Layout>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <Example />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_82\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_84\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_83\n}]\n},{\n    title: `带有filter的列表页`,\n    description: `展示带有filter的列表页`,\n    code: `const { default: Layout, Page } = layout;\nconst {\n  InputFilterItem,\n  CityFilterItem,\n  AdvancedSelectFilterItem,\n  UserFilterItem,\n  FunctionSelectFilterItem,\n  IndustrySelectFilterItem,\n  getFilterValue,\n} = filter;\nconst { useState } = React;\nconst { Space, Button } = antd;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  const [filter, setFilter] = useState([]);\n  return (\n    <PureGlobal preset={{}}>\n      <Layout navigation={{ isFixed: false }}>\n        <Page\n          name=\"base\"\n          helperGuideName=\"base-detail\"\n          titleExtra={\n            <Space>\n              <Button type=\"primary\">添加</Button>\n            </Space>\n          }\n          filter={{\n            extraExpand: (\n              <Button type=\"primary\" size=\"small\">\n                订阅筛选项\n              </Button>\n            ),\n            value: filter,\n            onChange: (value) => {\n              setFilter(value);\n              console.log(getFilterValue(value));\n            },\n            list: [\n              [\n                <InputFilterItem label=\"文字\" name=\"text\" />,\n                <CityFilterItem label=\"城市\" name=\"city\" />,\n                <AdvancedSelectFilterItem\n                  label=\"高级选择\"\n                  name=\"select\"\n                  api={{\n                    loader: () => {\n                      return {\n                        pageData: [\n                          { label: \"第一项\", value: 1 },\n                          { label: \"第二项\", value: 2, disabled: true },\n                          {\n                            label: \"第三项\",\n                            value: 3,\n                          },\n                        ],\n                      };\n                    },\n                  }}\n                />,\n                <UserFilterItem\n                  label=\"用户选择\"\n                  name=\"user\"\n                  api={{\n                    loader: () => {\n                      return {\n                        pageData: [\n                          {\n                            label: \"用户一\",\n                            value: 1,\n                            description: \"我是用户描述\",\n                          },\n                          {\n                            label: \"用户二\",\n                            value: 2,\n                            description: \"我是用户描述\",\n                          },\n                          {\n                            label: \"用户三\",\n                            value: 3,\n                            description: \"我是用户描述\",\n                          },\n                        ],\n                      };\n                    },\n                  }}\n                />,\n                <FunctionSelectFilterItem\n                  label=\"职能选择\"\n                  name=\"function\"\n                  onlyAllowLastLevel\n                  single\n                />,\n                <IndustrySelectFilterItem\n                  label=\"行业选择\"\n                  name=\"industry\"\n                  onlyAllowLastLevel\n                />,\n              ],\n              [\n                <UserFilterItem\n                  label=\"职位协助人\"\n                  name=\"position_user\"\n                  api={{\n                    loader: () => {\n                      return {\n                        pageData: [\n                          {\n                            label: \"用户一\",\n                            value: 1,\n                            description: \"我是用户描述\",\n                          },\n                          {\n                            label: \"用户二\",\n                            value: 2,\n                            description: \"我是用户描述\",\n                          },\n                          {\n                            label: \"用户三\",\n                            value: 3,\n                            description: \"我是用户描述\",\n                          },\n                        ],\n                      };\n                    },\n                  }}\n                />,\n              ],\n            ],\n          }}\n        >\n          <div className=\"layout-content\">内容区</div>\n        </Page>\n      </Layout>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_82\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_84\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_83\n},{\n    name: \"filter\",\n    packageName: \"@components/Filter\",\n    component: component_85\n}]\n},{\n    title: `左侧导航菜单`,\n    description: `展示一个左侧导航菜单`,\n    code: `const { Menu } = layout;\nconst { Space } = antd;\nconst { useState } = React;\n\nconst ControlMenu = () => {\n  const [current, setCurrent] = useState();\n  return (\n    <Menu\n      currentKey={current}\n      onChange={setCurrent}\n      items={[\n        {\n          label: \"父级标题1\",\n          key: \"p-0\",\n          iconType: \"icon-zhanghaodenglu\",\n          children: [\n            {\n              label: \"子标题1\",\n              key: \"s-0\",\n            },\n            {\n              label: \"子标题2\",\n              key: \"s-1\",\n            },\n          ],\n        },\n        {\n          label: \"父级标题2\",\n          key: \"p-1\",\n          iconType: \"icon-zhanghaodenglu\",\n          children: [\n            {\n              label: \"子标题1\",\n              key: \"s-2\",\n            },\n            {\n              label: \"子标题2\",\n              key: \"s-3\",\n            },\n          ],\n        },\n        {\n          label: \"父级标题3\",\n          key: \"p-2\",\n          iconType: \"icon-zhanghaodenglu\",\n        },\n      ]}\n    />\n  );\n};\n\nconst Example = () => {\n  return (\n    <Space size={10}>\n      <Menu\n        items={[\n          {\n            label: \"父级标题1\",\n            key: \"p-0\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-0\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-1\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            key: \"p-1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-2\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-3\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            key: \"p-2\",\n            iconType: \"icon-zhanghaodenglu\",\n            path: \"/link5\",\n          },\n        ]}\n      />\n      <Menu\n        items={[\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题1\",\n            key: \"s-0\",\n            path: \"/link1\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题2\",\n            key: \"s-1\",\n            path: \"/link2\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题1\",\n            key: \"s-2\",\n            path: \"/link3\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题2\",\n            key: \"s-3\",\n            path: \"/link4\",\n          },\n        ]}\n      />\n      <Menu\n        allowCollapsed={false}\n        items={[\n          {\n            label: \"父级标题1\",\n            key: \"p-0\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-0\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-1\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            key: \"p-1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-2\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-3\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            key: \"p-2\",\n            iconType: \"icon-zhanghaodenglu\",\n            path: \"/link5\",\n          },\n        ]}\n      />\n      <ControlMenu />\n    </Space>\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_82\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_84\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_86 from '@components/LoadingButton';\nimport * as component_87 from 'antd';\nconst readmeConfig = {\n    name: `LoadingButton`,\n    summary: `<h3>何时使用</h3>\n<p>当点击按钮时，需要显示loading状态，当然你可以使用antd Button的loading属性，但是这样你需要自己声明一个state来控制，LoadingButton组件可以帮你做好这件事情</p>\n<h3>特点</h3>\n<p>通过onClick返回的Promise来控制Button的loading状态</p>\n<p>children除了可以传正常的jsx以外还接受function参数，可以接收到loading状态以便根据loading状态显示不同文案</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onClick</td>\n<td>点击按钮触发函数，可以返回一个Promise，当Promise再pending状态时Button将自动处于loading状态，当Promise返回结果会自动从loading切换回普通状态</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>Button的子元素，可以为jsx或者function，为function时可以接收到loading状态用来切换显示内容</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `LoadingButton_cd4ed`,\n        style: ``,\n        list: [{\n    title: `带有加载状态按钮`,\n    description: `点击按钮切换到加载状态，加载方法完成后自动切换为普通状态`,\n    code: `const { default: LoadingButton } = _LoadingButton;\nconst { Space, message } = antd;\n\nconst clickHandler = () => {\n  message.success(\"点击按钮1s后完成加载\");\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      message.success(\"完成\");\n      resolve();\n    }, 1000);\n  });\n};\nconst BaseExample = () => {\n  return (\n    <Space wrap>\n      <LoadingButton onClick={clickHandler}>按钮</LoadingButton>\n      <LoadingButton onClick={clickHandler}>\n        {(isLoading) => (isLoading ? \"正在加载中...\" : \"切换加载文案\")}\n      </LoadingButton>\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_LoadingButton\",\n    packageName: \"@components/LoadingButton\",\n    component: component_86\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_87\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_88 from '@components/Menu';\nimport * as component_89 from 'antd';\nconst readmeConfig = {\n    name: `Menu`,\n    summary: `<p>支持远程加载数据的菜单</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Menu_b6154`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Menu } = _Menu;\nconst { Space } = antd;\nconst { useState } = React;\n\nconst ControlMenu = () => {\n  const [current, setCurrent] = useState(\"s-0\");\n  return (\n    <Menu\n      currentKey={current}\n      onChange={setCurrent}\n      items={[\n        {\n          label: \"父级标题1\",\n          key: \"p-0\",\n          iconType: \"icon-zhanghaodenglu\",\n          children: [\n            {\n              label: \"子标题1\",\n              key: \"s-0\",\n            },\n            {\n              label: \"子标题2\",\n              key: \"s-1\",\n            },\n          ],\n        },\n        {\n          label: \"父级标题2\",\n          key: \"p-1\",\n          iconType: \"icon-zhanghaodenglu\",\n          children: [\n            {\n              label: \"子标题1\",\n              key: \"s-2\",\n            },\n            {\n              label: \"子标题2\",\n              key: \"s-3\",\n            },\n          ],\n        },\n        {\n          label: \"父级标题3\",\n          key: \"p-2\",\n          iconType: \"icon-zhanghaodenglu\",\n        },\n      ]}\n    />\n  );\n};\nconst BaseExample = () => {\n  return (\n    <Space>\n      <div style={{ maxWidth: \"200px\" }}>\n        <Menu\n          defaultItems={[\n            {\n              label: \"父级标题1\",\n              iconType: \"icon-zhanghaodenglu\",\n              children: [\n                {\n                  label:\n                    \"子标题1超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长子标题1超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长子标题1超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长子标题1超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级\",\n                  path: \"/link1\",\n                },\n                {\n                  label: \"子标题2\",\n                  path: \"/link2\",\n                },\n              ],\n            },\n            {\n              label: \"父级标题2\",\n              iconType: \"icon-zhanghaodenglu\",\n              children: [\n                {\n                  label: \"子标题1\",\n                  path: \"/link3\",\n                },\n                {\n                  label: \"子标题2\",\n                  path: \"/link4\",\n                },\n              ],\n            },\n            {\n              label: \"父级标题3\",\n              iconType: \"icon-zhanghaodenglu\",\n              fetchOptions: {\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        {\n                          label: \"子标题1\",\n                          path: \"/link5\",\n                        },\n                        {\n                          label: \"子标题2\",\n                          path: \"/link6\",\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              },\n            },\n          ]}\n        />\n      </div>\n\n      <Menu\n        items={[\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题1\",\n            key: \"s-0\",\n            path: \"/link1\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题2\",\n            key: \"s-1\",\n            path: \"/link2\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题1\",\n            key: \"s-2\",\n            path: \"/link3\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题2\",\n            key: \"s-3\",\n            path: \"/link4\",\n          },\n        ]}\n      />\n      <Menu\n        allowCollapsed={false}\n        items={[\n          {\n            label: \"父级标题1\",\n            key: \"p-0\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-0\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-1\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            key: \"p-1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-2\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-3\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            key: \"p-2\",\n            iconType: \"icon-zhanghaodenglu\",\n            path: \"/link5\",\n          },\n        ]}\n      />\n      <Menu\n        allowCollapsed={false}\n        defaultItems={[\n          {\n            label: \"父级标题1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            iconType: \"icon-zhanghaodenglu\",\n            fetchOptions: {\n              loader: () => {\n                return new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve([\n                      {\n                        label: \"子标题1\",\n                        path: \"/link5\",\n                      },\n                      {\n                        label: \"子标题2\",\n                        path: \"/link6\",\n                      },\n                    ]);\n                  }, 1000);\n                });\n              },\n            },\n          },\n        ]}\n      />\n      <Menu\n        defaultItems={[\n          {\n            label: \"父级标题1\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link4\",\n              },\n            ],\n          },\n        ]}\n      />\n      <ControlMenu />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Menu\",\n    packageName: \"@components/Menu\",\n    component: component_88\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_89\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_90 from '@components/Modal';\nimport * as component_91 from '@components/Global';\nimport * as component_92 from 'antd';\nimport * as component_93 from '@kne/react-fetch';\nimport * as component_94 from '@components/Content';\nimport * as component_95 from '@components/FormInfo';\nconst readmeConfig = {\n    name: `Modal`,\n    summary: `<h3>何时使用</h3>\n<p>需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以在当前页面正中打开一个浮层，承载相应的操作。</p>\n<h3>特点</h3>\n<p>该组件是antd Modal组件的再封装：</p>\n<ul>\n<li>修改了footer部分的设置逻辑,能更加简单的定义footer区域的功能</li>\n<li>添加了withDecorator可以更加方便的处理Modal外层的显示逻辑</li>\n<li>扩展了用于方法调用的useModal的hooks，可以通过hooks获得一个Modal的调用方法，并且保证其和Modal组件式调用有相同的UI表现和行为</li>\n<li>扩展了ModalButton组件，可以在点击该按钮时执行加载数据，并且Button的状态变为loading，在数据加载完成之后再弹出弹窗</li>\n<li>扩展了TabsModal组件，它是一个Tabs和Modal组合起来的组件，对弹窗title做了特殊处理，更加符合UI交互逻辑</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>footer</td>\n<td>弹窗的footer，当其被显式设置成null且footerButtons没有设置过时弹窗不显示footer。当它类型为function时可以得到close方法和withDecorator设置的props</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>footerButtons</td>\n<td>弹窗footer的按钮区，默认为确认和取消按钮，默认按钮分别响应onConfirm和onCancel方法，如果自定义设置footerButtons则需要自行传入onClick参数，onConfirm和onCancel方法将不生效</td>\n<td>array</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>弹窗关闭时调用，弹窗受控时由该方法将外部open状态修改</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onConfirm</td>\n<td>当footerButtons未自定义设置时点击确认按钮触发执行该方法，当其返回Promise点击后Promise，resolve之前确认按钮显示为loading状态，返回值为false或者Promise的resolve值为false时弹窗不会被关闭，其他情况弹窗默认关闭</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>和onConfirm类似，其为点击取消按钮触发</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>弹窗内容，可以为jsx或者function，为function时可以接收到close和withDecorator设置的props</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>withDecorator</td>\n<td>弹窗修饰器，会接收到弹窗children的render方法，可以在其外部添加修饰内容后执行render方法，给render方法传入的值可以在children,footer,rightOptions类型为function时接收到对应的参数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>rightOptions</td>\n<td>弹窗右侧区域，和children类似可以为jsx或者function类型</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>maskClosable</td>\n<td>点击蒙层是否允许关闭</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数参考antd Modal组件</p>\n<h3>useModal</h3>\n<p>获取一个执行后可以弹出一个Modal组件的方法</p>\n<h4>return:modal</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>modal</td>\n<td>执行后可以弹出一个Modal弹窗，参数同Modal组件参数</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>\n<h3>TabsModal</h3>\n<p>一个Tabs和Modal组合起来的组件，对弹窗title做了特殊处理，更加符合UI交互逻辑</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>items</td>\n<td>同antd Tabs的items参数</td>\n<td>array</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].label</td>\n<td>选项卡头显示文字</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].children</td>\n<td>选项卡头显示内容，和antd Tabs不同的是它可以是一个function和Modal的children类似可以接收items[].withDecorator传入的参数</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].key</td>\n<td>对应activeKey值</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>activeKey</td>\n<td>当前激活 tab 面板的 key</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>withDecorator</td>\n<td>弹窗修饰器和Modal的withDecorator作用一致</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>defaultActiveKey</td>\n<td>初始化选中面板的 key，如果没有设置 activeKey</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>切换面板的回调</td>\n<td>function</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>useTabsModal</h3>\n<p>获取一个执行后可以弹出一个TabsModal组件的方法</p>\n<h4>return:tabsModal</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tabsModal</td>\n<td>执行后可以弹出一个TabsModal弹窗，参数同TabsModal组件参数</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>\n<h3>ModalButton</h3>\n<p>点击以后可以执行获取数据，在数据未返回时按钮展示为loading状态，数据返回后弹出Modal弹窗</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>@kne/react-fetch 所需参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modalProps</td>\n<td>同Modal参数,当它为function时，执行function后返回的值作为modalProps</td>\n<td>object,function({data,fetchApi,close})</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数同antd Button 组件</p>\n<h3>TabsModalButton</h3>\n<p>点击以后可以执行获取数据，在数据未返回时按钮展示为loading状态，数据返回后弹出TabsModal弹窗</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>@kne/react-fetch 所需参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modalProps</td>\n<td>同TabsModal参数,当它为function时，执行function后返回的值作为modalProps</td>\n<td>object,function({data,fetchApi,close})</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数同antd Button 组件</p>`,\n    example: {\n        isFull: false,\n        className: `Modal_c59d6`,\n        style: ``,\n        list: [{\n    title: `普通弹窗`,\n    description: `展示弹窗的基本用法，自定义footer等功能。\n注意:\n1.onConfirm和onCancel只对于默认的footerButtons生效，如果是自定义的footerButtons则不需要传这两个参数，直接定义按钮的onClick即可。\n2.自定义的footerButtons的onClick可以返回一个Promise来延迟关闭弹窗，resolve的值为false不关闭弹窗，其他情况会自动关闭弹窗。在resolve未返回之前按钮会变成loading状态`,\n    code: `const { default: Modal, useModal } = _Modal;\nconst { useState } = React;\nconst { Button, Space, message, Radio } = antd;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  const modal = useModal();\n  const [size, setSize] = useState(\"default\");\n  const [open, setOpen] = useState(false);\n  return (\n    <Space direction=\"vertical\">\n      <Radio.Group\n        value={size}\n        options={[\n          { label: \"small\", value: \"small\" },\n          { label: \"default\", value: \"default\" },\n          {\n            label: \"large\",\n            value: \"large\",\n          },\n        ]}\n        onChange={(e) => {\n          setSize(e.target.value);\n        }}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n      <Space wrap>\n        <Modal\n          title=\"确定延迟关闭弹窗\"\n          size={size}\n          open={open}\n          onClose={() => {\n            setOpen(false);\n          }}\n          onConfirm={() => {\n            return new Promise((resolve) => {\n              message.success(\"弹窗1s后关闭\");\n              setTimeout(() => {\n                message.success(\"弹窗关闭\");\n                resolve();\n              }, 1000);\n            });\n          }}\n        >\n          <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>\n        </Modal>\n        <Button\n          onClick={() => {\n            setOpen(true);\n          }}\n        >\n          确定延迟关闭弹窗\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"hooks调用弹框\",\n              size,\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n            });\n          }}\n        >\n          hooks调用弹框\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"超高弹窗\",\n              size,\n              children: (\n                <div style={{ height: \"2000px\" }}>\n                  超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗\n                </div>\n              ),\n            });\n          }}\n        >\n          展示超高弹窗\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"自定义footer弹框\",\n              size,\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n              footer: ({ close }) => (\n                <Space>\n                  <span>自定义footer</span>\n                  <Button\n                    type=\"link\"\n                    onClick={() => {\n                      close();\n                    }}\n                  >\n                    关闭\n                  </Button>\n                </Space>\n              ),\n            });\n          }}\n        >\n          展示自定义footer弹框\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"无footer弹框\",\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n              footer: null,\n            });\n          }}\n        >\n          无footer弹框\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"自定义按钮组\",\n              size,\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n              footerButtons: [\n                {\n                  children: \"按钮一\",\n                },\n                {\n                  type: \"primary\",\n                  children: \"按钮二\",\n                },\n                {\n                  children: \"按钮三\",\n                },\n              ],\n            });\n          }}\n        >\n          自定义按钮组\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"有rightOptions的弹窗\",\n              size,\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n              rightOptions: <div>右侧内容右侧内容右侧内容右侧内容</div>,\n            });\n          }}\n        >\n          有rightOptions的弹窗\n        </Button>\n      </Space>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_90\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_91\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_92\n}]\n},{\n    title: `需要加载数据的弹窗`,\n    description: `可以通过withDecorator属性实现弹窗的加载数据或者加载远程组件的逻辑，在数据或者远程组件加载完成之前弹窗展示loading状态，加载完成之后children可以获取到加载的数据`,\n    code: `const { default: Modal, useModal } = _Modal;\nconst { useState } = React;\nconst { Button, Space } = antd;\nconst { default: Fetch } = fetch;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst BaseExample = () => {\n  const modal = useModal();\n  const [open, setOpen] = useState(false);\n  return (\n    <Space wrap>\n      <Modal\n        title=\"组件调用方式\"\n        withDecorator={(render) => (\n          <Fetch\n            loader={() => {\n              return new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve([\n                    {\n                      label: \"内容1\",\n                      content: \"内容1内容1内容1内容1内容1内容1内容1\",\n                    },\n                    {\n                      label: \"内容2\",\n                      content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n                    },\n                  ]);\n                }, 1000);\n              });\n            }}\n            render={({ data }) => render({ data })}\n          />\n        )}\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n      >\n        {({ data }) => <Content list={data} col={2} />}\n      </Modal>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        组件调用方式\n      </Button>\n      <Button\n        onClick={() => {\n          modal({\n            title: \"hooks调用方式\",\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        {\n                          label: \"内容1\",\n                          content: \"内容1内容1内容1内容1内容1内容1内容1\",\n                        },\n                        {\n                          label: \"内容2\",\n                          content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: ({ data }) => <Content list={data} col={2} />,\n          });\n        }}\n      >\n        hooks调用方式\n      </Button>\n      <Button\n        onClick={() => {\n          modal({\n            title: (props) => {\n              return \"hooks调用方式\";\n            },\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        {\n                          label: \"内容1\",\n                          content: \"内容1内容1内容1内容1内容1内容1内容1\",\n                        },\n                        {\n                          label: \"内容2\",\n                          content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: ({ data }) => <Content list={data} col={2} />,\n          });\n        }}\n      >\n        hooks title调用方式\n      </Button>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_90\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_91\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_92\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_93\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_94\n}]\n},{\n    title: `可以弹出弹窗的按钮`,\n    description: `可以点击按钮弹出弹窗，并且在弹窗弹出之前可以加载数据，加载数据时，按钮为loading状态，数据加载完成之后再弹出弹窗`,\n    code: `const { ModalButton, TabsModalButton } = _Modal;\nconst { Space } = antd;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\nconst { default: FormInfo, Input, TextArea } = _FormInfo;\n\nconst api = {\n  loader: () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve([\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n        ]);\n      }, 1000);\n    });\n  },\n};\n\nconst BaseExample = () => {\n  return (\n    <Space wrap>\n      <ModalButton\n        api={api}\n        modalProps={({ data }) => {\n          return {\n            title: \"加载数据的弹窗\",\n            children: <Content list={data} col={2} />,\n          };\n        }}\n      >\n        点击加载数据\n      </ModalButton>\n      <TabsModalButton\n        api={api}\n        modalProps={({ data }) => {\n          return {\n            items: data.map(({ label, content }, index) => {\n              return {\n                key: index,\n                children: content,\n                label,\n              };\n            }),\n          };\n        }}\n      >\n        点击加载数据的Tabs弹窗\n      </TabsModalButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_90\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_91\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_92\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_94\n},{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_95\n}]\n},{\n    title: `tabs弹窗`,\n    description: `展示一个tabs弹窗，tabs的选项的label会占据弹窗title位置，弹框的title将不显示\ntabs的items多加了withDecorator参数和Modal的withDecorator参数类似可以控制其外部显示及渲染内容\ntabs的items的children也可以是function，同样可以接收到TabsModal的withDecorator传回的参数`,\n    code: `const { TabsModal, useTabsModal } = _Modal;\nconst { useState } = React;\nconst { default: Fetch } = fetch;\nconst { Button, Space } = antd;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst BaseExample = () => {\n  const [open, setOpen] = useState(false);\n  const tabsModal = useTabsModal();\n  return <Space wrap>\n    <TabsModal open={open} onClose={() => {\n      setOpen(false);\n    }} items={[{\n      label: \"项目 1\", key: \"item-1\", children: <div>项目 1项目 1项目 1项目 1项目 1项目 1项目 1项目 1</div>\n    }, {\n      label: \"项目 2\", key: \"item-2\", children: <div>项目 2项目 2项目 2项目 2项目 2项目 2项目 2项目 2</div>\n    }]} rightOptions={<div>右边栏内容右边栏内容右边栏内容右边栏内容</div>}>\n      <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>\n    </TabsModal>\n    <Button onClick={() => {\n      setOpen(true);\n    }}>组件调用方式</Button>\n    <Button onClick={() => {\n      tabsModal({\n        rightOptions: <div>右边栏内容右边栏内容右边栏内容右边栏内容</div>, items: [{\n          label: \"项目 1\", key: \"item-1\", children: <div>项目 1项目 1项目 1项目 1项目 1项目 1项目 1项目 1</div>\n        }, {\n          label: \"项目 2\", key: \"item-2\", children: <div>项目 2项目 2项目 2项目 2项目 2项目 2项目 2项目 2</div>\n        }]\n      });\n    }}>hooks调用方式</Button>\n    <Button onClick={() => {\n      tabsModal({\n        title: \"此title不展示\",\n        rightOptions: ({ data }) => <Content list={data} />,\n        withDecorator: (render) => <Fetch loader={() => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve([{ label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" }, {\n                label: \"内容2\", content: \"内容2内容2内容2内容2内容2内容2内容2内容2\"\n              }]);\n            }, 1000);\n          });\n        }} render={({ data }) => render({ data })} />,\n        items: [{\n          label: \"项目 1\", key: \"item-1\", children: ({ data }) => <Content list={data} col={2} />\n        }, {\n          withDecorator: (render) => <Fetch loader={() => {\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve([{ label: \"内容3\", content: \"内容3内容3内容3内容3内容3内容3内容3\" }, {\n                  label: \"内容4\", content: \"内容4内容4内容4内容4内容4内容4内容4内容4\"\n                }]);\n              }, 1000);\n            });\n          }} render={({ data }) => render({ tabData: data })} />,\n          label: \"项目 2\",\n          key: \"item-2\",\n          children: ({ data, tabData }) => <Content list={[...data, ...tabData]} col={2} />\n        }]\n      });\n    }}>复杂数据加载</Button>\n  </Space>;\n};\n\nrender(<PureGlobal><BaseExample /></PureGlobal>);\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_90\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_91\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_92\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_93\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_94\n}]\n},{\n    title: `消息确认和提示`,\n    description: `展示确认消息提醒`,\n    code: `const { default: Modal, useConfirmModal } = _Modal;\nconst { useState } = React;\nconst { Button, Space, message } = antd;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  const confirmModal = useConfirmModal();\n  return (\n    <Space wrap>\n      <Button\n        onClick={() => {\n          confirmModal({\n            danger: true,\n            type: \"confirm\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        confirm\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"confirm\",\n            confirmType: \"warning\",\n            title: \"确定要编辑吗？\",\n            message:\n              \"确定要编辑确定要编辑确定要编辑确定要编辑确定要编辑确定要编辑确定要编辑\",\n          });\n        }}\n      >\n        confirm 警告\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"info\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        info\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"info\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        info无标题\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"success\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        success\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"warning\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        warning\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"error\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        error\n      </Button>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_90\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_91\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_92\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_93\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_94\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_96 from '@components/Navigation';\nimport * as component_97 from '@components/Global';\nimport * as component_98 from 'antd';\nconst readmeConfig = {\n    name: `Navigation`,\n    summary: `<h3>何时使用</h3>\n<p>系统的顶部导航，一级导航项偏左靠近 logo 放置，辅助菜单偏右放置。</p>\n<h3>特点</h3>\n<ul>\n<li>集成了Permissions权限判断，可以通过权限列表来判断导项是否显示</li>\n<li>在屏幕显示不了全部的一级导航时可以自动将后面的导航项收起到更多下拉菜单里面</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Navigation_84649`,\n        style: `.Navigation_84649 .fold-items {\n  width: 600px; }\n`,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Navigation } = _Navigation;\nconst { PureGlobal } = global;\n\nconst menuList = [\n  {\n    key: \"client\",\n    title: \"客户\",\n    path: \"/client\",\n    permission: \"client:client:look\",\n  },\n  {\n    key: \"position\",\n    title: \"职位\",\n    path: \"/position\",\n    permission: \"jd:job:look\",\n  },\n  {\n    key: \"ats\",\n    title: \"招聘流程\",\n    path: \"/ats\",\n  },\n  {\n    key: \"talent\",\n    title: \"人才库\",\n    permission: \"cv:cv:look\",\n    path: \"/talent\",\n  },\n  {\n    key: \"contract\",\n    title: \"合同\",\n    permission: \"contract:mgr:look\",\n    path: \"/contract\",\n  },\n  {\n    key: \"payment\",\n    title: \"付款信息\",\n    permission: \"payment:mgr:look\",\n    path: \"/payment\",\n  },\n  {\n    key: \"invoice-center\",\n    title: \"开票\",\n    permission: \"client:invoice:center\",\n    path: \"/invoice-center\",\n  },\n  {\n    key: \"invoice-manage\",\n    title: \"发票管理\",\n    permission: \"client:invoice:manager\",\n    path: \"/invoice-manage\",\n  },\n  {\n    key: \"setting\",\n    title: \"设置\",\n    permission: (permissions) =>\n      permissions.some(\n        (x) =>\n          [\n            \"system:permissions:mgr\",\n            \"system:org:mgr\",\n            \"system:user:mgr\",\n          ].indexOf(x) !== -1\n      ),\n    path: \"/setting\",\n  },\n];\n\nrender(\n  <PureGlobal>\n    <Navigation\n      list={menuList}\n      isFixed={false}\n      permissions={[\n        \"client:client:look\",\n        \"jd:job:look\",\n        \"cv:cv:look\",\n        \"contract:mgr:look\",\n        \"payment:mgr:look\",\n        \"client:invoice:center\",\n        \"client:invoice:manager\",\n        \"system:permissions:mgr\",\n      ]}\n    />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Navigation\",\n    packageName: \"@components/Navigation\",\n    component: component_96\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_97\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Navigation } = _Navigation;\nconst { PureGlobal } = global;\n\nconst menuList = [\n  {\n    key: \"client\",\n    title: \"客户\",\n    path: \"/client\",\n    permission: \"client:client:look\",\n  },\n  {\n    key: \"position\",\n    title: \"职位\",\n    path: \"/position\",\n    permission: \"jd:job:look\",\n  },\n  {\n    key: \"ats\",\n    title: \"招聘流程\",\n    path: \"/ats\",\n  },\n  {\n    key: \"talent\",\n    title: \"人才库\",\n    permission: \"cv:cv:look\",\n    path: \"/talent\",\n  },\n  {\n    key: \"contract\",\n    title: \"合同\",\n    permission: \"contract:mgr:look\",\n    path: \"/contract\",\n  },\n  {\n    key: \"payment\",\n    title: \"付款信息\",\n    permission: \"payment:mgr:look\",\n    path: \"/payment\",\n  },\n  {\n    key: \"invoice-center\",\n    title: \"开票\",\n    permission: \"client:invoice:center\",\n    path: \"/invoice-center\",\n  },\n  {\n    key: \"invoice-manage\",\n    title: \"发票管理\",\n    permission: \"client:invoice:manager\",\n    path: \"/invoice-manage\",\n  },\n  {\n    key: \"setting\",\n    title: \"设置\",\n    permission: (permissions) =>\n      permissions.some(\n        (x) =>\n          [\n            \"system:permissions:mgr\",\n            \"system:org:mgr\",\n            \"system:user:mgr\",\n          ].indexOf(x) !== -1\n      ),\n    path: \"/setting\",\n  },\n];\n\nrender(\n  <PureGlobal>\n    <div className=\"fold-items\">\n      <Navigation\n        isFixed={false}\n        list={menuList}\n        permissions={[\n          \"client:client:look\",\n          \"jd:job:look\",\n          \"cv:cv:look\",\n          \"contract:mgr:look\",\n          \"payment:mgr:look\",\n          \"client:invoice:center\",\n          \"client:invoice:manager\",\n          \"system:permissions:mgr\",\n        ]}\n      />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Navigation\",\n    packageName: \"@components/Navigation\",\n    component: component_96\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_97\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { useState } = React;\nconst { PureGlobal } = global;\nconst { default: Navigation } = _Navigation;\nconst { Checkbox, Space } = antd;\n\nconst menuList = [\n  {\n    key: \"client\",\n    title: \"客户\",\n    path: \"/client\",\n    permission: \"client:client:look\",\n  },\n  {\n    key: \"position\",\n    title: \"职位\",\n    path: \"/position\",\n    permission: \"jd:job:look\",\n  },\n  {\n    key: \"ats\",\n    title: \"招聘流程\",\n    path: \"/ats\",\n  },\n  {\n    key: \"talent\",\n    title: \"人才库\",\n    permission: \"cv:cv:look\",\n    path: \"/talent\",\n  },\n  {\n    key: \"contract\",\n    title: \"合同\",\n    permission: \"contract:mgr:look\",\n    path: \"/contract\",\n  },\n  {\n    key: \"payment\",\n    title: \"付款信息\",\n    permission: \"payment:mgr:look\",\n    path: \"/payment\",\n  },\n  {\n    key: \"invoice-center\",\n    title: \"开票\",\n    permission: \"client:invoice:center\",\n    path: \"/invoice-center\",\n  },\n  {\n    key: \"invoice-manage\",\n    title: \"发票管理\",\n    permission: \"client:invoice:manager\",\n    path: \"/invoice-manage\",\n  },\n  {\n    key: \"setting\",\n    title: \"设置\",\n    permission: (permissions) =>\n      permissions.some(\n        (x) =>\n          [\n            \"system:permissions:mgr\",\n            \"system:org:mgr\",\n            \"system:user:mgr\",\n          ].indexOf(x) !== -1\n      ),\n    path: \"/setting\",\n  },\n];\n\nconst Example = () => {\n  const [permissions, setPermissions] = useState([]);\n  return (\n    <PureGlobal>\n      <Space className=\"container\" direction=\"vertical\" size={32}>\n        <Navigation isFixed={false} list={menuList} permissions={permissions} />\n        <Checkbox.Group\n          value={permissions}\n          options={[\n            \"client:client:look\",\n            \"jd:job:look\",\n            \"cv:cv:look\",\n            \"contract:mgr:look\",\n            \"payment:mgr:look\",\n            \"client:invoice:center\",\n            \"client:invoice:manager\",\n            \"system:permissions:mgr\",\n          ]}\n          onChange={(values) => {\n            setPermissions(values);\n          }}\n        />\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"_Navigation\",\n    packageName: \"@components/Navigation\",\n    component: component_96\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_98\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_97\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_99 from '@components/Notification';\nimport * as component_100 from '@components/Global';\nimport * as component_101 from 'antd';\nconst readmeConfig = {\n    name: `Notification`,\n    summary: `<p>消息通知</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Notification_96d00`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Notification } = _Notification;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({ data: { code: 0, data: {} } });\n            }, 1000);\n          });\n        },\n        apis: {\n          notification: {},\n        },\n        global: {\n          notification: {\n            list: [\n              {\n                id: 1,\n                level: \"high\",\n                title:\n                  \"我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知\",\n                subtitle:\n                  \"通知标题通知标题通知标题通知标题通知标题通知标题通知标题通知标题\",\n                link: \"https://www.baidu.com\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                  {\n                    label: \"字段\",\n                    content:\n                      \"哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈\",\n                  },\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈\",\n                  },\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 2,\n                level: \"high\",\n                title: \"我是一个高级通知2\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 3,\n                level: \"high\",\n                title: \"我是一个高级通知3\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 4,\n                level: \"high\",\n                title: \"我是一个高级通知4\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 5,\n                level: \"low\",\n                title: \"我是一个低级通知\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 6,\n                level: \"low\",\n                title: \"我是一个低级通知2\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 7,\n                level: \"middle\",\n                title: \"我是一个中级通知\",\n                children: \"哈哈哈哈\",\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <Notification />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Notification\",\n    packageName: \"@components/Notification\",\n    component: component_99\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_100\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_101\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_102 from '@components/Permissions';\nimport * as component_103 from '@components/Global';\nimport * as component_104 from 'antd';\nconst readmeConfig = {\n    name: `Permissions`,\n    summary: `<h3>何时使用</h3>\n<p>在系统中存在一些功能和操作只允许某些角色用户使用，使用该组件可以让其包裹的组件或者区域根据系统的权限列表配置展示不同的状态</p>\n<h3>特点</h3>\n<p>通过在Global中的preset中设置permissions作为当前用户的权限列表，在Permissions组件配置permissions作为该功能要求具备的权限项，当要求具备的权限项全部在用户的权限列表中找到时为权限通过状态否则为权限不通过状态</p>\n<p>当权限不通过时，Permissions组件可以有三种方式呈现：</p>\n<ol>\n<li>用户可以看到操作功能的组件显示，但是不能进行操作，在鼠标移入时会以ToolTip提示错误原因，一般用在按钮等需要用户交互的功能位置</li>\n<li>用户不能看到操作功能或者数据呈现，对应区域显示错误原因，一般用在要数据展示等场景</li>\n<li>隐藏内部组件，一般用在不需要干扰到用户或用户不需要了解其没有权限的功能或数据等场景</li>\n</ol>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>类型，可选值为hidden，tooltip，error，分别为隐藏，气泡提示，错误提示三种形式</td>\n<td>string</td>\n<td>hidden</td>\n</tr>\n<tr>\n<td>tagName</td>\n<td>当前组件的tagName，同React.createElement的type参数，默认为span</td>\n<td>string</td>\n<td>span</td>\n</tr>\n<tr>\n<td>message</td>\n<td>提示文案</td>\n<td>string</td>\n<td>您暂无权限，请联系管理员</td>\n</tr>\n<tr>\n<td>request</td>\n<td>权限列表为一个字符串数组，每个item为一项权限的key，所有权限在全局的permissions中存在则判断为权限通过</td>\n<td>array[string]</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>children</td>\n<td>该参数可以传function类型，children({isPass, type, request})，isPass为权限校验是否通过，type为提示类型，request为所需权限列表，可以自行实现权限的展示</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Permissions_d08cc`,\n        style: `.Permissions_d08cc .box {\n  padding: 20px;\n  background: #f8f8f8; }\n`,\n        list: [{\n    title: `展示权限不通过的几种形式`,\n    description: `通过切换不同的type，可以预览三种不同type的表现形式`,\n    code: `const { default: Permissions } = _Permissions;\nconst { PureGlobal } = global;\nconst { Button, Radio, Space } = antd;\nconst { useState } = React;\n\nconst BaseExample = () => {\n  const [type, setType] = useState(\"tooltip\");\n  return (\n    <PureGlobal\n      preset={{\n        permissions: [\"permission_1\", \"permission_2\"],\n      }}\n    >\n      <Space direction=\"vertical\">\n        <Radio.Group\n          value={type}\n          options={[\n            { label: \"tooltip\", value: \"tooltip\" },\n            {\n              label: \"error\",\n              value: \"error\",\n            },\n            { label: \"hidden\", value: \"hidden\" },\n          ]}\n          onChange={(e) => {\n            setType(e.target.value);\n          }}\n          optionType=\"button\"\n          buttonStyle=\"solid\"\n        />\n        <Permissions type={type} request={[\"permission_3\"]}>\n          <div className=\"box\">\n            <Button onClick={() => console.log(\"执行操作\")}>操作</Button>\n          </div>\n        </Permissions>\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Permissions\",\n    packageName: \"@components/Permissions\",\n    component: component_102\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_103\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_104\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_105 from '@components/RichEditor';\nimport * as component_106 from '@components/RichEditor/doc/data.json';\nimport * as component_107 from 'antd';\nimport * as component_108 from '@components/Global';\nimport * as component_109 from '@kne/react-form-antd';\nconst readmeConfig = {\n    name: `RichEditor`,\n    summary: `<p>富文本编辑器 <em><strong>（已废弃请勿使用）</strong></em></p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hideToolbar</td>\n<td>是否隐藏工具栏</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>value</td>\n<td>-</td>\n<td>object</td>\n<td>null</td>\n</tr>\n<tr>\n<td>readOnly</td>\n<td>是否只读</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>preview</td>\n<td>是否预览模式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>border</td>\n<td>是否显示border</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `RichEditor_801c7`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const RichEditor = _RichEditor.default.field;\nconst { Button } = antd;\nconst { useState } = React;\nconst { PureGlobal: Global } = global;\nconst BaseExample = () => {\n  // const data = {\"ops\": [{\"insert\": {\"image\": \"http://localhost:3001/ui_components/mock/xasdXsdgszxq-Zsdsrw.png?originalName=WechatIMG22%E5%89%AF%E6%9C%AC.jpg&id=xDBhiYMBxoTGC6WmoMbu\"}}]};\n  const data = \"<p>sdfasfsdf</p>\";\n  const [text, setText] = useState(data);\n  return (\n    <Global\n      preset={{\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        uploadFile: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id: \"xDBhiYMBxoTGC6WmoMbu\",\n                    originalName: \"WechatIMG22副本.jpg\",\n                  },\n                },\n              });\n            });\n          });\n        },\n        ossToStatic: ({ file, folder }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        urlToOss: ({ url, folder = \"richEditor\" }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        ajax: (config) => {\n          console.log(config);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: \"/ui_components/mock/xasdXsdgszxq-Zsdsrw.png\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n    >\n      <RichEditor type={\"html\"} value={text} onChange={setText} />\n      <div>值：{text ? JSON.stringify(text, null, 2) : \"\"}</div>\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_RichEditor\",\n    packageName: \"@components/RichEditor\",\n    component: component_105\n},{\n    name: \"data\",\n    packageName: \"@components/RichEditor/doc/data.json\",\n    component: component_106\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_107\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_108\n}]\n},{\n    title: `只读模式`,\n    description: `展示只读模式`,\n    code: `const RichEditor = _RichEditor.default.field;\nconst { Button } = antd;\nconst { useState } = React;\nconst { PureGlobal: Global } = global;\nconst BaseExample = () => {\n  const data = {\n    ops: [\n      { insert: \"Gandalf\", attributes: { bold: true } },\n      { insert: \" the \" },\n      { insert: \"Grey\", attributes: { color: \"#cccccc\" } },\n    ],\n  };\n  return (\n    <Global\n      preset={{\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n        },\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        uploadFile: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id: \"xDBhiYMBxoTGC6WmoMbu\",\n                    originalName: \"WechatIMG22副本.jpg\",\n                  },\n                },\n              });\n            });\n          });\n        },\n        ossToStatic: ({ file, folder }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        urlToOss: ({ url, folder = \"richEditor\" }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        ajax: (config) => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: \"/ui_components/mock/xasdXsdgszxq-Zsdsrw.png\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n    >\n      <RichEditor value={data} readOnly={true} />\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_RichEditor\",\n    packageName: \"@components/RichEditor\",\n    component: component_105\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_107\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_108\n}]\n},{\n    title: `在表单中使用`,\n    description: `展示在表单中使用`,\n    code: `const RichEditor = _RichEditor.default;\nconst { default: Form, SubmitButton } = reactForm;\nconst { PureGlobal: Global } = global;\n\nconst BaseExample = () => {\n  const data = {\n    ops: [\n      { insert: \"Gandalf\", attributes: { bold: true } },\n      { insert: \" the \" },\n      { insert: \"Grey\", attributes: { color: \"#cccccc\" } },\n    ],\n  };\n  return (\n    <Global\n      preset={{\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n        },\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        uploadFile: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id: \"xDBhiYMBxoTGC6WmoMbu\",\n                    originalName: \"WechatIMG22副本.jpg\",\n                  },\n                },\n              });\n            });\n          });\n        },\n        ossToStatic: ({ file, folder }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        urlToOss: ({ url, folder = \"richEditor\" }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        ajax: (config) => {\n          console.log(config);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: \"/ui_components/mock/eXur9YEBzBdA-Vkwaigw.png\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n    >\n      <Form\n        data={{\n          des: data,\n        }}\n        onSubmit={(data) => {\n          console.log(data);\n        }}\n      >\n        <RichEditor name=\"des\" label=\"描述\" />\n        <div>\n          <SubmitButton>提交</SubmitButton>\n        </div>\n      </Form>\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_RichEditor\",\n    packageName: \"@components/RichEditor\",\n    component: component_105\n},{\n    name: \"reactForm\",\n    packageName: \"@kne/react-form-antd\",\n    component: component_109\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_108\n}]\n},{\n    title: `支持Editor格式数据`,\n    description: `支持Editor格式数据`,\n    code: `const RichEditor = _RichEditor.default.field;\nconst { PureGlobal: Global } = global;\nconst { default: value } = data;\nconst { useState } = React;\n\nconst BaseExample = () => {\n  const [text, setText] = useState(value);\n  return (\n    <Global\n      preset={{\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        uploadFile: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id: \"xDBhiYMBxoTGC6WmoMbu\",\n                    originalName: \"WechatIMG22副本.jpg\",\n                  },\n                },\n              });\n            });\n          });\n        },\n        ossToStatic: ({ file, folder }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        urlToOss: ({ url, folder = \"richEditor\" }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        ajax: (config) => {\n          console.log(config);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: \"/ui_components/mock/xasdXsdgszxq-Zsdsrw.png\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n    >\n      <RichEditor value={text} onChange={setText} />\n      <div>转换后值：{JSON.stringify(text, null, 2)}</div>\n      <div>原始值：{JSON.stringify(value, null, 2)}</div>\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_RichEditor\",\n    packageName: \"@components/RichEditor\",\n    component: component_105\n},{\n    name: \"data\",\n    packageName: \"@components/RichEditor/doc/data.json\",\n    component: component_106\n},{\n    name: \"reactForm\",\n    packageName: \"@kne/react-form-antd\",\n    component: component_109\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_108\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_118 from '@components/StateBar';\nimport * as component_119 from 'antd';\nconst readmeConfig = {\n    name: `StateBar`,\n    summary: `<p>用于 State Bar</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>stateOption</td>\n<td>state操作列表</td>\n<td>string</td>\n<td>{key: string, tab: ReactNode}[]</td>\n</tr>\n<tr>\n<td>activeKey</td>\n<td>当前激活 tab 面板的 key</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>type</td>\n<td>当前tab展示样式</td>\n<td>'tab'、'radio'、'step'</td>\n<td>'tab'</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>事件返回选中的key</td>\n<td>(value: string) =&gt; void</td>\n<td></td>\n</tr>\n<tr>\n<td>tabBarExtraContent</td>\n<td>展示在state bar右侧</td>\n<td>ReactNode</td>\n<td>null</td>\n</tr>\n<tr>\n<td>isInner</td>\n<td>底部线延展至总长</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3>Mapping</h3>\n<h4>stateOption</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>对应 activeKey</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>tab</td>\n<td>选项卡头显示文字</td>\n<td>ReactNode</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `StateBar_de00a`,\n        style: ``,\n        list: [{\n    title: `State Bar`,\n    description: `State Bar`,\n    code: `const { default: StateBar } = _StateBar;\nconst { Button, Radio, Space } = antd;\nconst { useState } = React;\n\nconst BaseExample = () => {\n  const [size, setSize] = useState(\"default\");\n  const [isInner, setIsInner] = useState(false);\n  return (\n    <Space direction=\"vertical\">\n      <Radio.Group\n        value={isInner}\n        options={[\n          { label: \"inner\", value: true },\n          { label: \"normal\", value: false },\n        ]}\n        onChange={(e) => {\n          setIsInner(e.target.value);\n        }}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n      <Radio.Group\n        value={size}\n        options={[\n          { label: \"small\", value: \"small\" },\n          { label: \"default\", value: \"default\" },\n          { label: \"large\", value: \"large\" },\n        ]}\n        onChange={(e) => {\n          setSize(e.target.value);\n        }}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n      <StateBar\n        size={size}\n        isInner={isInner}\n        stateOption={[\n          { tab: \"全部\", key: \"1\" },\n          { tab: \"科目一\", key: \"2\" },\n          {\n            tab: \"科目二\",\n            key: \"3\",\n          },\n          { tab: \"科目三\", key: \"4\" },\n          { tab: \"科目四\", key: \"5\" },\n        ]}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateBar\",\n    packageName: \"@components/StateBar\",\n    component: component_118\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_119\n}]\n},{\n    title: `Radio State Bar`,\n    description: `Radio State Bar`,\n    code: `const { default: StateBar } = _StateBar;\nconst { Radio, Space } = antd;\nconst { useState } = React;\n\nconst BaseStateExample = () => {\n  const [size, setSize] = useState(\"default\");\n  return (\n    <Space direction=\"vertical\">\n      <Radio.Group\n        value={size}\n        options={[\n          { label: \"small\", value: \"small\" },\n          { label: \"default\", value: \"default\" },\n          { label: \"large\", value: \"large\" },\n        ]}\n        onChange={(e) => {\n          setSize(e.target.value);\n        }}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n      <StateBar\n        size={size}\n        type=\"radio\"\n        stateOption={[\n          { tab: \"全部\", key: \"1\" },\n          { tab: \"科目一\", key: \"2\" },\n          { tab: \"科目二\", key: \"3\" },\n          { tab: \"科目三\", key: \"4\" },\n          { tab: \"科目四\", key: \"5\" },\n          { tab: \"科目一1\", key: \"22\" },\n          { tab: \"科目二2\", key: \"33\" },\n          { tab: \"科目三3\", key: \"44\" },\n          { tab: \"科目四4\", key: \"55\", style: { cursor: \"copy\" } },\n        ]}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseStateExample />);\n\n`,\n    scope: [{\n    name: \"_StateBar\",\n    packageName: \"@components/StateBar\",\n    component: component_118\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_119\n}]\n},{\n    title: `Step State Bar`,\n    description: `Step State Bar`,\n    code: `const { default: StateBar } = _StateBar;\n\nconst BaseStateExample = () => {\n  return (\n    <StateBar\n      type=\"step\"\n      stateOption={[\n        { tab: \"全部\", key: \"1\" },\n        { tab: \"科目一\", key: \"2\" },\n        { tab: \"科目二\", key: \"3\" },\n        { tab: \"科目三\", key: \"4\" },\n        { tab: \"科目四\", key: \"5\" },\n        { tab: \"科目一1\", key: \"22\" },\n        { tab: \"科目二2\", key: \"33\" },\n        { tab: \"科目三3\", key: \"44\" },\n        { tab: \"科目四4\", key: \"55\", className: \"last\" },\n      ]}\n      tabBarExtraContent={<div>测试</div>}\n    />\n  );\n};\n\nrender(<BaseStateExample />);\n\n`,\n    scope: [{\n    name: \"_StateBar\",\n    packageName: \"@components/StateBar\",\n    component: component_118\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_110 from '@components/StateTag';\nimport * as component_111 from '@components/Descriptions';\nimport * as component_112 from 'lodash';\nconst readmeConfig = {\n    name: `StateTag`,\n    summary: `<p>用于展示标签</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>tag的类型，类型决定显示的颜色</td>\n<td>'default'(#666666)、'skill'(#666666)(此时边框颜色为 #EEEEEE)、'success'(#027A48)、'progress'(#F09700)、'danger'(#D14343)、'info'(#155ACF)、'other'(#6740C3)(待定颜色)、'result'(#666666)、'filterResult'(#5CB8B2)</td>\n<td>'default'</td>\n</tr>\n<tr>\n<td>showBorder</td>\n<td>是否展示边框</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>showBackground</td>\n<td>是否展示背景色</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>text</td>\n<td>tag文案</td>\n<td>string</td>\n<td>''</td>\n</tr>\n<tr>\n<td>filterName</td>\n<td>tag类型为“filterResult”时显示在前边的文案</td>\n<td>string</td>\n<td>''</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数参考 <a href=\"https://ant.design/components/tag-cn\">antd Tag.Tag</a></p>`,\n    example: {\n        isFull: true,\n        className: `StateTag_cfeaa`,\n        style: ``,\n        list: [{\n    title: `基本示例`,\n    description: `状态标签`,\n    code: `const { default: StateTag } = _StateTag;\nconst { default: Descriptions } = _Descriptions;\nconst { range } = lodash;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <div>使用场景: 列表页Table,简历详情页</div>\n      <br />\n      <Descriptions\n        dataSource={[\n          [\n            { label: \"使用规则\", content: \"待XX，暂停\" },\n            { label: \"代码示例\", content: \\`{type: \"info\", text: \"标签内容\"}\\` },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"info\", text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: <StateTag {...{ type: \"info\", text: \"待提交开票\" }} />,\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"XX中，正在XX中\" },\n            {\n              label: \"代码示例\",\n              content: \\`{type: \"progress\", text: \"退票审核中\"}\\`,\n            },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"progress\", text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: (\n                <StateTag {...{ type: \"progress\", text: \"退票审核中\" }} />\n              ),\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"通过，成功，完成\" },\n            {\n              label: \"代码示例\",\n              content: \\`{type: \"success\", text: \"标签内容\"}\\`,\n            },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"success\", text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: <StateTag {...{ type: \"success\", text: \"标签内容\" }} />,\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"不通过，失败，淘汰，缺席，拒绝\" },\n            {\n              label: \"代码示例\",\n              content: \\`{type: \"danger\", text: \"退票拒绝\"}\\`,\n            },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"danger\", text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: <StateTag {...{ type: \"danger\", text: \"退票拒绝\" }} />,\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"取消，撤销，停止\" },\n            { label: \"代码示例\", content: \\`{text: \"撤销开票审核\"}\\` },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: <StateTag {...{ text: \"撤销开票审核\" }} />,\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"（暂时还未用到）\" },\n            { label: \"代码示例\", content: \\`{type: \"other\", text: \"标签内容\"}\\` },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"other\", text: \"标签内容\" }} />,\n            },\n          ],\n        ]}\n      />\n      <br />\n      <br />\n      <div>个别特殊场景（需要单独询问UI):</div>\n      <br />\n      <Descriptions\n        dataSource={[\n          [\n            { label: \"使用规则\", content: \"待XX，暂停\" },\n            {\n              label: \"示例\",\n              content: (\n                <div>\n                  <StateTag {...{ type: \"success\", text: \"已推荐简历\" }} />\n                  <StateTag {...{ type: \"success\", text: \"已退票\" }} />\n                </div>\n              ),\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"已XX待XX\" },\n            {\n              label: \"示例\",\n              content: (\n                <div>\n                  <StateTag {...{ type: \"success\", text: \"已开票待寄出\" }} />\n                  <StateTag {...{ type: \"success\", text: \"已待寄待收款\" }} />\n                </div>\n              ),\n            },\n          ],\n          [\n            {\n              label: \"使用规则\",\n              content: \"已XX+词语：根据后面的词语语义进行判断\",\n            },\n            {\n              label: \"示例\",\n              content: (\n                <div>\n                  <StateTag {...{ type: \"success\", text: \"已成功\" }} />\n                  <StateTag {...{ type: \"default\", text: \"已取消\" }} />\n                  <StateTag {...{ type: \"danger\", text: \"已失败\" }} />\n                  <StateTag {...{ type: \"progress\", text: \"已暂停\" }} />\n                </div>\n              ),\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"完全根据语义语境判断\" },\n            {\n              label: \"示例\",\n              content: (\n                <div>\n                  <StateTag {...{ type: \"success\", text: \"全部到款\" }} />\n                  <StateTag {...{ type: \"success\", text: \"部分到款\" }} />\n                  <StateTag {...{ type: \"success\", text: \"简历亮点\" }} />\n                  <StateTag {...{ type: \"danger\", text: \"简历风险点\" }} />\n                </div>\n              ),\n            },\n          ],\n        ]}\n      />\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_110\n},{\n    name: \"_Descriptions\",\n    packageName: \"@components/Descriptions\",\n    component: component_111\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_112\n}]\n},{\n    title: `基本示例`,\n    description: `技能标签`,\n    code: `const { default: StateTag } = _StateTag;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <StateTag\n        text={\"技能标签\"}\n        type={\"skill\"}\n        showBorder\n        showBackground={false}\n      />\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_110\n}]\n},{\n    title: `基本示例`,\n    description: `下拉菜单、弹窗中已选结果标签`,\n    code: `const { default: StateTag } = _StateTag;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <StateTag\n        text={\"技能标签\"}\n        type={\"result\"}\n        showBackground={false}\n        closable\n        onClose={() => console.log(\"close\")}\n      />\n      <StateTag\n        text={\"技能标签\"}\n        type={\"result\"}\n        closable\n        onClose={() => console.log(\"close\")}\n      />\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_110\n}]\n},{\n    title: `基本示例`,\n    description: `筛选组件中筛选结果标签`,\n    code: `const { default: StateTag } = _StateTag;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <StateTag\n        filterName={\"BD\"}\n        text={\"陈枫林，王晓晨\"}\n        type={\"filterResult\"}\n        closable\n        onClose={() => console.log(\"close\")}\n      />\n      <br />\n      <StateTag\n        filterName={\"添加人\"}\n        text={\"陈枫林，王晓晨，陈路，张力\"}\n        type={\"filterResult\"}\n        closable\n        onClose={() => console.log(\"close\")}\n      />\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_110\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_113 from '@components/Table';\nimport * as component_114 from '@components/Global';\nimport * as component_115 from '@kne/react-fetch';\nimport * as component_116 from 'lodash';\nimport * as component_117 from 'antd';\nconst readmeConfig = {\n    name: `Table`,\n    summary: `<p>可以从后端获取数据，然后展示为一个表格</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Table_51c45`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Table } = _Table;\nconst { PureGlobal } = _Global;\nconst { preset } = reactFetch;\n\nconst ajax = (config) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      if (config.url === \"/api/v1/user/user/user_key_get\") {\n        resolve({\n          data: {\n            code: 0,\n            data: \\`{\"date\":{\"visible\":false},\"serialNumber\":{\"width\":400}}\\`,\n          },\n        });\n      } else if (config.url === \"/api/v1/user/user/user_key_set\") {\n        console.log(config.data);\n        resolve({\n          data: {\n            code: 0,\n            data: \"\",\n          },\n        });\n      }\n    }, 100);\n  });\n};\n\npreset({\n  ajax,\n});\n\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax,\n        tableServerApis: {\n          getDataApi: (name) => {\n            return {\n              url: \"/api/v1/user/user/user_key_get\",\n              method: \"GET\",\n              params: {\n                key: \\`table_config_v2_\\${name}\\`,\n              },\n              transformResponse: (response) => {\n                const { data } = response;\n                response.data = Object.assign({}, data, {\n                  data: (() => {\n                    try {\n                      return JSON.parse(data.data);\n                    } catch (e) {\n                      return [];\n                    }\n                  })(),\n                });\n\n                response.data = {\n                  code: response.data.code === 0 ? 200 : data.code,\n                  msg: response.data.msg,\n                  results: response.data.data,\n                };\n\n                return response;\n              },\n              cache: \"TABLE_PAGE_CONFIG\",\n            };\n          },\n          setDataFunc: (name, data) => {\n            return ajax({\n              url: \"/api/v1/user/user/user_key_set\",\n              data: {\n                map: {\n                  [\\`table_config_v2_\\${name}\\`]: JSON.stringify(data),\n                },\n              },\n            });\n          },\n        },\n      }}\n    >\n      <Table\n        name=\"test-table\"\n        onTablePropsReady={({ columns, dataSource }) => {\n          console.log({ columns, dataSource });\n        }}\n        dataSource={[\n          {\n            id: 0,\n            date: \"2021-07-21\",\n            datetime: \"2023-07-22 09:00:00\",\n            serialNumber: \"SX00192932323434\",\n            serialNumberShort: \"SH0023\",\n            userName: \"林珊珊\",\n            title: \"我是主要字段\",\n            tagEnum: null,\n            enUserName: \"Lin Shanshan\",\n            phoneNumber: \"+86 18792877372\",\n            email: \"a@a.com\",\n            count: 4,\n            description:\n              \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n            description2:\n              \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n            other: \"其他信息\",\n          },\n          {\n            id: 1,\n            date: \"\",\n            datetime: \"2023-07-22 09:00:00\",\n            serialNumber: \"SX00192932323434\",\n            serialNumberShort: \"SH0023\",\n            userName: \"林珊珊1\",\n            title: \"我是主要字段\",\n            tagEnum: \"Y\",\n            enUserName: \"Lin Shanshan\",\n            phoneNumber: null,\n            email: \"a@a.com\",\n            count: 5,\n            description: \"我是一段描述\",\n            description2: \"我是一段描述\",\n            other: \"其他信息\",\n          },\n        ]}\n        columns={[\n          {\n            name: \"date\",\n            title: \"日期\",\n            type: \"date\",\n            hover: true,\n          },\n          {\n            name: \"datetime\",\n            title: \"日期时间\",\n            type: \"datetime\",\n            hideSecond: true,\n          },\n          {\n            name: \"serialNumber\",\n            title: \"编号\",\n            type: \"serialNumber\",\n            primary: true,\n            onClick: async (item) => {\n              console.log(item);\n              return new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve(true);\n                }, 10000);\n              });\n            },\n          },\n          {\n            name: \"serialNumberShort\",\n            title: \"短编号\",\n            type: \"serialNumberShort\",\n          },\n          {\n            name: \"title\",\n            title: \"主要信息\",\n            type: \"mainInfo\",\n          },\n          {\n            name: \"tag\",\n            title: \"状态标签\",\n            type: \"tag\",\n            valueOf: () => ({ type: \"success\", text: \"审核通过\" }),\n          },\n          {\n            name: \"tagEnum\",\n            title: \"标签枚举\",\n            type: \"tag\",\n            valueOf: (item) =>\n              item.tagEnum && {\n                type: \"success\",\n                isEnum: true,\n                moduleName: \"marital\",\n                name: item.tagEnum,\n              },\n          },\n          {\n            name: \"avatar\",\n            title: \"头像\",\n            type: \"avatar\",\n            valueOf: () => ({ gender: \"F\" }),\n          },\n          {\n            name: \"user\",\n            title: \"用户\",\n            type: \"user\",\n            valueOf: (item) => \\`\\${item.enUserName} \\${item.userName}\\`,\n          },\n          {\n            name: \"hideInfo\",\n            title: \"隐藏字段\",\n            type: \"hideInfo\",\n            valueOf: (item) =>\n              item[\"phoneNumber\"] && {\n                loader: () => {\n                  return item[\"phoneNumber\"] + \"-\" + item[\"id\"];\n                },\n              },\n          },\n          {\n            name: \"userName\",\n            title: \"用户名\",\n            type: \"userName\",\n          },\n          {\n            name: \"contacts\",\n            title: \"联系人\",\n            type: \"contacts\",\n            valueOf: (item) => \\`\\${item.userName} \\${item.phoneNumber}\\`,\n          },\n          {\n            name: \"count\",\n            title: \"数量\",\n            type: \"singleRow\",\n            render: ({ target }) => {\n              return target.count === 5 ? { hover: true } : { hover: false };\n            },\n          },\n          {\n            name: \"description\",\n            title: \"描述\",\n            type: \"description\",\n          },\n          {\n            name: \"description2\",\n            title: \"描述(省略)\",\n            type: \"description\",\n            ellipsis: true,\n          },\n          {\n            name: \"other\",\n            title: \"其他\",\n            type: \"other\",\n            hover: true,\n          },\n          {\n            name: \"options\",\n            title: \"操作\",\n            type: \"options\",\n            valueOf: (item) => [\n              {\n                onClick: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                },\n                children: \"分配\",\n                message: \"确定要分配吗\",\n                isDelete: false,\n              },\n              {\n                children: \"审核\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"淘汰\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"一键约面\",\n              },\n              {\n                children: \"删除\",\n                confirm: true,\n                onClick: () => {\n                  console.log(\"删除\");\n                },\n              },\n            ],\n          },\n        ]}\n      />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Table\",\n    packageName: \"@components/Table\",\n    component: component_113\n},{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_114\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_115\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { PureGlobal } = _Global;\nconst { TablePage } = _Table;\nconst { range } = lodash;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        features: {\n          debug: true,\n          profile: {\n            id: \"erc\",\n            type: \"system\",\n            name: \"业务系统\",\n            children: [\n              {\n                id: \"test\",\n                type: \"feature\",\n                name: \"测试功能\",\n                options: {\n                  hiddenColumns: [\"date\", \"datetime\"],\n                },\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <TablePage\n        featureId=\"test\"\n        sticky={false}\n        loader={() => {\n          return {\n            addUserName: \"我是大魔王\",\n            pageData: range(0, 50).map((index) => ({\n              id: index,\n              date: \"2021-07-21\",\n              datetime: \"2023-07-22 09:00:00\",\n              serialNumber: \"SX00192932323434\",\n              serialNumberShort: \"SH0023\",\n              userName: \"林珊珊\" + index,\n              title: \"我是主要字段\",\n              enUserName: \"Lin Shanshan\",\n              phoneNumber: \"+86 18792877372\",\n              email: \"a@a.com\",\n              count: 5,\n              description:\n                \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n              other: \"其他信息\",\n            })),\n            totalCount: 50,\n          };\n        }}\n        columns={[\n          {\n            name: \"date\",\n            title: \"日期\",\n            type: \"date\",\n            hover: true,\n          },\n          {\n            name: \"datetime\",\n            title: \"日期时间\",\n            type: \"datetime\",\n          },\n          {\n            name: \"dateRange\",\n            title: \"日期范围\",\n            type: \"dateRange\",\n            valueOf: ({ date, datetime }) => [date, datetime],\n          },\n          {\n            name: \"serialNumber\",\n            title: \"编号\",\n            type: \"serialNumber\",\n            primary: true,\n          },\n          {\n            name: \"serialNumberShort\",\n            title: \"短编号\",\n            type: \"serialNumberShort\",\n          },\n          {\n            name: \"title\",\n            title: \"主要信息\",\n            type: \"mainInfo\",\n          },\n          {\n            name: \"phone\",\n            title: \"手机号\",\n            type: \"hideInfo\",\n            primary: true,\n            valueOf: (item) => ({\n              loader: () => {\n                return item[\"phoneNumber\"] + \"-\" + item[\"id\"];\n              },\n            }),\n          },\n          {\n            name: \"email\",\n            title: \"邮箱\",\n            type: \"hideInfo\",\n            valueOf: (item) => ({\n              loader: () => {\n                return item[\"email\"] + \"-\" + item[\"id\"];\n              },\n              children: (data) => {\n                return \\`\\${data},\\${item[\"userName\"]}\\`;\n              },\n            }),\n          },\n          {\n            name: \"tag\",\n            title: \"状态标签\",\n            type: \"tag\",\n            valueOf: () => ({ type: \"success\", text: \"审核通过\" }),\n          },\n          {\n            name: \"avatar\",\n            title: \"头像\",\n            type: \"avatar\",\n            valueOf: () => ({ gender: \"F\" }),\n          },\n          {\n            name: \"user\",\n            title: \"用户\",\n            type: \"user\",\n            valueOf: (item) => \\`\\${item.enUserName} \\${item.userName}\\`,\n          },\n          {\n            name: \"userName\",\n            title: \"用户名\",\n            type: \"userName\",\n          },\n          {\n            name: \"contacts\",\n            title: \"联系人\",\n            type: \"contacts\",\n            valueOf: (item) => \\`\\${item.userName} \\${item.phoneNumber}\\`,\n          },\n          {\n            name: \"count\",\n            title: \"数量\",\n            type: \"singleRow\",\n          },\n          {\n            name: \"description\",\n            title: \"描述(省略)\",\n            type: \"description\",\n            ellipsis: true,\n          },\n          {\n            name: \"other\",\n            title: \"其他\",\n            type: \"other\",\n            hover: true,\n          },\n          {\n            name: \"addUser\",\n            title: \"添加人\",\n            type: \"user\",\n            render: ({ data }) => ({ valueOf: () => data.addUserName }),\n          },\n          {\n            name: \"options\",\n            title: \"操作\",\n            type: \"options\",\n            fixed: \"right\",\n            valueOf: (item) => [\n              {\n                onClick: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                },\n                children: \"编辑\",\n                disabled: true,\n              },\n              {\n                children: \"审核\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"淘汰\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"一键约面\",\n              },\n              {\n                children: \"删除\",\n              },\n            ],\n          },\n        ]}\n      />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Table\",\n    packageName: \"@components/Table\",\n    component: component_113\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_116\n},{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_114\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Table } = _Table;\nconst { PureGlobal } = _Global;\nconst { preset } = reactFetch;\nconst { useState } = React;\nconst { Input } = antd;\nconst ajax = (config) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      if (config.url === \"/api/v1/user/user/user_key_get\") {\n        resolve({\n          data: {\n            code: 0,\n            data: \\`{\"date\":{},\"serialNumber\":{\"width\":400}}\\`,\n          },\n        });\n      } else if (config.url === \"/api/v1/user/user/user_key_set\") {\n        console.log(config.data);\n        resolve({\n          data: {\n            code: 0,\n            data: \"\",\n          },\n        });\n      }\n    }, 100);\n  });\n};\n\npreset({\n  ajax,\n});\n\nconst ValueEdit = ({ value, targetRender }) => {\n  const [isEdit, setIsEdit] = useState(false);\n  return (\n    <span\n      onClick={() => {\n        setIsEdit(true);\n      }}\n    >\n      {isEdit ? (\n        <Input\n          type=\"text\"\n          size=\"small\"\n          defaultValue={value}\n          onBlur={() => {\n            setIsEdit(false);\n          }}\n        />\n      ) : (\n        targetRender(value)\n      )}\n    </span>\n  );\n};\n\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax,\n        tableServerApis: {\n          getDataApi: (name) => {\n            return {\n              url: \"/api/v1/user/user/user_key_get\",\n              method: \"GET\",\n              params: {\n                key: \\`table_config_v2_\\${name}\\`,\n              },\n              transformResponse: (response) => {\n                const { data } = response;\n                response.data = Object.assign({}, data, {\n                  data: (() => {\n                    try {\n                      return JSON.parse(data.data);\n                    } catch (e) {\n                      return [];\n                    }\n                  })(),\n                });\n\n                response.data = {\n                  code: response.data.code === 0 ? 200 : data.code,\n                  msg: response.data.msg,\n                  results: response.data.data,\n                };\n\n                return response;\n              },\n              cache: \"TABLE_PAGE_CONFIG\",\n            };\n          },\n          setDataFunc: (name, data) => {\n            return ajax({\n              url: \"/api/v1/user/user/user_key_set\",\n              data: {\n                map: {\n                  [\\`table_config_v2_\\${name}\\`]: JSON.stringify(data),\n                },\n              },\n            });\n          },\n        },\n      }}\n    >\n      <Table\n        name=\"test-table\"\n        dataSource={[\n          {\n            id: 0,\n            date: \"2021-07-21\",\n            datetime: \"2023-07-22 09:00:00\",\n            serialNumber: \"SX00192932323434\",\n            serialNumberShort: \"SH0023\",\n            userName: \"林珊珊\",\n            title: \"我是主要字段\",\n            tagEnum: \"Y\",\n            enUserName: \"Lin Shanshan\",\n            phoneNumber: \"+86 18792877372\",\n            email: \"a@a.com\",\n            count: 4,\n            description:\n              \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n            description2:\n              \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n            other: \"其他信息\",\n          },\n          {\n            id: 1,\n            date: \"\",\n            datetime: \"2023-07-22 09:00:00\",\n            serialNumber: \"SX00192932323434\",\n            serialNumberShort: \"SH0023\",\n            userName: \"林珊珊1\",\n            title: \"我是主要字段\",\n            tagEnum: \"Y\",\n            enUserName: \"Lin Shanshan\",\n            phoneNumber: \"+86 18792877372\",\n            email: \"a@a.com\",\n            count: 5,\n            description: \"我是一段描述\",\n            description2: \"我是一段描述\",\n            other: \"其他信息\",\n          },\n        ]}\n        columns={[\n          {\n            name: \"date\",\n            title: \"日期\",\n            sort: true,\n            groupHeader: [\n              {\n                name: \"group1\",\n                title: \"分组1\",\n              },\n              {\n                name: \"group1-1\",\n                title: \"分组1-1\",\n              },\n            ],\n            type: \"date\",\n            hover: true,\n          },\n          {\n            name: \"datetime\",\n            title: \"日期时间\",\n            sort: true,\n            groupHeader: [\n              {\n                name: \"group1\",\n                title: \"分组1\",\n              },\n              {\n                name: \"group1-2\",\n                title: \"分组1-2\",\n              },\n            ],\n            type: \"datetime\",\n          },\n          {\n            name: \"serialNumber\",\n            title: \"编号\",\n            sort: true,\n            groupHeader: [\n              {\n                name: \"group1\",\n                title: \"分组1\",\n              },\n              {\n                name: \"group1-1\",\n                title: \"分组1-1\",\n              },\n            ],\n            type: \"serialNumber\",\n            primary: true,\n          },\n          {\n            name: \"serialNumberShort\",\n            title: \"短编号\",\n            type: \"serialNumberShort\",\n          },\n          {\n            name: \"title\",\n            title: \"主要信息\",\n            type: \"mainInfo\",\n            disableColItem: true,\n            valueOf: (item, { targetRender }) => (\n              <ValueEdit value={item[\"title\"]} targetRender={targetRender} />\n            ),\n          },\n          {\n            name: \"tag\",\n            title: \"状态标签\",\n            type: \"tag\",\n            valueOf: () => ({ type: \"success\", text: \"审核通过\" }),\n          },\n          {\n            name: \"tagEnum\",\n            title: \"标签枚举\",\n            type: \"tag\",\n            valueOf: (item) => ({\n              type: \"success\",\n              isEnum: true,\n              moduleName: \"marital\",\n              name: item.tagEnum,\n            }),\n          },\n          {\n            name: \"avatar\",\n            title: \"头像\",\n            type: \"avatar\",\n            valueOf: () => ({ gender: \"F\" }),\n          },\n          {\n            name: \"user\",\n            title: \"用户\",\n            type: \"user\",\n            valueOf: (item) => \\`\\${item.enUserName} \\${item.userName}\\`,\n          },\n          {\n            name: \"hideInfo\",\n            title: \"隐藏字段\",\n            type: \"hideInfo\",\n            valueOf: (item) => ({\n              loader: () => {\n                return item[\"phoneNumber\"] + \"-\" + item[\"id\"];\n              },\n            }),\n          },\n          {\n            name: \"userName\",\n            title: \"用户名\",\n            type: \"userName\",\n          },\n          {\n            name: \"contacts\",\n            title: \"联系人\",\n            type: \"contacts\",\n            valueOf: (item) => \\`\\${item.userName} \\${item.phoneNumber}\\`,\n          },\n          {\n            name: \"count\",\n            title: \"数量\",\n            type: \"singleRow\",\n            render: ({ target }) => {\n              return target.count === 5 ? { hover: true } : { hover: false };\n            },\n          },\n          {\n            name: \"description\",\n            title: \"描述\",\n            type: \"description\",\n          },\n          {\n            name: \"description2\",\n            title: \"描述(省略)\",\n            type: \"description\",\n            ellipsis: true,\n          },\n          {\n            name: \"other\",\n            title: \"其他\",\n            type: \"other\",\n            hover: true,\n            sort: true,\n          },\n          {\n            name: \"options\",\n            title: \"操作\",\n            type: \"options\",\n            fixed: \"right\",\n            sort: true,\n            valueOf: (item) => [\n              {\n                onClick: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                },\n                children: \"分配Program及教练\",\n              },\n              {\n                children: \"审核\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"淘汰\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"一键约面\",\n              },\n              {\n                children: \"删除\",\n              },\n            ],\n          },\n        ]}\n        onSortChange={(sort) => {\n          console.log(\">>>>>>\", sort);\n        }}\n      />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Table\",\n    packageName: \"@components/Table\",\n    component: component_113\n},{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_114\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_115\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_117\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_120 from '@components/TablePage';\nimport * as component_121 from 'lodash';\nimport * as component_122 from '@components/Global';\nimport * as component_123 from '@kne/react-fetch';\nimport * as component_124 from 'dayjs';\nconst readmeConfig = {\n    name: `TablePage`,\n    summary: `<p>可以从后端获取数据，然后展示为一个表格</p>\n<p><em><strong>（已废弃，不建议使用，请用Table的TablePage组件代替）</strong></em></p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dataFormat</td>\n<td>用于处理后端返回的数据，作为表格数据</td>\n<td>function</td>\n<td>(data) =&gt; {return {list: data.data.pageData,total: data.data.totalCount};}</td>\n</tr>\n<tr>\n<td>pagination</td>\n<td>控制分页参数</td>\n<td>object</td>\n<td>{showSizeChanger: true,showQuickJumper: true,open: true,paramsType: 'data',requestType: 'reload',current: 'currentPage',pageSize: 'perPage',defaultPageSize: 20,size: 'default'}</td>\n</tr>\n<tr>\n<td>getColumns</td>\n<td>获取colums参数的函数,该函数的参数可以拿到请求结果数据,如果不传该函数则默认取colums属性 getColumns({data,formatData}),可以返回Promise</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>stickyOffset</td>\n<td>sticky模式，table header距离顶部位置，默认会取 --nav-height，注意：该组件会覆盖调sticky中设置的值，导致其设置不生效，需要配置该参数来实现功能</td>\n<td>string</td>\n<td>var(--nav-height)</td>\n</tr>\n<tr>\n<td>controllerOpen</td>\n<td>是否开启列控制，调整列宽和列显示</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数参考</p>\n<p>表格参数:</p>\n<p><a href=\"https://ant.design/components/table-cn/\">antd Table</a></p>\n<p>请求数据参数:</p>\n<p><a href=\"/lib/react-fetch\">react-fetch</a></p>`,\n    example: {\n        isFull: true,\n        className: `TablePage_b85cd`,\n        style: `.TablePage_b85cd .table-Limit-height {\n  height: 600px;\n  overflow: auto;\n  max-width: 1000px;\n  margin: 0 auto; }\n`,\n        list: [{\n    title: `普通表格`,\n    description: `展示一个普通的表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { PureGlobal } = global;\nconst { range } = _;\nconst { preset } = reactFetch;\n\nconst ajax = (config) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      if (config.url === \"/api/v1/user/user/user_key_get\") {\n        resolve({\n          data: {\n            code: 0,\n            data: \\`[{\\\"id\\\":\\\"clientName\\\",\\\"name\\\":\\\"客户名称\\\",\\\"width\\\":341,\\\"chosen\\\":false,\\\"selected\\\":false},{\\\"id\\\":\\\"city\\\",\\\"name\\\":\\\"工作地点\\\",\\\"width\\\":341,\\\"chosen\\\":false,\\\"selected\\\":false},{\\\"id\\\":\\\"startTime\\\",\\\"name\\\":\\\"职位开始时间\\\",\\\"hidden\\\":false,\\\"width\\\":200,\\\"chosen\\\":false,\\\"selected\\\":false},{\\\"id\\\":\\\"options\\\",\\\"name\\\":\\\"操作\\\",\\\"fixed\\\":\\\"right\\\",\\\"width\\\":341}]\\`,\n          },\n        });\n      } else if (config.url === \"/api/v1/user/user/user_key_set\") {\n        console.log(config.data);\n        resolve({\n          data: {\n            code: 0,\n            data: \"\",\n          },\n        });\n      }\n    }, 100);\n  });\n};\n\npreset({\n  ajax,\n});\n\nconst Example = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax,\n        tablePageServerApis: {\n          getDataApi: (name) => {\n            return {\n              url: \"/api/v1/user/user/user_key_get\",\n              method: \"GET\",\n              params: {\n                key: \\`table_config_\\${name}\\`,\n              },\n              transformResponse: (response) => {\n                const { data } = response;\n                response.data = Object.assign({}, data, {\n                  data: (() => {\n                    try {\n                      return JSON.parse(data.data);\n                    } catch (e) {\n                      return [];\n                    }\n                  })(),\n                });\n\n                response.data = {\n                  code: response.data.code === 0 ? 200 : data.code,\n                  msg: response.data.msg,\n                  results: response.data.data,\n                };\n\n                return response;\n              },\n              cache: \"TABLE_PAGE_CONFIG\",\n            };\n          },\n          setDataFunc: (name, data) => {\n            return ajax({\n              url: \"/api/v1/user/user/user_key_set\",\n              data: {\n                map: {\n                  [\\`table_config_\\${name}\\`]: JSON.stringify(data),\n                },\n              },\n            });\n          },\n        },\n      }}\n    >\n      <TablePage\n        name=\"test1\"\n        rowSelection={{\n          type: \"checkbox\",\n        }}\n        columns={[\n          {\n            title: (\n              <div>\n                职位名称<i>~</i>\n              </div>\n            ),\n            titleText: \"职位名称\",\n            key: \"positionName\",\n            fixed: \"left\",\n            dataIndex: \"positionName\",\n          },\n          {\n            title: \"客户名称\",\n            key: \"clientName\",\n            dataIndex: \"clientName\",\n          },\n          {\n            title: \"工作地点\",\n            key: \"city\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点1\",\n            key: \"city1\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点2\",\n            key: \"city2\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点3\",\n            key: \"city3\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点4\",\n            key: \"city4\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点5\",\n            key: \"city5\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点6\",\n            key: \"city6\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点7\",\n            key: \"city7\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点8\",\n            key: \"city8\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点9\",\n            key: \"city9\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"职位开始时间\",\n            key: \"startTime\",\n            dataIndex: \"startTime\",\n            hidden: true,\n          },\n          {\n            title: \"操作\",\n            key: \"options\",\n            fixed: \"right\",\n            width: 300,\n            render: () => {\n              return \"操作\";\n            },\n          },\n        ]}\n        sticky={false}\n        data={{ currentPage: 1, perPage: 20 }}\n        loader={({ data }) => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                pageData: range(data.perPage).map((index) => ({\n                  id: index + (data.currentPage - 1) * data.perPage + 1,\n                  positionName:\n                    \"市场运营总监\" +\n                    (index + (data.currentPage - 1) * data.perPage + 1),\n                  clientName: \"大众\",\n                  city: \"北京\",\n                  startTime: \"2020-01-10\",\n                })),\n                totalCount: 100,\n              });\n            }, 100);\n          });\n        }}\n      />\n    </PureGlobal>\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_120\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_121\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_122\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_123\n}]\n},{\n    title: `树形数据`,\n    description: `展示一个树形数据的表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { range } = _;\n\nconst Example = () => {\n  return (\n    <TablePage\n      name=\"test1\"\n      columns={[\n        {\n          title: \"职位名称\",\n          key: \"positionName\",\n          fixed: \"left\",\n          dataIndex: \"positionName\",\n        },\n        {\n          title: \"客户名称\",\n          key: \"clientName\",\n          dataIndex: \"clientName\",\n        },\n        {\n          title: \"工作地点\",\n          key: \"city\",\n          dataIndex: \"city\",\n        },\n        {\n          title: \"职位开始时间\",\n          key: \"startTime\",\n          dataIndex: \"startTime\",\n          hidden: true,\n        },\n        {\n          title: \"操作\",\n          key: \"options\",\n          fixed: \"right\",\n          width: 300,\n          render: () => {\n            return \"操作\";\n          },\n        },\n      ]}\n      sticky={false}\n      data={{ currentPage: 1, perPage: 20 }}\n      loader={({ data }) => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve({\n              pageData: range(data.perPage).map((index) => ({\n                id: index + (data.currentPage - 1) * data.perPage + 1,\n                positionName:\n                  \"市场运营总监\" +\n                  (index + (data.currentPage - 1) * data.perPage + 1),\n                clientName: \"大众\",\n                city: \"北京\",\n                startTime: \"2020-01-10\",\n                children: range(10).map((i) => {\n                  return {\n                    id:\n                      index +\n                      (data.currentPage - 1) * data.perPage +\n                      1 +\n                      \"-\" +\n                      i,\n                    positionName:\n                      \"市场运营总监\" +\n                      (index + (data.currentPage - 1) * data.perPage + 1) +\n                      \"-\" +\n                      i,\n                    clientName: \"大众\",\n                    city: \"北京\",\n                    startTime: \"2020-01-10\",\n                    children:\n                      index === 0\n                        ? [\n                            {\n                              id:\n                                index +\n                                (data.currentPage - 1) * data.perPage +\n                                1 +\n                                \"-\" +\n                                i +\n                                \"-last\",\n                              positionName: \"最后一层\",\n                              clientName: \"最后一层\",\n                              city: \"最后一层\",\n                              startTime: \"2020-01-10\",\n                            },\n                          ]\n                        : null,\n                  };\n                }),\n              })),\n              totalCount: 100,\n            });\n          }, 100);\n        });\n      }}\n    />\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_120\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_121\n}]\n},{\n    title: `固定表头表格`,\n    description: `展示一个固定表头的表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { range } = _;\nconst { useRef } = React;\n\nconst Example = () => {\n  const ref = useRef();\n  return (\n    <div className=\"table-Limit-height\" ref={ref}>\n      <div\n        style={{\n          height: 700,\n        }}\n      >\n        请往下拉\n      </div>\n      <TablePage\n        stickyOffset=\"0px\"\n        scroller={{\n          getContainer: () => ref.current,\n        }}\n        data={{ currentPage: 1, perPage: 20 }}\n        columns={[\n          {\n            title: \"职位名称\",\n            key: \"positionName\",\n            fixed: \"left\",\n            dataIndex: \"positionName\",\n          },\n          {\n            title: \"客户名称\",\n            key: \"clientName\",\n            dataIndex: \"clientName\",\n          },\n          {\n            title: \"工作地点\",\n            key: \"city\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"职位开始时间\",\n            key: \"startTime\",\n            dataIndex: \"startTime\",\n          },\n        ]}\n        loader={({ data }) => {\n          return {\n            pageData: range(data.perPage).map((index) => ({\n              id: index + (data.currentPage - 1) * data.perPage + 1,\n              positionName:\n                \"市场运营总监\" +\n                (index + (data.currentPage - 1) * data.perPage + 1),\n              clientName: \"大众\",\n              city: \"北京\",\n              startTime: \"2020-01-10\",\n            })),\n            totalCount: 100,\n          };\n        }}\n      />\n    </div>\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_120\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_121\n}]\n},{\n    title: `日期格式化表格`,\n    description: `展示一个日期格式化表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { range } = _;\nconst dayjs = dayjs;\n\nconst dateFormat = (target) => {\n  return dayjs(target).format(\"YYYY-MM-DD HH:mm:ss\");\n};\n\nconst Example = () => {\n  return (\n    <TablePage\n      sticky={false}\n      columns={[\n        {\n          title: \"职位名称\",\n          key: \"positionName\",\n          fixed: \"left\",\n          dataIndex: \"positionName\",\n        },\n        {\n          title: \"客户名称\",\n          key: \"clientName\",\n          dataIndex: \"clientName\",\n        },\n        {\n          title: \"工作地点\",\n          key: \"city\",\n          dataIndex: \"city\",\n        },\n        {\n          title: \"职位开始时间\",\n          key: \"startTime\",\n          dataIndex: \"startTime\",\n          render: dateFormat,\n        },\n        {\n          title: \"职位结束时间\",\n          key: \"endTime\",\n          dataIndex: \"endTime\",\n          render: dateFormat,\n        },\n      ]}\n      data={{ currentPage: 1, perPage: 10 }}\n      loader={({ data }) => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve({\n              pageData: range(data.perPage).map((index) => ({\n                id: index + (data.currentPage - 1) * data.perPage + 1,\n                positionName:\n                  \"市场运营总监\" +\n                  (index + (data.currentPage - 1) * data.perPage + 1),\n                clientName: \"大众\",\n                city: \"北京\",\n                startTime: \"2020-01-10\",\n                endTime: \"2020-02-10\",\n              })),\n              totalCount: 48,\n            });\n          }, 1000);\n        });\n      }}\n    />\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_120\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_121\n},{\n    name: \"dayjs\",\n    packageName: \"dayjs\",\n    component: component_124\n}]\n},{\n    title: `动态column获取`,\n    description: `展示动态column获取的表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { range } = _;\n\nconst Example = () => {\n  return (\n    <TablePage\n      sticky={false}\n      getColumns={({ data, formatData }) => {\n        console.log(data, formatData);\n        return Promise.resolve([\n          {\n            title: \"职位名称\",\n            key: \"positionName\",\n            fixed: \"left\",\n            dataIndex: \"positionName\",\n          },\n          {\n            title: \"客户名称\",\n            key: \"clientName\",\n            dataIndex: \"clientName\",\n          },\n          {\n            title: \"工作地点\",\n            key: \"city\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"职位开始时间\",\n            key: \"startTime\",\n            dataIndex: \"startTime\",\n          },\n        ]);\n      }}\n      data={{ currentPage: 1, perPage: 20 }}\n      loader={({ data }) => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve({\n              pageData: range(data.perPage).map((index) => ({\n                id: index + (data.currentPage - 1) * data.perPage + 1,\n                positionName:\n                  \"市场运营总监\" +\n                  (index + (data.currentPage - 1) * data.perPage + 1),\n                clientName: \"大众\",\n                city: \"北京\",\n                startTime: \"2020-01-10\",\n              })),\n              totalCount: 100,\n            });\n          }, 1000);\n        });\n      }}\n    />\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_120\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_121\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_125 from '@components/Tooltip';\nimport * as component_126 from 'antd/lib/space';\nimport * as component_127 from '@components/FormInfo';\nimport * as component_128 from '@kne/react-fetch';\nimport * as component_129 from '@components/Descriptions';\nimport * as component_130 from '@components/StateTag';\nconst readmeConfig = {\n    name: `Tooltip`,\n    summary: `<p>简单的文字提示气泡框</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>size</td>\n<td>默认宽度 360，small 宽度 240</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题内容</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>showInfo</td>\n<td>展示标题旁的提示按钮</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>importantInfo</td>\n<td>重要内容</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>subtitle</td>\n<td>副标题</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>content</td>\n<td>内容</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>importantInfoType</td>\n<td>重要内容类型，success,error,warning</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>moreInfo</td>\n<td>其他内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>TooltipFetch</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>获取数据的接口，参考@kne/react-fetch</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>fetchContent</td>\n<td>当api接口返回值的时候调用，可以获取到接口参数，返回值会更新到Tootip的参数中</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Tooltip_c9830`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Tooltip, TooltipInfoLabel } = _Tooltip;\nconst { default: Space } = space;\nconst {\n  default: FormInfo,\n  Form,\n  Input,\n  TypeDateRangePicker,\n  SubmitButton,\n  CancelButton,\n} = formInfo;\n\nconst MoreInfo = () => {\n  return (\n    <Form>\n      <FormInfo\n        column={1}\n        list={[\n          <Input label=\"姓名\" name=\"name\" rule=\"REQ\" />,\n          <TypeDateRangePicker\n            name=\"type_date\"\n            label=\"日期时间段\"\n            rule=\"REQ\"\n          />,\n          <Space\n            style={{\n              width: \"100%\",\n              justifyContent: \"end\",\n            }}\n          >\n            <CancelButton>取消</CancelButton>\n            <SubmitButton>确定</SubmitButton>\n          </Space>,\n        ]}\n      />\n    </Form>\n  );\n};\n\nconst BaseExample = () => {\n  return (\n    <Space>\n      <Tooltip content=\"这里显示完整的信息\">小段信息</Tooltip>\n      <Tooltip\n        size=\"small\"\n        content=\"这里显示完整的信息完整的信息，这里显示完整的信息完整的信息这里显示完整的信息完整的信息这里显示完整的信息完整的信息，这里显示完整的信息。\"\n      >\n        大段信息\n      </Tooltip>\n      <Tooltip title=\"标题\" content=\"内容描述内容描述内容。\">\n        带有标题的小段信息\n      </Tooltip>\n      <Tooltip\n        title=\"标题\"\n        content=\"内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述\"\n      >\n        带有标题的大段信息\n      </Tooltip>\n      <Tooltip\n        importantInfo=\"筛选日期范围内，职位上安排顾问面试的候选人总数。根据所填写的顾问【面试面试】时间来进行统计，而非在系统的操作时间。\"\n        subtitle=\"示例:\"\n        content=\"2022.10.21在系统操作顾问面试，但填写的顾问面试时间为2022.10.20，则数据会统计在2022.10.20，而非2022.10.21 。\"\n      >\n        带有重要信息\n      </Tooltip>\n      <TooltipInfoLabel\n        title=\"带有Info信息\"\n        tooltipTitle={{\n          importantInfo:\n            \"筛选日期范围内，职位上安排顾问面试的候选人总数。根据所填写的顾问【面试面试】时间来进行统计，而非在系统的操作时间。\",\n          subtitle: \"示例:\",\n          content:\n            \"2022.10.21在系统操作顾问面试，但填写的顾问面试时间为2022.10.20，则数据会统计在2022.10.20，而非2022.10.21 。\",\n        }}\n      />\n      <Tooltip\n        trigger=\"click\"\n        title=\"标题\"\n        content=\"辅助信息描述内容辅助信息描述内容辅助信息描述内容辅助信息描述内容辅助信息描述内容\"\n        moreInfo={<MoreInfo />}\n      >\n        带有表单信息\n      </Tooltip>\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Tooltip\",\n    packageName: \"@components/Tooltip\",\n    component: component_125\n},{\n    name: \"space\",\n    packageName: \"antd/lib/space\",\n    component: component_126\n},{\n    name: \"formInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_127\n}]\n},{\n    title: `带有远程数据加载的提示`,\n    description: `展示带有远程数据加载的提示`,\n    code: `const { TooltipFetch } = _Tooltip;\nconst { preset } = reactFetch;\nconst { default: Descriptions } = _Descriptions;\nconst { default: StateTag } = _StateTag;\n\npreset({\n  ajax: () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({\n          data: {\n            code: 0,\n            data: {\n              clientName: \"腾讯\",\n              title: \"腾讯科技公司\",\n              type: \"增值税专用发票\",\n              date: \"2022-08-15\",\n            },\n          },\n        });\n      }, 1000);\n    });\n  },\n});\n\nconst BaseExample = () => {\n  return (\n    <TooltipFetch\n      api={{\n        url: \"/api/data\",\n      }}\n      size=\"large\"\n      fetchContent={(data) => {\n        return {\n          content: (\n            <Descriptions\n              dataSource={[\n                [\n                  { label: \"客户名称\", content: data.clientName },\n                  { label: \"发票抬头\", content: data.title },\n                ],\n                [\n                  { label: \"发票类型\", content: data.type },\n                  { label: \"发票日期\", content: data.date },\n                ],\n              ]}\n            />\n          ),\n        };\n      }}\n    >\n      <StateTag text=\"哈哈哈\" />\n    </TooltipFetch>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Tooltip\",\n    packageName: \"@components/Tooltip\",\n    component: component_125\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_128\n},{\n    name: \"_Descriptions\",\n    packageName: \"@components/Descriptions\",\n    component: component_129\n},{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_130\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"style_content__KHqQn__ujG5g\",\"size-small\":\"style_size-small__RwAEB__ujG5g\",\"label\":\"style_label__EG-qx__ujG5g\",\"content-content\":\"style_content-content__AkJj-__ujG5g\",\"item\":\"style_item__WV0-i__ujG5g\"};","import { useLayoutEffect, useRef, useState } from \"react\";\nimport { Col, Row, Space } from \"antd\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\n\nexport const Label = ({ className, children, setWidth }) => {\n  const ref = useRef(null);\n  const setWidthRef = useRef(setWidth);\n  setWidthRef.current = setWidth;\n  useLayoutEffect(() => {\n    const computed = () => {\n      if (!ref.current) {\n        return;\n      }\n      const { width } = ref.current.getBoundingClientRect();\n      setWidth(width);\n    };\n    const resizeObserver = new ResizeObserver(computed);\n    resizeObserver.observe(ref.current);\n    computed();\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [setWidth]);\n  return (\n    <div ref={ref} className={className}>\n      {children}：\n    </div>\n  );\n};\n\nconst Content = ({ list, labelAlign, col, gutter, className, size }) => {\n  const labelWidthListRef = useRef([]);\n  const [maxLabelWidth, setMaxLabelWidth] = useState(0);\n  return (\n    <Row\n      data-testid=\"components-core-content\"\n      className={classnames(style[\"content\"], className, {\n        [style[\"size-small\"]]: size === \"small\",\n      })}\n      gutter={gutter}\n    >\n      {list\n        .filter((item) => {\n          if (typeof item.display === \"function\") {\n            return item.display();\n          }\n          return item.display !== false;\n        })\n        .map(({ label, content, block }, index) => {\n          return (\n            <Col\n              span={block === true ? 24 : 24 / col}\n              key={index}\n              className={style[\"item\"]}\n            >\n              <Space key={index} className={style[\"item\"]}>\n                {label ? (\n                  <div\n                    style={\n                      maxLabelWidth && labelAlign !== \"auto\"\n                        ? {\n                            minWidth: maxLabelWidth,\n                            textAlign: labelAlign,\n                          }\n                        : null\n                    }\n                  >\n                    <Label\n                      className={classnames(style[\"label\"], \"content-label\")}\n                      setWidth={(width) => {\n                        labelWidthListRef.current[index] = width;\n                        setMaxLabelWidth(\n                          Math.max(...labelWidthListRef.current)\n                        );\n                      }}\n                    >\n                      {label}\n                    </Label>\n                  </div>\n                ) : null}\n                <div\n                  className={classnames(\n                    style[\"content-content\"],\n                    \"content-content\"\n                  )}\n                >\n                  {content}\n                </div>\n              </Space>\n            </Col>\n          );\n        })}\n    </Row>\n  );\n};\n\nContent.defaultProps = {\n  labelAlign: \"left\",\n  col: 1,\n  gutter: 0,\n  list: [],\n};\n\nexport default Content;\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptions\":\"style_descriptions__HozsO__ujG5g\",\"descriptions-item\":\"style_descriptions-item__vV+UK__ujG5g\",\"col-label\":\"style_col-label__ZFEwt__ujG5g\",\"col-content\":\"style_col-content__wtZ9I__ujG5g\"};","import { Col, Row } from \"antd\";\nimport classnames from \"classnames\";\nimport Features from \"@components/Features\";\nimport style from \"./style.module.scss\";\n\nconst Descriptions = ({ dataSource, isFull, className, ...props }) => {\n  return (\n    <Row {...props} className={classnames(style[\"descriptions\"], className)}>\n      {dataSource.map((colItem, colIndex) => {\n        const _colItem = colItem.slice(0, 2).filter((item) => {\n          if (typeof item.display === \"function\") {\n            return item.display(item, dataSource);\n          }\n          return item.display !== false;\n        });\n        return _colItem\n          .slice(0, 2)\n          .map(({ label, content, featureId }, itemIndex) => {\n            const render = (\n              <Col\n                span={24 / _colItem.length}\n                className={classnames(\n                  style[\"col-item\"],\n                  \"descriptions-col-item\"\n                )}\n                key={`${colIndex}-${itemIndex}`}\n              >\n                <Row\n                  wrap={false}\n                  className={classnames(\n                    style[\"descriptions-item\"],\n                    \"descriptions-item\"\n                  )}\n                >\n                  <Col\n                    span={isFull ? 8 : 4 * _colItem.length}\n                    className={classnames(\n                      style[\"col-label\"],\n                      \"descriptions-col-label\"\n                    )}\n                  >\n                    {label}\n                  </Col>\n                  <Col\n                    span={isFull ? 16 : 24 - 4 * _colItem.length}\n                    className={classnames(\n                      style[\"col-content\"],\n                      \"descriptions-col-content\"\n                    )}\n                  >\n                    {content}\n                  </Col>\n                </Row>\n              </Col>\n            );\n            return featureId ? (\n              <Features id={featureId} key={`${colIndex}-${itemIndex}`}>\n                {render}\n              </Features>\n            ) : (\n              render\n            );\n          });\n      })}\n    </Row>\n  );\n};\n\nexport default Descriptions;\n","const importMessages = (locale) => {\n  return {\n    \"en-US\": () => import(\"./en-US\"),\n    \"zh-CN\": () => import(\"./zh-CN\"),\n  }[locale]();\n};\n\nexport default importMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"right-options-modal\":\"style_right-options-modal__0FYSr__ujG5g\",\"left-options-col\":\"style_left-options-col__dZs-a__ujG5g\",\"right-options-col\":\"style_right-options-col__-bGqN__ujG5g\",\"move-icon\":\"style_move-icon__Kd4U2__ujG5g\",\"close-icon\":\"style_close-icon__HG1G5__ujG5g\",\"columns-control-content-item\":\"style_columns-control-content-item__SK820__ujG5g\",\"is-drag\":\"style_is-drag__7dzHq__ujG5g\",\"sortable-drag\":\"style_sortable-drag__Btml4__ujG5g\",\"sortable-ghost\":\"style_sortable-ghost__L0Tis__ujG5g\",\"right-header\":\"style_right-header__pPtqi__ujG5g\",\"right-title\":\"style_right-title__VutTR__ujG5g\",\"right-desc\":\"style_right-desc__dUwAi__ujG5g\",\"divider\":\"style_divider__GpvGk__ujG5g\",\"modal-footer-tip\":\"style_modal-footer-tip__GMxOE__ujG5g\"};","import importMessages from \"./locale\";\nimport { IntlProvider, FormattedMessage } from \"@components/Intl\";\nimport style from \"./style.module.scss\";\nimport {\n  useMemo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { groupBy, pick, union } from \"lodash\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Checkbox,\n  Col,\n  Divider,\n  List,\n  Row,\n  Space,\n  message,\n} from \"antd\";\nimport { useModal } from \"@components/Modal\";\nimport Icon from \"@components/Icon\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport omit from \"lodash/omit\";\nimport { downloadBlobFile } from \"@components/File\";\nimport { getCache, withFetch } from \"@kne/react-fetch\";\nimport { usePreset } from \"@components/Global\";\nimport Features from \"@components/Features\";\nimport get from \"lodash/get\";\n\nconst GroupItem = ({ groupName, list, selected, onChange }) => {\n  const isCheckedAll = useMemo(() => {\n    return list.every((x) => selected.some((it) => it === x.name));\n  }, [list, selected]);\n  return (\n    <>\n      <Row gutter={[24, 12]} justify=\"space-between\">\n        <Col className={style[\"right-title\"]}>{groupName}</Col>\n        <Col>\n          <Checkbox\n            checked={isCheckedAll}\n            onChange={(e) => {\n              const newSelected = e.target.checked\n                ? union(\n                    selected.slice(0),\n                    list.map((item) => item.name)\n                  )\n                : selected\n                    .slice(0)\n                    .filter((x) => !list.some((it) => it.name === x));\n              onChange(newSelected);\n            }}\n          >\n            <FormattedMessage\n              id=\"selectedAll\"\n              moduleName=\"ExportTable\"\n              defaultMessage=\"全选\"\n            />\n          </Checkbox>\n        </Col>\n        <Col span={24}>\n          <Space\n            className={classnames(\"full-space\")}\n            wrap={true}\n            size={[24, 12]}\n          >\n            {(list || []).map((item) => {\n              return (\n                <Checkbox\n                  key={item.name}\n                  checked={selected.some((x) => x === item.name)}\n                  onChange={(e) => {\n                    let newSelected = selected.slice(0);\n                    if (e.target.checked) {\n                      newSelected.push(item.name);\n                    } else {\n                      newSelected = newSelected.filter((x) => x !== item.name);\n                    }\n                    onChange(newSelected);\n                  }}\n                >\n                  {item.titleText || item.title || \"未命名列\"}\n                </Checkbox>\n              );\n            })}\n          </Space>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RightOptions = ({ options, children }) => {\n  if (!options) {\n    return children;\n  }\n  return (\n    <Row wrap={false}>\n      <Col flex={1} className={style[\"left-options-col\"]}>\n        {children}\n      </Col>\n      <Col className={style[\"right-options-col\"]}>{options}</Col>\n    </Row>\n  );\n};\n\nconst ExportTableInner = forwardRef(({ columns, data }, ref) => {\n  const [selectedColumns, setSelectColumns] = useState(() => {\n    const columnsData = Array.isArray(data) ? data : JSON.parse(data) || [];\n    return Array.isArray(columnsData) &&\n      (columnsData || []).filter((x) => !!x).length > 0\n      ? columnsData.filter((x) => !!x)\n      : columns\n          .filter(\n            (x) =>\n              (x.hasOwnProperty(\"exportHidden\") && x.exportHidden !== true) ||\n              x.hidden !== true\n          )\n          .map((x) => x.name);\n  });\n  const allColumns = useMemo(() => {\n    const all = groupBy(columns, (item) => item.groupName);\n    return all;\n  }, [columns]);\n  const visibleColumns = useMemo(() => {\n    const columnsMap = new Map(columns.map((item) => [item.name, item]));\n    return (selectedColumns || [])\n      .filter((name) => columns.some((x) => x.name === name))\n      .map((name) => {\n        const item = columnsMap.get(name);\n        return item;\n      });\n  }, [columns, selectedColumns]);\n  useImperativeHandle(\n    ref,\n    () => {\n      return { data: selectedColumns };\n    },\n    [selectedColumns]\n  );\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"ExportTable\">\n      <RightOptions\n        options={\n          <div>\n            <div className={style[\"right-header\"]}>\n              <div className={style[\"right-title\"]}>\n                <FormattedMessage\n                  id=\"rightTitle\"\n                  moduleName=\"ExportTable\"\n                  defaultMessage=\"已选的字段\"\n                />\n                ：\n              </div>\n              <div className={style[\"right-desc\"]}>\n                <FormattedMessage\n                  id=\"rightDesc\"\n                  moduleName=\"ExportTable\"\n                  defaultMessage=\"按住拖拽可进行排序\"\n                />\n              </div>\n            </div>\n            <ReactSortable\n              selectedColumns={selectedColumns}\n              list={visibleColumns}\n              filter=\".ignore-elements\"\n              dragClass={style[\"sortable-drag\"]}\n              ghostClass={style[\"sortable-ghost\"]}\n              forceFallback\n              setList={(columns) => {\n                const list = columns.map((item) => item.name);\n                setTimeout(() => {\n                  setSelectColumns([...list]);\n                }, 50);\n              }}\n              animation={300}\n              delayOnTouchStart\n              delay={2}\n            >\n              {visibleColumns.map((item, index) => (\n                <List.Item\n                  className={classnames(\n                    style[\"columns-control-content-item\"],\n                    style[\"is-drag\"]\n                  )}\n                  key={item.name + index}\n                >\n                  <Row\n                    justify=\"space-between\"\n                    align=\"middle\"\n                    style={{ flex: 1 }}\n                  >\n                    <Col>\n                      <Space size={2}>\n                        <Icon\n                          type=\"icon-paixu\"\n                          className={classnames(\n                            style[\"move-icon\"],\n                            \"move-icon\"\n                          )}\n                        />\n                        <span>\n                          {item.titleText || item.title || \"未命名列\"}\n                        </span>\n                      </Space>\n                    </Col>\n                    <Col\n                      onClick={(event) => {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        let newSelected = selectedColumns.slice(0);\n                        newSelected = newSelected.filter(\n                          (x) => x !== item.name\n                        );\n                        setTimeout(() => {\n                          setSelectColumns([...newSelected]);\n                        }, 50);\n                      }}\n                    >\n                      <Icon\n                        type=\"icon-close-thin\"\n                        className={classnames(\n                          style[\"close-icon\"],\n                          \"close-icon\"\n                        )}\n                      />\n                    </Col>\n                  </Row>\n                </List.Item>\n              ))}\n            </ReactSortable>\n          </div>\n        }\n      >\n        <Space\n          className={classnames(\"full-space\")}\n          direction=\"vertical\"\n          split={<Divider className={style[\"divider\"]} />}\n        >\n          {Object.keys(allColumns).map((groupName, index) => {\n            return (\n              <GroupItem\n                key={groupName + index}\n                selected={selectedColumns}\n                groupName={groupName}\n                list={allColumns[groupName]}\n                onChange={(list) => {\n                  setSelectColumns(list);\n                }}\n              />\n            );\n          })}\n        </Space>\n      </RightOptions>\n    </IntlProvider>\n  );\n});\n\nExportTableInner.defaultProps = {\n  columns: [],\n};\n\nconst withExportTableColumnsData = (WrappedComponent) => {\n  const FetchWrappedComponent = withFetch(WrappedComponent);\n  return (props) => {\n    const { name, getDataApi } = props;\n    const { exportTableServerApis } = usePreset();\n    const _getDataApi =\n      getDataApi || (exportTableServerApis && exportTableServerApis.getDataApi);\n    if (name && exportTableServerApis && exportTableServerApis.getDataApi) {\n      // isLocal cache={`EXPORT_TABLE_CONFIG_${name}`} ttl={24 * 60 * 60 * 1000}\n      return (\n        <FetchWrappedComponent\n          {...props}\n          {..._getDataApi(name)}\n          error={<WrappedComponent {...props} />}\n        />\n      );\n    }\n    return <WrappedComponent {...props} />;\n  };\n};\n\nexport const withExportTable = (WrappedComponent) => {\n  return (props) => {\n    const tableProps = omit(props, [\"onClick\"]);\n    const tableRef = useRef(null);\n    const { name, saveDataApi, featureId } = props;\n    const { exportTableServerApis } = usePreset();\n    const _saveDataApi =\n      saveDataApi ||\n      (exportTableServerApis && exportTableServerApis.saveDataApi);\n    const modal = useModal();\n    return (\n      <WrappedComponent\n        onClick={async () => {\n          props.onClick && props.onClick();\n          let columns =\n            typeof props.columns === \"function\"\n              ? await props.columns()\n              : props.columns;\n          columns = columns.filter((x) => x.exportHidden !== true);\n          const renderFeatureConfig = ({ children }) => {\n            return featureId ? (\n              <Features id={featureId}>{children}</Features>\n            ) : (\n              children({})\n            );\n          };\n          const Component = withExportTableColumnsData((props) => {\n            return renderFeatureConfig({\n              children: ({ options }) => {\n                columns = columns.filter((item) => {\n                  if (!Array.isArray(get(options, \"hiddenColumns\"))) {\n                    return true;\n                  }\n                  return options.hiddenColumns.indexOf(item.name) === -1;\n                });\n                return (\n                  <ExportTableInner\n                    {...props}\n                    {...tableProps}\n                    columns={columns}\n                    ref={tableRef}\n                  />\n                );\n              },\n            });\n          });\n          modal({\n            title: props.title || \"导出数据\",\n            ...tableProps,\n            className: style[\"right-options-modal\"],\n            footer: () => {\n              return (\n                <Space size={4} className={style[\"modal-footer-tip\"]}>\n                  <Icon type={\"icon-xinxi-miaobian\"} />\n                  <span>导出后，系统会自动保存您本次选择的字段及排序</span>\n                </Space>\n              );\n            },\n            footerButtons: [\n              {\n                children: \"取消\",\n              },\n              {\n                type: \"primary\",\n                children: \"导出\",\n                onClick: async () => {\n                  if (tableRef.current?.data.length === 0) {\n                    message.error(props.selectedTip || \"请选择要导出的字段\");\n                    return false;\n                  }\n                  const saveResult = _saveDataApi\n                    ? await _saveDataApi({\n                        name,\n                        data: tableRef.current.data,\n                      })\n                    : true;\n                  if (saveResult !== false) {\n                    const cache = getCache();\n                    cache.delByCacheName(`EXPORT_TABLE_CONFIG_${name}`);\n                    const result = props.onExport\n                      ? await props.onExport({\n                          data: tableRef.current.data,\n                          downloadBlobFile,\n                        })\n                      : true;\n                    return result !== false;\n                  }\n                  return saveResult !== false;\n                },\n              },\n            ],\n            children: <Component {...pick(props, [\"name\", \"getDataApi\"])} />,\n          });\n        }}\n      />\n    );\n  };\n};\n\nconst ExportButton = (props) => {\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"ExportTable\">\n      <Button {...props} size=\"small\">\n        {props.actionText || (\n          <FormattedMessage\n            id=\"actionText\"\n            moduleName=\"ExportTable\"\n            defaultMessage=\"导出数据\"\n          />\n        )}\n      </Button>\n    </IntlProvider>\n  );\n};\n\nconst ExportTable = withExportTable(ExportButton);\n\nexport default ExportTable;\n","import get from \"lodash/get\";\nimport axios from \"axios\";\nimport { App, Button } from \"antd\";\nimport { usePreset } from \"@components/Global\";\nimport Icon from \"@components/Icon\";\nimport { useFetch } from \"@kne/react-fetch\";\nimport { useEffect, useState } from \"react\";\nimport useRefCallback from \"@kne/use-ref-callback\";\n\nexport const downloadBlobFile = async (res, filename) => {\n  const download = (url) => {\n    const element = document.createElement(\"a\"),\n      event = new MouseEvent(\"click\");\n    element.download = filename; // 设置文件名称\n    element.href = url; // 将生成的URL设置为a.href属性\n    element.dispatchEvent(event); // 触发a的单击事件\n  };\n\n  if (!res) {\n    throw new Error(\"未获取到下载的文件信息\");\n  }\n\n  if (typeof res === \"string\" && /blob:http(s)?:/.test(res)) {\n    download(res);\n    return;\n  }\n\n  if (Object.prototype.toString.call(res) === \"[object Blob]\") {\n    const blob = new Blob([res], {\n      type: get(res, \"type\"),\n    });\n    download(URL.createObjectURL(blob));\n    return;\n  }\n\n  const { data } = await axios({ url: res, responseType: \"blob\" });\n  download(\n    URL.createObjectURL(\n      new Blob([data], {\n        type: get(data, \"type\"),\n      })\n    )\n  );\n};\n\nexport const useDownload = ({\n  id,\n  filename,\n  apis: currentApis,\n  onError,\n  onSuccess,\n}) => {\n  const { message } = App.useApp();\n  const { apis: baseApis } = usePreset();\n  const apis = Object.assign({}, baseApis, currentApis);\n  const [downLoading, setDownLoading] = useState(false);\n\n  const { isLoading, data, error, refresh, ...fetchProps } = useFetch(\n    Object.assign({}, apis.oss, { auto: false })\n  );\n\n  const showError = useRefCallback(onError || message.error);\n  const successHandler = useRefCallback(onSuccess);\n\n  useEffect(() => {\n    if (isLoading) {\n      return;\n    }\n    if (error) {\n      showError(error);\n      return;\n    }\n    if (!data) {\n      return;\n    }\n    setDownLoading(true);\n    downloadBlobFile(data, filename)\n      .then(successHandler)\n      .catch((e) => {\n        showError(e.message);\n      })\n      .then(() => {\n        setDownLoading(false);\n      });\n  }, [isLoading, error, data, filename, showError, successHandler]);\n  return {\n    ...fetchProps,\n    isLoading: isLoading || downLoading,\n    download: () => refresh(id && { params: { id } }),\n  };\n};\n\nconst Download = ({\n  id,\n  filename,\n  api,\n  onSuccess,\n  onError,\n  onClick,\n  ...props\n}) => {\n  const { isLoading, download } = useDownload({\n    id,\n    filename,\n    api,\n    onError,\n    onSuccess,\n  });\n  return (\n    <Button\n      icon={<Icon type=\"icon-xiazai\" />}\n      {...props}\n      loading={isLoading}\n      onClick={(...args) => {\n        onClick && onClick(...args);\n        download();\n      }}\n    />\n  );\n};\n\nDownload.defaultProps = {\n  filename: \"未命名下载文件\",\n};\n\nDownload.useDownload = useDownload;\nDownload.downloadBlobFile = downloadBlobFile;\n\nexport default Download;\n","// extracted by mini-css-extract-plugin\nexport default {\"file-modal-outer\":\"style_file-modal-outer__1guNh__ujG5g\",\"file-title\":\"style_file-title__8bnUq__ujG5g\",\"ellipse\":\"style_ellipse__kDaLC__ujG5g\"};","import { useModal } from \"@components/Modal\";\nimport FilePreview from \"@components/FilePreview\";\nimport Download from \"./Download\";\nimport { App, Space } from \"antd\";\nimport { useCallback } from \"react\";\nimport style from \"./style.module.scss\";\n\nconst useFileModal = () => {\n  const modal = useModal();\n  const { message } = App.useApp();\n  return useCallback(\n    ({ title, id, originName, apis, openDownload = true, ...modalProps }) => {\n      return modal(\n        Object.assign(\n          {\n            footer: null,\n          },\n          modalProps,\n          {\n            title: (\n              <Space size={10} className={style[\"file-title\"]}>\n                <span className={style[\"ellipse\"]}>{title || originName}</span>\n                {openDownload && (\n                  <Download\n                    className=\"btn-no-padding\"\n                    type=\"link\"\n                    id={id}\n                    apis={apis}\n                    filename={originName}\n                    onSuccess={() => {\n                      message.success(\"下载成功\");\n                    }}\n                  />\n                )}\n              </Space>\n            ),\n            children: (\n              <div className={style[\"file-modal-outer\"]}>\n                <FilePreview id={id} originName={originName} apis={apis} />\n              </div>\n            ),\n          }\n        )\n      );\n    },\n    [modal, message]\n  );\n};\n\nexport default useFileModal;\n","const importMessages = (locale) => {\n  return {\n    \"en-US\": () => import(\"./en-US\"),\n    \"zh-CN\": () => import(\"./zh-CN\"),\n  }[locale]();\n};\n\nexport default importMessages;\n","import { Button, Space } from \"antd\";\nimport Icon from \"@components/Icon\";\nimport ConfirmButton from \"@components/ConfirmButton\";\nimport DownloadButton from \"../Download\";\nimport FormInfo, { Input, useFormModal } from \"@components/FormInfo\";\nimport { createWithIntl, useIntl } from \"@components/Intl\";\nimport last from \"lodash/last\";\nimport dropRight from \"lodash/dropRight\";\nimport useFileModal from \"../useFileModal\";\nimport importMessages from \"../locale\";\n\nconst OptionButtons = createWithIntl({\n  moduleName: \"File\",\n  importMessages,\n})(({ item, hasPreview, getPermission, apis }) => {\n  const { filename, id } = item;\n  const { formatMessage } = useIntl({ moduleName: \"File\" });\n  const formModal = useFormModal();\n  const fileModal = useFileModal();\n  return (\n    <Space size={0}>\n      {hasPreview && getPermission(\"preview\", item) && (\n        <Button\n          type=\"text\"\n          icon={<Icon type=\"icon-yulan\" />}\n          onClick={() => {\n            apis.onPreview\n              ? apis.onPreview(item)\n              : fileModal({ id, originName: filename, apis });\n          }}\n        />\n      )}\n      {getPermission(\"edit\", item) && (\n        <Button\n          type=\"text\"\n          icon={<Icon type=\"icon-bianji\" />}\n          onClick={() => {\n            const modalApi = formModal({\n              size: \"small\",\n              title: formatMessage({ id: \"editDocumentName\" }),\n              formProps: {\n                data: {\n                  name: dropRight(item.filename.split(\".\")).join(\".\"),\n                },\n                onSubmit: async (data) => {\n                  const res =\n                    apis.onEdit &&\n                    (await apis.onEdit({\n                      formData: Object.assign({}, data, {\n                        name: `${data.name}.${last(item.filename.split(\".\"))}`,\n                      }),\n                      item,\n                    }));\n                  if (res !== false) {\n                    modalApi.close();\n                  }\n                },\n              },\n              children: (\n                <FormInfo\n                  column={1}\n                  list={[\n                    <Input\n                      name=\"name\"\n                      label={formatMessage({ id: \"documentName\" })}\n                      rule=\"REQ LEN-0-100\"\n                    />,\n                  ]}\n                />\n              ),\n            });\n          }}\n        />\n      )}\n      {getPermission(\"download\", item) && (\n        <DownloadButton type=\"text\" id={id} filename={filename} />\n      )}\n      {getPermission(\"delete\", item) && (\n        <ConfirmButton\n          type=\"text\"\n          icon={<Icon type=\"icon-shanchu\" />}\n          onClick={() => {\n            return apis.onDelete && apis.onDelete(item);\n          }}\n        />\n      )}\n    </Space>\n  );\n});\n\nOptionButtons.defaultProps = {\n  hasPreview: true,\n  apis: {},\n  getPermission: (type, item) => {\n    return true;\n  },\n};\n\nexport default OptionButtons;\n","// extracted by mini-css-extract-plugin\nexport default {\"list-item-outer\":\"style_list-item-outer__0jlCN__ujG5g\",\"list-item\":\"style_list-item__nmPCB__ujG5g\",\"split\":\"style_split__kgSlH__ujG5g\",\"loading\":\"style_loading__kQUX5__ujG5g\",\"list-options\":\"style_list-options__aEila__ujG5g\",\"list-time\":\"style_list-time__Khoxc__ujG5g\"};","import { Col, List as AntdList, Row, Space, Spin, Typography } from \"antd\";\nimport FileType from \"@kne/react-file-type\";\nimport OptionButtons from \"./OptionButtons\";\nimport last from \"lodash/last\";\nimport dayjs from \"dayjs\";\nimport style from \"./style.module.scss\";\nimport importMessages from \"../locale\";\nimport { FormattedMessage, IntlProvider } from \"@components/Intl\";\n\nconst List = ({\n  className,\n  dataSource,\n  getPermission,\n  infoItemRenders,\n  apis,\n}) => {\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"File\">\n      <AntdList\n        className={className}\n        dataSource={dataSource.map((item, index) => {\n          item.index = index;\n          return item;\n        })}\n        rowKey={(item) =>\n          `item_${\n            (item.uuid && `uuid_${item.uuid}`) || (item.id && `id_${item.id}`)\n          }`\n        }\n        renderItem={(item) => {\n          const { type, filename } = item;\n          return (\n            <AntdList.Item className={style[\"list-item-outer\"]}>\n              <Row\n                justify=\"space-between\"\n                wrap={false}\n                className={style[\"list-item\"]}\n              >\n                <Col flex={1}>\n                  <div className={style[\"split\"]} />\n                  <Space className=\"is-block\" align=\"start\" size={4}>\n                    <FileType type={last(filename?.split(\".\"))} size={14} />\n                    {filename}\n                  </Space>\n                </Col>\n                {infoItemRenders &&\n                  infoItemRenders.map((render, index) => {\n                    return (\n                      <Col span={render.span || 4} key={index}>\n                        {type !== \"uploading\" &&\n                          (typeof render === \"function\"\n                            ? render\n                            : render.render)(item)}\n                        <div className={style[\"split\"]} />\n                      </Col>\n                    );\n                  })}\n                <Col className={style[\"list-options\"]}>\n                  {type !== \"uploading\" ? (\n                    <OptionButtons\n                      getPermission={getPermission}\n                      item={item}\n                      apis={apis}\n                    />\n                  ) : (\n                    <Space className={style[\"loading\"]}>\n                      <Spin size=\"small\" />\n                      <Typography.Link>\n                        <FormattedMessage id=\"uploading\" moduleName=\"File\" />\n                      </Typography.Link>\n                    </Space>\n                  )}\n                </Col>\n              </Row>\n            </AntdList.Item>\n          );\n        }}\n        bordered\n      />\n    </IntlProvider>\n  );\n};\n\nList.defaultProps = {\n  infoItemRenders: [\n    (item) => {\n      return item.userName ? (\n        <Typography.Text>{item.userName}</Typography.Text>\n      ) : null;\n    },\n    (item) => {\n      return item.date ? (\n        <Typography.Text>\n          {dayjs(item.date).format(\"YYYY-MM-DD HH:mm:ss\")}\n        </Typography.Text>\n      ) : null;\n    },\n  ],\n};\n\nexport default List;\n\nexport { OptionButtons };\n","import withOSSFile from \"@common/hocs/withOSSFile\";\n\nconst File = withOSSFile(({ data, children, ...props }) => {\n  return children({ url: data, ...props });\n});\n\nexport default File;\n","import { Typography } from \"antd\";\nimport useFileModal from \"./useFileModal\";\n\nconst FileLink = ({\n  id,\n  originName,\n  openDownload,\n  children,\n  modalProps,\n  ...props\n}) => {\n  const modal = useFileModal();\n  return (\n    <Typography.Link\n      {...props}\n      onClick={() => {\n        modal({ ...modalProps, id, originName, openDownload });\n      }}\n    >\n      {children || originName}\n    </Typography.Link>\n  );\n};\n\nFileLink.defaultProps = {\n  openDownload: true,\n};\n\nexport default FileLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"file-list-outer\":\"style_file-list-outer__wPhbb__ujG5g\",\"file-list-title\":\"style_file-list-title__zXM5r__ujG5g\",\"container\":\"style_container__P4RaF__ujG5g\",\"file-preview-inner\":\"style_file-preview-inner__cvE72__ujG5g\",\"file-preview\":\"style_file-preview__M-Asq__ujG5g\",\"drag-area\":\"style_drag-area__Q+lm7__ujG5g\",\"upload-drag-close\":\"style_upload-drag-close__u5o8W__ujG5g\",\"upload-drag-tips\":\"style_upload-drag-tips__z7puZ__ujG5g\",\"upload-drag-icon\":\"style_upload-drag-icon__sGGoS__ujG5g\",\"upload-drag-title\":\"style_upload-drag-title__9Afmb__ujG5g\",\"upload-drag-text\":\"style_upload-drag-text__o38vS__ujG5g\",\"list-item-outer\":\"style_list-item-outer__qfopH__ujG5g\",\"list-item\":\"style_list-item__QUzqW__ujG5g\",\"split\":\"style_split__8HVlD__ujG5g\",\"loading\":\"style_loading__OSlYB__ujG5g\",\"list-options\":\"style_list-options__4l3QJ__ujG5g\",\"list-time\":\"style_list-time__canbk__ujG5g\",\"title-group\":\"style_title-group__8IJkS__ujG5g\",\"upload-btn\":\"style_upload-btn__Q+Jxn__ujG5g\",\"total-count\":\"style_total-count__z1fyd__ujG5g\",\"file-select\":\"style_file-select__mHqyI__ujG5g\",\"file-name\":\"style_file-name__QkvMn__ujG5g\",\"file-select-info\":\"style_file-select-info__fOLiM__ujG5g\",\"file-select-option\":\"style_file-select-option__AbDrD__ujG5g\"};","import style from \"./style.module.scss\";\nimport { Col, Row, Segmented, Select, Space, Typography } from \"antd\";\nimport FileType from \"@kne/react-file-type\";\nimport last from \"lodash/last\";\nimport dayjs from \"dayjs\";\nimport Icon from \"@components/Icon\";\nimport { OptionButtons } from \"@components/File\";\nimport { FormattedMessage } from \"@components/Intl\";\n\nconst Title = ({\n  currentTab,\n  setCurrentTab,\n  previewMap,\n  previewList,\n  getPermission,\n  currentPreviewFileId,\n  setCurrentPreviewFileId,\n  itemApis,\n  children,\n  maxWidth,\n  getPopupContainer,\n}) => {\n  return (\n    <div className={style[\"file-list-title\"]}>\n      <Row align=\"middle\" justify=\"space-between\" wrap={false}>\n        <Col>\n          <Space className={style[\"title-group\"]} size={4}>\n            <Segmented\n              value={currentTab}\n              onChange={setCurrentTab}\n              options={[\n                {\n                  label: (\n                    <Space size={4}>\n                      <Icon type=\"icon-shitu-liebiao\" />\n                      <FormattedMessage id=\"listText\" moduleName=\"FileList\" />\n                    </Space>\n                  ),\n                  value: \"list\",\n                },\n                {\n                  label: (\n                    <Space size={4}>\n                      <Icon type=\"icon-shitu-yulan\" />\n                      <FormattedMessage\n                        id=\"previewText\"\n                        moduleName=\"FileList\"\n                      />\n                    </Space>\n                  ),\n                  value: \"preview\",\n                },\n              ]}\n            />\n            {currentTab === \"preview\" &&\n              currentPreviewFileId &&\n              previewMap.get(currentPreviewFileId) && (\n                <>\n                  <Select\n                    className={style[\"file-select\"]}\n                    bordered={false}\n                    popupMatchSelectWidth={false}\n                    value={currentPreviewFileId}\n                    onChange={setCurrentPreviewFileId}\n                    getPopupContainer={getPopupContainer}\n                  >\n                    {previewList.map(({ filename, userName, date, ossId }) => {\n                      return (\n                        <Select.Option\n                          className={style[\"file-select-option\"]}\n                          key={ossId}\n                          value={ossId}\n                        >\n                          <Space direction=\"vertical\">\n                            <Space size={4} align=\"start\">\n                              <FileType\n                                type={last(filename.split(\".\"))}\n                                size={14}\n                              ></FileType>\n                              <Typography.Text\n                                className={style[\"file-name\"]}\n                                ellipsis\n                                style={{ \"--max-width\": `${maxWidth}px` }}\n                              >\n                                {filename}\n                              </Typography.Text>\n                            </Space>\n                            {userName || date ? (\n                              <Space\n                                className={style[\"file-select-info\"]}\n                                size={24}\n                              >\n                                <div>\n                                  <FormattedMessage\n                                    id=\"uploadUser\"\n                                    moduleName=\"FileList\"\n                                  />\n                                  :{userName}\n                                </div>\n                                <div>\n                                  <FormattedMessage\n                                    id=\"uploadTime\"\n                                    moduleName=\"FileList\"\n                                  />\n                                  :\n                                  {date &&\n                                    dayjs(date).format(\"YYYY-MM-DD HH:mm:ss\")}\n                                </div>\n                              </Space>\n                            ) : null}\n                          </Space>\n                        </Select.Option>\n                      );\n                    })}\n                  </Select>\n                  <OptionButtons\n                    hasPreview={false}\n                    getPermission={getPermission}\n                    item={previewMap.get(currentPreviewFileId)}\n                    apis={itemApis}\n                  />\n                  <div className={style[\"total-count\"]}>\n                    <FormattedMessage\n                      id=\"totalCount\"\n                      values={{ count: previewList.length }}\n                      moduleName=\"FileList\"\n                    />\n                  </div>\n                </>\n              )}\n          </Space>\n        </Col>\n        <Col>{children}</Col>\n      </Row>\n    </div>\n  );\n};\n\nTitle.defaultProps = {\n  maxWidth: 260,\n};\n\nexport default Title;\n","const importMessages = (locale) => {\n  return {\n    \"en-US\": () => import(\"./en-US\"),\n    \"zh-CN\": () => import(\"./zh-CN\"),\n  }[locale]();\n};\n\nexport default importMessages;\n","import { createContext, useContext as useReactContext } from \"react\";\n\nconst context = createContext({});\nexport const { Provider } = context;\n\nexport const useContext = () => {\n  return useReactContext(context);\n};\n\nexport default context;\n","import style from \"./style.module.scss\";\nimport { useRef, useState } from \"react\";\nimport { Button, Space, Typography } from \"antd\";\nimport importMessages from \"./locale\";\nimport useOutside from \"@kne/use-click-outside\";\nimport classnames from \"classnames\";\nimport { Provider, useContext } from \"./context\";\nimport Icon from \"@components/Icon\";\nimport { FormattedMessage, useIntl, IntlProvider } from \"@components/Intl\";\nimport { InputFileText } from \"@common/hocs/withInputFile\";\nimport acceptFunc from \"@common/utils/accept\";\n\nexport const DragButton = ({ children }) => {\n  const { onOpenChange, getDragButtonEl } = useContext();\n  return (\n    <div\n      ref={getDragButtonEl}\n      className={style[\"upload-btn\"]}\n      onClick={() => {\n        onOpenChange((open) => !open);\n      }}\n    >\n      <Typography.Text className=\"ant-btn\">\n        <Icon type=\"icon-tuozhuaishangchuan\" />\n        {children || <FormattedMessage id=\"dragText\" moduleName=\"FileList\" />}\n      </Typography.Text>\n    </div>\n  );\n};\n\nexport const UploadButton = ({ children }) => {\n  const { accept, onFileSelected } = useContext();\n  return (\n    <InputFileText\n      className={style[\"upload-btn\"]}\n      accept={accept}\n      multiple\n      onChange={onFileSelected}\n    >\n      <Icon type=\"icon-tianjia\" />\n      {children}\n    </InputFileText>\n  );\n};\nexport const DragAreaOuter = ({\n  title,\n  accept,\n  fileSize,\n  maxLength,\n  onFileSelected,\n  children,\n  className,\n}) => {\n  const [open, onOpenChange] = useState(false);\n  const dragButtonRef = useRef(null);\n  const dragOuterRef = useOutside((e) => {\n    if (!dragButtonRef.current) {\n      return;\n    }\n    if (\n      dragButtonRef.current.contains(e.target) ||\n      e.target === dragButtonRef.current\n    ) {\n      return;\n    }\n    onOpenChange(false);\n  });\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"FileList\">\n      <Provider\n        value={{\n          open,\n          onOpenChange,\n          accept,\n          fileSize,\n          maxLength,\n          onFileSelected,\n          getDragButtonEl: (el) => {\n            dragButtonRef.current = el;\n          },\n        }}\n      >\n        <Space className={style[\"file-list-outer\"]} direction=\"vertical\">\n          {title}\n          <div\n            className={classnames(style[\"container\"], className)}\n            ref={dragOuterRef}\n            onDragEnter={() => {\n              onOpenChange(true);\n            }}\n          >\n            {children}\n          </div>\n        </Space>\n      </Provider>\n    </IntlProvider>\n  );\n};\n\nDragAreaOuter.defaultProps = {\n  fileSize: 20,\n  accept: [\".png\", \".jpg\", \".pdf\", \".docx\", \".doc\"],\n};\n\nexport const UploadTips = ({ icon, title, renderTips }) => {\n  const { accept, fileSize, maxLength } = useContext();\n  const intl = useIntl({ moduleName: \"FileList\" });\n  const tipsText = renderTips(\n    intl.formatMessage(\n      { id: \"dragTips\" },\n      {\n        accept: accept.map((str) => str.replace(/^\\./, \"\")).join(\"、\"),\n        size: fileSize,\n      }\n    ),\n    {\n      fileSize,\n      maxLength,\n      accept,\n    }\n  );\n\n  return (\n    <div className={classnames(style[\"upload-drag-tips\"], \"upload-drag-tips\")}>\n      <div className={style[\"upload-drag-icon\"]}>\n        {icon || <Icon type=\"icon-shangchuan\" size={64} />}\n      </div>\n      <div className={style[\"upload-drag-title\"]}>\n        {title || <FormattedMessage id=\"dragTitle\" moduleName=\"FileList\" />}\n      </div>\n      <div className={style[\"upload-drag-text\"]}>{tipsText}</div>\n    </div>\n  );\n};\n\nUploadTips.defaultProps = {\n  renderTips: (defaultTips) => {\n    return defaultTips;\n  },\n};\n\nconst DragArea = ({ children, className }) => {\n  const { open, accept, onOpenChange, onFileSelected } = useContext();\n  if (!open) {\n    return null;\n  }\n  return (\n    <div\n      className={classnames(style[\"drag-area\"], className)}\n      onDragOver={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        e.dataTransfer.dropEffect = \"copy\";\n      }}\n      onDrop={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        if (e.dataTransfer.files.length === 0) {\n          return;\n        }\n        onOpenChange(false);\n        const fileList = Array.from(e.dataTransfer.files).filter((file) => {\n          return acceptFunc(file, accept);\n        });\n        onFileSelected(fileList);\n      }}\n      onDragEnd={() => {\n        onOpenChange(false);\n      }}\n    >\n      <Button\n        className={style[\"upload-drag-close\"]}\n        type=\"text\"\n        shape=\"circle\"\n        size=\"small\"\n        icon={<Icon type=\"icon-close-bold\" />}\n        onClick={() => {\n          onOpenChange(false);\n        }}\n      />\n      {children}\n    </div>\n  );\n};\n\nDragArea.defaultProps = {\n  children: <UploadTips />,\n};\n\nexport default DragArea;\n","import { useState, useMemo, useEffect } from \"react\";\nimport get from \"lodash/get\";\nimport { App, Space, Divider, Empty } from \"antd\";\nimport Title from \"./Title\";\nimport DragArea, { DragAreaOuter, DragButton, UploadButton } from \"./DragArea\";\nimport { List } from \"@components/File\";\nimport FilePreview from \"@components/FilePreview\";\nimport { useIntl, FormattedMessage, IntlProvider } from \"@components/Intl\";\nimport { useFileUpload } from \"@common/hocs/withInputFile\";\nimport { usePreset } from \"@components/Global\";\nimport importMessages from \"./locale\";\nimport style from \"./style.module.scss\";\n\nconst FileListInner = ({\n  maxLength,\n  list: previewList,\n  setList,\n  defaultTab,\n  apis: currentApis,\n  getPermission,\n  titleExtra,\n  fileSize,\n  accept,\n  getPopupContainer,\n}) => {\n  const { apis: baseApis } = usePreset();\n  const apis = Object.assign({}, baseApis, currentApis);\n  const { fileList: uploadingList, onFileSelected } = useFileUpload({\n    maxLength,\n    multiple: true,\n    value: previewList,\n    onChange: setList,\n    concurrentCount: 1,\n    onAdd: () => {\n      setCurrentTab(\"list\");\n    },\n    onSave: apis.onSave,\n    ossUpload: apis.ossUpload,\n  });\n  const [currentTab, setCurrentTab] = useState(defaultTab);\n  const { formatMessage } = useIntl({ moduleName: \"FileList\" });\n  const { message } = App.useApp();\n  const previewMap = useMemo(() => {\n    return new Map(\n      previewList.map((item) => {\n        return [item.ossId, item];\n      })\n    );\n  }, [previewList]);\n  const [currentPreviewFileId, setCurrentPreviewFileId] = useState(\n    get(previewList, \"[0].ossId\", null)\n  );\n  useEffect(() => {\n    if (currentPreviewFileId && previewMap.get(currentPreviewFileId)) {\n      return;\n    }\n    setCurrentPreviewFileId(get(previewList, \"[0].ossId\", null));\n  }, [previewList, previewMap, currentPreviewFileId]);\n  const itemApis = {\n    onPreview: (item) => {\n      setCurrentPreviewFileId(item.ossId);\n      setCurrentTab(\"preview\");\n    },\n    onDelete: async (item) => {\n      apis.onDelete && (await apis.onDelete(item));\n      setList((list) => {\n        const newList = list.slice(0);\n        const index = list.findIndex(({ ossId }) => ossId === item.ossId);\n        index > -1 && newList.splice(index, 1);\n        return newList;\n      });\n      message.success(\n        formatMessage({ id: \"successDelete\" }, { name: item.filename })\n      );\n    },\n    onEdit: async ({ formData, item }) => {\n      apis.onEdit && (await apis.onEdit({ formData, item }));\n      setList((list) => {\n        const newList = list.slice(0);\n        const index = list.findIndex(({ ossId }) => ossId === item.ossId);\n        index > -1 &&\n          newList.splice(\n            index,\n            1,\n            Object.assign({}, item, { filename: formData.name })\n          );\n        return newList;\n      });\n      message.success(\n        formatMessage({ id: \"successEditFileName\" }, { name: item.filename })\n      );\n    },\n  };\n\n  const titleExtraInner =\n    typeof titleExtra === \"function\"\n      ? titleExtra({\n          currentPreviewFileId,\n          currentTab,\n        })\n      : titleExtra;\n\n  return (\n    <DragAreaOuter\n      title={\n        <Title\n          currentTab={currentTab}\n          setCurrentTab={setCurrentTab}\n          previewMap={previewMap}\n          previewList={previewList}\n          getPermission={getPermission}\n          currentPreviewFileId={currentPreviewFileId}\n          setCurrentPreviewFileId={setCurrentPreviewFileId}\n          itemApis={itemApis}\n          getPopupContainer={getPopupContainer}\n        >\n          <Space split={<Divider type=\"vertical\" />}>\n            {titleExtraInner}\n            {getPermission(\"add\", {}) ? (\n              <>\n                <DragButton>\n                  <FormattedMessage id=\"dragText\" moduleName=\"FileList\" />\n                </DragButton>\n                <UploadButton>\n                  <FormattedMessage id=\"uploadFile\" moduleName=\"FileList\" />\n                </UploadButton>\n              </>\n            ) : null}\n          </Space>\n        </Title>\n      }\n      fileSize={fileSize}\n      maxLength={maxLength}\n      onFileSelected={onFileSelected}\n      accept={accept}\n    >\n      {currentTab === \"list\" ? (\n        <List\n          dataSource={[...uploadingList, ...previewList]}\n          getPermission={getPermission}\n          apis={itemApis}\n        />\n      ) : null}\n      {currentTab === \"preview\" ? (\n        currentPreviewFileId ? (\n          <div className={style[\"file-preview-inner\"]}>\n            <FilePreview\n              className={style[\"file-preview\"]}\n              id={currentPreviewFileId}\n              apis={apis}\n              originName={previewMap.get(currentPreviewFileId)?.filename}\n            />\n          </div>\n        ) : (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            className=\"ant-empty-normal\"\n          />\n        )\n      ) : null}\n      <DragArea />\n    </DragAreaOuter>\n  );\n};\n\nFileListInner.defaultProps = {\n  defaultTab: \"list\",\n  titleExtra: null,\n  accept: [\".png\", \".jpg\", \".pdf\", \".docx\", \".doc\"],\n  fileSize: 20,\n  maxLength: Number.MAX_VALUE,\n  getPermission: () => true,\n};\n\nconst FileList = (props) => {\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"FileList\">\n      <FileListInner {...props} />\n    </IntlProvider>\n  );\n};\n\nexport default FileList;\n","import { Space, Divider, Row, Col } from \"antd\";\nimport DragArea, { DragAreaOuter, DragButton, UploadButton } from \"./DragArea\";\nimport { List } from \"@components/File\";\nimport { useFileUpload } from \"@common/hocs/withInputFile\";\nimport { usePreset } from \"@components/Global\";\n\nconst FileUpload = ({\n  maxLength,\n  list: previewList,\n  setList,\n  apis: currentApis,\n  getPermission,\n  fileSize,\n  accept,\n}) => {\n  const { apis: baseApis } = usePreset();\n  const apis = Object.assign({}, baseApis, currentApis);\n  const { fileList: uploadingList, onFileSelected } = useFileUpload({\n    maxLength,\n    multiple: true,\n    value: previewList,\n    onChange: setList,\n    concurrentCount: 1,\n    onSave: apis.onSave,\n    ossUpload: apis.ossUpload,\n  });\n  return (\n    <DragAreaOuter\n      title={\n        <Row>\n          <Col flex={1}></Col>\n          <Col>\n            <Space split={<Divider type=\"vertical\" />}>\n              <DragButton />\n              <UploadButton>上传</UploadButton>\n            </Space>\n          </Col>\n        </Row>\n      }\n      fileSize={fileSize}\n      maxLength={maxLength}\n      onFileSelected={onFileSelected}\n      accept={accept}\n    >\n      <List\n        dataSource={[...uploadingList, ...previewList]}\n        getPermission={getPermission}\n        apis={apis}\n      />\n      <DragArea />\n    </DragAreaOuter>\n  );\n};\n\nFileUpload.defaultProps = {\n  accept: [\".png\", \".jpg\", \".pdf\", \".docx\", \".doc\"],\n  fileSize: 20,\n  maxLength: Number.MAX_VALUE,\n  getPermission: () => true,\n};\n\nexport default FileUpload;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__9Fu-3__ujG5g\",\"container-html\":\"style_container-html__IsNVq__ujG5g\",\"html-inner\":\"style_html-inner__S05cI__ujG5g\",\"loading\":\"style_loading__r3aiE__ujG5g\",\"control-bar\":\"style_control-bar__kTKau__ujG5g\",\"scroller\":\"style_scroller__HOq7b__ujG5g\",\"outer\":\"style_outer__ntu--__ujG5g\",\"file-name\":\"style_file-name__UPbbe__ujG5g\",\"file-options\":\"style_file-options__5TE5l__ujG5g\",\"scale-input\":\"style_scale-input__JdF1K__ujG5g\",\"text-outer\":\"style_text-outer__TzhuG__ujG5g\",\"error\":\"style_error__wSaxt__ujG5g\",\"text-inner\":\"style_text-inner__jdi-A__ujG5g\",\"image-inner\":\"style_image-inner__zTiFU__ujG5g\"};","import iFrameResize from \"iframe-resizer\";\nimport { useEffect, useRef } from \"react\";\nimport { getPublicPath } from \"@kne/remote-loader\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\nimport { createWithFetch } from \"@kne/react-fetch\";\n\nconst HtmlInnerPreview = createWithFetch({\n  transformResponse: ({ data }) => {\n    return {\n      data: {\n        code: 200,\n        results: data,\n      },\n    };\n  },\n})(({ data }) => {\n  const ref = useRef(null);\n  useEffect(() => {\n    const parser = new DOMParser();\n    const domDocument = parser.parseFromString(data, \"text/html\");\n    domDocument.querySelectorAll(\"script\").forEach((el) => {\n      el.parentElement.removeChild(el);\n    });\n    const scriptPath =\n      getPublicPath(\"components-core\") + \"/iframeResizer.contentWindow.js\";\n    const script = document.createElement(\"script\");\n    script.src = scriptPath;\n    domDocument.head.appendChild(script);\n    const style = document.createElement(\"style\");\n    style.innerText =\n      \"html,body{height:auto!important;}body{pointer-events: none;background: #FFFFFF;}\";\n    domDocument.head.appendChild(style);\n    ref.current.srcdoc = domDocument.documentElement.outerHTML;\n  }, [data]);\n  useEffect(() => {\n    iFrameResize.iframeResize({ checkOrigin: false }, ref.current);\n  }, []);\n  return <iframe title=\"简历预览\" frameBorder=\"0\" width=\"100%\" ref={ref} />;\n});\n\nconst HtmlPreview = ({ className, url, maxWidth }) => {\n  return (\n    <div\n      className={classnames(className, style[\"container\"])}\n      style={{\n        maxWidth,\n      }}\n    >\n      <HtmlInnerPreview url={url} />\n      {/*<iframe\n        title=\"简历预览\"\n        src={url}\n        frameBorder=\"0\"\n        width=\"100%\"\n        ref={ref}\n        onLoad={() => {\n          const scriptPath =\n            getPublicPath(\"components-core\") +\n            \"/iframeResizer.contentWindow.js\";\n          if (!ref.current.contentDocument) {\n            console.warn(\n              `跨域情况无法开启自动高度计算，请将${scriptPath}脚本加入目标页面`\n            );\n            return;\n          }\n          const script = document.createElement(\"script\");\n          script.src = scriptPath;\n          ref.current.contentDocument.head.appendChild(script);\n          ref.current.contentDocument.body.style = \"pointer-events: none;\";\n        }}\n      />*/}\n    </div>\n  );\n};\n\nexport default HtmlPreview;\n","import { usePreset } from \"@components/Global\";\nimport { createWithFetch } from \"@kne/react-fetch\";\nimport { typeFormatComponent } from \"./typeFormat\";\n\nconst OfficePreviewInner = createWithFetch({\n  cache: \"office-preview\",\n})(({ data, className, ...props }) => {\n  const { data: fileList } = data;\n  return fileList.map(({ url }) => {\n    const PreviewComponent = typeFormatComponent(url);\n    return (\n      <PreviewComponent {...props} url={url} key={url} className={className} />\n    );\n  });\n});\n\nconst OfficePreview = ({ id, apis: propsApis, className, ...props }) => {\n  const { apis: baseApis } = usePreset();\n  const apis = Object.assign({}, baseApis, propsApis);\n  return (\n    <OfficePreviewInner\n      {...props}\n      {...apis.previewOffice}\n      data={{ id }}\n      className={className}\n    />\n  );\n};\n\nexport default OfficePreview;\n","import { memo, useState } from \"react\";\nimport { Space, Spin } from \"antd\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport \"react-pdf/dist/esm/Page/TextLayer.css\";\nimport style from \"./style.module.scss\";\nimport { useResize } from \"@components/Common\";\nimport { getPublicPath } from \"@kne/remote-loader\";\nimport classnames from \"classnames\";\n\nconst PdfPreview = memo(({ url, maxWidth, scale, rotate, className }) => {\n  const [numPages, setNumPages] = useState(0);\n  pdfjs.GlobalWorkerOptions.workerSrc =\n    getPublicPath(\"components-core\") + \"/pdfjs/build/pdf.worker.js\";\n  const [width, setWidth] = useState(maxWidth);\n  const ref = useResize(() => {\n    if (ref.current.clientWidth) {\n      setWidth(Math.min(ref.current.clientWidth, maxWidth));\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={classnames(className, style[\"container\"])}\n      style={{\n        maxWidth: maxWidth,\n      }}\n    >\n      <Document\n        file={{ url }}\n        options={{\n          standardFontDataUrl:\n            getPublicPath(\"components-core\") + \"/pdfjs/standard_fonts/\",\n          cMapUrl: getPublicPath(\"components-core\") + \"/pdfjs/cmaps/\",\n          cMapPacked: true,\n        }}\n        error=\"PDF文件加载失败\"\n        loading={\n          <div className={style[\"loading\"]}>\n            <Spin />\n          </div>\n        }\n        noData=\"未指定PDF文件\"\n        onLoadSuccess={({ numPages }) => {\n          setNumPages(numPages);\n          console.log(\"onLoadSuccess\");\n        }}\n        onLoadError={(props) => {\n          console.log(\"onLoadError\", props);\n        }}\n        onSourceError={(props) => {\n          console.log(\"onSourceError\", props);\n        }}\n      >\n        <Space direction=\"vertical\">\n          {numPages >= 1 &&\n            Array.from(new Array(numPages), (el, index) => (\n              <Page\n                key={`page_${index}`}\n                className=\"preview-item\"\n                scale={scale / 100}\n                rotate={rotate}\n                pageNumber={index + 1}\n                width={width}\n                loading={null}\n                renderAnnotationLayer={false}\n                renderTextLayer={true}\n                noData=\"未指定页面\"\n              />\n            ))}\n        </Space>\n      </Document>\n    </div>\n  );\n});\n\nPdfPreview.defaultProps = {\n  autoSize: true,\n  renderTextLayer: false,\n  scale: 100,\n  rotate: 0,\n  maxWidth: 1200,\n};\n\nexport default PdfPreview;\n","import { useState, useEffect } from \"react\";\nimport TextEscape from \"@kne/react-text-escape\";\nimport axios from \"axios\";\nimport style from \"./style.module.scss\";\nimport { Spin } from \"antd\";\nimport classnames from \"classnames\";\n\nconst TextPreview = ({ url, className, maxWidth }) => {\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    axios.get(url).then(\n      ({ data }) => {\n        setText(data);\n        setLoading(false);\n      },\n      () => {\n        setLoading(false);\n        setError(true);\n      }\n    );\n  }, [url]);\n\n  return (\n    <div\n      className={classnames(className, style[\"container\"])}\n      style={{\n        maxWidth,\n      }}\n    >\n      {loading ? (\n        <div className={style[\"loading\"]}>\n          <Spin />\n        </div>\n      ) : null}\n      <div className={style[\"text-outer\"]}>\n        {error ? (\n          <div className={style[\"error\"]}>文件加载失败</div>\n        ) : (\n          <TextEscape text={text} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TextPreview;\n","import { Result } from \"antd\";\nimport style from \"./style.module.scss\";\n\nconst UnknownPreview = ({ maxWidth }) => {\n  return (\n    <div\n      className={style[\"container\"]}\n      style={{\n        maxWidth,\n      }}\n    >\n      <div className={style[\"text-outer\"]}>\n        <Result\n          status=\"500\"\n          title=\"不支持的文件类型\"\n          subTitle=\"系统不支持该文件类型预览，请下载到本地后进行预览\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default UnknownPreview;\n","import { useEffect, useState } from \"react\";\nimport style from \"./style.module.scss\";\nimport { Spin } from \"antd\";\nimport classnames from \"classnames\";\n\nconst ImagePreview = ({ url, scale, rotate, className, maxWidth }) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const image = new Image();\n    image.src = url;\n    const handlerLoad = () => {\n      setLoading(false);\n    };\n\n    const handlerError = () => {\n      setLoading(false);\n      setError(true);\n    };\n\n    image.addEventListener(\"load\", handlerLoad);\n    image.addEventListener(\"error\", handlerError);\n    return () => {\n      image.removeEventListener(\"load\", handlerLoad);\n      image.removeEventListener(\"error\", handlerError);\n    };\n  }, [url, scale, rotate]);\n  return (\n    <div\n      className={classnames(className, style[\"container\"])}\n      style={{\n        maxWidth,\n      }}\n    >\n      {loading ? (\n        <div className={style[\"loading\"]}>\n          <Spin />\n        </div>\n      ) : null}\n      {error ? (\n        <div className={style[\"error\"]}>图片加载失败</div>\n      ) : (\n        <img src={url} alt=\"简历预览\" />\n      )}\n    </div>\n  );\n};\n\nexport default ImagePreview;\n","import HtmlPreview from \"./HtmlPreview\";\nimport OfficePreview from \"./OfficePreview\";\nimport PdfPreview from \"./PdfPreview\";\nimport TextPreview from \"./TextPreview\";\nimport UnknownPreview from \"./UnknownPreview\";\nimport ImagePreview from \"./ImagePreview\";\n\nconst typeFormat = (url) => {\n  const path = (url || \"\").split(\"?\")[0];\n  const _path = path.toLowerCase();\n  if (/.txt$/.test(_path)) {\n    return \"txt\";\n  }\n  if (/.pdf$/.test(_path)) {\n    return \"pdf\";\n  }\n  if (/.(png|jpg|jpeg)$/.test(_path)) {\n    return \"image\";\n  }\n  if (/.(html|htm)$/.test(_path)) {\n    return \"html\";\n  }\n  if (/.(doc|docx|xls|xlsx|ppt|pptx)$/.test(_path)) {\n    return \"office\";\n  }\n  return \"unknown\";\n};\n\nexport default typeFormat;\n\nexport const typeFormatComponent = (url) => {\n  const mapping = {\n    txt: TextPreview,\n    pdf: PdfPreview,\n    image: ImagePreview,\n    html: HtmlPreview,\n    office: OfficePreview,\n    unknown: UnknownPreview,\n  };\n\n  return mapping[typeFormat(url)];\n};\n","import withOSSFile from \"@common/hocs/withOSSFile\";\nimport typeFormat, { typeFormatComponent } from \"./typeFormat\";\nimport OfficePreview from \"./OfficePreview\";\n\nconst OSSFilePreview = withOSSFile(({ data, id, className, ...props }) => {\n  const PreviewComponent = typeFormatComponent(data);\n  if (typeFormat(data) === \"office\") {\n    return <OfficePreview {...props} id={id} className={className} />;\n  }\n  return <PreviewComponent {...props} className={className} url={data} />;\n});\n\nexport default OSSFilePreview;\n","import typeFormat from \"./typeFormat\";\nimport OfficePreview from \"./OfficePreview\";\nimport OSSFilePreview from \"./OSSFilePreview\";\n\nconst FilePreview = ({ id, originName, ...props }) => {\n  if (typeFormat(originName) === \"office\") {\n    return <OfficePreview {...props} id={id} originName={originName} />;\n  }\n  return <OSSFilePreview {...props} id={id} originName={originName} />;\n};\n\nexport default FilePreview;\n","import useResize from \"@common/hooks/useResize\";\nimport last from \"lodash/last\";\nimport { forwardRef, useRef, useState } from \"react\";\nimport { List } from \"antd\";\nimport Fetch from \"@kne/react-fetch\";\nimport isEqual from \"lodash/isEqual\";\nimport classnames from \"classnames\";\n\nconst defaultColumns = [\n  {\n    width: 786,\n    col: 1,\n    size: 15,\n  },\n  {\n    width: 960,\n    col: 2,\n    size: 12,\n  },\n  {\n    width: 1360,\n    col: 3,\n    size: 12,\n  },\n  {\n    width: 1680,\n    col: 4,\n    size: 12,\n  },\n  {\n    width: 1920,\n    col: 5,\n    size: 15,\n  },\n];\n\nexport const useFlexBox = (props) => {\n  const { columns, onChange } = Object.assign(\n    {},\n    { columns: defaultColumns },\n    props\n  );\n  const [column, setColumn] = useState(null);\n  const columnRef = useRef(null);\n  const ref = useResize((el) => {\n    const width = el.clientWidth;\n    const column =\n      columns.find((item, index) => {\n        return item.width >= width;\n      }) || last(columns);\n    if (!isEqual(column, columnRef.current)) {\n      setColumn(column);\n      columnRef.current && onChange && onChange(column);\n      columnRef.current = column;\n    }\n  });\n\n  return { ref, column };\n};\n\nconst FlexBox = ({ columns, outerClassName, gutter, ...props }) => {\n  const { ref, column } = useFlexBox({ columns });\n  return (\n    <div ref={ref} className={outerClassName}>\n      {column && (\n        <List\n          {...props}\n          grid={{\n            gutter,\n            column: column.col,\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nFlexBox.defaultProps = {\n  gutter: 16,\n  columns: defaultColumns,\n};\n\nFlexBox.Item = List.Item;\n\nconst FlexBoxFetch = forwardRef(\n  (\n    {\n      columns,\n      api,\n      getFetchApi,\n      outerClassName,\n      className,\n      gutter,\n      dataFormat,\n      ...props\n    },\n    forwardRef\n  ) => {\n    const { ref, column } = useFlexBox({ columns });\n    return (\n      <div ref={ref} className={outerClassName}>\n        {column && (\n          <Fetch\n            {...(api || getFetchApi(column))}\n            ref={forwardRef}\n            render={({ data, isComplete }) => {\n              return (\n                <List\n                  {...props}\n                  className={classnames(className, \"loading-container\", {\n                    \"is-loading\": !isComplete,\n                  })}\n                  dataSource={dataFormat(data)}\n                  grid={{\n                    gutter,\n                    column: column.col,\n                  }}\n                />\n              );\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nFlexBoxFetch.defaultProps = {\n  gutter: 16,\n  columns: defaultColumns,\n  dataFormat: (data) => {\n    return data.pageData;\n  },\n};\n\nFlexBox.Fetch = FlexBoxFetch;\n\nexport default FlexBox;\n","import { useFormContext, util } from \"@kne/react-form-antd\";\nimport { Popover } from \"antd\";\nimport { useLayoutEffect, useState, useRef, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport useClickOutside from \"@kne/use-click-outside\";\nimport style from \"./style.module.scss\";\n\nconst useErrorMsg = ({ name, groupName, groupIndex }) => {\n  const { emitter, formState } = useFormContext();\n  const targetFieldInfo = useRef({ name, groupName, groupIndex });\n  targetFieldInfo.current = { name, groupName, groupIndex };\n  const formStateRef = useRef(formState);\n  formStateRef.current = formState;\n  const [currentError, setCurrentError] = useState(null);\n  useEffect(() => {\n    const target = emitter.addListener(\n      \"form-field-validate-complete\",\n      ({ id, validate }) => {\n        const field = formStateRef.current[id];\n        if (!field) {\n          return;\n        }\n        const currentField = targetFieldInfo.current;\n        if (\n          field.name === currentField.name &&\n          (!currentField.groupName ||\n            (field.groupName === currentField.groupName &&\n              field.groupIndex === currentField.groupIndex))\n        ) {\n          setCurrentError(\n            validate.status === 2\n              ? Object.assign({}, validate, {\n                  label: field.label,\n                  errMsg: util.compileErrMsg(validate.msg, field.label),\n                })\n              : null\n          );\n        }\n      }\n    );\n    return () => {\n      target && target.remove();\n    };\n  }, [emitter]);\n  return currentError;\n};\n\nconst ErrorTip = ({\n  name,\n  groupName,\n  overlayClassName,\n  errorRender,\n  groupIndex,\n  children,\n}) => {\n  const currentError = useErrorMsg({ name, groupName, groupIndex });\n  const [isHover, setIsHover] = useState(false);\n  const open = currentError && isHover;\n  const errorContent =\n    open &&\n    errorRender(\n      Object.assign({}, currentError, { closeHover: () => setIsHover(false) })\n    );\n  const popoverChildrenRef = useRef(null),\n    popoverContentRef = useRef(null);\n\n  const outerRef = useClickOutside(() => {\n    setIsHover(false);\n  });\n  outerRef.current = {\n    contains: (target) => {\n      return (\n        popoverChildrenRef.current.contains(target) ||\n        (popoverContentRef.current &&\n          popoverContentRef.current.contains(target))\n      );\n    },\n  };\n  const [width, setWidth] = useState(0);\n  useLayoutEffect(() => {\n    const callback = () => {\n      const target = popoverChildrenRef.current.querySelector(\n        \".react-form__field-component\"\n      );\n      target && setWidth(target.clientWidth);\n    };\n    callback();\n    const resizeObserver = new ResizeObserver(callback);\n    resizeObserver.observe(popoverChildrenRef.current);\n    const mutationObserver = new MutationObserver(callback);\n    mutationObserver.observe(popoverChildrenRef.current, {\n      subtree: true,\n      childList: true,\n    });\n    return () => {\n      mutationObserver.disconnect();\n      resizeObserver.disconnect();\n    };\n  }, []);\n  return (\n    <Popover\n      open={!!errorContent}\n      overlayClassName={classnames(\n        overlayClassName,\n        style[\"error-tip-overlay\"]\n      )}\n      content={\n        errorContent && (\n          <div\n            ref={popoverContentRef}\n            style={{ width }}\n            className={classnames(style[\"error-tip-overlay-content\"])}\n          >\n            {errorContent}\n          </div>\n        )\n      }\n      placement=\"bottom\"\n      transitionName={\"ant-slide-up\"}\n      arrow={false}\n    >\n      <div\n        className={classnames(\"error-tip\")}\n        ref={popoverChildrenRef}\n        onMouseEnter={() => {\n          setIsHover(true);\n        }}\n      >\n        {children}\n      </div>\n    </Popover>\n  );\n};\n\nErrorTip.defaultProps = {\n  errorRender: () => {\n    return null;\n  },\n};\n\nexport default ErrorTip;\n","import { Col, Row } from \"antd\";\nimport { useFormContext } from \"@kne/react-form-antd\";\nimport Features from \"@components/Features\";\nimport { Fragment, useEffect, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Tooltip from \"@components/Tooltip\";\nimport Icon from \"@components/Icon\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\n\nconst FieldList = ({ list, groupArgs, itemRender }) => {\n  const context = useFormContext();\n  const contextApi = Object.assign({}, context, groupArgs ? { groupArgs } : {});\n  const hiddenRef = useRef(null);\n  const [isMount, setIsMount] = useState(false);\n  useEffect(() => {\n    setIsMount(true);\n  }, []);\n\n  return (\n    <>\n      <div ref={hiddenRef} style={{ display: \"none\" }} />\n      {list\n        .filter((item) => {\n          if (typeof item.props.display === \"function\") {\n            return item.props.display(contextApi);\n          }\n          return item.props.display !== false;\n        })\n        .map((item, index) => {\n          const key =\n            item.props.name + index ||\n            (groupArgs && groupArgs[0] + index) ||\n            index;\n          const targetProps = { key, list, props: item.props },\n            componentProps = Object.assign({}, item.props),\n            ComponentItem = item.type;\n          [\n            \"display\",\n            \"block\",\n            \"hidden\",\n            \"setExtraProps\",\n            \"isBlock\",\n            \"featureId\",\n            \"tips\",\n          ].forEach((key) => {\n            if (item.props.hasOwnProperty(key)) {\n              targetProps[key] = item.props[key];\n            }\n            delete componentProps[key];\n          });\n\n          if (targetProps.hasOwnProperty(\"isBlock\")) {\n            componentProps[\"block\"] = targetProps.isBlock;\n          }\n\n          const innerComponent = (\n            <ComponentItem\n              {...Object.assign(\n                {},\n                componentProps,\n                typeof targetProps.setExtraProps === \"function\"\n                  ? targetProps.setExtraProps({\n                      props: componentProps,\n                      contextApi,\n                    })\n                  : {}\n              )}\n              onChange={(...args) => {\n                return (\n                  item.props.onChange &&\n                  item.props.onChange(...args, contextApi)\n                );\n              }}\n            />\n          );\n          const inner = targetProps.hidden\n            ? isMount && createPortal(innerComponent, hiddenRef.current)\n            : itemRender(\n                targetProps.tips ? (\n                  <Row gutter={8} align=\"top\">\n                    <Col flex={1}>{innerComponent}</Col>\n                    <Col>\n                      <Tooltip content={targetProps.tips}>\n                        <span\n                          className={classnames(style[\"field-tips\"], {\n                            [style[\"label-hidden\"]]: componentProps.labelHidden,\n                          })}\n                        >\n                          <Icon type=\"icon-xinxi-miaobian\" />\n                        </span>\n                      </Tooltip>\n                    </Col>\n                  </Row>\n                ) : (\n                  innerComponent\n                ),\n                targetProps\n              );\n          return (\n            <Fragment key={key}>\n              {targetProps.hasOwnProperty(\"featureId\") ? (\n                <Features id={targetProps.featureId} key={key}>\n                  {inner}\n                </Features>\n              ) : (\n                inner\n              )}\n            </Fragment>\n          );\n        })}\n    </>\n  );\n};\n\nexport default FieldList;\n","import { forwardRef, useEffect, useState } from \"react\";\nimport { usePreset } from \"@components/Global\";\nimport get from \"lodash/get\";\nimport formPreset from \"@components/FormInfo/preset\";\nimport { IntlProvider } from \"@components/Intl\";\nimport importMessages from \"@components/FormInfo/locale\";\nimport FormLangProvider from \"@components/FormInfo/FormLangProvider\";\nimport InfoPage from \"@components/InfoPage\";\nimport { Provider as HelperGuideProvider } from \"@components/FormInfo/HelperGuideLabel\";\nimport { FormAntd as ReactForm } from \"@kne/react-form-antd\";\nimport classnames from \"classnames\";\nimport style from \"@components/FormInfo/style.module.scss\";\n\nconst SetPreset = ({ children }) => {\n  const [isPreset, setIsPreset] = useState(false);\n  const preset = usePreset();\n  const formInfo = get(preset, \"formInfo\", {}),\n    locale = get(preset, \"locale\");\n  useEffect(() => {\n    formPreset(formInfo, { locale });\n    setIsPreset(true);\n  }, [formInfo, locale]);\n  if (!isPreset) {\n    return null;\n  }\n  return children;\n};\n\nconst Form = forwardRef(\n  ({ className, helperGuideName, children, lang, ...props }, ref) => {\n    return (\n      <IntlProvider importMessages={importMessages} moduleName=\"FormInfo\">\n        <FormLangProvider value={lang}>\n          <InfoPage>\n            <HelperGuideProvider value={helperGuideName}>\n              <ReactForm\n                {...props}\n                ref={ref}\n                className={classnames(className, style[\"form-outer\"])}\n              >\n                <SetPreset>{children}</SetPreset>\n              </ReactForm>\n            </HelperGuideProvider>\n          </InfoPage>\n        </FormLangProvider>\n      </IntlProvider>\n    );\n  }\n);\nForm.defaultProps = {\n  type: \"inner\",\n};\n\nexport default Form;\n","import { useFormContext } from \"@kne/react-form-antd\";\nimport LoadingButton from \"@components/LoadingButton\";\n\nconst FormApiButton = ({ onClick, ...props }) => {\n  const context = useFormContext();\n  return (\n    <LoadingButton\n      {...props}\n      onClick={(e) => {\n        return onClick(context, e);\n      }}\n    />\n  );\n};\n\nexport default FormApiButton;\n","import Drawer, { useDrawer } from \"@components/Drawer\";\nimport classnames from \"classnames\";\nimport {\n  CancelButton,\n  FormAntd as Form,\n  SubmitButton,\n} from \"@kne/react-form-antd\";\nimport FetchButton from \"@common/components/FetchButton\";\nimport { IntlProvider } from \"@components/Intl\";\nimport style from \"./style.module.scss\";\nimport importMessages from \"./locale\";\n\nconst defaultFooterButtons = [\n  { children: \"取消\", ButtonComponent: CancelButton },\n  {\n    type: \"primary\",\n    children: \"保存\",\n    ButtonComponent: SubmitButton,\n    autoClose: false,\n  },\n];\n\nconst computedCommonProps = ({\n  className,\n  withDecorator,\n  footerButtons = defaultFooterButtons,\n  formProps,\n  ...props\n}) => {\n  return {\n    ...props,\n    footerButtons,\n    className: classnames(className, style[\"form-outer\"], style[\"form-drawer\"]),\n    withDecorator: (render) => {\n      const innerRender = (props) => {\n        const _formProps =\n          typeof formProps === \"function\" ? formProps(props) : formProps;\n        return (\n          <Form {..._formProps}>\n            <IntlProvider importMessages={importMessages} moduleName=\"FormInfo\">\n              {render(props)}\n            </IntlProvider>\n          </Form>\n        );\n      };\n      return typeof withDecorator === \"function\"\n        ? withDecorator(innerRender)\n        : innerRender();\n    },\n  };\n};\n\nconst FormDrawer = (props) => {\n  return <Drawer {...computedCommonProps(props)} />;\n};\n\nexport default FormDrawer;\n\nexport const useFormDrawer = () => {\n  const drawer = useDrawer();\n  return (props) => drawer(computedCommonProps(props));\n};\n\nexport const FormDrawerButton = (props) => {\n  const formDrawer = useFormDrawer();\n  return <FetchButton {...props} modalFunc={formDrawer} />;\n};\n","import { Col, Row } from \"antd\";\nimport InfoPage from \"@components/InfoPage\";\nimport { useFlexBox } from \"@components/FlexBox\";\nimport FieldList from \"./FieldList\";\n\nconst FormInfo = ({ list, groupArgs, column, gap, ...props }) => {\n  const { ref: flexBoxRef, column: flexBoxColumn } = useFlexBox();\n\n  const renderInner = (column) => {\n    return (\n      <Row gutter={[gap || 24, 0]}>\n        <FieldList\n          list={list}\n          groupArgs={groupArgs}\n          itemRender={(children, targetProps) => {\n            return (\n              <Col\n                span={\n                  targetProps.block === true\n                    ? 24\n                    : Math.round(24 / (column || 1))\n                }\n              >\n                {children}\n              </Col>\n            );\n          }}\n        />\n      </Row>\n    );\n  };\n\n  const renderColumn = () => {\n    if (Number.isInteger(column) && column > 0) {\n      return renderInner(column);\n    }\n    if (flexBoxColumn) {\n      return renderInner(flexBoxColumn.col);\n    }\n\n    return renderInner(2);\n  };\n\n  return (\n    <InfoPage.Part {...props}>\n      <div ref={flexBoxRef}>{renderColumn()}</div>\n    </InfoPage.Part>\n  );\n};\n\nFormInfo.defaultProps = {\n  column: 2,\n  list: [],\n};\n\nexport default FormInfo;\n","import { useFormContext } from \"@kne/react-form-antd\";\n\nconst FormItem = ({ children }) => {\n  const { openApi, formData } = useFormContext();\n  return children({ ...openApi, formData });\n};\n\nexport default FormItem;\n","import { createContext, useContext } from \"react\";\n\nconst context = createContext([]);\n\nexport const { Provider, Consumer } = context;\n\nexport const useFormLang = () => {\n  return useContext(context);\n};\n\nexport default Provider;\n","import Modal, { useModal } from \"@components/Modal\";\nimport classnames from \"classnames\";\nimport { CancelButton, SubmitButton } from \"@kne/react-form-antd\";\nimport { Form } from \"./formModule\";\nimport FetchButton from \"@common/components/FetchButton\";\nimport { IntlProvider, FormattedMessage } from \"@components/Intl\";\nimport style from \"./style.module.scss\";\nimport importMessages from \"./locale\";\n\nconst localeModuleName = \"FormInfo\";\n\nconst computedCommonProps = ({\n  className,\n  withDecorator,\n  footerButtons,\n  formProps,\n  ...props\n}) => {\n  return {\n    ...props,\n    footerButtons: footerButtons || [\n      {\n        children: (\n          <IntlProvider\n            importMessages={importMessages}\n            moduleName={localeModuleName}\n          >\n            <FormattedMessage id={\"Cancel\"} moduleName={localeModuleName} />\n          </IntlProvider>\n        ),\n        ButtonComponent: CancelButton,\n      },\n      {\n        type: \"primary\",\n        children: (\n          <IntlProvider\n            importMessages={importMessages}\n            moduleName={localeModuleName}\n          >\n            <FormattedMessage id={\"Save\"} moduleName={localeModuleName} />\n          </IntlProvider>\n        ),\n        ButtonComponent: SubmitButton,\n        autoClose: false,\n      },\n    ],\n    className: classnames(className, style[\"form-outer\"], style[\"form-modal\"]),\n    withDecorator: (render) => {\n      const innerRender = (props) => {\n        const _formProps =\n          typeof formProps === \"function\" ? formProps(props) : formProps;\n        return (\n          <Form {..._formProps}>\n            <IntlProvider importMessages={importMessages} moduleName=\"FormInfo\">\n              {render(props)}\n            </IntlProvider>\n          </Form>\n        );\n      };\n      return typeof withDecorator === \"function\"\n        ? withDecorator(innerRender)\n        : innerRender();\n    },\n  };\n};\n\nconst FormModal = (props) => {\n  return <Modal {...computedCommonProps(props)} />;\n};\n\nexport default FormModal;\n\nexport const useFormModal = () => {\n  const modal = useModal();\n  return (props) => modal(computedCommonProps(props));\n};\n\nexport const FormModalButton = (props) => {\n  const formModal = useFormModal();\n  return <FetchButton {...props} modalFunc={formModal} />;\n};\n","import FormModal, { FormModalButton, useFormModal } from \"./FormModal\";\nimport { Space, Steps } from \"antd\";\nimport { useState } from \"react\";\nimport {\n  CancelButton,\n  SubmitButton,\n  useFormContext,\n} from \"@kne/react-form-antd\";\n\nconst StepsContent = ({\n  setCurrent,\n  current,\n  items,\n  setStepData,\n  stepData,\n}) => {\n  const currentItem = items[current];\n  const { formData } = useFormContext();\n  return (\n    <Space className=\"full-space\" direction=\"vertical\">\n      <Steps\n        current={current}\n        onChange={(current) => {\n          setStepData((stepData) => {\n            const newStepData = stepData.slice(0);\n            newStepData[current] = formData;\n            return newStepData;\n          });\n          setCurrent(current);\n        }}\n        items={items}\n      />\n      {currentItem.children}\n    </Space>\n  );\n};\n\nconst useSteps = () => {\n  const [stepData, setStepData] = useState([]);\n  const [current, setCurrent] = useState(0);\n\n  return ({ items, formProps }) => {\n    const isLastStep = current === items.length - 1;\n    return {\n      stepData,\n      formProps: Object.assign({}, formProps, {\n        data: Object.assign({}, formProps.data?.[current], stepData[current]),\n        onSubmit: (data) => {\n          const newStepData = stepData.slice(0);\n          newStepData[current] = data;\n          setStepData(newStepData);\n          if (isLastStep) {\n            return formProps?.onSubmit(stepData);\n          }\n          setCurrent(current + 1);\n        },\n      }),\n      children: (\n        <StepsContent\n          items={items}\n          current={current}\n          setCurrent={setCurrent}\n          stepData={stepData}\n          setStepData={setStepData}\n        />\n      ),\n      footerButtons: [\n        { children: \"取消\", ButtonComponent: CancelButton },\n        {\n          type: \"primary\",\n          children: !isLastStep ? \"下一步\" : \"保存\",\n          ButtonComponent: SubmitButton,\n          autoClose: false,\n        },\n      ],\n    };\n  };\n};\n\nconst FormStepModal = (props) => {\n  const createSteps = useSteps();\n  const { footerButtons, children, formProps } = createSteps(props);\n  return (\n    <FormModal {...props} formProps={formProps} footerButtons={footerButtons}>\n      {children}\n    </FormModal>\n  );\n};\n\nexport default FormStepModal;\n\nexport const useFormStepModal = () => {\n  const formModal = useFormModal();\n  const createSteps = useSteps();\n  return (props) => {\n    const { footerButtons, children, formProps } = createSteps(props);\n    return formModal({\n      ...props,\n      formProps,\n      footerButtons,\n      children,\n    });\n  };\n};\n\nexport const FormStepModalButton = ({ modalProps, ...props }) => {\n  const createSteps = useSteps();\n  const { footerButtons, children, formProps } = createSteps(modalProps);\n  return (\n    <FormModalButton\n      {...props}\n      modalProps={Object.assign({}, modalProps, {\n        formProps,\n        footerButtons,\n        children,\n      })}\n    />\n  );\n};\n","import HelperGuide from \"@components/HelperGuide\";\nimport { createContext, useContext as useReactContext } from \"react\";\nimport { useGroup } from \"@kne/react-form-antd\";\nimport style from \"./style.module.scss\";\n\nconst context = createContext(\"\");\nexport const { Provider } = context;\n\nconst useContext = () => {\n  return useReactContext(context);\n};\n\nconst HelperGuideLabel = ({ name }) => {\n  const helperGuideName = useContext();\n  const group = useGroup();\n  return (\n    helperGuideName && (\n      <HelperGuide\n        className={style[\"helper-guide-field\"]}\n        name={\n          helperGuideName + \"-\" + (group.name ? group.name + \"-\" : \"\") + name\n        }\n      />\n    )\n  );\n};\n\nexport default HelperGuideLabel;\n","import { cloneElement, useRef } from \"react\";\nimport { Divider, Typography } from \"antd\";\nimport ConfirmButton from \"@components/ConfirmButton\";\nimport Icon from \"@components/Icon\";\nimport InfoPage from \"@components/InfoPage\";\nimport { GroupList, useFormContext } from \"@kne/react-form-antd\";\nimport FormInfo from \"./FormInfo\";\nimport classnames from \"classnames\";\nimport importMessages from \"./locale\";\nimport { FormattedMessage, IntlProvider } from \"@components/Intl\";\nimport get from \"lodash/get\";\nimport style from \"./style.module.scss\";\n\nconst List = ({\n  title,\n  addText,\n  minLength,\n  isUnshift,\n  maxLength,\n  defaultLength,\n  label,\n  name,\n  beforeAdd,\n  afterDelete,\n  column,\n  list,\n  listRender,\n  itemTitle,\n  outer,\n  renderChildren,\n  className,\n}) => {\n  const groupRef = useRef(null);\n  const context = useFormContext();\n  const { formData } = context;\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"FormInfo\">\n      {cloneElement(\n        outer,\n        {\n          title,\n          addText,\n          className: classnames(className, style[\"list-part\"]),\n          allowAdd: !(\n            maxLength && maxLength <= get(formData, `${name}.length`, 0)\n          ),\n          add: () => {\n            if (\n              typeof beforeAdd === \"function\"\n                ? beforeAdd(name, context) !== false\n                : true\n            ) {\n              groupRef.current.onAdd({ isUnshift: isUnshift });\n            }\n          },\n        },\n        renderChildren(\n          <GroupList name={name} defaultLength={defaultLength} ref={groupRef}>\n            {(...groupArgs) => {\n              const [key, { index, onRemove, length }] = groupArgs;\n              const formInfoProps = {\n                key,\n                column,\n                list:\n                  typeof list === \"function\"\n                    ? list(...groupArgs, context)\n                    : list,\n                title:\n                  typeof itemTitle === \"function\"\n                    ? itemTitle({ index, key, onRemove })\n                    : itemTitle,\n                groupArgs,\n                extra: (\n                  <FormattedMessage id=\"delText\" moduleName=\"FormInfo\">\n                    {(text) => (\n                      <ConfirmButton\n                        disabled={minLength && minLength >= length}\n                        danger\n                        className={\"btn-no-padding\"}\n                        message={\n                          <FormattedMessage\n                            id=\"delConfirm\"\n                            moduleName=\"FormInfo\"\n                            values={{ name: label || title }}\n                          />\n                        }\n                        type=\"link\"\n                        onClick={() => {\n                          onRemove(key);\n                          afterDelete && afterDelete(...groupArgs, context);\n                        }}\n                      >\n                        <Icon type=\"icon-shanchu\" />\n                        {text}\n                      </ConfirmButton>\n                    )}\n                  </FormattedMessage>\n                ),\n              };\n              return (\n                <div key={key} className={style[\"list-item\"]}>\n                  {typeof listRender === \"function\" ? (\n                    listRender(formInfoProps)\n                  ) : (\n                    <FormInfo\n                      {...formInfoProps}\n                      className={style[\"list-item-part\"]}\n                      gap={16}\n                    />\n                  )}\n                  <Divider />\n                </div>\n              );\n            }}\n          </GroupList>\n        )\n      )}\n    </IntlProvider>\n  );\n};\n\nconst Outer = ({ add, addText, className, allowAdd, ...props }) => {\n  return (\n    <InfoPage.Part\n      {...props}\n      className={className}\n      extra={\n        allowAdd && (\n          <FormattedMessage id=\"addText\" moduleName=\"FormInfo\">\n            {(text) => (\n              <Typography.Link className={style[\"list-btn\"]} onClick={add}>\n                <Icon type=\"icon-tianjia\" />\n                {addText || text}\n              </Typography.Link>\n            )}\n          </FormattedMessage>\n        )\n      }\n    />\n  );\n};\n\nList.defaultProps = {\n  minLength: 0,\n  isUnshift: true,\n  defaultLength: 1,\n  outer: <Outer />,\n  renderChildren: (children) => children,\n};\n\nexport default List;\n","// extracted by mini-css-extract-plugin\nexport default {\"ant-tag\":\"style_ant-tag__7ct2q__ujG5g\",\"input\":\"style_input__+OpvV__ujG5g\",\"overlay\":\"style_overlay__CXfU5__ujG5g\",\"is-disabled\":\"style_is-disabled__uX4qq__ujG5g\",\"input-icon\":\"style_input-icon__E3NjK__ujG5g\",\"large\":\"style_large__vMozz__ujG5g\",\"small\":\"style_small__ubqQ+__ujG5g\",\"input-inner\":\"style_input-inner__sY-6k__ujG5g\",\"input-custom\":\"style_input-custom__Kxq3n__ujG5g\",\"display-content\":\"style_display-content__qA1jn__ujG5g\",\"overlay-footer-extra\":\"style_overlay-footer-extra__yCzWX__ujG5g\",\"selected-tag\":\"style_selected-tag__BZsMM__ujG5g\",\"selected-tag-list\":\"style_selected-tag-list__As0ho__ujG5g\",\"selected-tag-inner\":\"style_selected-tag-inner__2NH59__ujG5g\",\"text-inner\":\"style_text-inner__Bq2Ji__ujG5g\",\"placeholder\":\"style_placeholder__odotY__ujG5g\",\"is-modal\":\"style_is-modal__4cj8L__ujG5g\",\"overlay-content\":\"style_overlay-content__kpGRn__ujG5g\"};","import createContext from \"@common/utils/createContext\";\n\nexport const { context, useContext, Provider, Consumer } = createContext();\n\nexport default context;\n","import style from \"./style.module.scss\";\nimport { Provider, useContext } from \"./context\";\nimport {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport useControlValue from \"@kne/use-control-value\";\nimport { withFetch } from \"@kne/react-fetch\";\nimport get from \"lodash/get\";\nimport { App, Popover, Space, Tag } from \"antd\";\nimport classnames from \"classnames\";\nimport Modal from \"@components/Modal\";\nimport Icon from \"@components/Icon\";\nimport isNil from \"lodash/isNil\";\nimport clone from \"lodash/clone\";\nimport last from \"lodash/last\";\nimport SimpleBar from \"@common/components/SimpleBar\";\n\nconst createValueWithMaxLength =\n  ({ maxLength, single, setValue, value, message }) =>\n  (newValue) =>\n    setValue(\n      (() => {\n        if (\n          !single &&\n          Number.isInteger(maxLength) &&\n          maxLength > 0 &&\n          newValue.length > maxLength\n        ) {\n          message(`最多选择${maxLength}个`);\n          return value;\n        }\n        return newValue;\n      })()\n    );\n\nconst renderDisplayLabel = ({ single, value, mapping, onClose }) => {\n  if (!value || !Array.isArray(value) || value.length === 0) {\n    return null;\n  }\n\n  if (single) {\n    return (\n      <span className={style[\"text-inner\"]}>\n        {get(mapping.get(value[0]), \"label\") || value[0]}\n      </span>\n    );\n  }\n\n  return value.map((item) => {\n    const mappingItem = mapping.get(item);\n    return (\n      <Tag\n        key={item}\n        className={style[\"display-tag\"]}\n        closable\n        onClose={(e) => {\n          e.preventDefault();\n          onClose(item, mappingItem);\n        }}\n      >\n        <span className={style[\"tag-inner\"]}>\n          {get(mappingItem, \"label\") || item}\n        </span>\n      </Tag>\n    );\n  });\n};\n\nconst ModalContent = forwardRef(\n  (\n    {\n      value: propsValue,\n      onChange,\n      extra,\n      showSelectedTag,\n      renderSelectedContent,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [value, setValue] = useState(propsValue);\n    const propsValueRef = useRef(propsValue);\n    propsValueRef.current = propsValue;\n    const [modalOpen, setModalOpen] = useState(false);\n    const { message } = App.useApp();\n    const setValueWithMaxLength = createValueWithMaxLength({\n      maxLength: props.maxLength,\n      single: props.single,\n      setValue,\n      value,\n      message: message.error,\n    });\n    useEffect(() => {\n      if (modalOpen) {\n        setValue(propsValueRef.current);\n      }\n    }, [modalOpen]);\n    useImperativeHandle(ref, () => {\n      return {\n        modalOpen: () => {\n          setModalOpen(true);\n        },\n        close: () => {\n          setModalOpen(false);\n        },\n      };\n    });\n    return (\n      <Modal\n        {...props}\n        open={modalOpen}\n        onConfirm={() => {\n          onChange(value);\n        }}\n        onClose={() => {\n          setModalOpen(false);\n        }}\n        footer={\n          (showSelectedTag || extra) && (\n            <Space direction=\"vertical\" className={style[\"overlay-footer\"]}>\n              {extra && (\n                <div className={style[\"overlay-footer-extra\"]}>{extra}</div>\n              )}\n              {showSelectedTag &&\n                renderSelectedContent({\n                  value,\n                  setValue: setValueWithMaxLength,\n                })}\n            </Space>\n          )\n        }\n      >\n        {typeof children === \"function\"\n          ? children({ value, setValue: setValueWithMaxLength })\n          : children}\n      </Modal>\n    );\n  }\n);\n\nconst PopupContent = forwardRef(\n  (\n    {\n      value,\n      setValue,\n      children,\n      renderSelectedContent,\n      showSelectedTag,\n      placement,\n      inputContent,\n      single,\n      extra,\n      overlayWidth,\n      wrapClassName,\n      ...props\n    },\n    ref\n  ) => {\n    const [open, setOpen] = useState(false);\n    useImperativeHandle(\n      ref,\n      () => {\n        return {\n          close: () => {\n            setOpen(false);\n          },\n        };\n      },\n      []\n    );\n    return (\n      <Popover\n        {...props}\n        open={open}\n        onOpenChange={setOpen}\n        overlayClassName={style[\"overlay\"]}\n        arrow={false}\n        content={\n          <div\n            style={overlayWidth ? { \"--overlay-width\": overlayWidth } : {}}\n            className={style[\"overlay-content\"]}\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          >\n            <div className={style[\"overlay-inner\"]}>\n              {typeof children === \"function\"\n                ? children({\n                    value,\n                    setValue: (newValue) => {\n                      !(single && value[0] === newValue[0]) &&\n                        setValue(newValue);\n                      single && setOpen(false);\n                    },\n                  })\n                : children}\n            </div>\n            {(showSelectedTag || extra) && (\n              <div className={style[\"overlay-footer\"]}>\n                {extra && (\n                  <div className={style[\"overlay-footer-extra\"]}>{extra}</div>\n                )}\n                {showSelectedTag && renderSelectedContent({ value, setValue })}\n              </div>\n            )}\n          </div>\n        }\n        trigger=\"click\"\n        placement={placement}\n      >\n        <div className={style[\"input-inner\"]}>{inputContent}</div>\n      </Popover>\n    );\n  }\n);\n\nconst DisplayLabel = withFetch(\n  ({ setFetchApi, wrapClassName, ...fetchApi }) => {\n    const [hover, setHover] = useState(false);\n    const modalRef = useRef(null);\n    const popupRef = useRef(null);\n    const selectInnerContext = useContext();\n    const { valueState, mapping, props } = selectInnerContext;\n    const [value, setValue] = valueState;\n    const {\n      single,\n      placement,\n      getPopupContainer,\n      placeholder,\n      isPopup,\n      disabled,\n      showSelectedTag,\n      extra,\n      inputContent: inputContentRender,\n    } = props;\n    const fetchApiRef = useRef(fetchApi);\n    fetchApiRef.current = fetchApi;\n\n    useEffect(() => {\n      setFetchApi(\n        Object.assign({}, fetchApiRef.current, {\n          data: fetchApi.data,\n          isComplete: fetchApi.isComplete,\n        })\n      );\n    }, [fetchApi.data, setFetchApi, fetchApi.isComplete]);\n\n    const inner = renderDisplayLabel({\n      single,\n      value,\n      mapping,\n      onClose: (item) => {\n        setValue((value) => {\n          const newValue = value.slice(0);\n          const index = value.indexOf(item);\n          index > -1 && newValue.splice(index, 1);\n          return newValue;\n        });\n      },\n    });\n\n    const renderSelectedContent = ({ value, setValue }) => (\n      <Space className={style[\"selected-tag\"]} align={\"center\"} wrap>\n        <div>\n          已选\n          {!props.single &&\n          Number.isInteger(props.maxLength) &&\n          props.maxLength > 0\n            ? `(${value.length}/${props.maxLength})`\n            : \"\"}\n          :\n        </div>\n        <SimpleBar className={style[\"selected-tag-list\"]}>\n          <div className={style[\"selected-tag-inner\"]}>\n            {renderDisplayLabel({\n              value,\n              mapping,\n              onClose: (item) => {\n                setValue((value) => {\n                  const newValue = value.slice(0);\n                  const index = value.indexOf(item);\n                  index > -1 && newValue.splice(index, 1);\n                  return newValue;\n                });\n              },\n            })}\n          </div>\n        </SimpleBar>\n      </Space>\n    );\n\n    const inputContent = inputContentRender ? (\n      inputContentRender(selectInnerContext)\n    ) : (\n      <Space\n        className={style[\"display-content\"]}\n        onMouseOver={() => {\n          setHover(true);\n        }}\n        onMouseOut={() => {\n          setHover(false);\n        }}\n      >\n        <div>\n          {inner || <span className={style[\"placeholder\"]}>{placeholder}</span>}\n        </div>\n        {hover && value && value.length > 0 && !disabled ? (\n          <Icon\n            className={classnames(\n              style[\"close\"],\n              style[\"input-icon\"],\n              \"close\",\n              \"input-icon\"\n            )}\n            type=\"icon-shibai\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setValue([]);\n            }}\n          />\n        ) : (\n          <Icon\n            className={classnames(\n              style[\"input-icon\"],\n              \"input-icon-arrow\",\n              \"input-icon\"\n            )}\n            type=\"icon-arrow-thin-down\"\n          />\n        )}\n      </Space>\n    );\n\n    if (isPopup) {\n      return (\n        <PopupContent\n          ref={popupRef}\n          overlayWidth={props.overlayWidth}\n          value={value}\n          setValue={setValue}\n          single={single}\n          inputContent={inputContent}\n          extra={\n            typeof extra === \"function\"\n              ? extra({\n                  close: () => popupRef.current.close(),\n                  context: selectInnerContext,\n                })\n              : extra\n          }\n          renderSelectedContent={renderSelectedContent}\n          showSelectedTag={showSelectedTag}\n          trigger=\"click\"\n          placement={placement}\n          getPopupContainer={getPopupContainer}\n        >\n          {props.children}\n        </PopupContent>\n      );\n    }\n\n    return (\n      <div\n        className={style[\"input-inner\"]}\n        onClick={() => {\n          modalRef.current.modalOpen();\n        }}\n      >\n        <ModalContent\n          size={props.modalSize}\n          ref={modalRef}\n          single={props.single}\n          maxLength={props.maxLength}\n          disabledScroller\n          wrapClassName={classnames(\n            style[\"overlay\"],\n            style[\"is-modal\"],\n            wrapClassName\n          )}\n          title={props.placeholder}\n          value={value}\n          onChange={setValue}\n          extra={\n            typeof extra === \"function\"\n              ? extra({\n                  close: () => modalRef.current.close(),\n                  context: selectInnerContext,\n                })\n              : extra\n          }\n          showSelectedTag={showSelectedTag}\n          renderSelectedContent={renderSelectedContent}\n        >\n          {props.children}\n        </ModalContent>\n        {inputContent}\n      </div>\n    );\n  }\n);\n\nconst getValueInType = (value, mapping, type) => {\n  if (type !== \"all\") {\n    return value;\n  }\n  return value.map((item) => mapping.get(item));\n};\n\nconst setValueInType = (value, setMapping, type) => {\n  if (type !== \"all\") {\n    return value;\n  }\n  setMapping(value);\n  return value.map((item) => item.value);\n};\n\nconst SelectInnerInput = ({\n  api,\n  className,\n  displayItems,\n  wrapClassName,\n  ...props\n}) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [mapping, setMapping] = useState(\n    new Map(displayItems.map((item) => [item.value, item]))\n  );\n  const [fetchApi, setFetchApi] = useState({});\n  const { message } = App.useApp();\n  const appendMapping = (items) => {\n    const newItems = items.filter((item) => mapping.get(item.value) !== item);\n    if (newItems.length === 0) {\n      return;\n    }\n\n    setMapping((mapping) => {\n      const newMapping = clone(mapping);\n      newItems.forEach((item) => {\n        newMapping.set(item.value, item);\n      });\n      return newMapping;\n    });\n  };\n\n  const transformValue = (value) => {\n    return setValueInType(\n      props.single ? (isNil(value) ? [] : [value]) : value || [],\n      appendMapping,\n      props.valueType\n    );\n  };\n\n  const [value, setValue] = useControlValue(\n    Object.assign(\n      {},\n      props,\n      {\n        onChange: (value) => {\n          const newValue = getValueInType(value, mapping, props.valueType);\n          props.onChange &&\n            props.onChange(props.single ? last(newValue) : newValue);\n        },\n      },\n      \"value\" in props\n        ? { value: transformValue(props.value) }\n        : { defaultValue: transformValue(props.defaultValue) }\n    )\n  );\n\n  const setValueWithMaxLength = createValueWithMaxLength({\n    maxLength: props.maxLength,\n    single: props.single,\n    setValue,\n    value,\n    message: message.error,\n  });\n\n  return (\n    <Provider\n      value={{\n        mapping,\n        searchText,\n        setSearchText,\n        appendMapping,\n        setItems: (data) => {\n          fetchApi.setData(data);\n          appendMapping(get(props.dataFormat(data), \"list\", []));\n        },\n        fetchApi,\n        valueState: [value, setValueWithMaxLength],\n        props,\n      }}\n    >\n      <div\n        className={classnames(\n          style[\n            `input${\n              props.inputContent && typeof props.inputContent === \"function\"\n                ? \"-custom\"\n                : \"\"\n            }`\n          ],\n          className\n        )}\n      >\n        <DisplayLabel\n          {...api}\n          wrapClassName={wrapClassName}\n          loading={null}\n          setFetchApi={setFetchApi}\n          onRequestSuccess={(data) => {\n            appendMapping(get(props.dataFormat(data), \"list\", []));\n            api.onRequestSuccess && api.onRequestSuccess(data);\n          }}\n        />\n      </div>\n    </Provider>\n  );\n};\n\nSelectInnerInput.defaultProps = {\n  placeholder: \"请选择\",\n  displayItems: [],\n  extra: null,\n  api: {\n    loader: () => [],\n  },\n  dataFormat: (data) => {\n    return { list: data };\n  },\n  placement: \"bottomLeft\",\n  getPopupContainer: null,\n  showSelectedTag: true,\n};\n\nSelectInnerInput.useContext = useContext;\n\nexport default SelectInnerInput;\n","import List from \"./List\";\nimport FieldList from \"./FieldList\";\nimport { Col, Row } from \"antd\";\nimport clone from \"lodash/clone\";\nimport { forwardRef, useImperativeHandle, useRef, useState } from \"react\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\n\nconst TableHeader = forwardRef((props, ref) => {\n  const [headers, setHeaders] = useState(new Map());\n  useImperativeHandle(\n    ref,\n    () => {\n      return (targetProps) => {\n        setTimeout(() => {\n          setHeaders((headers) => {\n            if (headers.has(targetProps.key)) {\n              return headers;\n            }\n            const newHeaders = clone(headers);\n            newHeaders.set(targetProps.key, targetProps.props);\n            return newHeaders;\n          });\n        });\n      };\n    },\n    []\n  );\n\n  return (\n    <Row\n      wrap={false}\n      className={style[\"table-list-header\"]}\n      style={{\n        \"--col-width\": `${100 / headers.size}%`,\n      }}\n    >\n      {Array.from(headers).map(([key, { label, rule }]) => (\n        <Col\n          key={key}\n          className={classnames({\n            [style[\"is-req\"]]: (rule || \"\").split(\" \").indexOf(\"REQ\") === 0,\n          })}\n        >\n          {label}\n        </Col>\n      ))}\n      <Col className={style[\"table-list-extra\"]}></Col>\n    </Row>\n  );\n});\n\nconst TableList = ({ list, className, ...props }) => {\n  const headerRef = useRef(null);\n  return (\n    <List\n      {...props}\n      className={classnames(className, style[\"table-list\"])}\n      list={list}\n      renderChildren={(children) => (\n        <div className={style[\"table-list-inner\"]}>\n          <TableHeader ref={headerRef} />\n          {children}\n        </div>\n      )}\n      listRender={({ list, groupArgs, extra, key }) => {\n        return (\n          <Row\n            key={key}\n            wrap={false}\n            align=\"middle\"\n            style={{\n              \"--col-width\": `${100 / list.length}%`,\n            }}\n          >\n            <FieldList\n              list={list}\n              groupArgs={groupArgs}\n              itemRender={(children, targetProps) => {\n                headerRef.current(targetProps);\n                return (\n                  <Col className={style[\"table-list-field\"]} flex={1}>\n                    {children}\n                  </Col>\n                );\n              }}\n            />\n            <Col className={style[\"table-list-extra\"]}>{extra}</Col>\n          </Row>\n        );\n      }}\n    />\n  );\n};\n\nexport default TableList;\n","import { hooks } from \"@kne/react-form-antd\";\nimport { AddressInputField, AddressSelectField } from \"@components/Common\";\n\nconst { useOnChange, useDecorator } = hooks;\nconst AddressSelect = (props) => {\n  const render = useOnChange(\n    Object.assign({}, { placeholder: \"请选择\" + props.label }, props)\n  );\n  return render(AddressSelectField);\n};\n\nAddressSelect.Field = AddressSelectField;\nAddressSelect.AddressEnum = AddressSelectField.AddressEnum;\nAddressSelect.createAddressApi = AddressSelectField.createAddressApi;\nAddressSelect.withAddressApi = AddressSelectField.withAddressApi;\n\nexport default AddressSelect;\n\nexport const AddressInput = (props) => {\n  const render = useDecorator(\n    Object.assign(\n      {},\n      {\n        placeholder: \"请选择\" + props.label,\n        inputPlaceholder: \"请输入\" + props.label,\n      },\n      props\n    )\n  );\n  return render(AddressInputField);\n};\n\nAddressInput.Field = AddressInputField;\n","import { hooks } from \"@kne/react-form-antd\";\nimport {\n  AdvancedSelectField,\n  createListField,\n  TableField,\n  UserField,\n} from \"@components/Common\";\n\nconst { useOnChange } = hooks;\n\nconst createdField = (WrappedComponent) => {\n  const List = (props) => {\n    const render = useOnChange(\n      Object.assign({}, { placeholder: \"请选择\" + props.label }, props)\n    );\n    return render(WrappedComponent);\n  };\n\n  List.field = List.Field = WrappedComponent;\n\n  return List;\n};\n\nexport const createdList = ({ renderList, defaultProps }) =>\n  createdField(\n    createListField({\n      renderList,\n      defaultProps,\n    })\n  );\n\nexport const User = createdField(UserField);\nexport const Table = createdField(TableField);\n\nconst AdvancedSelect = createdField(AdvancedSelectField);\nAdvancedSelect.createdList = createdList;\nAdvancedSelect.User = User;\nAdvancedSelect.Table = Table;\nexport default AdvancedSelect;\n","// extracted by mini-css-extract-plugin\nexport default {\"upload-btn\":\"style_upload-btn__-6XtP__ujG5g\",\"square\":\"style_square__UPkfA__ujG5g\",\"is-loading\":\"style_is-loading__wx6Pd__ujG5g\",\"upload-btn-tips\":\"style_upload-btn-tips__YtxWz__ujG5g\",\"drop-tips\":\"style_drop-tips__N-v59__ujG5g\",\"preview-area\":\"style_preview-area__aV3SN__ujG5g\"};","import { forwardRef, useLayoutEffect, useRef, useState } from \"react\";\nimport withInputFile, { InputFileLink } from \"@common/hocs/withInputFile\";\nimport Image from \"@components/Image\";\nimport { usePreset } from \"@components/Global\";\nimport { useModal } from \"@components/Modal\";\nimport Icon from \"@components/Icon\";\nimport {\n  Avatar as AntdAvatar,\n  Col,\n  message,\n  Row,\n  Slider,\n  Space,\n  Spin,\n  Tooltip,\n} from \"antd\";\nimport AvatarEditor from \"react-avatar-editor\";\nimport get from \"lodash/get\";\nimport classnames from \"classnames\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { hooks } from \"@kne/react-form-antd\";\nimport merge from \"lodash/merge\";\nimport style from \"./style.module.scss\";\nimport defaultAvatar from \"../../../../defaultAvatar.svg\";\nimport { IntlProvider, FormattedMessage, useIntl } from \"@components/Intl\";\nimport importMessages from \"@components/FormInfo/locale\";\n\nconst { useOnChange } = hooks;\n\nconst AvatarDisplay = Image.Avatar;\n\nconst localeModuleName = \"FormInfo\";\n\nconst UploadButton = withInputFile(\n  ({\n    className,\n    icon,\n    loading,\n    value,\n    gender,\n    width,\n    height,\n    children,\n    shape,\n    defaultAvatar,\n    apis,\n  }) => {\n    const inner = (\n      <>\n        <AvatarDisplay\n          id={get(value, \"id\")}\n          gender={gender}\n          width={(64 * width) / height}\n          height={64}\n          shape={shape}\n          defaultAvatar={defaultAvatar}\n          apis={apis}\n        />\n        <div className={style[\"upload-btn-tips\"]}>\n          {icon || <Icon type=\"icon-chuanzhaopian\" size={16} />}\n        </div>\n        {children}\n      </>\n    );\n    return (\n      <div\n        className={classnames(className, style[\"upload-btn\"], {\n          [style[\"is-loading\"]]: loading,\n          [style[\"square\"]]: shape === \"square\" || !(width && width === height),\n        })}\n        style={{ width: (64 * width) / height }}\n      >\n        {loading ? <Spin>{inner}</Spin> : inner}\n      </div>\n    );\n  }\n);\n\nconst dataURLtoBlob = (dataURL) => {\n  let arr = dataURL.split(\",\");\n  // 注意base64的最后面中括号和引号是不转译的\n  let _arr = arr[1].substring(0, arr[1].length - 2);\n  let mime = arr[0].match(/:(.*?);/)[1],\n    bstr = atob(_arr),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new Blob([u8arr], {\n    type: mime,\n  });\n};\n\nconst ControlAvatarEditor = forwardRef(\n  (\n    {\n      image: propsImage,\n      width,\n      height,\n      borderRadius,\n      preview,\n      fileSize,\n      accept,\n      renderTips,\n      getApi,\n      shape,\n      border,\n      ...props\n    },\n    ref\n  ) => {\n    const intl = useIntl({ moduleName: localeModuleName });\n    const [baseWidth, setBaseWidth] = useState(0);\n    const outerRef = useRef(null);\n    const [image, setImage] = useState(propsImage);\n    const [scale, setScale] = useState(1);\n    const [rotate, setRotate] = useState(0);\n    const [previewImg, setPreviewImg] = useState(\"\");\n    const editorRef = useRef(null);\n    useLayoutEffect(() => {\n      setBaseWidth((outerRef.current.clientWidth * 2) / 3);\n    }, []);\n    getApi({\n      getImage: () => {\n        const canvas = editorRef.current.getImage();\n\n        const targetCanvas = document.createElement(\"canvas\");\n        const targetCtx = targetCanvas.getContext(\"2d\");\n        targetCanvas.width = width;\n        targetCanvas.height = height;\n\n        targetCtx.drawImage(\n          canvas,\n          0,\n          0,\n          targetCanvas.width,\n          targetCanvas.height\n        );\n\n        return new window.File(\n          [dataURLtoBlob(targetCanvas.toDataURL())],\n          image.name,\n          { type: image.type }\n        );\n      },\n    });\n    const makePreviewInner = () => {\n      setPreviewImg(editorRef.current.getImage().toDataURL());\n    };\n    const makePreview = useDebouncedCallback(makePreviewInner, 500);\n\n    return (\n      <div ref={outerRef}>\n        <Row wrap={false} align=\"middle\">\n          <Col span={preview ? 16 : 24}>\n            {baseWidth && (\n              <Space direction=\"vertical\">\n                <AvatarEditor\n                  {...props}\n                  ref={editorRef}\n                  image={image}\n                  scale={scale}\n                  rotate={rotate}\n                  width={baseWidth - border * 2}\n                  height={\n                    (height * baseWidth) / width - (border * 2 * height) / width\n                  }\n                  border={border}\n                  color={[0, 0, 0, 0.6]}\n                  borderRadius={(borderRadius * baseWidth) / width}\n                  onImageReady={makePreviewInner}\n                  onImageChange={makePreview}\n                />\n                <div className={style[\"drop-tips\"]}>\n                  {renderTips(\n                    `${intl.formatMessage({ id: \"PictureFormat\" })}${accept\n                      .map((str) => str.replace(/^\\./, \"\"))\n                      .join(\" \")} ${intl.formatMessage({\n                      id: \"ImageSize\",\n                    })}${intl.formatMessage(\n                      { id: \"NotExceeding\" },\n                      { size: fileSize }\n                    )}`,\n                    {\n                      accept,\n                      fileSize,\n                    }\n                  )}\n                </div>\n                <Row gutter={14} align=\"middle\">\n                  <Col>\n                    <Tooltip\n                      title={intl.formatMessage({ id: \"Rotate\" })}\n                      placement=\"bottom\"\n                    >\n                      <Icon\n                        type=\"icon-xuanzhuan\"\n                        onClick={() => {\n                          setRotate((rotate) => {\n                            return (rotate - 90) % 360;\n                          });\n                        }}\n                      />\n                    </Tooltip>\n                  </Col>\n                  <Col>\n                    <Tooltip\n                      title={intl.formatMessage({ id: \"ImageFull\" })}\n                      placement=\"bottom\"\n                    >\n                      <Icon\n                        type=\"icon-chongman\"\n                        onClick={() => {\n                          setScale(1);\n                        }}\n                      />\n                    </Tooltip>\n                  </Col>\n                  <Col flex={1}>\n                    <Slider\n                      tooltip={{\n                        placement: \"bottom\",\n                        formatter: () => intl.formatMessage({ id: \"Size\" }),\n                      }}\n                      value={scale}\n                      step={0.05}\n                      min={0.2}\n                      max={3}\n                      onChange={setScale}\n                    />\n                  </Col>\n                  <Col>\n                    <InputFileLink\n                      accept={accept}\n                      onChange={(fileList) => {\n                        if (fileList[0].size > fileSize * 1024 * 1024) {\n                          message.error(\n                            intl.formatMessage(\n                              { id: \"FileNotExceeding\" },\n                              { name: fileList[0].name, size: fileSize }\n                            )\n                          );\n                          return;\n                        }\n                        setRotate(0);\n                        setScale(1);\n                        setImage(fileList[0]);\n                      }}\n                    >\n                      <FormattedMessage\n                        id={\"ReUpload\"}\n                        moduleName={localeModuleName}\n                      />\n                    </InputFileLink>\n                  </Col>\n                </Row>\n              </Space>\n            )}\n          </Col>\n          {preview && (\n            <Col span={8}>\n              <div className={style[\"preview-area\"]}>\n                <Space direction=\"vertical\">\n                  <AntdAvatar\n                    src={previewImg}\n                    // alt=\"预览\"\n                    shape={shape}\n                    style={{\n                      width: baseWidth / 2 - 36,\n                      height: ((baseWidth / 2 - 36) * height) / width,\n                    }}\n                  />\n                  <div\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                  >\n                    <FormattedMessage\n                      id={\"Preview\"}\n                      moduleName={localeModuleName}\n                    />\n                  </div>\n                </Space>\n              </div>\n            </Col>\n          )}\n        </Row>\n      </div>\n    );\n  }\n);\n\nControlAvatarEditor.defaultProps = {\n  border: 1,\n};\n\nconst useDropModal = () => {\n  const modal = useModal();\n  return (props) => {\n    const {\n      image,\n      width,\n      height,\n      borderRadius,\n      getApi,\n      preview,\n      fileSize,\n      accept,\n      renderTips,\n      border,\n      dropModalSize,\n      ...others\n    } = Object.assign(\n      {},\n      {\n        title: \"编辑头像\",\n        width: 200,\n        height: 200,\n        borderRadius:\n          props.shape === \"circle\" &&\n          props.width &&\n          props.width === props.height\n            ? props.width / 2\n            : 2,\n        preview: true,\n      },\n      props\n    );\n    return modal({\n      ...others,\n      size: dropModalSize,\n      children: (\n        <ControlAvatarEditor\n          preview={preview}\n          fileSize={fileSize}\n          accept={accept}\n          getApi={getApi}\n          renderTips={renderTips}\n          width={width}\n          height={height}\n          shape={\n            props.shape === \"circle\" &&\n            props.width &&\n            props.width === props.height\n              ? \"circle\"\n              : \"square\"\n          }\n          borderRadius={borderRadius}\n          image={image}\n          border={border}\n          scale={1}\n          rotate={0}\n        />\n      ),\n    });\n  };\n};\n\nconst AvatarField = ({\n  value,\n  gender,\n  fileSize,\n  accept,\n  openEditor,\n  apis: currentApis,\n  renderTips,\n  onChange,\n  shape,\n  width,\n  height,\n  title,\n  border,\n  icon,\n  dropModalSize,\n  defaultAvatar,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const { apis: baseApis } = usePreset();\n  const apis = merge({}, baseApis, currentApis);\n  const { ossUpload } = apis;\n  const dropRef = useRef(null);\n  const dropModal = useDropModal();\n  const intl = useIntl({ moduleName: localeModuleName });\n  return (\n    <UploadButton\n      value={value}\n      gender={gender}\n      accept={accept}\n      width={width}\n      height={height}\n      shape={shape}\n      icon={icon}\n      loading={loading}\n      defaultAvatar={defaultAvatar}\n      apis={apis}\n      onChange={(fileList) => {\n        if (fileList[0].size > fileSize * 1024 * 1024) {\n          message.error(\n            intl.formatMessage(\n              { id: \"FileNotExceeding\" },\n              { name: fileList[0].name, size: fileSize }\n            )\n          );\n          return;\n        }\n        const doUpload = (file) => {\n          setLoading(true);\n          return ossUpload({ file })\n            .then(({ data }) => {\n              if (data.code !== 0) {\n                message.error(\n                  intl.formatMessage(\n                    { id: \"UploadFailed\" },\n                    { msg: data.msg ? \":\" + data.msg : \"\" }\n                  )\n                );\n                return;\n              }\n              onChange(data.data);\n            })\n            .finally(() => {\n              setLoading(false);\n            });\n        };\n        if (openEditor) {\n          dropModal({\n            image: fileList[0],\n            width,\n            height,\n            title,\n            shape,\n            border,\n            dropModalSize,\n            getApi: (api) => (dropRef.current = api),\n            fileSize,\n            accept,\n            renderTips,\n            onConfirm: () => {\n              doUpload(dropRef.current.getImage());\n            },\n          });\n          return;\n        }\n        doUpload(fileList[0]);\n      }}\n    />\n  );\n};\n\nAvatarField.defaultProps = {\n  defaultAvatar,\n  openEditor: true,\n  fileSize: 2,\n  width: 200,\n  height: 200,\n  dropModalSize: \"small\",\n  border: 1,\n  title: (\n    <IntlProvider importMessages={importMessages} moduleName=\"FormInfo\">\n      <FormattedMessage id={\"Crop\"} moduleName=\"FormInfo\" />\n    </IntlProvider>\n  ),\n  accept: [\".jpg\", \".png\", \".jpeg\"],\n  renderTips: (defaultTips) => {\n    return defaultTips;\n  },\n  shape: \"circle\",\n};\n\nconst Avatar = (props) => {\n  const render = useOnChange(props);\n  return render(AvatarField);\n};\n\nAvatar.defaultProps = {};\n\nAvatar.Field = Avatar;\nAvatar.useDropModal = useDropModal;\n\nexport default Avatar;\n","import { hooks } from \"@kne/react-form-antd\";\nimport { CascaderField, createTreeUtils } from \"@components/Common\";\nconst { useOnChange } = hooks;\n\nconst Cascader = (props) => {\n  const render = useOnChange(\n    Object.assign({}, { placeholder: \"请选择\" + props.label }, props)\n  );\n  return render(CascaderField);\n};\n\nCascader.Field = CascaderField;\nCascader.createTreeUtils = createTreeUtils;\n\nexport { createTreeUtils };\nexport default Cascader;\n","import { FunctionSelectField } from \"@components/Common\";\nimport { hooks } from \"@kne/react-form-antd\";\n\nconst { useOnChange } = hooks;\n\nconst FunctionSelect = (props) => {\n  const render = useOnChange(\n    Object.assign({}, { placeholder: \"请选择\" + props.label }, props)\n  );\n  return render(FunctionSelectField);\n};\n\nFunctionSelect.Field = FunctionSelectField;\nFunctionSelect.Enum = FunctionSelectField.Enum;\n\nexport default FunctionSelect;\n","import { IndustrySelectField } from \"@components/Common\";\nimport { hooks } from \"@kne/react-form-antd\";\n\nconst { useOnChange } = hooks;\n\nconst IndustrySelect = (props) => {\n  const render = useOnChange(\n    Object.assign({}, { placeholder: \"请选择\" + props.label }, props)\n  );\n  return render(IndustrySelectField);\n};\n\nIndustrySelect.Field = IndustrySelectField;\nIndustrySelect.Enum = IndustrySelectField.Enum;\n\nexport default IndustrySelect;\n","import { Input } from \"antd\";\nimport useControlValue from \"@kne/use-control-value\";\nimport { createWithRemoteLoader } from \"@kne/remote-loader\";\n\nconst InputUpperCaseField = ({ ...props }) => {\n  const [value, onChange] = useControlValue(props);\n\n  return (\n    <Input\n      {...props}\n      value={value}\n      onChange={(e) => {\n        onChange(\n          e.target.value ? e.target.value.toUpperCase() : e.target.value,\n          e\n        );\n      }}\n    />\n  );\n};\n\nconst InputUpperCase = createWithRemoteLoader({\n  modules: [\"FormInfo@formModule\"],\n})(({ remoteModules, ...props }) => {\n  const [formModule] = remoteModules;\n  const { hooks } = formModule;\n  const { useDecorator } = hooks;\n  const render = useDecorator(\n    Object.assign({ placeholder: `请输入${props.label || \"\"}` }, props)\n  );\n  return render(InputUpperCaseField);\n});\n\nInputUpperCase.field = InputUpperCaseField;\n\nexport default InputUpperCase;\n","// extracted by mini-css-extract-plugin\nexport default {\"money-input\":\"style_money-input__Pyur7__ujG5g\",\"money-description\":\"style_money-description__9pFk4__ujG5g\"};","import useControlValue from \"@kne/use-control-value\";\nimport { hooks, util } from \"@kne/react-form-antd\";\nimport { InputNumber } from \"antd\";\nimport changeMoneyToChinese, {\n  MAX_NUM,\n} from \"@common/utils/changeMoneyToChinese\";\nimport style from \"./style.module.scss\";\nimport classnames from \"classnames\";\nimport merge from \"lodash/merge\";\nimport { useState } from \"react\";\n\nconst { isNotEmpty } = util;\nconst { useOnChange } = hooks;\nconst MoneyInputField = ({\n  chineseEmpty,\n  className,\n  showError,\n  errorDesc,\n  transformMoneyToChinese,\n  onBlur,\n  moneyFormat,\n  ...props\n}) => {\n  const [status, setStatus] = useState(\"\");\n  const [value, onChange] = useControlValue(props);\n  const inputNumberProps = merge(\n    {\n      controls: false,\n      precision: 2,\n      addonAfter: \"元\",\n    },\n    props,\n    {\n      max: isNotEmpty(props.max)\n        ? props.max > MAX_NUM\n          ? MAX_NUM\n          : props.max\n        : MAX_NUM,\n    }\n  );\n  return (\n    <div className={classnames(className, \"money-input\", style[\"money-input\"])}>\n      <InputNumber\n        {...inputNumberProps}\n        status={status}\n        formatter={\n          moneyFormat\n            ? (value) => {\n                return `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n              }\n            : null\n        }\n        parser={(parserValue) => {\n          const value = moneyFormat\n            ? parserValue?.replace(/\\$\\s?|(,*)/g, \"\")\n            : parserValue;\n          if (isNotEmpty(value)) {\n            if (\n              Number(value) > Number(inputNumberProps.max) ||\n              (isNotEmpty(inputNumberProps.min) &&\n                Number(value) < Number(inputNumberProps.min))\n            ) {\n              setStatus(\"error\");\n            }\n          } else {\n            setStatus(\"\");\n          }\n          return isNotEmpty(value) ? Number(value) : null;\n        }}\n        onChange={(val) => {\n          onChange(val);\n        }}\n        onBlur={(e) => {\n          onBlur && onBlur(e, setStatus);\n        }}\n      />\n      <div className={classnames(style[\"money-description\"])}>\n        {status === \"error\" && showError\n          ? errorDesc\n          : isNotEmpty(value)\n          ? changeMoneyToChinese(\n              transformMoneyToChinese ? transformMoneyToChinese(value) : value\n            )\n          : chineseEmpty}\n      </div>\n    </div>\n  );\n};\n\nconst MoneyInput = (props) => {\n  const render = useOnChange(\n    Object.assign({ placeholder: `请输入${props.label || \"\"}` }, props)\n  );\n  return render(MoneyInputField);\n};\n\nMoneyInput.Field = MoneyInputField;\nMoneyInput.toChineseCharacter = changeMoneyToChinese;\n\nexport default MoneyInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"country-select\":\"style_country-select__Ztf-V__ujG5g\",\"flag-img\":\"style_flag-img__RGhcM__ujG5g\"};","import { AsYouType, getCountryCallingCode } from \"libphonenumber-js\";\nimport { Input, Select, Space } from \"antd\";\nimport { hooks } from \"@kne/react-form-antd\";\nimport useSimulationBlur from \"@kne/use-simulation-blur\";\nimport useControlValue from \"@kne/use-control-value\";\nimport get from \"lodash/get\";\nimport style from \"./style.module.scss\";\nimport { createWithRemoteLoader } from \"@kne/remote-loader\";\n\nconst { useDecorator } = hooks;\n\nconst CountrySelect = createWithRemoteLoader({\n  modules: [\"components-iconfont:CountyFlag\"],\n})(({ remoteModules, value, onChange }) => {\n  const [CountyFlag] = remoteModules;\n  return (\n    <CountyFlag>\n      {({ list }) => {\n        return (\n          <Select\n            popupMatchSelectWidth={300}\n            className={style[\"country-select\"]}\n            value={value || \"CN\"}\n            onChange={onChange}\n            placeholder=\"请选择国家\"\n            showSearch\n            filterOption={(input, option) => {\n              return option.name.indexOf(input) > -1;\n            }}\n            optionLabelProp=\"code\"\n            options={list.map(({ country_name_cn, country_code, ab }) => ({\n              value: ab,\n              code: `(+${country_code})`,\n              name: country_name_cn,\n              label: (\n                <Space align=\"center\">\n                  <span className={style[\"country-name\"]}>\n                    {country_name_cn}\n                  </span>\n                  <div>(+{country_code})</div>\n                </Space>\n              ),\n            }))}\n          />\n        );\n      }}\n    </CountyFlag>\n  );\n});\n\nconst PhoneNumberField = (props) => {\n  const { className, onBlur, name, ...others } = props;\n  const [value, onChange] = useControlValue(props);\n  const ref = useSimulationBlur(onBlur || (() => {}));\n  const parsePhone = (value) => {\n    const askType = new AsYouType(get(value, \"code\", \"CN\"));\n    return askType.input(get(value, \"value\", \"\"));\n  };\n  return (\n    <div className={className} ref={ref}>\n      <Input\n        {...others}\n        addonBefore={\n          <CountrySelect\n            value={get(value, \"code\", \"CN\")}\n            onChange={(code) => {\n              onChange &&\n                onChange(\n                  Object.assign({}, value, {\n                    code,\n                    value: parsePhone({ code, value: get(value, \"value\", \"\") }),\n                  })\n                );\n              onBlur && onBlur();\n            }}\n          />\n        }\n        value={get(value, \"value\", \"\")}\n        onChange={(e) => {\n          onChange &&\n            onChange(\n              Object.assign({ code: \"CN\" }, value, {\n                value: e.target.value,\n                code: get(value, \"code\", \"CN\"),\n              })\n            );\n        }}\n        onBlur={(e) => {\n          onChange &&\n            onChange(\n              Object.assign({ code: \"CN\" }, value, {\n                value: parsePhone({\n                  value: e.target.value,\n                  code: get(value, \"code\", \"CN\"),\n                }),\n              })\n            );\n          onBlur && onBlur();\n        }}\n      />\n    </div>\n  );\n};\n\nconst PhoneNumber = ({ rule, ...props }) => {\n  const render = useDecorator(\n    Object.assign(\n      {\n        placeholder: `请输入${props.label || \"\"}`,\n        rule: ((rule) => {\n          const rules = (rule || \"\").split(\" \");\n          const reqIndex = rules.indexOf(\"REQ\");\n          if (reqIndex > -1) {\n            rules.splice(reqIndex + 1, 0, \"PHONE_NUMBER\");\n          } else {\n            rules.unshift(\"PHONE_NUMBER\");\n          }\n          return rules.join(\" \");\n        })(rule),\n      },\n      props\n    )\n  );\n  return render(PhoneNumberField);\n};\n\nPhoneNumber.Field = PhoneNumberField;\n\nPhoneNumber.defaultProps = {};\n\nPhoneNumber.format = ({ code, value }) => {\n  const phoneCode = code ? getCountryCallingCode(code) : null;\n\n  if (!phoneCode || !value) {\n    return \"\";\n  }\n  return `+${phoneCode} ${value}`;\n};\n\nexport const PHONE_NUMBER = async (value, { field }) => {\n  if (\n    (field.rule || \"\").split(\" \").indexOf(\"REQ\") > -1 &&\n    !get(value, \"value\")\n  ) {\n    return { result: false, errMsg: \"%s不能为空\" };\n  }\n  if (!get(value, \"value\")) {\n    return { result: true };\n  }\n\n  const result = await import(\"libphonenumber-js/max\").then(\n    ({ isValidPhoneNumber }) => {\n      return isValidPhoneNumber(get(value, \"value\", \"\"), {\n        defaultCountry: get(value, \"code\", \"CN\"),\n        extract: true,\n      });\n    }\n  );\n  return { result, errMsg: \"%s格式不正确\" };\n};\n\nexport default PhoneNumber;\n","import { Rate } from \"antd\";\nimport { hooks } from \"@kne/react-form-antd\";\n\nconst { useOnChange } = hooks;\n\nconst _Rate = (props) => {\n  const render = useOnChange(\n    Object.assign({ placeholder: `请选择${props.label || \"\"}` }, props)\n  );\n  return render(Rate);\n};\n\n_Rate.defaultProps = {\n  fieldName: \"rate\",\n};\n\nexport default _Rate;\n","// extracted by mini-css-extract-plugin\nexport default {\"salary\":\"style_salary__sUOtT__ujG5g\",\"salary-type\":\"style_salary-type__Sl1LC__ujG5g\",\"input-number\":\"style_input-number__eoEZr__ujG5g\",\"full\":\"style_full__NPqJm__ujG5g\",\"input-group\":\"style_input-group__toLB7__ujG5g\",\"input-group-no-mb\":\"style_input-group-no-mb__C4nzh__ujG5g\"};","import React, { cloneElement } from \"react\";\nimport { hooks, Select } from \"@kne/react-form-antd\";\nimport useSimulationBlur from \"@kne/use-simulation-blur\";\nimport { Col, Input, InputNumber, Row, Space } from \"antd\";\nimport style from \"./style.module.scss\";\nimport { IntlProvider, useIntl } from \"@components/Intl\";\nimport importMessages from \"../../locale\";\nimport Enum from \"@components/Enum\";\nimport useControlValue from \"@kne/use-control-value\";\nimport { get } from \"lodash\";\n\nconst { field: SelectField } = Select.Fetch;\n\nconst { useDecorator, useUIDecorator } = hooks;\n\nexport const InputNumberField = (props) => {\n  const render = useUIDecorator(props);\n  return render(InputNumber);\n};\nconst numberFormat = (value) => {\n  if (!value) return \"\";\n  const _value = isNaN(Number(value)) ? value : Math.abs(Number(value));\n  return value.split(\".\")[1] && value.split(\".\")[1].length > 2\n    ? _value.toFixed(2)\n    : _value;\n};\n\nconst FormField = ({ children, isError }) => {\n  return (\n    <div\n      style={{ marginBottom: 0 }}\n      className={`react-form__field ${isError ? \"is-error\" : \"\"}`}\n    >\n      <div className=\"react-form__field-main\">\n        <div className=\"react-form__field-input\">\n          {cloneElement(children, { className: \"react-form__field-component\" })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SalaryInputField = ({\n  getPopupContainer,\n  onBlur,\n  api,\n  isRange = true,\n  placeholder,\n  disabled,\n  showMonth,\n  remindUnit,\n  req,\n  ...props\n}) => {\n  const [value, onChange] = useControlValue(props);\n  console.log(value, \"薪资\");\n  const { formatMessage } = useIntl({ moduleName: \"FormInfo\" });\n  const _placeholder = formatMessage(\n    { id: \"defaultSelectPlaceholder\" },\n    { label: \"\" }\n  );\n  const _placeholderInput = formatMessage(\n    { id: \"defaultInputPlaceholder\" },\n    { label: \"\" }\n  );\n\n  const isTenThousand = [6].indexOf(get(value, \"type\")) > -1,\n    isFace = get(value, \"type\") === 1,\n    isOther = get(value, \"type\") === 7;\n\n  const transform = (value) => {\n    if (!value) {\n      return;\n    }\n    return isTenThousand ? value / 10000 : value;\n  };\n\n  const ref = useSimulationBlur(onBlur ? onBlur : () => {});\n\n  return (\n    <div ref={ref} className={style[\"salary\"]}>\n      <Row wrap={false} gutter={10}>\n        <Col>\n          <SelectField\n            className={style[\"salary-type\"]}\n            {...api}\n            value={get(value, \"type\")}\n            onChange={(type) => {\n              onChange &&\n                onChange(\n                  Object.assign({}, isFace ? {} : value, {\n                    type,\n                    min: \"\",\n                    max: \"\",\n                  })\n                );\n            }}\n            placeholder={placeholder || _placeholder}\n            getPopupContainer={getPopupContainer}\n            disabled={disabled}\n          >\n            {({ data }) => {\n              return { options: data || [] };\n            }}\n          </SelectField>\n        </Col>\n        {isFace ? null : (\n          <Col flex={1}>\n            {isRange && (\n              <Space.Compact\n                className={\n                  remindUnit && [5, 6].includes(value?.type)\n                    ? style[\"input-group\"]\n                    : style[\"input-group-no-mb\"]\n                }\n              >\n                <FormField isError={!get(value, \"min\") && req}>\n                  <InputNumber\n                    disabled={disabled}\n                    placeholder={_placeholderInput}\n                    formatter={numberFormat}\n                    value={transform(get(value, \"min\"))}\n                    style={{\n                      width: 100,\n                      textAlign: \"center\",\n                    }}\n                    onChange={(min) => {\n                      onChange(\n                        Object.assign({}, value, {\n                          min: isTenThousand ? min * 10000 : min,\n                        })\n                      );\n                    }}\n                    // status={'warning'}\n                    description={\n                      remindUnit && [5, 6].includes(value?.type) ? (\n                        <span style={{ color: \"#fc3333\" }}>\n                          注意：\n                          <Enum\n                            name={value?.type}\n                            moduleName=\"salaryTypeEnum\"\n                          />\n                          的单位为\n                          {isTenThousand\n                            ? formatMessage({ id: \"thousand\" })\n                            : isOther\n                            ? \"\"\n                            : formatMessage({ id: \"yuan\" })}\n                        </span>\n                      ) : null\n                    }\n                  />\n                </FormField>\n                <Input\n                  style={{\n                    width: 30,\n                    borderLeft: 0,\n                    borderRight: 0,\n                    pointerEvents: \"none\",\n                  }}\n                  placeholder=\"~\"\n                  disabled\n                />\n                <FormField isError={!get(value, \"max\") && req}>\n                  <InputNumber\n                    disabled={disabled}\n                    placeholder={_placeholderInput}\n                    formatter={numberFormat}\n                    value={transform(get(value, \"max\"))}\n                    style={{\n                      width: showMonth ? 108 : 131,\n                      textAlign: \"center\",\n                    }}\n                    addonAfter={\n                      isTenThousand\n                        ? formatMessage({ id: \"thousand\" })\n                        : isOther\n                        ? \"\"\n                        : formatMessage({ id: \"yuan\" })\n                    }\n                    onChange={(max) => {\n                      onChange(\n                        Object.assign({}, value, {\n                          max: isTenThousand ? max * 10000 : max,\n                        })\n                      );\n                    }}\n                  />\n                </FormField>\n                {/*<span className={!get(value, 'max') && get(value, 'min') && req ? 'error' : ''}>*/}\n                {/*  */}\n                {/*</span>*/}\n                {get(value, \"type\") === 5 && showMonth && (\n                  <span\n                    className={\n                      get(value, \"max\") &&\n                      get(value, \"min\") &&\n                      !get(value, \"month\") &&\n                      req\n                        ? \"error\"\n                        : \"\"\n                    }\n                  >\n                    <span className={style[\"input-number\"]}>X</span>\n                    <InputNumber\n                      min={12}\n                      disabled={disabled}\n                      value={get(value, \"month\")}\n                      onChange={(v) => {\n                        onChange(Object.assign({}, value, { month: v }));\n                      }}\n                      style={{\n                        width: 100,\n                        textAlign: \"center\",\n                      }}\n                      placeholder=\"数量\"\n                      addonAfter=\"月\"\n                    />\n                  </span>\n                )}\n              </Space.Compact>\n            )}\n            {!isRange && !isOther && (\n              <InputNumber\n                disabled={disabled}\n                min={0}\n                max={100000000}\n                placeholder={_placeholderInput}\n                className={style.full}\n                formatter={numberFormat}\n                value={transform(get(value, \"max\"))}\n                style={{\n                  width: 151,\n                  textAlign: \"center\",\n                }}\n                addonAfter={\n                  isTenThousand\n                    ? formatMessage({ id: \"thousand\" })\n                    : isOther\n                    ? \"\"\n                    : formatMessage({ id: \"yuan\" })\n                }\n                onChange={(max) => {\n                  onChange(\n                    Object.assign({}, value, {\n                      max: isTenThousand ? max * 10000 : max,\n                    })\n                  );\n                }}\n              />\n            )}\n            {!isRange && isOther && (\n              <Input\n                disabled={disabled}\n                placeholder={_placeholderInput}\n                className={style.full}\n                onChange={(e) => {\n                  onChange(Object.assign({}, value, { max: e.target.value }));\n                }}\n                value={get(value, \"max\")}\n                style={{\n                  width: 151,\n                  textAlign: \"center\",\n                }}\n              />\n            )}\n          </Col>\n        )}\n      </Row>\n    </div>\n  );\n};\nconst SalaryField = (props) => {\n  return (\n    <IntlProvider moduleName=\"FormInfo\" importMessages={importMessages}>\n      <SalaryInputField {...props} />\n    </IntlProvider>\n  );\n};\n\nSalaryField.defaultProps = {\n  api: {\n    loader: () => {\n      return [\n        {\n          value: 1,\n          label: \"面议\",\n        },\n        {\n          value: 2,\n          label: \"时薪\",\n        },\n        {\n          value: 3,\n          label: \"日薪\",\n        },\n        {\n          value: 4,\n          label: \"周薪\",\n        },\n        {\n          value: 5,\n          label: \"月薪\",\n        },\n        {\n          value: 6,\n          label: \"年薪\",\n        },\n      ];\n    },\n  },\n  defaultValue: {\n    type: 5,\n    min: \"\",\n    max: \"\",\n    month: 12,\n  },\n};\n\nconst SalaryInput = (props) => {\n  const render = useDecorator({\n    ...props,\n    req: props?.rule?.indexOf(\"REQ\") > -1,\n  });\n  return render(SalaryField);\n};\n\nSalaryInput.Field = SalaryField;\n\nexport default SalaryInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"style_table__A9nBK__ujG5g\"};","import { withFetch } from \"@kne/react-fetch\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\nimport { get, omit, pick } from \"lodash\";\nimport { Table } from \"@components/TablePage\";\nimport { hooks } from \"@kne/react-form-antd\";\nimport useControlValue from \"@kne/use-control-value\";\nimport { useEffect, useRef } from \"react\";\n\nconst { useOnChange } = hooks;\n\nconst TableInner = withFetch(({ ...props }) => {\n  const [value, onChange] = useControlValue(props);\n  const fetchProps = [\n    \"isLoading\",\n    \"isComplete\",\n    \"data\",\n    \"requestParams\",\n    \"error\",\n    \"send\",\n    \"refresh\",\n    \"reload\",\n    \"loadMore\",\n    \"setData\",\n  ];\n  const fetchApi = pick(props, fetchProps);\n  const tableProps = omit(props, fetchProps);\n  const {\n    rowKey = \"id\",\n    columns,\n    className,\n    innerName,\n    headerRender,\n    footerRender,\n  } = tableProps;\n  const formatData = props.dataFormat(fetchApi.data);\n\n  const handleChange = (list, value, { current, rowKeyValue, dataIndex }) => {\n    const result = {};\n    const dataList = list.slice(0).map((item) => {\n      if (item[rowKey] === rowKeyValue) {\n        result[item[rowKey]] = {\n          ...item,\n          [dataIndex]: current,\n        };\n        return {\n          ...item,\n          [dataIndex]: current,\n        };\n      } else {\n        const _currentItem = value[item[rowKey]];\n        result[item[rowKey]] = Object.assign({}, item, _currentItem);\n        return Object.assign({}, item, _currentItem);\n      }\n    });\n    const data = {\n      pageData: dataList,\n      totalCount: dataList.length,\n    };\n    fetchApi.setData(data);\n    onChange && onChange(result);\n  };\n\n  const changeRef = useRef(null);\n  changeRef.current = handleChange;\n\n  useEffect(() => {\n    // 判断value中是否全部存在list属性值\n    const hasExist = formatData.list.every((x) => {\n      const obj = value[x[rowKey]] || {};\n      return Object.keys(x).every((it) => obj.hasOwnProperty(it));\n    });\n    if (\n      (!hasExist || Object.keys(value).length !== formatData.list.length) &&\n      fetchApi.isComplete\n    ) {\n      changeRef.current(formatData.list, value, {});\n    }\n  }, [fetchApi.isComplete, value, formatData.list, rowKey]);\n\n  return (\n    <div>\n      {headerRender && headerRender(fetchApi)}\n      <Table\n        {...tableProps}\n        className={classnames(style[\"table\"], className)}\n        rowKey={rowKey}\n        dataSource={formatData.list}\n        pagination={false}\n        columns={columns.map((column) => {\n          const item = { ...column };\n          if (item.dataIndex) {\n            return Object.assign({}, item, {\n              render: (text, record, index) => {\n                const editable = item.editable\n                  ? typeof item.editable === \"function\"\n                    ? item.editable(text, record, index, formatData.list)\n                    : item.editable\n                  : true;\n                const rowKeyValue = record[rowKey];\n                const valueItem = value[rowKeyValue];\n                const defaultValue = get(valueItem, item.dataIndex) || text;\n                if (editable && item.field) {\n                  if (item.field?.render) {\n                    return (\n                      <>\n                        {item.field.render(\n                          {\n                            value: defaultValue,\n                            name: `${innerName}.${rowKeyValue}.${item.dataIndex}`,\n                            label: \" \",\n                            labelHidden: item.labelHidden,\n                            onChange: (...args) => {\n                              const _value = item.field?.getValue\n                                ? item.field.getValue(args[0])\n                                : args[0];\n                              handleChange(formatData.list, value, {\n                                current: _value,\n                                rowKeyValue,\n                                dataIndex: item.dataIndex,\n                              });\n                              return (\n                                item.field.onChange &&\n                                item.field.onChange(...args, fetchApi)\n                              );\n                            },\n                          },\n                          record,\n                          index,\n                          fetchApi\n                        )}\n                      </>\n                    );\n                  }\n                  const Component = item.field?.type;\n                  return (\n                    <Component\n                      {...omit(item.field, [\"type\", \"getValue\"])}\n                      value={defaultValue}\n                      name={`${innerName}.${rowKeyValue}.${item.dataIndex}`}\n                      label={\" \"}\n                      labelHidden={item.labelHidden}\n                      onChange={(...args) => {\n                        const _value = item.field?.getValue\n                          ? item.field.getValue(args[0])\n                          : args[0];\n                        handleChange(formatData.list, value, {\n                          current: _value,\n                          rowKeyValue,\n                          dataIndex: item.dataIndex,\n                        });\n                        return (\n                          item.field.onChange &&\n                          item.field.onChange(...args, fetchApi)\n                        );\n                      }}\n                    />\n                  );\n                } else {\n                  return item.render\n                    ? item.render(defaultValue, record, index)\n                    : defaultValue;\n                }\n              },\n            });\n          }\n          return item;\n        })}\n      />\n      {footerRender && footerRender(fetchApi)}\n    </div>\n  );\n});\n\nTableInner.defaultProps = {\n  mergeList: (data, newData) => {\n    return Object.assign({}, newData, {\n      pageData: (data.pageData || []).concat(newData.pageData || []),\n    });\n  },\n  dataFormat: (data) => {\n    return {\n      list: data.pageData,\n      total: data.totalCount,\n    };\n  },\n};\n\nconst TableInputField = ({ api, ...props }) => {\n  return <TableInner {...props} {...api} />;\n};\n\nTableInputField.defaultProps = {\n  api: {},\n  value: {},\n};\n\nconst TableInput = (props) => {\n  const render = useOnChange(\n    Object.assign(\n      {\n        placeholder: `请选择${props.label}`,\n        innerName: props.name,\n      },\n      props\n    )\n  );\n  return render(TableInputField);\n};\n\nTableInput.Field = TableInputField;\n\nexport default TableInput;\n","import TypeDateRangePickerField from \"@common/components/TypeDateRangePickerField\";\nimport { hooks } from \"@kne/react-form-antd\";\n\nconst { useOnChange } = hooks;\n\nconst TypeDateRangePicker = (props) => {\n  const render = useOnChange(Object.assign({}, {}, props));\n  return render(TypeDateRangePickerField);\n};\n\nTypeDateRangePicker.Field = TypeDateRangePickerField;\n\nexport default TypeDateRangePicker;\n","// extracted by mini-css-extract-plugin\nexport default {\"upload\":\"style_upload__t422Q__ujG5g\",\"upload-list\":\"style_upload-list__Q9HDc__ujG5g\",\"upload-input\":\"style_upload-input__vXk4w__ujG5g\",\"tips\":\"style_tips__3Gpnu__ujG5g\"};","import { Space } from \"antd\";\nimport classnames from \"classnames\";\nimport useControlValue from \"@kne/use-control-value\";\nimport style from \"./style.module.scss\";\nimport Icon from \"@components/Icon\";\nimport { List as FileList } from \"@components/File\";\nimport { hooks } from \"@kne/react-form-antd\";\nimport omit from \"lodash/omit\";\nimport { InputFileButton, useFileUpload } from \"@common/hocs/withInputFile\";\n\nconst { useOnChange } = hooks;\n\nconst UploadField = ({\n  className,\n  fileSize,\n  maxLength,\n  multiple,\n  size,\n  accept,\n  children,\n  renderTips,\n  showUploadList,\n  onSave,\n  ossUpload,\n  getPermission,\n  ...props\n}) => {\n  const [propsValue, onChange] = useControlValue(props);\n  const value = propsValue || [];\n  const { fileList: uploadingList, onFileSelected } = useFileUpload({\n    multiple,\n    onSave,\n    ossUpload,\n    fileSize,\n    maxLength,\n    value,\n    onChange,\n    concurrentCount: 10,\n  });\n  const previewFileList = [...uploadingList, ...value];\n\n  const tipsText = renderTips(\n    `支持扩展名${accept\n      .map((str) => str.replace(/^\\./, \"\"))\n      .join(\"、\")},单个文件大小不超过${fileSize}M，最多上传${maxLength}个附件`,\n    {\n      fileSize,\n      maxLength,\n      accept,\n    }\n  );\n\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <InputFileButton\n          {...omit(props, [\"value\", \"onChange\"])}\n          size={size}\n          multiple={multiple}\n          accept={accept}\n          className={classnames(style[\"upload\"], className)}\n          onChange={onFileSelected}\n        >\n          {children}\n        </InputFileButton>\n        {tipsText && <div className={style[\"tips\"]}>{tipsText}</div>}\n      </Space>\n      {showUploadList && previewFileList.length > 0 && (\n        <FileList\n          className={style[\"upload-list\"]}\n          dataSource={previewFileList}\n          infoItemRenders={[]}\n          getPermission={\n            getPermission\n              ? getPermission\n              : (type) => {\n                  return type === \"delete\";\n                }\n          }\n          apis={{\n            onDelete: (target) => {\n              const newList = value.slice(0);\n              const index = newList.indexOf(target);\n              index > -1 && newList.splice(index, 1);\n              onChange(newList);\n            },\n          }}\n        />\n      )}\n    </Space>\n  );\n};\n\nUploadField.defaultProps = {\n  defaultValue: [],\n  children: (\n    <>\n      <Icon type=\"icon-shangchuanfujian\" />\n      上传附件\n    </>\n  ),\n  accept: [\n    \".pdf\",\n    \".jpg\",\n    \".png\",\n    \".jpeg\",\n    \".doc\",\n    \".docx\",\n    \".xls\",\n    \".xlsx\",\n    \".html\",\n    \".msg\",\n    \".zip\",\n  ],\n  renderTips: (defaultTips) => {\n    return defaultTips;\n  },\n  multiple: true,\n  showUploadList: true,\n  maxLength: 10,\n  fileSize: 30,\n};\n\nconst Upload = (props) => {\n  const render = useOnChange(props);\n  return render(UploadField);\n};\n\nUpload.defaultProps = {\n  interceptor: \"file-format\",\n};\n\nUpload.Field = UploadField;\n\nexport default Upload;\n","import {\n  DatePicker as ReactDatePicker,\n  DatePickerToday as ReactDatePickerToday,\n  Input as ReactInput,\n  InputNumber as ReactInputNumber,\n  Select as ReactSelect,\n  TextArea as ReactTextArea,\n  TimePicker as ReactTimePicker,\n  TreeSelect as ReactTreeSelect,\n  RadioGroup,\n  CheckboxGroup,\n} from \"@kne/react-form-antd\";\nimport AdvancedSelectField from \"./AdvancedSelect\";\nimport AddressSelect, { AddressInput } from \"./AddressSelect\";\nimport Cascader from \"./Cascader\";\nimport FunctionSelect from \"./FunctionSelect\";\nimport IndustrySelect from \"./IndustrySelect\";\nimport MoneyInput from \"./MoneyInput\";\nimport PhoneNumber from \"./PhoneNumber\";\nimport Upload from \"./Upload\";\nimport Avatar from \"./Avatar\";\nimport SalaryInput from \"./SalaryInput\";\nimport InputUpperCaseField from \"./InputUpperCase\";\nimport TableInput from \"./TableInput\";\nimport Rate from \"./Rate\";\nimport compose from \"@kne/compose\";\nimport { forwardRef } from \"react\";\nimport { FormattedMessage, useIntl } from \"@components/Intl\";\nimport { useGroup } from \"@kne/react-form-antd\";\nimport get from \"lodash/get\";\nimport { get as _get } from \"lodash\";\nimport { useFormLang } from \"@components/FormInfo/FormLangProvider\";\nimport TypeDateRangePicker from \"./TypeDateRangePicker\";\n\nconst createWithFieldDecorator = (decoratorList) => (WrappedComponent) => {\n  const TargetComponent = compose(...decoratorList)(\n    ({ forwardedRef, ...props }) => (\n      <WrappedComponent {...props} ref={forwardedRef} />\n    )\n  );\n  const ForwardComponent = forwardRef((props, ref) => {\n    return <TargetComponent {...props} forwardedRef={ref} />;\n  });\n  Object.keys(WrappedComponent)\n    .filter((key) => {\n      return [\"$$typeof\", \"render\", \"field\"].indexOf(key) === -1;\n    })\n    .forEach((key) => {\n      ForwardComponent[key] = WrappedComponent[key];\n    });\n\n  return ForwardComponent;\n};\n\nconst withInputDefaultPlaceholder = (WrappedComponent) => {\n  return ({ placeholder, label, ...props }) => (\n    <FormattedMessage\n      id=\"defaultInputPlaceholder\"\n      moduleName=\"FormInfo\"\n      values={{ label }}\n    >\n      {(text) => (\n        <WrappedComponent\n          {...props}\n          label={label}\n          placeholder={placeholder || text}\n        />\n      )}\n    </FormattedMessage>\n  );\n};\n\nconst withSelectDefaultPlaceholder = (WrappedComponent) => {\n  return ({ placeholder, label, ...props }) => (\n    <FormattedMessage\n      id=\"defaultSelectPlaceholder\"\n      moduleName=\"FormInfo\"\n      values={{ label }}\n    >\n      {(text) => (\n        <WrappedComponent\n          {...props}\n          label={label}\n          placeholder={placeholder || text}\n        />\n      )}\n    </FormattedMessage>\n  );\n};\n\nconst withLang = (WrappedComponent) => {\n  return (props) => {\n    const group = useGroup();\n    const groupName = get(group, \"name\");\n    const groupIndex = _get(group, \"index\");\n    const lang = useFormLang();\n    if (lang && Array.isArray(lang) && lang.length > 0) {\n      return lang.map((item) => {\n        if (typeof item === \"string\") {\n          return <WrappedComponent {...props} key={item} />;\n        }\n        const { name, label, options } = item;\n        const ignoreList = get(options, \"ignore\", []),\n          disabledList = get(options, \"disabled\", []),\n          fields = get(options, \"fields\", []);\n        const getCurrentField = (item) =>\n          props.name === item.name &&\n          !(item.hasOwnProperty(\"groupName\") && item.groupName !== groupName) &&\n          !(\n            item.hasOwnProperty(\"groupIndex\") && item.groupIndex !== groupIndex\n          );\n\n        if (ignoreList.length > 0 && ignoreList.find(getCurrentField)) {\n          return null;\n        }\n\n        if (fields.length > 0 && !fields.find(getCurrentField)) {\n          return null;\n        }\n\n        let newProps = Object.assign({}, props, {\n          name: get(\n            options,\n            \"nameTransform\",\n            (name, langName) => `${name}${langName}`\n          )(props.name, name),\n          label: get(\n            options,\n            \"labelTransform\",\n            (label, langLabel) => label && `${label}${langLabel}`\n          )(props.label, label),\n        });\n\n        if (disabledList.length > 0 && disabledList.find(getCurrentField)) {\n          newProps.disabled = true;\n          newProps.rule = \"\";\n        }\n        return <WrappedComponent {...newProps} key={name} />;\n      });\n    }\n\n    return <WrappedComponent {...props} />;\n  };\n};\n\nconst Input = createWithFieldDecorator([withLang, withInputDefaultPlaceholder])(\n  ReactInput\n);\n\nconst InputNumber = createWithFieldDecorator([\n  withLang,\n  withInputDefaultPlaceholder,\n])(ReactInputNumber);\nInput.Password = createWithFieldDecorator([\n  withLang,\n  withInputDefaultPlaceholder,\n])(ReactInput.Password);\n\nconst DatePicker = createWithFieldDecorator([\n  withLang,\n  withSelectDefaultPlaceholder,\n])(ReactDatePicker);\nDatePicker.MonthPicker = createWithFieldDecorator([\n  withLang,\n  withSelectDefaultPlaceholder,\n])(ReactDatePicker.MonthPicker);\n\nDatePicker.RangePicker = createWithFieldDecorator([\n  withLang,\n  withSelectDefaultPlaceholder,\n])(ReactDatePicker.RangePicker);\n\nDatePicker.WeekPicker = createWithFieldDecorator([\n  withLang,\n  withSelectDefaultPlaceholder,\n])(ReactDatePicker.WeekPicker);\n\nconst TimePicker = createWithFieldDecorator([\n  withLang,\n  withSelectDefaultPlaceholder,\n])(ReactTimePicker);\n\nTimePicker.RangePicker = createWithFieldDecorator([\n  withLang,\n  withSelectDefaultPlaceholder,\n])(ReactTimePicker.RangePicker);\n\nconst DatePickerToday = createWithFieldDecorator([withLang])(\n  ({ placeholder, label, soFarText, ...props }) => {\n    const { formatMessage } = useIntl({ moduleName: \"FormInfo\" });\n    return (\n      <ReactDatePickerToday\n        {...props}\n        label={label}\n        placeholder={[\n          formatMessage({ id: \"startDate\" }),\n          formatMessage({ id: \"endDate\" }),\n        ]}\n        soFarText={soFarText || formatMessage({ id: \"soFarText\" })}\n      />\n    );\n  }\n);\n\nconst fields = {\n  Input,\n  InputNumber,\n  DatePicker,\n  TimePicker,\n  DatePickerToday,\n  RadioGroup: createWithFieldDecorator([withLang])(RadioGroup),\n  CheckboxGroup: createWithFieldDecorator([withLang])(CheckboxGroup),\n  Rate: createWithFieldDecorator([withLang])(Rate),\n  TableInput: createWithFieldDecorator([withLang])(TableInput),\n  SalaryInput: createWithFieldDecorator([withLang])(SalaryInput),\n  TypeDateRangePicker: createWithFieldDecorator([withLang])(\n    TypeDateRangePicker\n  ),\n  MoneyInput: createWithFieldDecorator([withLang])(MoneyInput),\n  PhoneNumber: createWithFieldDecorator([withLang])(PhoneNumber),\n  Upload: createWithFieldDecorator([withLang])(Upload),\n  Avatar: createWithFieldDecorator([withLang])(Avatar),\n  FunctionSelect: createWithFieldDecorator([\n    withLang,\n    withSelectDefaultPlaceholder,\n  ])(FunctionSelect),\n  IndustrySelect: createWithFieldDecorator([\n    withLang,\n    withSelectDefaultPlaceholder,\n  ])(IndustrySelect),\n  Cascader: createWithFieldDecorator([withLang, withSelectDefaultPlaceholder])(\n    Cascader\n  ),\n  AddressSelect: createWithFieldDecorator([\n    withLang,\n    withSelectDefaultPlaceholder,\n  ])(AddressSelect),\n  AddressInput: createWithFieldDecorator([\n    withLang,\n    withSelectDefaultPlaceholder,\n  ])(AddressInput),\n  TreeSelect: createWithFieldDecorator([\n    withLang,\n    withSelectDefaultPlaceholder,\n  ])(ReactTreeSelect),\n  ReactInputNumber: createWithFieldDecorator([\n    withLang,\n    withInputDefaultPlaceholder,\n  ])(ReactInputNumber),\n  InputUpperCase: createWithFieldDecorator([\n    withLang,\n    withInputDefaultPlaceholder,\n  ])(InputUpperCaseField),\n  Select: createWithFieldDecorator([withLang, withSelectDefaultPlaceholder])(\n    ReactSelect\n  ),\n  TextArea: createWithFieldDecorator([withLang, withInputDefaultPlaceholder])(\n    ReactTextArea\n  ),\n  AdvancedSelect: createWithFieldDecorator([\n    withLang,\n    withSelectDefaultPlaceholder,\n  ])(AdvancedSelectField),\n};\n\nexport default fields;\n\nexport const fieldDecorator = {\n  createWithFieldDecorator,\n  withInputDefaultPlaceholder,\n  withSelectDefaultPlaceholder,\n  withLang,\n};\n","import { hooks } from \"@kne/react-form-antd\";\nimport { Input, Typography } from \"antd\";\nimport useControlValue from \"@kne/use-control-value\";\n\nconst { useDecorator } = hooks;\n\nconst TextField = ({ children, ...props }) => {\n  const [value] = useControlValue(props);\n  return (\n    <Typography.Text {...props}>\n      <div style={{ height: 0, width: 0, overflow: \"hidden\" }}>\n        <Input value={value} />\n      </div>\n      {children ? children : value}\n    </Typography.Text>\n  );\n};\n\nconst Text = (props) => {\n  const render = useDecorator(props);\n  return render(TextField);\n};\n\nText.Field = TextField;\n\nexport default Text;\n","import * as reactFormAntd from \"@kne/react-form-antd\";\nimport {\n  DatePicker as ReactDatePicker,\n  DatePickerToday as ReactDatePickerToday,\n  Input as ReactInput,\n  InputNumber as ReactInputNumber,\n  Select as ReactSelect,\n  TextArea as ReactTextArea,\n  TimePicker as ReactTimePicker,\n  TreeSelect as ReactTreeSelect,\n} from \"@kne/react-form-antd\";\nimport Form from \"./Form\";\nimport { FormattedMessage, useIntl } from \"@components/Intl\";\nimport { forwardRef } from \"react\";\nimport FormItem from \"./FormItem\";\nimport style from \"./style.module.scss\";\nimport AdvancedSelectField from \"./fields/AdvancedSelect\";\nimport AddressSelect, {\n  AddressInput as AddressInputField,\n} from \"./fields/AddressSelect\";\nimport Cascader from \"./fields/Cascader\";\nimport FunctionSelect from \"./fields/FunctionSelect\";\nimport IndustrySelect from \"./fields/IndustrySelect\";\nimport MoneyInput from \"./fields/MoneyInput\";\nimport PhoneNumber from \"./fields/PhoneNumber\";\nimport Upload from \"./fields/Upload\";\nimport Avatar from \"./fields/Avatar\";\nimport SalaryInput from \"./fields/SalaryInput\";\nimport InputUpperCaseField from \"./fields/InputUpperCase\";\nimport TypeDateRangePicker from \"./fields/TypeDateRangePicker\";\nimport TableInput from \"./fields/TableInput\";\nimport Text from \"./fields/Text\";\nimport Rate from \"./fields/Rate\";\nimport ErrorTip from \"./ErrorTip\";\n\nconst withInputDefaultPlaceholder = (WrappedComponent) => {\n  const TargetComponent = forwardRef(\n    ({ placeholder, label, ...props }, ref) => (\n      <FormattedMessage\n        id=\"defaultInputPlaceholder\"\n        moduleName=\"FormInfo\"\n        values={{ label }}\n      >\n        {(text) => (\n          <WrappedComponent\n            {...props}\n            ref={ref}\n            label={label}\n            placeholder={placeholder || text}\n          />\n        )}\n      </FormattedMessage>\n    )\n  );\n  Object.keys(WrappedComponent)\n    .filter((key) => {\n      return [\"$$typeof\", \"render\", \"field\"].indexOf(key) === -1;\n    })\n    .forEach((key) => {\n      TargetComponent[key] = WrappedComponent[key];\n    });\n\n  return TargetComponent;\n};\n\nconst withTextAreaDefaultPlaceholder =\n  (WrappedComponent) =>\n  ({ placeholder, label, className, ...props }) =>\n    (\n      <FormattedMessage\n        id=\"defaultInputPlaceholder\"\n        moduleName=\"FormInfo\"\n        values={{ label }}\n      >\n        {(text) => (\n          <div className={style[\"textarea-wrapped-component\"]}>\n            <WrappedComponent\n              {...props}\n              label={label}\n              placeholder={placeholder || text}\n            />\n          </div>\n        )}\n      </FormattedMessage>\n    );\n\nconst withSelectDefaultPlaceholder = (WrappedComponent) => {\n  const TargetComponent = forwardRef(\n    ({ placeholder, label, ...props }, ref) => (\n      <FormattedMessage\n        id=\"defaultSelectPlaceholder\"\n        moduleName=\"FormInfo\"\n        values={{ label }}\n      >\n        {(text) => (\n          <WrappedComponent\n            {...props}\n            ref={ref}\n            label={label}\n            placeholder={placeholder || text}\n          />\n        )}\n      </FormattedMessage>\n    )\n  );\n\n  Object.keys(WrappedComponent)\n    .filter((key) => {\n      return [\"$$typeof\", \"render\", \"field\"].indexOf(key) === -1;\n    })\n    .forEach((key) => {\n      TargetComponent[key] = WrappedComponent[key];\n    });\n\n  return TargetComponent;\n};\n\nexport { default as ErrorTip } from \"./ErrorTip\";\n\nexport { default as FormItem } from \"./FormItem\";\n\n// export { default as AdvancedSelect } from \"./fields/AdvancedSelect\";\nexport const AdvancedSelect = withSelectDefaultPlaceholder(AdvancedSelectField);\n\nexport { default as AddressSelect } from \"./fields/AddressSelect\";\nexport const AddressInput = withSelectDefaultPlaceholder(AddressInputField);\n\nexport {\n  Cascader,\n  FunctionSelect,\n  IndustrySelect,\n  MoneyInput,\n  PhoneNumber,\n  Upload,\n  Avatar,\n  SalaryInput,\n  TableInput,\n  Text,\n  Rate,\n  TypeDateRangePicker,\n};\nexport const InputUpperCase = withInputDefaultPlaceholder(InputUpperCaseField);\nexport const Input = withInputDefaultPlaceholder(ReactInput);\nInput.Password = withInputDefaultPlaceholder(ReactInput.Password);\n\nexport const TextArea = withTextAreaDefaultPlaceholder(ReactTextArea);\n\nexport const Select = withSelectDefaultPlaceholder(ReactSelect);\n\nSelect.Fetch = withSelectDefaultPlaceholder(ReactSelect.Fetch);\nSelect.Fetch.field = ReactSelect.Fetch.field;\n\nexport const InputNumber = withInputDefaultPlaceholder(ReactInputNumber);\n\nexport const TreeSelect = withSelectDefaultPlaceholder(ReactTreeSelect);\nTreeSelect.Fetch = withSelectDefaultPlaceholder(ReactTreeSelect.Fetch);\nTreeSelect.Fetch.field = ReactTreeSelect.Fetch.field;\n\nexport const TimePicker = withSelectDefaultPlaceholder(ReactTimePicker);\n\nTimePicker.RangePicker = withSelectDefaultPlaceholder(\n  ReactTimePicker.RangePicker\n);\n\nexport const DatePicker = withSelectDefaultPlaceholder(ReactDatePicker);\n\nDatePicker.MonthPicker = withSelectDefaultPlaceholder(\n  ReactDatePicker.MonthPicker\n);\n\nDatePicker.RangePicker = withSelectDefaultPlaceholder(\n  ReactDatePicker.RangePicker\n);\n\nDatePicker.WeekPicker = withSelectDefaultPlaceholder(\n  ReactDatePicker.WeekPicker\n);\n\nexport const DatePickerToday = ({\n  placeholder,\n  label,\n  soFarText,\n  ...props\n}) => {\n  const { formatMessage } = useIntl({ moduleName: \"FormInfo\" });\n  return (\n    <ReactDatePickerToday\n      {...props}\n      label={label}\n      placeholder={[\n        formatMessage({ id: \"startDate\" }),\n        formatMessage({ id: \"endDate\" }),\n      ]}\n      soFarText={soFarText || formatMessage({ id: \"soFarText\" })}\n    />\n  );\n};\n\nexport { Form };\n\nexport const formModule = Object.assign({}, reactFormAntd, {\n  Input,\n  InputUpperCase,\n  TextArea,\n  Select,\n  InputNumber,\n  TreeSelect,\n  TimePicker,\n  DatePicker,\n  DatePickerToday,\n  Form,\n  FormItem,\n  AdvancedSelect,\n  AddressSelect,\n  AddressInput,\n  MoneyInput,\n  PhoneNumber,\n  Cascader,\n  FunctionSelect,\n  IndustrySelect,\n  TypeDateRangePicker,\n  Upload,\n  Avatar,\n  SalaryInput,\n  TableInput,\n  Text,\n  Rate,\n  ErrorTip,\n});\n","import preset from \"./preset\";\nimport FormInfo from \"./FormInfo\";\nimport fields, { fieldDecorator } from \"./fields\";\nimport List from \"./List\";\nimport TableList from \"./TableList\";\nimport FormApiButton from \"./FormApiButton\";\nimport FormModal, { useFormModal, FormModalButton } from \"./FormModal\";\nimport FormStepModal, {\n  useFormStepModal,\n  FormStepModalButton,\n} from \"./FormStepModal\";\nimport FormDrawer, { useFormDrawer, FormDrawerButton } from \"./FormDrawer\";\nimport Form from \"./Form\";\nimport FormItem from \"./FormItem\";\nimport ErrorTip from \"./ErrorTip\";\nimport { SubmitButton, CancelButton } from \"@kne/react-form-antd\";\n\npreset();\n\nFormInfo.fields = fields;\nFormInfo.List = List;\nFormInfo.TableList = TableList;\nFormInfo.FormApiButton = FormApiButton;\nFormInfo.FormModal = FormModal;\nFormInfo.useFormModal = useFormModal;\nFormInfo.FormModalButton = FormModalButton;\nFormInfo.FormStepModal = FormStepModal;\nFormInfo.useFormStepModal = useFormStepModal;\nFormInfo.FormStepModalButton = FormStepModalButton;\nFormInfo.FormDrawer = FormDrawer;\nFormInfo.useFormDrawer = useFormDrawer;\nFormInfo.FormDrawerButton = FormDrawerButton;\nFormInfo.Form = Form;\nFormInfo.FormItem = FormItem;\nFormInfo.ErrorTip = ErrorTip;\nFormInfo.SubmitButton = SubmitButton;\nFormInfo.CancelButton = CancelButton;\nFormInfo.fieldDecorator = fieldDecorator;\n\nexport * from \"@kne/react-form-antd\";\n\nexport * from \"./formModule\";\n\nexport {\n  Form,\n  FormItem,\n  ErrorTip,\n  fields,\n  fieldDecorator,\n  List,\n  TableList,\n  FormApiButton,\n  FormModal,\n  useFormModal,\n  FormModalButton,\n  FormStepModal,\n  useFormStepModal,\n  FormStepModalButton,\n  FormDrawer,\n  useFormDrawer,\n  FormDrawerButton,\n};\n\nexport { default as SelectInnerInput } from \"./SelectInnerInput\";\n\nexport default FormInfo;\n","import { interceptors, preset, RULES } from \"@kne/react-form-antd\";\nimport dayjs from \"dayjs\";\nimport merge from \"lodash/merge\";\nimport get from \"lodash/get\";\nimport \"@kne/react-form-antd/dist/index.css\";\nimport { PHONE_NUMBER } from \"./fields/PhoneNumber\";\nimport HelperGuideLabel from \"@components/FormInfo/HelperGuideLabel\";\n\nconst formPreset = (options, otherOptions) => {\n  const { locale } = Object.assign({}, otherOptions);\n\n  interceptors.output.use(\"photo-string\", (value) => {\n    if (!value || typeof value === \"string\") {\n      return value;\n    }\n    return value.id?.split(\"?\")?.[0] || value.id;\n  });\n\n  interceptors.input.use(\"to-array\", (value) => {\n    return Array.isArray(value) ? value[0] : value;\n  });\n\n  interceptors.output.use(\"to-array\", (value) => {\n    return [value];\n  });\n\n  interceptors.input.use(\"array-single\", (value) => {\n    return value ? [value] : [];\n  });\n\n  interceptors.output.use(\"array-single\", (value) => {\n    return value ? value[0] : null;\n  });\n\n  interceptors.input.use(\"date-string\", (value) => {\n    return value ? dayjs(value) : null;\n  });\n\n  interceptors.output.use(\"date-string\", (value) => {\n    return value ? new Date(value.valueOf()).toISOString() : \"\";\n  });\n\n  interceptors.input.use(\"date-range-string\", (value) => {\n    if (!Array.isArray(value)) {\n      return [];\n    }\n\n    const output = [];\n\n    if (value[0]) {\n      output.push(dayjs(value[0]));\n    }\n    if (value[0] && value[1] && value[1] === \"sofar\") {\n      output.push(\"至今\");\n    }\n    if (value[0] && value[1] && value[1] !== \"至今\") {\n      output.push(dayjs(value[1]));\n    }\n\n    return output;\n  });\n\n  interceptors.output.use(\"date-range-string\", (value) => {\n    if (!Array.isArray(value)) {\n      return [];\n    }\n\n    const output = [];\n\n    if (value[0]) {\n      output.push(new Date(value[0].valueOf()).toISOString());\n    }\n    if (value[0] && value[1] && value[1] === \"至今\") {\n      output.push(\"sofar\");\n    }\n    if (value[0] && value[1] && value[1] !== \"至今\") {\n      output.push(new Date(value[1].valueOf()).toISOString());\n    }\n    return output;\n  });\n\n  interceptors.output.use(\"file-format\", (value) => {\n    if (!Array.isArray(value)) {\n      return [];\n    }\n    return value.map((item) => ({\n      id: item.id || item.ossId,\n      originalName: item.filename,\n    }));\n  });\n\n  interceptors.input.use(\"file-format\", (value) => {\n    if (!Array.isArray(value)) {\n      return [];\n    }\n    return value.map((item) => ({\n      id: item.id || item.ossId,\n      ossId: item.id || item.ossId,\n      filename: item.originalName,\n    }));\n  });\n\n  const _olderREQ = RULES.REQ;\n  const _olderLEN = RULES.LEN;\n\n  const getLocaleMsg = (type, values) => {\n    values = Object.assign({}, values);\n    const mapping = {\n      REQ: {\n        \"zh-CN\": \"%s不能为空\",\n        \"en-US\": \"%s cannot be empty \",\n      },\n      LENGTH_EQUAL: {\n        \"zh-CN\": `%s必须等于${values.end}`,\n        \"en-US\": `%s must be equal to ${values.end}`,\n      },\n      LENGTH_MORE: {\n        \"zh-CN\": `%s必须大于${values.start}`,\n        \"en-US\": `%s must be greater than ${values.start}`,\n      },\n      LENGTH_LESS: {\n        \"zh-CN\": `%s必须小于${values.end}`,\n        \"en-US\": `%s must be less than ${values.end}`,\n      },\n    };\n    const target = get(mapping, `${type}.${locale}`);\n    if (target) {\n      return target;\n    }\n    return get(mapping, `${type}.zh-CN`);\n  };\n\n  preset(\n    merge(\n      {},\n      {\n        rules: {\n          REQ: (...args) => {\n            return Object.assign({}, _olderREQ(...args), {\n              errMsg: getLocaleMsg(\"REQ\"),\n            });\n          },\n          LEN: (...args) => {\n            const [value, start, end] = args;\n            let ruleName = \"\";\n            if (end === start && value.length !== Number(end)) {\n              ruleName = \"LENGTH_EQUAL\";\n            }\n            if (value.length < start) {\n              ruleName = \"LENGTH_MORE\";\n            }\n            if (end && value.length > end) {\n              ruleName = \"LENGTH_LESS\";\n            }\n            return Object.assign({}, _olderLEN(...args), {\n              errMsg: getLocaleMsg(ruleName, { start, end }),\n            });\n          },\n          PHONE_NUMBER,\n          ARRAY_LENGTH: (value, start, end) => {\n            if (end === start && value.length !== Number(end)) {\n              return {\n                result: false,\n                errMsg: getLocaleMsg(\"LENGTH_EQUAL\", { start, end }),\n              };\n            }\n            if (value.length < start) {\n              return {\n                result: false,\n                errMsg: getLocaleMsg(\"LENGTH_MORE\", { start, end }),\n              };\n            }\n            if (end && value.length > end) {\n              return {\n                result: false,\n                errMsg: getLocaleMsg(\"LENGTH_LESS\", { start, end }),\n              };\n            }\n            return { result: true };\n          },\n        },\n        field: {\n          datePicker: {\n            defaultProps: {\n              interceptor: \"date-string\",\n            },\n          },\n          rangeDatePicker: {\n            defaultProps: {\n              interceptor: \"date-range-string\",\n            },\n          },\n          textArea: {\n            defaultProps: {\n              autoSize: {\n                minRows: 2,\n                maxRows: 6,\n              },\n            },\n          },\n        },\n        globalProps: {\n          labelTips: (props) => {\n            return <HelperGuideLabel {...props} />;\n          },\n        },\n      },\n      typeof options === \"function\" ? options({ interceptors, RULES }) : options\n    )\n  );\n};\n\nexport default formPreset;\n","// extracted by mini-css-extract-plugin\nexport default {\"select-date-box\":\"style_select-date-box__dAZdQ__ujG5g\",\"dot\":\"style_dot__-kCbf__ujG5g\",\"row\":\"style_row__jF4Ep__ujG5g\",\"time\":\"style_time__ZqsGI__ujG5g\",\"title\":\"style_title__UfoFQ__ujG5g\",\"selected\":\"style_selected__ZAhNv__ujG5g\",\"not-selected\":\"style_not-selected__1ZL01__ujG5g\",\"other\":\"style_other__wj9bp__ujG5g\",\"other-tooltip\":\"style_other-tooltip__8Wd+S__ujG5g\",\"calendar-tooltip\":\"style_calendar-tooltip__oW3wo__ujG5g\",\"tooltip-header\":\"style_tooltip-header__lvQv7__ujG5g\",\"tooltip-body\":\"style_tooltip-body__ZIZC6__ujG5g\",\"tooltip-box\":\"style_tooltip-box__ymQFN__ujG5g\"};","import style from \"./style.module.scss\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport scrollGridPlugin from \"@fullcalendar/scrollgrid\";\nimport Tooltip from \"@components/Tooltip\";\nimport { Divider } from \"antd\";\nimport classnames from \"classnames\";\nimport get from \"lodash/get\";\nimport orderBy from \"lodash/orderBy\";\nimport groupBy from \"lodash/groupBy\";\nimport dayjs from \"dayjs\";\nimport merge from \"lodash/merge\";\nimport flatten from \"lodash/flatten\";\n\nconst Calendar = (props) => {\n  return <FullCalendar {...props} />;\n};\n\nconst showStrLength = 6;\n\nconst getByteLen = function (str) {\n  let len = 0;\n  for (let i = 0; i < str.length; i++) {\n    str.charCodeAt(i) < 256 ? (len += 1) : (len += 2);\n  }\n  return len;\n};\n\nconst ContentComponent = ({ main, title }) => {\n  const { disabled, date, candidateName, start, end, onClick } = main || {};\n  const _start = dayjs(start).format(\"HH:mm\");\n  const _end = dayjs(end).format(\"HH:mm\");\n  const _end_tooltip =\n    dayjs(start).format(\"YYYY-MM-DD\") === dayjs(end).format(\"YYYY-MM-DD\")\n      ? dayjs(end).format(\"HH:mm\")\n      : dayjs(end).format(\"YYYY-MM-DD HH:mm\");\n  const timeText = `${_start}-${_end}`;\n  const _timeTextTooltip = `${_start} - ${_end_tooltip}`;\n\n  const contentHtml = (\n    <div\n      className={style[\"row\"]}\n      onClick={() => {\n        if (disabled) return;\n        onClick && onClick(main);\n      }}\n    >\n      <span className={classnames(\"select-dot\", style[\"dot\"])}></span>\n      <span className={classnames(\"select-time\", style[\"time\"])}>\n        {timeText}\n      </span>\n      <span className={classnames(\"select-title\", style[\"title\"])}>\n        {getByteLen(title) > showStrLength\n          ? title.slice(0, showStrLength - 3) + \"...\"\n          : title}\n      </span>\n    </div>\n  );\n\n  return (\n    <div\n      className={classnames(\n        style[\"select-date-box\"],\n        disabled ? style[\"selected\"] : style[\"not-selected\"]\n      )}\n    >\n      {disabled ? (\n        <Tooltip\n          overlayClassName={style[\"calendar-tooltip\"]}\n          content={\n            <div className={style[\"tooltip\"]}>\n              <div className={style[\"tooltip-header\"]}>客户面试</div>\n              <Divider />\n              <div className={style[\"tooltip-body\"]}>\n                <div className={style[\"tooltip-box\"]}>\n                  <label>候选人：</label>\n                  <div>{candidateName}</div>\n                </div>\n                <div className={style[\"tooltip-box\"]}>\n                  <label>面试时间：</label>\n                  <div>\n                    {date} {_timeTextTooltip}\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n          placement={\"rightTop\"}\n        >\n          {contentHtml}\n        </Tooltip>\n      ) : (\n        <Tooltip\n          overlayClassName={style[\"calendar-tooltip\"]}\n          content={\n            <div className={style[\"tooltip\"]}>\n              <div className={style[\"tooltip-header\"]}>日程</div>\n              <Divider />\n              <div className={style[\"tooltip-body\"]}>\n                <div className={style[\"tooltip-box\"]}>\n                  <label>日程标题：</label>\n                  <div>{title || \"-\"}</div>\n                </div>\n                <div className={style[\"tooltip-box\"]}>\n                  <label>日程时间：</label>\n                  <div>\n                    {date} {_timeTextTooltip}\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n          placement={\"rightTop\"}\n        >\n          {contentHtml}\n        </Tooltip>\n      )}\n    </div>\n  );\n};\n\nconst renderEventContent = (eventInfo = {}) => {\n  const { event } = eventInfo || {};\n  const title = event._def.title || \"\";\n  const main = get(event, \"_def.extendedProps.main\") || {};\n  const { showOther } = main;\n  const { num, content } = showOther || {};\n\n  return (\n    <>\n      <ContentComponent title={title} main={main} />\n      {showOther && (\n        <div\n          className={style[\"other\"]}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <Tooltip\n            overlayClassName={style[\"calendar-tooltip\"]}\n            content={\n              <div className={style[\"other-tooltip\"]}>\n                {(content || []).map((item) => {\n                  return (\n                    <ContentComponent\n                      key={item.id}\n                      main={item.main}\n                      title={item.title}\n                    />\n                  );\n                })}\n              </div>\n            }\n            placement={\"rightTop\"}\n          >\n            <div>还有{num}项…</div>\n          </Tooltip>\n        </div>\n      )}\n    </>\n  );\n};\n\nCalendar.defaultProps = {\n  timezone: \"UTC\",\n  plugins: [dayGridPlugin, interactionPlugin, timeGridPlugin, scrollGridPlugin],\n  initialView: \"dayGridMonth\",\n  aspectRatio: 1.6,\n  weekends: true,\n  slotEventOverlap: false,\n  displayEventEnd: true,\n  editable: false,\n  firstDay: 1,\n  buttonText: {\n    today: \"今天\",\n    month: \"月\",\n  },\n  dayMinWidth: 100,\n  locale: \"zh-cn\",\n  headerToolbar: {\n    center: \"\",\n    left: \"prev title next\",\n    right: \"today\",\n  },\n  height: \"auto\",\n  handleWindowResize: false,\n  eventContent: renderEventContent,\n  dateClick: () => {},\n  eventClick: () => {},\n  initialDate: dayjs().format(\"YYYY-MM-DD\"),\n};\n\nexport const transformEvents = (events, onClickOtherItem) => {\n  if (events.length === 0) return [];\n\n  const arr = events.map((item, index) => ({\n    ...item,\n    title: Boolean(item?.bookable === 0) ? \"已预约\" : item.title,\n    main: {\n      id: index,\n      title: Boolean(item?.bookable === 0) ? \"已预约\" : item.title,\n      candidateName: item.title || \"-\",\n      disabled: Boolean(item?.bookable === 0),\n      date: dayjs(item.start).format(\"YYYY-MM-DD\"),\n      start: dayjs(item.start).format(\"YYYY-MM-DD HH:mm\"),\n      end: dayjs(item.end).format(\"YYYY-MM-DD HH:mm\"),\n    },\n  }));\n  const groupList = groupBy(arr, (item) => {\n    return dayjs(item.start).startOf(\"day\").format(\"YYYY-MM-DD\");\n  });\n\n  let newEvents = [];\n  Object.keys(groupList).forEach((key) => {\n    let _newEvents = [];\n    const orderTimeArr = orderBy(\n      groupList[key],\n      [\"start\", \"end\"],\n      [\"asc\", \"desc\"]\n    );\n\n    if (orderTimeArr.length > 4) {\n      _newEvents = orderTimeArr.slice(0, 3);\n      _newEvents[2] = merge({}, orderTimeArr[2], {\n        main: {\n          showOther: {\n            num: orderTimeArr.length - 3,\n            disabled: true,\n            content: orderTimeArr.slice(3, orderTimeArr.length).map((item) => ({\n              ...item,\n              main: {\n                ...item.main,\n                onClick: onClickOtherItem || (() => {}),\n              },\n            })),\n          },\n        },\n      });\n    } else {\n      _newEvents = orderTimeArr.slice(0, orderTimeArr.length);\n    }\n    newEvents.push(_newEvents);\n  });\n  console.log(\">>>>> newEvents\", flatten(newEvents));\n  return flatten(newEvents);\n};\n\nexport default Calendar;\n","// extracted by mini-css-extract-plugin\nexport default {\"high-color\":\"style_high-color__-DN7m__ujG5g\"};","import { createContext, createElement, useContext, useMemo } from \"react\";\nimport style from \"./style.module.scss\";\n\nconst context = createContext({});\nconst { Provider } = context;\n\nconst escapeSpecialCharacter = (str) => {\n  const pattern =\n    /[`+~!@#_$%^*()=|{}':;,\\\\[\\].<>/?！￥…&（）—【】‘；：”“。，、？\\s]/g;\n  return str.replace(pattern, (match) => \"\\\\\" + match);\n};\n\nexport const HighlightProvider = ({ list, children, highlightClassName }) => {\n  return (\n    <Provider value={{ list, highlightClassName }}>\n      <span data-testid=\"components-core-highlight\">{children}</span>\n    </Provider>\n  );\n};\nHighlightProvider.defaultProps = {\n  caseSensitive: false,\n  list: [],\n  highlightClassName: \"\",\n};\nconst Highlight = ({ tagName, children }) => {\n  const { list, caseSensitive, highlightClassName } = useContext(context);\n  const renderStr = useMemo(() => {\n    if (!children) return;\n    let target = children?.toString();\n    if (!list || list.length === 0) {\n      return target;\n    }\n    const allWordsRe = list\n      .map(function (word) {\n        return \"(\" + escapeSpecialCharacter(word) + \")\";\n      })\n      .join(\"|\");\n\n    const regExp = new RegExp(allWordsRe, caseSensitive ? \"gm\" : \"gim\");\n\n    return target.replace(regExp, (innerMatch) => {\n      return `<font class=\"${style[\"high-color\"]} ${highlightClassName}\">${innerMatch}</font>`;\n    });\n  }, [list, caseSensitive, children, highlightClassName]);\n\n  return createElement(tagName, {\n    dangerouslySetInnerHTML: { __html: renderStr },\n  });\n};\nHighlight.defaultProps = {\n  tagName: \"span\",\n  children: \"\",\n};\n\n// Highlight.propTypes={\n//     children:PropTypes.string\n// }\nexport default Highlight;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"style_overlay__ZS5Wz__ujG5g\",\"overlay-content\":\"style_overlay-content__IVFmc__ujG5g\",\"state-tag\":\"style_state-tag__+59RJ__ujG5g\"};","import style from \"./style.module.scss\";\nimport {\n  useState,\n  useCallback,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n} from \"react\";\nimport localStorage from \"@common/utils/localStorage\";\nimport StateTag from \"@components/StateTag\";\nimport { Popover, Space } from \"antd\";\nimport dropWhile from \"lodash/dropWhile\";\nimport uniqBy from \"lodash/uniqBy\";\nimport useClickOutside from \"@kne/use-click-outside\";\nimport classnames from \"classnames\";\n\nconst HistoryStore = ({\n  className,\n  overlayClassName,\n  storeName,\n  maxLength,\n  label,\n  children,\n  onSelect,\n  zIndex,\n  getPopupContainer,\n}) => {\n  const [list, setList] = useState(() => {\n    return localStorage.getItem(storeName) || [];\n  });\n  const [open, setOpen] = useState(false);\n  const openHistory = useCallback(() => {\n    if (list.length === 0) {\n      return;\n    }\n    setOpen(true);\n  }, [list]);\n  const storeNameRef = useRef(storeName);\n  storeNameRef.current = storeName;\n  useEffect(() => {\n    localStorage.setItem(storeNameRef.current, list);\n  }, [list]);\n\n  const appendHistory = useCallback(\n    (item) => {\n      if (item.value && item.label) {\n        setList((list) => {\n          const newList = dropWhile(list, { value: item.value });\n          newList.splice(0, 0, item);\n          return maxLength\n            ? uniqBy(newList, \"value\").slice(0, maxLength)\n            : newList;\n        });\n      }\n      setOpen(false);\n    },\n    [maxLength]\n  );\n\n  const close = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const outerRef = useClickOutside(close);\n\n  const popoverChildrenRef = useRef(null),\n    popoverContentRef = useRef(null);\n  outerRef.current = {\n    contains: (target) => {\n      return (\n        popoverChildrenRef.current.contains(target) ||\n        (open && popoverContentRef.current.contains(target))\n      );\n    },\n  };\n\n  const onSelectRef = useRef(null);\n  const setOnSelect = (callback) => {\n    onSelectRef.current = callback;\n  };\n\n  const [width, setWidth] = useState(0);\n\n  useLayoutEffect(() => {\n    const callback = () => {\n      setWidth(popoverChildrenRef.current.clientWidth);\n    };\n    callback();\n    const resizeObserver = new ResizeObserver(callback);\n    resizeObserver.observe(popoverChildrenRef.current);\n    const mutationObserver = new MutationObserver(callback);\n    mutationObserver.observe(popoverChildrenRef.current, {\n      subtree: true,\n      childList: true,\n    });\n    return () => {\n      mutationObserver.disconnect();\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  return (\n    <Popover\n      zIndex={zIndex}\n      placement=\"bottom\"\n      transitionName={\"ant-slide-up\"}\n      arrow={false}\n      open={open}\n      getPopupContainer={getPopupContainer}\n      overlayClassName={classnames(overlayClassName, style[\"overlay\"])}\n      content={\n        <div\n          className={style[\"overlay-content\"]}\n          style={{ width }}\n          ref={popoverContentRef}\n        >\n          <Space direction=\"vertical\">\n            <div>{label}</div>\n            <Space wrap>\n              {list.map((item) => (\n                <StateTag\n                  className={style[\"state-tag\"]}\n                  text={item.label}\n                  type={\"result\"}\n                  onClick={() => {\n                    onSelect && onSelect(item.value, item);\n                    onSelectRef.current &&\n                      onSelectRef.current(item.value, item);\n                    close();\n                    appendHistory(item);\n                  }}\n                />\n              ))}\n            </Space>\n          </Space>\n        </div>\n      }\n    >\n      <div ref={popoverChildrenRef} className={classnames(className)}>\n        {children({\n          open,\n          openHistory,\n          appendHistory,\n          setOnSelect,\n          close,\n        })}\n      </div>\n    </Popover>\n  );\n};\n\nHistoryStore.defaultProps = {\n  maxLength: 5,\n  label: \"最近搜索\",\n  storeName: \"HISTORY_STORE_KEY\",\n};\n\nexport default HistoryStore;\n","// extracted by mini-css-extract-plugin\nexport default {\"part\":\"style_part__+Vw3+__ujG5g\",\"collapse\":\"style_collapse__ARl-O__ujG5g\",\"is-active\":\"style_is-active__i1zHH__ujG5g\"};","import { Collapse as CollapseAntd } from \"antd\";\nimport Icon from \"@components/Icon\";\nimport style from \"./style.module.scss\";\nimport classnames from \"classnames\";\n\nconst Collapse = ({ children, className, ...props }) => {\n  return (\n    <CollapseAntd\n      {...props}\n      className={classnames(style[\"collapse\"], className)}\n      expandIcon={({ isActive }) => (\n        <Icon\n          size={12}\n          className={classnames({\n            [style[\"is-active\"]]: isActive,\n          })}\n          type=\"icon-triangle-right\"\n        />\n      )}\n    >\n      {children}\n    </CollapseAntd>\n  );\n};\n\nCollapse.Panel = CollapseAntd.Panel;\n\nexport default Collapse;\n","import { Card, Space } from \"antd\";\nimport classnames from \"classnames\";\nimport Collapse from \"./Collapse\";\nimport style from \"./style.module.scss\";\n\nconst Part = ({ className, title, extra, children, ...props }) => {\n  return (\n    <Card\n      className={classnames(style[\"part\"], className, {\n        \"no-title\": !title,\n      })}\n      bordered={false}\n      title={title}\n      extra={extra}\n      {...props}\n    >\n      {children}\n    </Card>\n  );\n};\n\nconst InfoPage = ({ className, children }) => {\n  return (\n    <Space className={className} direction=\"vertical\" size={24}>\n      {children}\n    </Space>\n  );\n};\n\nInfoPage.Part = Part;\nInfoPage.Collapse = Collapse;\nexport default InfoPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"style_notification__Vv-MM__ujG5g\",\"list\":\"style_list__l8KOo__ujG5g\",\"header\":\"style_header__3dcv8__ujG5g\",\"item\":\"style_item__d92RS__ujG5g\",\"item-box\":\"style_item-box__dd-Lk__ujG5g\",\"index-1\":\"style_index-1__f97L0__ujG5g\",\"index-2\":\"style_index-2__04vAw__ujG5g\",\"item-box-main\":\"style_item-box-main__lnSak__ujG5g\",\"item-title\":\"style_item-title__mArMd__ujG5g\",\"level-high\":\"style_level-high__Uys7Y__ujG5g\",\"level-middle\":\"style_level-middle__EewyC__ujG5g\",\"level-low\":\"style_level-low__8kVyL__ujG5g\",\"title-icon\":\"style_title-icon__1EoAG__ujG5g\",\"item-subtitle\":\"style_item-subtitle__xeFJs__ujG5g\",\"close-btn\":\"style_close-btn__7qpG3__ujG5g\",\"is-loading\":\"style_is-loading__upVL+__ujG5g\",\"item-content\":\"style_item-content__8MlsG__ujG5g\",\"link-outer\":\"style_link-outer__kegyZ__ujG5g\",\"link\":\"style_link__F2CO-__ujG5g\",\"is-last-item\":\"style_is-last-item__MytRl__ujG5g\"};","import { Row, Col, Button, Typography } from \"antd\";\nimport QueueAnim from \"rc-queue-anim\";\nimport classnames from \"classnames\";\nimport SimpleBar from \"@common/components/SimpleBar\";\nimport { useGlobalContext, usePreset } from \"@components/Global\";\nimport Icon from \"@components/Icon\";\nimport Content from \"@components/Content\";\nimport style from \"./style.module.scss\";\nimport { useMemo, useRef, useState, useEffect } from \"react\";\nimport groupBy from \"lodash/groupBy\";\nimport first from \"lodash/first\";\nimport range from \"lodash/range\";\nimport LoadingButton, { useLoading } from \"@components/LoadingButton\";\nimport findIndex from \"lodash/findIndex\";\n\nconst LEVEL = [\"high\", \"middle\", \"low\"];\n\nconst NotificationItem = ({\n  level,\n  title,\n  groupLength,\n  subtitle,\n  content,\n  link,\n  id,\n  children,\n  className,\n}) => {\n  const { setGlobal } = useGlobalContext(\"notification\");\n  const { apis, ajax } = usePreset();\n  const { isLoading, callback } = useLoading(async () => {\n    const { data: resData } = apis?.notification?.read\n      ? await ajax(\n          Object.assign({}, apis.notification.read, {\n            data: { ids: [id] },\n          })\n        )\n      : { data: { code: 0 } };\n\n    if (resData.code === 0) {\n      setGlobal((notification) => {\n        const newList = (notification?.list || []).slice(0);\n        const index = findIndex(newList, (item) => id === item.id);\n        if (index > -1) {\n          newList.splice(index, 1);\n        }\n        return Object.assign({}, notification, { list: newList });\n      });\n    }\n  });\n  return (\n    <div\n      className={classnames(style[\"item\"], className)}\n      style={{ \"--group-length\": Math.min(groupLength, 3) || 1 }}\n    >\n      {groupLength &&\n        groupLength > 1 &&\n        range(1, Math.min(groupLength, 3))\n          .reverse()\n          .map((number) => (\n            <div\n              className={classnames(\n                style[\"item-box\"],\n                style[`index-${number}`]\n              )}\n              key={number}\n            />\n          ))}\n      <div className={classnames(style[\"item-box\"], style[\"item-box-main\"])}>\n        <div\n          className={classnames(style[\"item-title\"], style[`level-${level}`])}\n        >\n          <Icon\n            className={style[\"title-icon\"]}\n            type={level === \"high\" ? \"icon-tishi\" : \"icon-daiwochuli\"}\n          />\n          <Typography.Text ellipsis>{title}</Typography.Text>\n        </div>\n        <div className={style[\"item-content\"]}>\n          <div className={style[\"item-subtitle\"]}>\n            <Typography.Text ellipsis>{subtitle || \"\"}</Typography.Text>\n            <Icon\n              className={classnames(style[\"close-btn\"], {\n                [style[\"is-loading\"]]: isLoading,\n              })}\n              type=\"icon-close-thin\"\n              onClick={() => {\n                if (isLoading) {\n                  return;\n                }\n\n                if (!id) {\n                  return;\n                }\n\n                callback();\n              }}\n            />\n          </div>\n          {Array.isArray(content) ? (\n            <Content list={content} labelAlign=\"auto\" size=\"small\" />\n          ) : (\n            children\n          )}\n        </div>\n        {link && (\n          <div className={style[\"link-outer\"]}>\n            <LoadingButton\n              className={style[\"link\"]}\n              size=\"small\"\n              onClick={async () => {\n                const { data: resData } = apis?.notification?.read\n                  ? await ajax(\n                      Object.assign({}, apis.notification.read, {\n                        data: { ids: [id] },\n                      })\n                    )\n                  : { data: { code: 0 } };\n                if (resData.code === 0) {\n                  window.open(link);\n                }\n              }}\n            >\n              查看详情\n            </LoadingButton>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nNotificationItem.defaultProps = {\n  level: \"low\",\n};\n\nconst Notification = () => {\n  const { global: notification, setGlobal } = useGlobalContext(\"notification\");\n  const headOptionRef = useRef();\n  const { apis, ajax } = usePreset();\n  const [headOptionHeight, setHeadOptionHeight] = useState(32);\n\n  useEffect(() => {\n    headOptionRef.current &&\n      setHeadOptionHeight(headOptionRef.current?.clientHeight);\n  }, []);\n\n  const { list, expand } = Object.assign(\n    {},\n    {\n      expand: false,\n      list: [],\n    },\n    notification\n  );\n\n  const groupList = useMemo(() => {\n    const group = groupBy(list, (item) => item.level || \"low\");\n    return LEVEL.map((name) => group[name] || []);\n  }, [list]);\n\n  if (list.length === 0) {\n    return null;\n  }\n\n  return (\n    <div\n      className={style[\"notification\"]}\n      style={{\n        \"--head-option-height\": `${headOptionHeight}px`,\n      }}\n    >\n      <div ref={headOptionRef}>\n        <Row justify=\"end\" wrap={false} className={style[\"header\"]} gutter={8}>\n          {groupList.some((item) => item.length > 1) && (\n            <Col>\n              <Button\n                size=\"small\"\n                onClick={() => {\n                  setGlobal(\n                    Object.assign({}, notification, { expand: !expand })\n                  );\n                }}\n              >\n                {expand ? \"全部折叠\" : \"全部展开\"}\n              </Button>\n            </Col>\n          )}\n          <Col>\n            <LoadingButton\n              type=\"primary\"\n              size=\"small\"\n              onClick={async () => {\n                const { data: resData } = apis?.notification?.read\n                  ? await ajax(\n                      Object.assign({}, apis.notification.read, {\n                        data: {\n                          ids: list.map((item) => item.id).filter((id) => !!id),\n                        },\n                      })\n                    )\n                  : { data: { code: 0 } };\n                if (resData.code === 0) {\n                  setGlobal(Object.assign({}, notification, { list: [] }));\n                }\n              }}\n            >\n              全部清除\n            </LoadingButton>\n          </Col>\n        </Row>\n      </div>\n      <SimpleBar className={style[\"list\"]}>\n        <QueueAnim leaveReverse duration={200} interval={20}>\n          {groupList\n            .filter((item) => item && item.length > 0)\n            .map((item, groupKey) => {\n              if (expand) {\n                return item.map(\n                  (notification, index) =>\n                    notification && (\n                      <div key={`group-${groupKey}-${index}`}>\n                        <NotificationItem\n                          {...Object.assign({}, notification)}\n                          className={classnames({\n                            [style[\"is-last-item\"]]:\n                              +groupKey + 1 ===\n                                Math.min(\n                                  groupList.filter(\n                                    (item) => item && item.length\n                                  )?.length,\n                                  3\n                                ) && index === item?.length - 1,\n                          })}\n                        />\n                      </div>\n                    )\n                );\n              }\n              const firstItem = first(item);\n              return (\n                <div key={`group-${groupKey}-0`}>\n                  <NotificationItem\n                    {...Object.assign({}, firstItem)}\n                    groupLength={item.length}\n                    className={classnames({\n                      [style[\"is-last-item\"]]:\n                        groupList?.length &&\n                        +groupKey + 1 ===\n                          Math.min(\n                            groupList.filter((item) => item && item.length)\n                              ?.length,\n                            3\n                          ),\n                    })}\n                  />\n                </div>\n              );\n            })}\n        </QueueAnim>\n      </SimpleBar>\n    </div>\n  );\n};\n\nexport default Notification;\n","// extracted by mini-css-extract-plugin\nexport default {\"rich-editor\":\"style_rich-editor__guy9h__ujG5g\",\"read-only\":\"style_read-only__mFMiA__ujG5g\",\"hidden\":\"style_hidden__IUpV4__ujG5g\",\"no-border\":\"style_no-border__bKLqc__ujG5g\"};","// base64图片转file的方法（base64图片, 设置生成file的文件名）\nconst base64ToFile = (base64, fileName) => {\n  // 将base64按照 , 进行分割 将前缀  与后续内容分隔开\n  let data = base64.split(\",\");\n  // 利用正则表达式 从前缀中获取图片的类型信息（image/png、image/jpeg、image/webp等）\n  let type = data[0].match(/:(.*?);/)[1] || \"image/jpeg\";\n  // 从图片的类型信息中 获取具体的文件格式后缀（png、jpeg、webp）\n  let suffix = type.split(\"/\")[1] || \"jpg\";\n  // 使用atob()对base64数据进行解码  结果是一个文件数据流 以字符串的格式输出\n  const bstr = window.atob(data[1]);\n  // 获取解码结果字符串的长度\n  let n = bstr.length;\n  // 根据解码结果字符串的长度创建一个等长的整形数字数组\n  // 但在创建时 所有元素初始值都为 0\n  const u8arr = new Uint8Array(n);\n  // 将整形数组的每个元素填充为解码结果字符串对应位置字符的UTF-16 编码单元\n  while (n--) {\n    // charCodeAt()：获取给定索引处字符对应的 UTF-16 代码单元\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  // 利用构造函数创建File文件对象\n  // new File(bits, name, options)\n  const file = new File([u8arr], `${fileName}.${suffix}`, {\n    type: type,\n  });\n  // 将File文件对象返回给方法的调用者\n  return file;\n};\n\nexport default base64ToFile;\n","const isHref = (value) => {\n  const reg = /http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?/;\n  return value ? reg.test(value) : false;\n};\n\nexport default isHref;\n","import style from \"./style.module.scss\";\nimport useControlValue from \"@kne/use-control-value\";\nimport useSimulationBlur from \"@kne/use-simulation-blur\";\nimport { usePreset } from \"@components/Global\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport classnames from \"classnames\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport { message } from \"antd\";\nimport { get, merge, uniqueId, isNaN } from \"lodash\";\nimport ensureSlash from \"@kne/ensure-slash\";\nimport base64ToFile from \"@common/utils/base64ToFile\";\nimport isHref from \"@common/utils/isHref\";\n\nconst toolbarOptions = [\n  [{ header: [1, 2, 3, 4, 5, 6, false] }],\n  [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n  [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n  [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\n  [{ list: \"ordered\" }, { list: \"bullet\" }],\n  [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n  [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n  [{ align: [] }],\n  [\"image\"],\n  [\"link\"],\n  [\"clean\"], // remove formatting button\n];\n\nconst getText = (text) => {\n  const dom = document.createElement(\"div\");\n  dom.innerHTML = text;\n  return { text: dom.innerText };\n};\n\nconst formatEditorJS = (value) => {\n  const ops = [];\n  for (let i = 0; i < (value.blocks || []).length; i++) {\n    const item = value.blocks[i];\n    if (!item.data) {\n      continue;\n    }\n    if (item.type === \"header\") {\n      ops.push({ insert: `${getText(item.data.text).text}` });\n      ops.push({ attributes: { header: item.data.level }, insert: \"\\n\" });\n    }\n    if (item.type === \"paragraph\") {\n      ops.push({ insert: `${getText(item.data.text).text}\\n` });\n    }\n    if (item.type === \"delimiter\") {\n      ops.push({\n        attributes: { color: \"#000000\", size: \"huge\", bold: true },\n        insert: \" * * *\",\n      });\n      ops.push({ attributes: { align: \"center\" }, insert: \"\\n\" });\n    }\n    if (item.type === \"image\") {\n      ops.push({\n        insert: {\n          image: item.data.file.hasOwnProperty(\"id\")\n            ? `${window.location.origin}/attachment/${item.data.file.id}.png?id=${item.data.file.id}&originalName=${item.data.file.filename}`\n            : item.data.file.url,\n        },\n      });\n    }\n    if (item.type === \"list\") {\n      (item.data.items || []).map((it) => {\n        ops.push.apply(ops, [\n          { insert: `${getText(it.content).text}` },\n          { attributes: { list: \"bullet\" }, insert: \"\\n\" },\n        ]);\n      });\n    }\n    if (item.type === \"attaches\") {\n      const title =\n        get(item.data, \"file.title\") || get(item.data, \"title\") || \"\";\n      const extension =\n        get(item.data, \"file.extension\") ||\n        title.substring(title.lastIndexOf(\".\") + 1);\n      const link = item.data.file.hasOwnProperty(\"id\")\n        ? `${window.location.origin}/attachment/${item.data.file.id}.${extension}?id=${item.data.file.id}&originalName=${title}`\n        : item.data.file.url;\n      ops.push.apply(ops, [\n        { attributes: { link: link }, insert: title },\n        { insert: \"\\n\" },\n      ]);\n    }\n  }\n  return { ops };\n};\n\nconst getUrl = (url) => {\n  const a = document.createElement(\"A\");\n  a.href = url;\n  return a;\n};\n\nconst ReactRichEditor = ({\n  className,\n  readOnly,\n  preview,\n  onBlur,\n  placeholder,\n  hideToolbar,\n  border,\n  domain,\n  folder,\n  type,\n  maxHeight,\n  ...props\n}) => {\n  const [value, onChange] = useControlValue(props);\n  const isReadyRef = useRef(false);\n  const reactQuillRef = useRef(null);\n  const ref = useSimulationBlur(() => {\n    onBlur && onBlur();\n  });\n  const { ossApi, ossToStatic, ajax, urlToOss } = usePreset();\n  const formatValue = useMemo(() => {\n    if (value && Object.prototype.toString.call(value) === \"[object Object]\") {\n      if (value.hasOwnProperty(\"ops\")) {\n        return value;\n      }\n      if (value.hasOwnProperty(\"blocks\")) {\n        return formatEditorJS(value);\n      }\n      return value;\n    }\n    if (value && typeof value === \"string\") {\n      return { ops: [{ insert: `${getText(value).text}\\n` }] };\n    }\n    return { ops: [] };\n  }, [value]);\n\n  const isEditorJS = useMemo(() => {\n    if (value && Object.prototype.toString.call(value) === \"[object Object]\") {\n      if (value.hasOwnProperty(\"blocks\")) {\n        return true;\n      }\n    }\n    return false;\n  }, [value]);\n\n  // 将附件域名下的链接上传转为静态文件\n  const loadImage = async (src, folder) => {\n    const obj = getUrl(src);\n    const searchParams = new URLSearchParams(obj.search);\n    const searchId = searchParams?.get(\"id\");\n    const fileName = obj.pathname.substring(obj.pathname.lastIndexOf(\"/\") + 1);\n    const id = searchId || fileName.substring(0, fileName.lastIndexOf(\".\"));\n    if (id) {\n      const { data } = await ajax(\n        merge({}, ossApi, { params: { id }, showError: false })\n      );\n      const linkSrc = ossApi.transformData\n        ? ossApi.transformData(data)\n        : data.data;\n      const url = linkSrc\n        ? await urlToOss({ url: ensureSlash(linkSrc), folder })\n        : src;\n      return url;\n    }\n    const _url = await urlToOss({ url: src, folder });\n    if (_url) {\n      return _url;\n    }\n    return src;\n  };\n\n  const imageHandler = async () => {\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", \"file\");\n    input.setAttribute(\"accept\", \"image/*\");\n    input.click();\n    input.onchange = () => {\n      const file = input.files[0];\n      const hide = message.loading(\"上传中...\", 0);\n      ossToStatic({ file, folder }).then((url) => {\n        let quill = reactQuillRef?.current?.getEditor(); //获取到编辑器本身\n        const cursorPosition = quill.getSelection().index; //获取当前光标位置\n        quill.insertEmbed(cursorPosition, \"image\", url, \"api\"); //插入图片\n        quill.setSelection(cursorPosition + 1); //光标位置加1\n        hide();\n      });\n    };\n  };\n\n  const updateLink = async () => {\n    if (!reactQuillRef.current) return;\n    var linkNodes = ref.current?.querySelectorAll(\".ql-container img\");\n    for (let i = 0; i < linkNodes.length; i++) {\n      const linkNode = linkNodes[i];\n      let obj = getUrl(linkNode.src);\n      const image = new Image();\n      image.src = linkNode.src;\n      // 检查是否是本站点域名链接\n      const isSameOrigin = domain.some((x) => x.host === obj.hostname);\n      const isNeedUpdate = domain.some(\n        (x) => x.host === obj.hostname && x.update === true\n      );\n      if (isSameOrigin) {\n        image.onerror = () => {\n          isNeedUpdate &&\n            loadImage(linkNode.src, folder).then((url) => {\n              linkNode.src = url;\n            });\n        };\n      } else {\n        // 判断图片是否是base64\n        if (/^data:image/.test(linkNode.src)) {\n          const fileName = uniqueId(\"base64_\") + new Date().getTime();\n          const file = base64ToFile(linkNode.src, fileName);\n          ossToStatic({ file, folder }).then(async (url) => {\n            linkNode.src = url;\n          });\n        } else if (isHref(linkNode.src)) {\n          //  如果是第三方网页链接,将第三方网页链接上传转化为本站点服务链接\n          urlToOss({ url: ensureSlash(linkNode.src), folder }).then((url) => {\n            if (url) linkNode.src = url;\n          });\n        }\n      }\n    }\n\n    var linkNodeLinks = ref.current?.querySelectorAll(\".ql-container a\");\n    for (let i = 0; i < linkNodeLinks.length; i++) {\n      const linkNode = linkNodeLinks[i];\n      if (isHref(linkNode.href)) {\n        let obj = getUrl(linkNode.href);\n        // 检查是否是本站点域名链接\n        const isNeedUpdate = domain.some(\n          (x) => x.host === obj.hostname && x.update === true\n        );\n        isNeedUpdate &&\n          loadImage(linkNode.href, folder).then((url) => {\n            linkNode.href = url;\n          });\n      }\n    }\n  };\n\n  const updateEditor = async (editorContent) => {\n    const ops = get(editorContent, \"ops\") || [];\n    for (let i = 0; i < ops.length; i++) {\n      const item = ops[i];\n      const nodeSrc = get(item, \"insert.image\");\n      if (nodeSrc) {\n        let obj = getUrl(nodeSrc);\n        // 检查是否是本站点域名链接\n        const isSameOrigin = domain.some((x) => x.host === obj.hostname);\n        const isNeedUpdate = domain.some(\n          (x) => x.host === obj.hostname && x.update === true\n        );\n        if (isSameOrigin) {\n          const url = isNeedUpdate ? await loadImage(nodeSrc, folder) : nodeSrc;\n          item.insert.image = url;\n        } else {\n          // 判断图片是否是base64\n          if (/^data:image/.test(nodeSrc)) {\n            const fileName = uniqueId(\"base64_\") + new Date().getTime();\n            const file = base64ToFile(nodeSrc, fileName);\n            const url = await ossToStatic({ file, folder });\n            item.insert.image = url;\n          } else if (isHref(nodeSrc)) {\n            //  如果是第三方网页链接,将第三方网页链接上传转化为本站点服务链接\n            const url = await urlToOss({ url: ensureSlash(nodeSrc), folder });\n            item.insert.image = url || nodeSrc;\n          }\n        }\n      }\n    }\n    return { ops };\n  };\n\n  const modules = useMemo(() => {\n    return {\n      toolbar: {\n        container: toolbarOptions,\n        handlers: {\n          image: (value) => {\n            imageHandler.call(this, props);\n          },\n        },\n      },\n      // counter: {\n      //   container: \"#counter\",\n      //   unit: 'word'\n      // }\n    };\n  }, []);\n\n  useEffect(() => {\n    isReadyRef.current = false;\n    const timer = setInterval(() => {\n      if (reactQuillRef.current && reactQuillRef.current.editor) {\n        isReadyRef.current = true;\n        updateLink();\n        clearInterval(timer);\n      }\n    }, 10);\n    return () => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n  }, []);\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        \"--max-height\":\n          maxHeight && !isNaN(parseFloat(maxHeight))\n            ? parseFloat(maxHeight) + \"px\"\n            : \"\",\n      }}\n      className={classnames(className, style[\"rich-editor\"], {\n        [style[\"read-only\"]]: preview || readOnly,\n        [style[\"hidden\"]]: preview || hideToolbar || readOnly,\n        [style[\"no-border\"]]: border === false,\n      })}\n    >\n      <ReactQuill\n        ref={reactQuillRef}\n        readOnly={readOnly}\n        modules={modules}\n        value={type === \"html\" ? value : formatValue}\n        placeholder={placeholder}\n        theme=\"snow\"\n        onChange={async (content, delta, source, editor) => {\n          const editorContent =\n            type === \"html\" ? editor.getHTML() : editor.getContents();\n          updateLink();\n          const result =\n            type === \"html\" ? editorContent : await updateEditor(editorContent);\n          onChange && onChange(result);\n        }}\n      />\n    </div>\n  );\n};\n\nReactRichEditor.defaultProps = {\n  placeholder: \"请输入\",\n  hideToolbar: false,\n  border: true,\n  value: null,\n  readOnly: false,\n  preview: false,\n  defaultValue: { ops: [] },\n  folder: \"richEditor\", // 支持使用/创建子文件夹\n  domain: [\n    { host: \"localhost\", update: true },\n    { host: \"attachment.dev.fatalent.cn\", update: true },\n    { host: \"attachment.test.fatalent.cn\", update: true },\n    { host: \"attachment.fatalent.cn\", update: true },\n    { host: \"fat-dev-static.oss-cn-shanghai.aliyuncs.com\" },\n    { host: \"fat-test-static.oss-cn-shanghai.aliyuncs.com\" },\n    { host: \"fat-static.oss-cn-shanghai.aliyuncs.com\" },\n  ],\n};\n\nexport default ReactRichEditor;\n","import { hooks } from \"@components/FormInfo\";\nimport ReactRichEditor from \"./ReactRichEditor\";\n\nconst { useOnBlur } = hooks;\n\nconst RichEditor = (props) => {\n  const render = useOnBlur(props);\n  return render(ReactRichEditor);\n};\n\nRichEditor.Field = RichEditor.field = ReactRichEditor;\n\nexport default RichEditor;\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"style_tooltip__zHGMI__ujG5g\",\"large\":\"style_large__lvmsm__ujG5g\",\"small\":\"style_small__nUt0r__ujG5g\",\"popup-content\":\"style_popup-content__-rKQN__ujG5g\",\"title\":\"style_title__1EQPq__ujG5g\",\"important-info\":\"style_important-info__qTSZY__ujG5g\",\"error\":\"style_error__yTTq3__ujG5g\",\"warning\":\"style_warning__CMJxz__ujG5g\",\"success\":\"style_success__AvJVx__ujG5g\",\"sub-title\":\"style_sub-title__uD8CH__ujG5g\",\"content\":\"style_content__lzgUz__ujG5g\",\"alone\":\"style_alone__q6q82__ujG5g\",\"fetch-content\":\"style_fetch-content__tEOEV__ujG5g\",\"fetch-loading\":\"style_fetch-loading__tN-WB__ujG5g\",\"title-info-icon\":\"style_title-info-icon__iY8Q+__ujG5g\"};","import { Space, Tooltip as AntdTooltip } from \"antd\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\n\nconst Tooltip = ({\n  overlayClassName,\n  title,\n  size,\n  subtitle,\n  content,\n  importantInfo,\n  importantInfoType,\n  moreInfo,\n  ...props\n}) => {\n  return (\n    <AntdTooltip\n      {...props}\n      overlayClassName={classnames(overlayClassName, style[\"tooltip\"], {\n        [style[\"small\"]]: size === \"small\",\n        [style[\"large\"]]: size === \"large\",\n      })}\n      title={\n        <Space direction=\"vertical\" className={style[\"popup-content\"]}>\n          {title && <div className={style[\"title\"]}>{title}</div>}\n          {importantInfo && (\n            <div\n              className={classnames(style[\"important-info\"], {\n                [style[\"success\"]]: importantInfoType === \"success\",\n                [style[\"warning\"]]: importantInfoType === \"warning\",\n                [style[\"error\"]]: importantInfoType === \"error\",\n              })}\n            >\n              {importantInfo}\n            </div>\n          )}\n          {subtitle && <div className={style[\"sub-title\"]}>{subtitle}</div>}\n          {content && (\n            <div\n              className={classnames(style[\"content\"], {\n                [style[\"alone\"]]: [\n                  title,\n                  subtitle,\n                  importantInfo,\n                  moreInfo,\n                ].every((item) => !item),\n              })}\n            >\n              {content}\n            </div>\n          )}\n          {moreInfo && <div>{moreInfo}</div>}\n        </Space>\n      }\n    />\n  );\n};\n\nTooltip.defaultProps = {};\n\nexport default Tooltip;\n","import style from \"./style.module.scss\";\nimport Tooltip from \"./index\";\nimport Icon from \"@components/Icon\";\n\nconst TooltipInfoLabel = ({ title, tooltipTitle }) => {\n  return (\n    <div>\n      {title}\n      {tooltipTitle ? (\n        <Tooltip {...tooltipTitle}>\n          <span>\n            <Icon\n              type=\"icon-xinxi-miaobian\"\n              className={style[\"title-info-icon\"]}\n              size={14}\n            />\n          </span>\n        </Tooltip>\n      ) : null}\n    </div>\n  );\n};\n\nexport default TooltipInfoLabel;\n","import { useState } from \"react\";\nimport { useFetch } from \"@kne/react-fetch\";\nimport { Spin } from \"antd\";\nimport style from \"./style.module.scss\";\nimport Tooltip from \"./index\";\nimport classnames from \"classnames\";\n\nconst TooltipFetch = ({\n  api,\n  children,\n  fetchContent,\n  showLoading,\n  loadingClassName,\n  force,\n  ...props\n}) => {\n  const [open, setOpen] = useState(false);\n  const fetchApi = useFetch(Object.assign({}, api, { auto: false }));\n  const { isComplete, isLoading, data, send } = fetchApi;\n  return (\n    <Tooltip\n      {...Object.assign(\n        {},\n        props,\n        isComplete ? fetchContent(data, fetchApi) : {}\n      )}\n      open={open}\n      onOpenChange={async (open) => {\n        if (open && (!isComplete || force)) {\n          await send({ type: \"refresh\" });\n        }\n        setOpen(open);\n      }}\n    >\n      <span className={style[\"fetch-content\"]}>\n        {children}\n        {showLoading && isLoading ? (\n          <Spin\n            size=\"small\"\n            className={classnames(loadingClassName, style[\"fetch-loading\"])}\n          />\n        ) : null}\n      </span>\n    </Tooltip>\n  );\n};\n\nTooltipFetch.defaultProps = {\n  showLoading: true,\n};\n\nexport default TooltipFetch;\n","// extracted by mini-css-extract-plugin\nexport default {\"form-outer\":\"style_form-outer__IWUs0__ujG5g\",\"form-drawer\":\"style_form-drawer__uYDXS__ujG5g\",\"table-list\":\"style_table-list__6lp-A__ujG5g\",\"list-item\":\"style_list-item__hVzQa__ujG5g\",\"table-list-inner\":\"style_table-list-inner__uc8DK__ujG5g\",\"table-list-field\":\"style_table-list-field__JSJfB__ujG5g\",\"table-list-header\":\"style_table-list-header__KXvKa__ujG5g\",\"is-req\":\"style_is-req__LfXQf__ujG5g\",\"table-list-extra\":\"style_table-list-extra__faYTK__ujG5g\",\"list-btn\":\"style_list-btn__WKYkm__ujG5g\",\"list-part\":\"style_list-part__Ld0GA__ujG5g\",\"list-item-part\":\"style_list-item-part__MzKP7__ujG5g\",\"money-input\":\"style_money-input__J86Pb__ujG5g\",\"money-description\":\"style_money-description__Gz3p7__ujG5g\",\"components-upload-wrapper\":\"style_components-upload-wrapper__Ir0gz__ujG5g\",\"textarea-wrapped-component\":\"style_textarea-wrapped-component__r1oKc__ujG5g\",\"helper-guide-field\":\"style_helper-guide-field__Wke3w__ujG5g\",\"field-tips\":\"style_field-tips__7CIJi__ujG5g\",\"label-hidden\":\"style_label-hidden__FzFEN__ujG5g\",\"error-tip-overlay\":\"style_error-tip-overlay__aNCGc__ujG5g\",\"error-tip-overlay-content\":\"style_error-tip-overlay-content__kDOoQ__ujG5g\"};"],"names":["name","summary","api","example","isFull","className","style","list","title","description","code","scope","packageName","component","ButtonText","Label","_ref","children","setWidth","ref","useRef","current","useLayoutEffect","computed","width","getBoundingClientRect","resizeObserver","ResizeObserver","observe","disconnect","_jsxs","Content","_ref2","labelAlign","col","gutter","size","labelWidthListRef","maxLabelWidth","setMaxLabelWidth","useState","_jsx","Row","classnames","filter","item","display","map","_ref3","index","label","content","block","Col","span","Space","minWidth","textAlign","Math","max","defaultProps","dataSource","props","colItem","colIndex","_colItem","slice","itemIndex","featureId","render","length","wrap","concat","Features","id","locale","en-US","zh-CN","GroupItem","groupName","selected","onChange","isCheckedAll","useMemo","every","x","some","it","_Fragment","justify","Checkbox","checked","e","newSelected","target","union","FormattedMessage","moduleName","defaultMessage","push","titleText","RightOptions","options","flex","ExportTableInner","forwardRef","columns","data","selectedColumns","setSelectColumns","columnsData","Array","isArray","JSON","parse","hasOwnProperty","exportHidden","hidden","allColumns","groupBy","visibleColumns","columnsMap","Map","get","useImperativeHandle","IntlProvider","importMessages","ReactSortable","dragClass","ghostClass","forceFallback","setList","setTimeout","animation","delayOnTouchStart","delay","List","Item","align","Icon","type","onClick","event","preventDefault","stopPropagation","direction","split","Divider","Object","keys","withExportTable","WrappedComponent","tableProps","omit","tableRef","saveDataApi","exportTableServerApis","usePreset","_saveDataApi","modal","useModal","async","Component","FetchWrappedComponent","withFetch","getDataApi","_getDataApi","error","withExportTableColumnsData","_ref4","renderFeatureConfig","_ref5","hiddenColumns","indexOf","footer","footerButtons","_tableRef$current","message","selectedTip","saveResult","getCache","delByCacheName","onExport","downloadBlobFile","pick","Button","actionText","res","filename","download","url","element","document","createElement","MouseEvent","href","dispatchEvent","Error","test","prototype","toString","call","blob","Blob","URL","createObjectURL","axios","responseType","useDownload","apis","currentApis","onError","onSuccess","App","useApp","baseApis","assign","downLoading","setDownLoading","isLoading","refresh","fetchProps","useFetch","oss","auto","showError","useRefCallback","successHandler","useEffect","then","catch","params","Download","icon","loading","arguments","useFileModal","useCallback","originName","openDownload","modalProps","success","FilePreview","OptionButtons","createWithIntl","hasPreview","getPermission","formatMessage","useIntl","formModal","useFormModal","fileModal","onPreview","modalApi","formProps","dropRight","join","onSubmit","onEdit","formData","last","close","FormInfo","column","Input","rule","DownloadButton","ConfirmButton","onDelete","infoItemRenders","AntdList","rowKey","uuid","renderItem","FileType","Spin","Typography","Link","bordered","userName","Text","date","dayjs","format","withOSSFile","FileLink","Title","currentTab","setCurrentTab","previewMap","previewList","currentPreviewFileId","setCurrentPreviewFileId","itemApis","maxWidth","getPopupContainer","Segmented","value","Select","popupMatchSelectWidth","ossId","Option","ellipsis","values","count","context","createContext","Provider","useContext","useReactContext","DragButton","onOpenChange","getDragButtonEl","open","UploadButton","accept","onFileSelected","InputFileText","multiple","DragAreaOuter","fileSize","maxLength","dragButtonRef","dragOuterRef","useOutside","contains","el","onDragEnter","UploadTips","renderTips","tipsText","str","replace","defaultTips","DragArea","onDragOver","dataTransfer","dropEffect","onDrop","files","fileList","from","file","acceptFunc","onDragEnd","shape","FileListInner","_previewMap$get","defaultTab","titleExtra","uploadingList","useFileUpload","concurrentCount","onAdd","onSave","ossUpload","newList","findIndex","splice","titleExtraInner","Empty","image","PRESENTED_IMAGE_SIMPLE","Number","MAX_VALUE","FileUpload","HtmlInnerPreview","createWithFetch","transformResponse","results","domDocument","DOMParser","parseFromString","querySelectorAll","forEach","parentElement","removeChild","scriptPath","getPublicPath","script","src","head","appendChild","innerText","srcdoc","documentElement","outerHTML","iFrameResize","checkOrigin","frameBorder","OfficePreviewInner","cache","PreviewComponent","typeFormatComponent","_createElement","key","propsApis","previewOffice","PdfPreview","memo","scale","rotate","numPages","setNumPages","pdfjs","GlobalWorkerOptions","workerSrc","useResize","clientWidth","min","Document","standardFontDataUrl","cMapUrl","cMapPacked","noData","onLoadSuccess","console","log","onLoadError","onSourceError","Page","pageNumber","renderAnnotationLayer","renderTextLayer","autoSize","text","setText","setLoading","setError","TextEscape","Result","status","subTitle","Image","handlerLoad","handlerError","addEventListener","removeEventListener","alt","typeFormat","_path","toLowerCase","txt","TextPreview","pdf","ImagePreview","html","HtmlPreview","office","OfficePreview","unknown","UnknownPreview","OSSFilePreview","defaultColumns","useFlexBox","setColumn","columnRef","find","isEqual","FlexBox","outerClassName","grid","FlexBoxFetch","getFetchApi","dataFormat","Fetch","isComplete","pageData","ErrorTip","overlayClassName","errorRender","groupIndex","currentError","emitter","formState","useFormContext","targetFieldInfo","formStateRef","setCurrentError","addListener","validate","field","currentField","errMsg","util","compileErrMsg","msg","remove","useErrorMsg","isHover","setIsHover","errorContent","closeHover","popoverChildrenRef","popoverContentRef","useClickOutside","callback","querySelector","mutationObserver","MutationObserver","subtree","childList","Popover","placement","transitionName","arrow","onMouseEnter","groupArgs","itemRender","contextApi","hiddenRef","isMount","setIsMount","targetProps","componentProps","ComponentItem","isBlock","innerComponent","setExtraProps","_len","args","_key","inner","createPortal","tips","Tooltip","labelHidden","Fragment","SetPreset","isPreset","setIsPreset","preset","formInfo","formPreset","Form","helperGuideName","lang","FormLangProvider","InfoPage","HelperGuideProvider","ReactForm","LoadingButton","defaultFooterButtons","ButtonComponent","CancelButton","SubmitButton","autoClose","computedCommonProps","withDecorator","innerRender","_formProps","Drawer","useFormDrawer","drawer","useDrawer","FormDrawerButton","formDrawer","FetchButton","modalFunc","gap","flexBoxRef","flexBoxColumn","renderInner","FieldList","round","Part","isInteger","openApi","Consumer","useFormLang","localeModuleName","Modal","FormModalButton","StepsContent","setCurrent","items","setStepData","stepData","currentItem","Steps","newStepData","useSteps","_formProps$data","isLastStep","createSteps","FormModal","useFormStepModal","FormStepModalButton","group","useGroup","HelperGuide","addText","minLength","isUnshift","defaultLength","beforeAdd","afterDelete","listRender","itemTitle","outer","renderChildren","groupRef","cloneElement","allowAdd","add","GroupList","onRemove","formInfoProps","extra","disabled","danger","createValueWithMaxLength","single","setValue","newValue","renderDisplayLabel","mapping","onClose","mappingItem","Tag","closable","ModalContent","propsValue","showSelectedTag","renderSelectedContent","propsValueRef","modalOpen","setModalOpen","setValueWithMaxLength","onConfirm","PopupContent","inputContent","overlayWidth","wrapClassName","setOpen","trigger","DisplayLabel","setFetchApi","fetchApi","hover","setHover","modalRef","popupRef","selectInnerContext","valueState","placeholder","isPopup","inputContentRender","fetchApiRef","_ref6","SimpleBar","onMouseOver","onMouseOut","modalSize","disabledScroller","SelectInnerInput","_ref7","displayItems","searchText","setSearchText","setMapping","appendMapping","newItems","newMapping","clone","set","transformValue","setValueInType","isNil","valueType","useControlValue","getValueInType","defaultValue","setItems","setData","onRequestSuccess","loader","TableHeader","headers","setHeaders","has","newHeaders","headerRef","useOnChange","useDecorator","hooks","AddressSelect","AddressSelectField","Field","AddressEnum","createAddressApi","withAddressApi","AddressInput","inputPlaceholder","AddressInputField","createdField","User","UserField","Table","TableField","AdvancedSelect","AdvancedSelectField","createdList","renderList","createListField","AvatarDisplay","Avatar","withInputFile","gender","height","defaultAvatar","dataURLtoBlob","dataURL","arr","_arr","substring","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","ControlAvatarEditor","propsImage","borderRadius","preview","getApi","border","intl","baseWidth","setBaseWidth","outerRef","setImage","setScale","setRotate","previewImg","setPreviewImg","editorRef","getImage","canvas","targetCanvas","targetCtx","getContext","drawImage","window","File","toDataURL","makePreviewInner","makePreview","useDebouncedCallback","AvatarEditor","color","onImageReady","onImageChange","Slider","tooltip","formatter","step","InputFileLink","AntdAvatar","useDropModal","dropModalSize","others","AvatarField","openEditor","merge","dropRef","dropModal","doUpload","finally","Cascader","CascaderField","createTreeUtils","FunctionSelect","FunctionSelectField","Enum","IndustrySelect","IndustrySelectField","InputUpperCaseField","toUpperCase","InputUpperCase","createWithRemoteLoader","modules","remoteModules","formModule","isNotEmpty","MoneyInputField","chineseEmpty","errorDesc","transformMoneyToChinese","onBlur","moneyFormat","setStatus","inputNumberProps","controls","precision","addonAfter","MAX_NUM","InputNumber","parser","parserValue","val","changeMoneyToChinese","MoneyInput","toChineseCharacter","CountrySelect","CountyFlag","showSearch","filterOption","input","option","optionLabelProp","country_name_cn","country_code","ab","PhoneNumberField","useSimulationBlur","parsePhone","AsYouType","addonBefore","PhoneNumber","rules","reqIndex","unshift","phoneCode","getCountryCallingCode","PHONE_NUMBER","result","isValidPhoneNumber","defaultCountry","extract","_Rate","Rate","fieldName","SelectField","useUIDecorator","numberFormat","_value","isNaN","abs","toFixed","FormField","isError","marginBottom","SalaryInputField","isRange","showMonth","remindUnit","req","_placeholder","_placeholderInput","isTenThousand","isFace","isOther","transform","Compact","includes","borderLeft","borderRight","pointerEvents","v","month","SalaryField","SalaryInput","_props$rule","TableInner","innerName","headerRender","footerRender","formatData","handleChange","rowKeyValue","dataIndex","dataList","_currentItem","totalCount","changeRef","obj","pagination","record","editable","valueItem","_item$field","_item$field3","_item$field2","getValue","_item$field4","_len2","_key2","mergeList","newData","total","TableInputField","TableInput","TypeDateRangePicker","TypeDateRangePickerField","UploadField","showUploadList","previewFileList","InputFileButton","FileList","Upload","interceptor","createWithFieldDecorator","decoratorList","TargetComponent","compose","forwardedRef","ForwardComponent","withInputDefaultPlaceholder","withSelectDefaultPlaceholder","withLang","_get","ignoreList","disabledList","fields","getCurrentField","newProps","langName","langLabel","ReactInput","ReactInputNumber","Password","DatePicker","ReactDatePicker","MonthPicker","RangePicker","WeekPicker","TimePicker","ReactTimePicker","DatePickerToday","soFarText","ReactDatePickerToday","RadioGroup","CheckboxGroup","TreeSelect","ReactTreeSelect","ReactSelect","TextArea","ReactTextArea","fieldDecorator","TextField","overflow","reactFormAntd","FormItem","TableList","FormApiButton","FormStepModal","FormDrawer","otherOptions","interceptors","output","use","_value$id","_value$id$split","Date","valueOf","toISOString","originalName","_olderREQ","RULES","REQ","_olderLEN","LEN","getLocaleMsg","LENGTH_EQUAL","end","LENGTH_MORE","start","LENGTH_LESS","ruleName","ARRAY_LENGTH","datePicker","rangeDatePicker","textArea","minRows","maxRows","globalProps","labelTips","HelperGuideLabel","Calendar","FullCalendar","getByteLen","len","i","ContentComponent","main","candidateName","_start","_end","_end_tooltip","timeText","_timeTextTooltip","contentHtml","showStrLength","timezone","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","scrollGridPlugin","initialView","aspectRatio","weekends","slotEventOverlap","displayEventEnd","firstDay","buttonText","today","dayMinWidth","headerToolbar","center","left","right","handleWindowResize","eventContent","eventInfo","undefined","_def","showOther","num","dateClick","eventClick","initialDate","transformEvents","events","onClickOtherItem","Boolean","bookable","groupList","startOf","newEvents","_newEvents","orderTimeArr","orderBy","flatten","HighlightProvider","highlightClassName","caseSensitive","Highlight","tagName","renderStr","allWordsRe","word","regExp","RegExp","innerMatch","dangerouslySetInnerHTML","__html","HistoryStore","storeName","onSelect","zIndex","localStorage","getItem","openHistory","storeNameRef","setItem","appendHistory","dropWhile","uniqBy","onSelectRef","StateTag","setOnSelect","Collapse","CollapseAntd","expandIcon","isActive","Panel","Card","LEVEL","NotificationItem","level","groupLength","subtitle","link","setGlobal","useGlobalContext","ajax","useLoading","_apis$notification","resData","notification","read","ids","range","reverse","number","_apis$notification2","Notification","global","headOptionRef","headOptionHeight","setHeadOptionHeight","_headOptionRef$curren","clientHeight","expand","_apis$notification3","QueueAnim","leaveReverse","duration","interval","groupKey","_groupList$filter2","_groupList$filter","firstItem","first","base64ToFile","base64","fileName","suffix","toolbarOptions","header","background","indent","getText","dom","innerHTML","getUrl","a","ReactRichEditor","readOnly","hideToolbar","domain","folder","maxHeight","isReadyRef","reactQuillRef","ossApi","ossToStatic","urlToOss","formatValue","ops","blocks","insert","attributes","bold","location","origin","apply","extension","lastIndexOf","formatEditorJS","loadImage","searchParams","URLSearchParams","search","searchId","pathname","linkSrc","transformData","ensureSlash","_url","imageHandler","setAttribute","click","onchange","hide","_reactQuillRef$curren","quill","getEditor","cursorPosition","getSelection","insertEmbed","setSelection","updateLink","_ref$current","_ref$current2","linkNodes","linkNode","isSameOrigin","host","hostname","isNeedUpdate","update","onerror","uniqueId","getTime","isHref","linkNodeLinks","toolbar","container","handlers","timer","setInterval","editor","clearInterval","parseFloat","ReactQuill","theme","delta","source","editorContent","getHTML","getContents","nodeSrc","updateEditor","useOnBlur","RichEditor","importantInfo","importantInfoType","moreInfo","AntdTooltip","tooltipTitle","TooltipFetch","fetchContent","showLoading","loadingClassName","force","send"],"sourceRoot":""}