{"version":3,"file":"static/js/8564.c755faf3.chunk.js","mappings":"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","sources":["../node_modules/@fullcalendar/daygrid/internal.js"],"sourcesContent":["import { DateComponent, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, addMs, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, formatIsoMonthStr, formatDayString, Slicer, DayHeader, DaySeriesModel, DayTableModel, DateProfileGenerator, addWeeks, diffWeeks, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createRef, createElement, Fragment } from '@fullcalendar/core/preact.js';\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nclass TableView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.headerElRef = createRef();\n    }\n    renderSimpleLayout(headerRowContent, bodyContent) {\n        let { props, context } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunk: { content: bodyContent },\n        });\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [] /* TODO: make optional? */, sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { props, context } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunks: [{\n                        key: 'main',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    }],\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunks: [{\n                    key: 'main',\n                    content: bodyContent,\n                }],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                type: 'footer',\n                key: 'footer',\n                isSticky: true,\n                chunks: [{\n                        key: 'main',\n                        content: renderScrollShim,\n                    }],\n            });\n        }\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: props.forPrint, colGroups: [{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }], sections: sections })));\n    }\n}\n\nfunction splitSegsByRow(segs, rowCnt) {\n    let byRow = [];\n    for (let i = 0; i < rowCnt; i += 1) {\n        byRow[i] = [];\n    }\n    for (let seg of segs) {\n        byRow[seg.row].push(seg);\n    }\n    return byRow;\n}\nfunction splitSegsByFirstCol(segs, colCnt) {\n    let byCol = [];\n    for (let i = 0; i < colCnt; i += 1) {\n        byCol[i] = [];\n    }\n    for (let seg of segs) {\n        byCol[seg.firstCol].push(seg);\n    }\n    return byCol;\n}\nfunction splitInteractionByRow(ui, rowCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.row].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nconst DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'narrow',\n});\nfunction hasListItemDisplay(seg) {\n    let { display } = seg.eventRange.ui;\n    return display === 'list-item' || (display === 'auto' &&\n        !seg.eventRange.def.allDay &&\n        seg.firstCol === seg.lastCol && // can't be multi-day\n        seg.isStart && // \"\n        seg.isEnd // \"\n    );\n}\n\nclass TableBlockEvent extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(StandardEvent, Object.assign({}, props, { elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'], defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT, defaultDisplayEventEnd: props.defaultDisplayEventEnd, disableResizing: !props.seg.eventRange.def.allDay })));\n    }\n}\n\nclass TableListItemEvent extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n        let timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"a\", elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'], elAttrs: getSegAnchorAttrs(props.seg, context), defaultGenerator: renderInnerContent, timeText: timeText, isResizing: false, isDateSelecting: false })));\n    }\n}\nfunction renderInnerContent(renderProps) {\n    return (createElement(Fragment, null,\n        createElement(\"div\", { className: \"fc-daygrid-event-dot\", style: { borderColor: renderProps.borderColor || renderProps.backgroundColor } }),\n        renderProps.timeText && (createElement(\"div\", { className: \"fc-event-time\" }, renderProps.timeText)),\n        createElement(\"div\", { className: \"fc-event-title\" }, renderProps.event.title || createElement(Fragment, null, \"\\u00A0\"))));\n}\n\nclass TableCellMoreLink extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.compileSegs = memoize(compileSegs);\n    }\n    render() {\n        let { props } = this;\n        let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements);\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-daygrid-more-link'], dateProfile: props.dateProfile, todayRange: props.todayRange, allDayDate: props.allDayDate, moreCnt: props.moreCnt, allSegs: allSegs, hiddenSegs: invisibleSegs, alignmentElRef: props.alignmentElRef, alignGridTop: props.alignGridTop, extraDateSpan: props.extraDateSpan, popoverContent: () => {\n                let isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n                    (props.eventResize ? props.eventResize.affectedInstances : null) ||\n                    {};\n                return (createElement(Fragment, null, allSegs.map((seg) => {\n                    let instanceId = seg.eventRange.instance.instanceId;\n                    return (createElement(\"div\", { className: \"fc-daygrid-event-harness\", key: instanceId, style: {\n                            visibility: isForcedInvisible[instanceId] ? 'hidden' : '',\n                        } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange))))));\n                })));\n            } }));\n    }\n}\nfunction compileSegs(singlePlacements) {\n    let allSegs = [];\n    let invisibleSegs = [];\n    for (let placement of singlePlacements) {\n        allSegs.push(placement.seg);\n        if (!placement.isVisible) {\n            invisibleSegs.push(placement.seg);\n        }\n    }\n    return { allSegs, invisibleSegs };\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' });\nclass TableCell extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.state = {\n            dayNumberId: getUniqueDomId(),\n        };\n        this.handleRootEl = (el) => {\n            setRef(this.rootElRef, el);\n            setRef(this.props.elRef, el);\n        };\n    }\n    render() {\n        let { context, props, state, rootElRef } = this;\n        let { options, dateEnv } = context;\n        let { date, dateProfile } = props;\n        // TODO: memoize this?\n        const isMonthStart = props.showDayNumber &&\n            shouldDisplayMonthStart(date, dateProfile.currentRange, dateEnv);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: this.handleRootEl, elClasses: [\n                'fc-daygrid-day',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), (props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})), { role: 'gridcell' }), defaultGenerator: renderTopInner, date: date, dateProfile: dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, isMonthStart: isMonthStart, extraRenderProps: props.extraRenderProps }, (InnerContent, renderProps) => (createElement(\"div\", { ref: props.innerElRef, className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\", style: { minHeight: props.minHeight } },\n            props.showWeekNumber && (createElement(WeekNumberContainer, { elTag: \"a\", elClasses: ['fc-daygrid-week-number'], elAttrs: buildNavLinkAttrs(context, date, 'week'), date: date, defaultFormat: DEFAULT_WEEK_NUM_FORMAT })),\n            !renderProps.isDisabled &&\n                (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop) ? (createElement(\"div\", { className: \"fc-daygrid-day-top\" },\n                createElement(InnerContent, { elTag: \"a\", elClasses: [\n                        'fc-daygrid-day-number',\n                        isMonthStart && 'fc-daygrid-month-start',\n                    ], elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), { id: state.dayNumberId }) }))) : props.showDayNumber ? (\n            // for creating correct amount of space (see issue #7162)\n            createElement(\"div\", { className: \"fc-daygrid-day-top\", style: { visibility: 'hidden' } },\n                createElement(\"a\", { className: \"fc-daygrid-day-number\" }, \"\\u00A0\"))) : undefined,\n            createElement(\"div\", { className: \"fc-daygrid-day-events\", ref: props.fgContentElRef },\n                props.fgContent,\n                createElement(\"div\", { className: \"fc-daygrid-day-bottom\", style: { marginTop: props.moreMarginTop } },\n                    createElement(TableCellMoreLink, { allDayDate: date, singlePlacements: props.singlePlacements, moreCnt: props.moreCnt, alignmentElRef: rootElRef, alignGridTop: !props.showDayNumber, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange }))),\n            createElement(\"div\", { className: \"fc-daygrid-day-bg\" }, props.bgContent)))));\n    }\n}\nfunction renderTopInner(props) {\n    return props.dayNumberText || createElement(Fragment, null, \"\\u00A0\");\n}\nfunction shouldDisplayMonthStart(date, currentRange, dateEnv) {\n    const { start: currentStart, end: currentEnd } = currentRange;\n    const currentEndIncl = addMs(currentEnd, -1);\n    const currentFirstYear = dateEnv.getYear(currentStart);\n    const currentFirstMonth = dateEnv.getMonth(currentStart);\n    const currentLastYear = dateEnv.getYear(currentEndIncl);\n    const currentLastMonth = dateEnv.getMonth(currentEndIncl);\n    // spans more than one month?\n    return !(currentFirstYear === currentLastYear && currentFirstMonth === currentLastMonth) &&\n        Boolean(\n        // first date in current view?\n        date.valueOf() === currentStart.valueOf() ||\n            // a month-start that's within the current range?\n            (dateEnv.getDay(date) === 1 && date.valueOf() < currentEnd.valueOf()));\n}\n\nfunction generateSegKey(seg) {\n    return seg.eventRange.instance.instanceId + ':' + seg.firstCol;\n}\nfunction generateSegUid(seg) {\n    return generateSegKey(seg) + ':' + seg.lastCol;\n}\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, segHeights, maxContentHeight, cells) {\n    let hierarchy = new DayGridSegHierarchy((segEntry) => {\n        // TODO: more DRY with generateSegUid\n        let segUid = segs[segEntry.index].eventRange.instance.instanceId +\n            ':' + segEntry.span.start +\n            ':' + (segEntry.span.end - 1);\n        return segHeights[segUid];\n    });\n    hierarchy.allowReslicing = true;\n    hierarchy.strictOrder = strictOrder;\n    if (dayMaxEvents === true || dayMaxEventRows === true) {\n        hierarchy.maxCoord = maxContentHeight;\n        hierarchy.hiddenConsumes = true;\n    }\n    else if (typeof dayMaxEvents === 'number') {\n        hierarchy.maxStackCnt = dayMaxEvents;\n    }\n    else if (typeof dayMaxEventRows === 'number') {\n        hierarchy.maxStackCnt = dayMaxEventRows;\n        hierarchy.hiddenConsumes = true;\n    }\n    // create segInputs only for segs with known heights\n    let segInputs = [];\n    let unknownHeightSegs = [];\n    for (let i = 0; i < segs.length; i += 1) {\n        let seg = segs[i];\n        let segUid = generateSegUid(seg);\n        let eventHeight = segHeights[segUid];\n        if (eventHeight != null) {\n            segInputs.push({\n                index: i,\n                span: {\n                    start: seg.firstCol,\n                    end: seg.lastCol + 1,\n                },\n            });\n        }\n        else {\n            unknownHeightSegs.push(seg);\n        }\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let segRects = hierarchy.toRects();\n    let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells);\n    let moreCnts = [];\n    let moreMarginTops = [];\n    // add segs with unknown heights\n    for (let seg of unknownHeightSegs) {\n        multiColPlacements[seg.firstCol].push({\n            seg,\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // add the hidden entries\n    for (let col = 0; col < cells.length; col += 1) {\n        moreCnts.push(0);\n    }\n    for (let hiddenEntry of hiddenEntries) {\n        let seg = segs[hiddenEntry.index];\n        let hiddenSpan = hiddenEntry.span;\n        multiColPlacements[hiddenSpan.start].push({\n            seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n            moreCnts[col] += 1;\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // deal with leftover margins\n    for (let col = 0; col < cells.length; col += 1) {\n        moreMarginTops.push(leftoverMargins[col]);\n    }\n    return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops };\n}\n// rects ordered by top coord, then left\nfunction placeRects(allRects, segs, cells) {\n    let rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n    let singleColPlacements = [];\n    let multiColPlacements = [];\n    let leftoverMargins = [];\n    for (let col = 0; col < cells.length; col += 1) {\n        let rects = rectsByEachCol[col];\n        // compute all static segs in singlePlacements\n        let singlePlacements = [];\n        let currentHeight = 0;\n        let currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            singlePlacements.push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: true,\n                isAbsolute: false,\n                absoluteTop: rect.levelCoord,\n                marginTop: rect.levelCoord - currentHeight,\n            });\n            currentHeight = rect.levelCoord + rect.thickness;\n        }\n        // compute mixed static/absolute segs in multiPlacements\n        let multiPlacements = [];\n        currentHeight = 0;\n        currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            let isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n            let isFirstCol = rect.span.start === col;\n            currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n            currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n            if (isAbsolute) {\n                currentMarginTop += rect.thickness;\n                if (isFirstCol) {\n                    multiPlacements.push({\n                        seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                        isVisible: true,\n                        isAbsolute: true,\n                        absoluteTop: rect.levelCoord,\n                        marginTop: 0,\n                    });\n                }\n            }\n            else if (isFirstCol) {\n                multiPlacements.push({\n                    seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                    isVisible: true,\n                    isAbsolute: false,\n                    absoluteTop: rect.levelCoord,\n                    marginTop: currentMarginTop, // claim the margin\n                });\n                currentMarginTop = 0;\n            }\n        }\n        singleColPlacements.push(singlePlacements);\n        multiColPlacements.push(multiPlacements);\n        leftoverMargins.push(currentMarginTop);\n    }\n    return { singleColPlacements, multiColPlacements, leftoverMargins };\n}\nfunction groupRectsByEachCol(rects, colCnt) {\n    let rectsByEachCol = [];\n    for (let col = 0; col < colCnt; col += 1) {\n        rectsByEachCol.push([]);\n    }\n    for (let rect of rects) {\n        for (let col = rect.span.start; col < rect.span.end; col += 1) {\n            rectsByEachCol[col].push(rect);\n        }\n    }\n    return rectsByEachCol;\n}\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n    if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n        return seg;\n    }\n    let eventRange = seg.eventRange;\n    let origRange = eventRange.range;\n    let slicedRange = intersectRanges(origRange, {\n        start: cells[spanStart].date,\n        end: addDays(cells[spanEnd - 1].date, 1),\n    });\n    return Object.assign(Object.assign({}, seg), { firstCol: spanStart, lastCol: spanEnd - 1, eventRange: {\n            def: eventRange.def,\n            ui: Object.assign(Object.assign({}, eventRange.ui), { durationEditable: false }),\n            instance: eventRange.instance,\n            range: slicedRange,\n        }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() });\n}\nclass DayGridSegHierarchy extends SegHierarchy {\n    constructor() {\n        super(...arguments);\n        // config\n        this.hiddenConsumes = false;\n        // allows us to keep hidden entries in the hierarchy so they take up space\n        this.forceHidden = {};\n    }\n    addSegs(segInputs) {\n        const hiddenSegs = super.addSegs(segInputs);\n        const { entriesByLevel } = this;\n        const excludeHidden = (entry) => !this.forceHidden[buildEntryKey(entry)];\n        // remove the forced-hidden segs\n        for (let level = 0; level < entriesByLevel.length; level += 1) {\n            entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n        }\n        return hiddenSegs;\n    }\n    handleInvalidInsertion(insertion, entry, hiddenEntries) {\n        const { entriesByLevel, forceHidden } = this;\n        const { touchingEntry, touchingLevel, touchingLateral } = insertion;\n        if (this.hiddenConsumes && touchingEntry) {\n            const touchingEntryId = buildEntryKey(touchingEntry);\n            // if not already hidden\n            if (!forceHidden[touchingEntryId]) {\n                if (this.allowReslicing) {\n                    const placeholderEntry = Object.assign(Object.assign({}, touchingEntry), { span: intersectSpans(touchingEntry.span, entry.span) });\n                    const placeholderEntryId = buildEntryKey(placeholderEntry);\n                    forceHidden[placeholderEntryId] = true;\n                    entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder\n                    this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it\n                }\n                else {\n                    forceHidden[touchingEntryId] = true;\n                    hiddenEntries.push(touchingEntry);\n                }\n            }\n        }\n        return super.handleInvalidInsertion(insertion, entry, hiddenEntries);\n    }\n}\n\nclass TableRow extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.cellElRefs = new RefMap(); // the <td>\n        this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n        this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n        this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n        this.rootElRef = createRef();\n        this.state = {\n            framePositions: null,\n            maxContentHeight: null,\n            segHeights: {},\n        };\n        this.handleResize = (isForced) => {\n            if (isForced) {\n                this.updateSizing(true); // isExternal=true\n            }\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let { options } = context;\n        let colCnt = props.cells.length;\n        let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n        let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n        let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n        let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n        let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.segHeights, state.maxContentHeight, props.cells);\n        let isForcedInvisible = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        return (createElement(\"tr\", { ref: this.rootElRef, role: \"row\" },\n            props.renderIntro && props.renderIntro(),\n            props.cells.map((cell, col) => {\n                let normalFgNodes = this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n                let mirrorFgNodes = this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n                return (createElement(TableCell, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), innerElRef: this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */, dateProfile: props.dateProfile, date: cell.date, showDayNumber: props.showDayNumbers, showWeekNumber: props.showWeekNumbers && col === 0, forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */, todayRange: props.todayRange, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, moreCnt: moreCnts[col], moreMarginTop: moreMarginTops[col], singlePlacements: singleColPlacements[col], fgContentElRef: this.fgElRefs.createRef(cell.key), fgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        createElement(Fragment, null, normalFgNodes),\n                        createElement(Fragment, null, mirrorFgNodes))), bgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        this.renderFillSegs(highlightSegsByCol[col], 'highlight'),\n                        this.renderFillSegs(businessHoursByCol[col], 'non-business'),\n                        this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))), minHeight: props.cellMinHeight }));\n            })));\n    }\n    componentDidMount() {\n        this.updateSizing(true);\n        this.context.addResizeHandler(this.handleResize);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        let currentProps = this.props;\n        this.updateSizing(!isPropsEqual(prevProps, currentProps));\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleResize);\n    }\n    getHighlightSegs() {\n        let { props } = this;\n        if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n            return props.eventDrag.segs;\n        }\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return props.dateSelectionSegs;\n    }\n    getMirrorSegs() {\n        let { props } = this;\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return [];\n    }\n    renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n        let { context } = this;\n        let { eventSelection } = this.props;\n        let { framePositions } = this.state;\n        let defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let nodes = [];\n        if (framePositions) {\n            for (let placement of segPlacements) {\n                let { seg } = placement;\n                let { instanceId } = seg.eventRange.instance;\n                let isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n                let isAbsolute = placement.isAbsolute;\n                let left = '';\n                let right = '';\n                if (isAbsolute) {\n                    if (context.isRtl) {\n                        right = 0;\n                        left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n                    }\n                    else {\n                        left = 0;\n                        right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n                    }\n                }\n                /*\n                known bug: events that are force to be list-item but span multiple days still take up space in later columns\n                todo: in print view, for multi-day events, don't display title within non-start/end segs\n                */\n                nodes.push(createElement(\"div\", { className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''), key: generateSegKey(seg), ref: isMirror ? null : this.segHarnessRefs.createRef(generateSegUid(seg)), style: {\n                        visibility: isVisible ? '' : 'hidden',\n                        marginTop: isAbsolute ? '' : placement.marginTop,\n                        top: isAbsolute ? placement.absoluteTop : '',\n                        left,\n                        right,\n                    } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: isDragging, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange))))));\n            }\n        }\n        return nodes;\n    }\n    renderFillSegs(segs, fillType) {\n        let { isRtl } = this.context;\n        let { todayRange } = this.props;\n        let { framePositions } = this.state;\n        let nodes = [];\n        if (framePositions) {\n            for (let seg of segs) {\n                let leftRightCss = isRtl ? {\n                    right: 0,\n                    left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n                } : {\n                    left: 0,\n                    right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n                };\n                nodes.push(createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-daygrid-bg-harness\", style: leftRightCss }, fillType === 'bg-event' ?\n                    createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, todayRange))) :\n                    renderFill(fillType)));\n            }\n        }\n        return createElement(Fragment, {}, ...nodes);\n    }\n    updateSizing(isExternalSizingChange) {\n        let { props, state, frameElRefs } = this;\n        if (!props.forPrint &&\n            props.clientWidth !== null // positioning ready?\n        ) {\n            if (isExternalSizingChange) {\n                let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key]);\n                if (frameEls.length) {\n                    let originEl = this.rootElRef.current;\n                    let newPositionCache = new PositionCache(originEl, frameEls, true, // isHorizontal\n                    false);\n                    if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n                        this.setState({\n                            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n                            false),\n                        });\n                    }\n                }\n            }\n            const oldSegHeights = this.state.segHeights;\n            const newSegHeights = this.querySegHeights();\n            const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n            this.safeSetState({\n                // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n                // Essentially, once you compute an element's height, never null-out.\n                // TODO: always display all events, as visibility:hidden?\n                segHeights: Object.assign(Object.assign({}, oldSegHeights), newSegHeights),\n                maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n            });\n        }\n    }\n    querySegHeights() {\n        let segElMap = this.segHarnessRefs.currentMap;\n        let segHeights = {};\n        // get the max height amongst instance segs\n        for (let segUid in segElMap) {\n            let height = Math.round(segElMap[segUid].getBoundingClientRect().height);\n            segHeights[segUid] = Math.max(segHeights[segUid] || 0, height);\n        }\n        return segHeights;\n    }\n    computeMaxContentHeight() {\n        let firstKey = this.props.cells[0].key;\n        let cellEl = this.cellElRefs.currentMap[firstKey];\n        let fcContainerEl = this.fgElRefs.currentMap[firstKey];\n        return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n    }\n    getCellEls() {\n        let elMap = this.cellElRefs.currentMap;\n        return this.props.cells.map((cell) => elMap[cell.key]);\n    }\n}\nTableRow.addStateEquality({\n    segHeights: isPropsEqual,\n});\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n    if (!mirrorSegs.length) {\n        return [];\n    }\n    let topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n    return mirrorSegs.map((seg) => ({\n        seg,\n        isVisible: true,\n        isAbsolute: true,\n        absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n        marginTop: 0,\n    }));\n}\nfunction buildAbsoluteTopHash(colPlacements) {\n    let topsByInstanceId = {};\n    for (let placements of colPlacements) {\n        for (let placement of placements) {\n            topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n        }\n    }\n    return topsByInstanceId;\n}\n\nclass TableRows extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.splitBusinessHourSegs = memoize(splitSegsByRow);\n        this.splitBgEventSegs = memoize(splitSegsByRow);\n        this.splitFgEventSegs = memoize(splitSegsByRow);\n        this.splitDateSelectionSegs = memoize(splitSegsByRow);\n        this.splitEventDrag = memoize(splitInteractionByRow);\n        this.splitEventResize = memoize(splitInteractionByRow);\n        this.rowRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let rowCnt = props.cells.length;\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n        // for DayGrid view with many rows, force a min-height on cells so doesn't appear squished\n        // choose 7 because a month view will have max 6 rows\n        let cellMinHeight = (rowCnt >= 7 && props.clientWidth) ?\n            props.clientWidth / context.options.aspectRatio / 6 :\n            null;\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => (createElement(Fragment, null, props.cells.map((cells, row) => (createElement(TableRow, { ref: this.rowRefs.createRef(row), key: cells.length\n                ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                : row // in case there are no cells (like when resource view is loading)\n            , showDayNumbers: rowCnt > 1, showWeekNumbers: props.showWeekNumbers, todayRange: todayRange, dateProfile: props.dateProfile, cells: cells, renderIntro: props.renderRowIntro, businessHourSegs: businessHourSegsByRow[row], eventSelection: props.eventSelection, bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */, fgEventSegs: fgEventSegsByRow[row], dateSelectionSegs: dateSelectionSegsByRow[row], eventDrag: eventDragByRow[row], eventResize: eventResizeByRow[row], dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, clientWidth: props.clientWidth, clientHeight: props.clientHeight, cellMinHeight: cellMinHeight, forPrint: props.forPrint })))))));\n    }\n    componentDidMount() {\n        this.registerInteractiveComponent();\n    }\n    componentDidUpdate() {\n        // for if started with zero cells\n        this.registerInteractiveComponent();\n    }\n    registerInteractiveComponent() {\n        if (!this.rootEl) {\n            // HACK: need a daygrid wrapper parent to do positioning\n            // NOTE: a daygrid resource view w/o resources can have zero cells\n            const firstCellEl = this.rowRefs.currentMap[0].getCellEls()[0];\n            const rootEl = firstCellEl ? firstCellEl.closest('.fc-daygrid-body') : null;\n            if (rootEl) {\n                this.rootEl = rootEl;\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n        }\n    }\n    componentWillUnmount() {\n        if (this.rootEl) {\n            this.context.unregisterInteractiveComponent(this);\n            this.rootEl = null;\n        }\n    }\n    // Hit System\n    // ----------------------------------------------------------------------------------------------------\n    prepareHits() {\n        this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n        false, true);\n        this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n        true, // horizontal\n        false);\n    }\n    queryHit(positionLeft, positionTop) {\n        let { colPositions, rowPositions } = this;\n        let col = colPositions.leftToIndex(positionLeft);\n        let row = rowPositions.topToIndex(positionTop);\n        if (row != null && col != null) {\n            let cell = this.props.cells[row][col];\n            return {\n                dateProfile: this.props.dateProfile,\n                dateSpan: Object.assign({ range: this.getCellRange(row, col), allDay: true }, cell.extraDateSpan),\n                dayEl: this.getCellEl(row, col),\n                rect: {\n                    left: colPositions.lefts[col],\n                    right: colPositions.rights[col],\n                    top: rowPositions.tops[row],\n                    bottom: rowPositions.bottoms[row],\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n    getCellEl(row, col) {\n        return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n    }\n    getCellRange(row, col) {\n        let start = this.props.cells[row][col].date;\n        let end = addDays(start, 1);\n        return { start, end };\n    }\n}\nfunction isSegAllDay(seg) {\n    return seg.eventRange.def.allDay;\n}\n\nclass Table extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.elRef = createRef();\n        this.needsScrollReset = false;\n    }\n    render() {\n        let { props } = this;\n        let { dayMaxEventRows, dayMaxEvents, expandRows } = props;\n        let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;\n        // if rows can't expand to fill fixed height, can't do balanced-height event limit\n        // TODO: best place to normalize these options?\n        if (limitViaBalanced && !expandRows) {\n            limitViaBalanced = false;\n            dayMaxEventRows = null;\n            dayMaxEvents = null;\n        }\n        let classNames = [\n            'fc-daygrid-body',\n            limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced',\n            expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n        ];\n        return (createElement(\"div\", { ref: this.elRef, className: classNames.join(' '), style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(\"table\", { role: \"presentation\", className: \"fc-scrollgrid-sync-table\", style: {\n                    width: props.clientWidth,\n                    minWidth: props.tableMinWidth,\n                    height: expandRows ? props.clientHeight : '',\n                } },\n                props.colGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(TableRows, { dateProfile: props.dateProfile, cells: props.cells, renderRowIntro: props.renderRowIntro, showWeekNumbers: props.showWeekNumbers, clientWidth: props.clientWidth, clientHeight: props.clientHeight, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows, forPrint: props.forPrint, isHitComboAllowed: props.isHitComboAllowed })))));\n    }\n    componentDidMount() {\n        this.requestScrollReset();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.dateProfile !== this.props.dateProfile) {\n            this.requestScrollReset();\n        }\n        else {\n            this.flushScrollReset();\n        }\n    }\n    requestScrollReset() {\n        this.needsScrollReset = true;\n        this.flushScrollReset();\n    }\n    flushScrollReset() {\n        if (this.needsScrollReset &&\n            this.props.clientWidth // sizes computed?\n        ) {\n            const subjectEl = getScrollSubjectEl(this.elRef.current, this.props.dateProfile);\n            if (subjectEl) {\n                const originEl = subjectEl.closest('.fc-daygrid-body');\n                const scrollEl = originEl.closest('.fc-scroller');\n                const scrollTop = subjectEl.getBoundingClientRect().top -\n                    originEl.getBoundingClientRect().top;\n                scrollEl.scrollTop = scrollTop ? (scrollTop + 1) : 0; // overcome border\n            }\n            this.needsScrollReset = false;\n        }\n    }\n}\nfunction getScrollSubjectEl(containerEl, dateProfile) {\n    let el;\n    if (dateProfile.currentRangeUnit.match(/year|month/)) {\n        el = containerEl.querySelector(`[data-date=\"${formatIsoMonthStr(dateProfile.currentDate)}-01\"]`);\n        // even if view is month-based, first-of-month might be hidden...\n    }\n    if (!el) {\n        el = containerEl.querySelector(`[data-date=\"${formatDayString(dateProfile.currentDate)}\"]`);\n        // could still be hidden if an interior-view hidden day\n    }\n    return el;\n}\n\nclass DayTableSlicer extends Slicer {\n    constructor() {\n        super(...arguments);\n        this.forceDayIfListItem = true;\n    }\n    sliceRange(dateRange, dayTableModel) {\n        return dayTableModel.sliceRange(dateRange);\n    }\n}\n\nclass DayTable extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.slicer = new DayTableSlicer();\n        this.tableRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(Table, Object.assign({ ref: this.tableRef }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), { dateProfile: props.dateProfile, cells: props.dayTableModel.cells, colGroupNode: props.colGroupNode, tableMinWidth: props.tableMinWidth, renderRowIntro: props.renderRowIntro, dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, showWeekNumbers: props.showWeekNumbers, expandRows: props.expandRows, headerAlignElRef: props.headerAlignElRef, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })));\n    }\n}\n\nclass DayTableView extends TableView {\n    constructor() {\n        super(...arguments);\n        this.buildDayTableModel = memoize(buildDayTableModel);\n        this.headerRef = createRef();\n        this.tableRef = createRef();\n        // can't override any lifecycle methods from parent\n    }\n    render() {\n        let { options, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { ref: this.headerRef, dateProfile: props.dateProfile, dates: dayTableModel.headerDates, datesRepDistinctDays: dayTableModel.rowCnt === 1 }));\n        let bodyContent = (contentArg) => (createElement(DayTable, { ref: this.tableRef, dateProfile: props.dateProfile, dayTableModel: dayTableModel, businessHours: props.businessHours, dateSelection: props.dateSelection, eventStore: props.eventStore, eventUiBases: props.eventUiBases, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, nextDayThreshold: options.nextDayThreshold, colGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, dayMaxEvents: options.dayMaxEvents, dayMaxEventRows: options.dayMaxEventRows, showWeekNumbers: options.weekNumbers, expandRows: !props.isHeightAuto, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }));\n        return options.dayMinWidth\n            ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n            : this.renderSimpleLayout(headerContent, bodyContent);\n    }\n}\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nclass TableDateProfileGenerator extends DateProfileGenerator {\n    // Computes the date range that will be rendered\n    buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n        let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay);\n        let { props } = this;\n        return buildDayTableRenderRange({\n            currentRange: renderRange,\n            snapToWeek: /^(year|month)$/.test(currentRangeUnit),\n            fixedWeekCount: props.fixedWeekCount,\n            dateEnv: props.dateEnv,\n        });\n    }\n}\nfunction buildDayTableRenderRange(props) {\n    let { dateEnv, currentRange } = props;\n    let { start, end } = currentRange;\n    let endOfWeek;\n    // year and month views should be aligned with weeks. this is already done for week\n    if (props.snapToWeek) {\n        start = dateEnv.startOfWeek(start);\n        // make end-of-week if not already\n        endOfWeek = dateEnv.startOfWeek(end);\n        if (endOfWeek.valueOf() !== end.valueOf()) {\n            end = addWeeks(endOfWeek, 1);\n        }\n    }\n    // ensure 6 weeks\n    if (props.fixedWeekCount) {\n        // TODO: instead of these date-math gymnastics (for multimonth view),\n        // compute dateprofiles of all months, then use start of first and end of last.\n        let lastMonthRenderStart = dateEnv.startOfWeek(dateEnv.startOfMonth(addDays(currentRange.end, -1)));\n        let rowCnt = Math.ceil(// could be partial weeks due to hiddenDays\n        diffWeeks(lastMonthRenderStart, end));\n        end = addWeeks(end, 6 - rowCnt);\n    }\n    return { start, end };\n}\n\nvar css_248z = \":root{--fc-daygrid-event-dot-width:8px}.fc-daygrid-day-events:after,.fc-daygrid-day-events:before,.fc-daygrid-day-frame:after,.fc-daygrid-day-frame:before,.fc-daygrid-event-harness:after,.fc-daygrid-event-harness:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-body{position:relative;z-index:1}.fc .fc-daygrid-day.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-daygrid-day-frame{min-height:100%;position:relative}.fc .fc-daygrid-day-top{display:flex;flex-direction:row-reverse}.fc .fc-day-other .fc-daygrid-day-top{opacity:.3}.fc .fc-daygrid-day-number{padding:4px;position:relative;z-index:4}.fc .fc-daygrid-month-start{font-size:1.1em;font-weight:700}.fc .fc-daygrid-day-events{margin-top:1px}.fc .fc-daygrid-body-balanced .fc-daygrid-day-events{left:0;position:absolute;right:0}.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events{min-height:2em;position:relative}.fc .fc-daygrid-body-natural .fc-daygrid-day-events{margin-bottom:1em}.fc .fc-daygrid-event-harness{position:relative}.fc .fc-daygrid-event-harness-abs{left:0;position:absolute;right:0;top:0}.fc .fc-daygrid-bg-harness{bottom:0;position:absolute;top:0}.fc .fc-daygrid-day-bg .fc-non-business{z-index:1}.fc .fc-daygrid-day-bg .fc-bg-event{z-index:2}.fc .fc-daygrid-day-bg .fc-highlight{z-index:3}.fc .fc-daygrid-event{margin-top:1px;z-index:6}.fc .fc-daygrid-event.fc-event-mirror{z-index:7}.fc .fc-daygrid-day-bottom{font-size:.85em;margin:0 2px}.fc .fc-daygrid-day-bottom:after,.fc .fc-daygrid-day-bottom:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-more-link{border-radius:3px;cursor:pointer;line-height:1;margin-top:1px;max-width:100%;overflow:hidden;padding:2px;position:relative;white-space:nowrap;z-index:4}.fc .fc-daygrid-more-link:hover{background-color:rgba(0,0,0,.1)}.fc .fc-daygrid-week-number{background-color:var(--fc-neutral-bg-color);color:var(--fc-neutral-text-color);min-width:1.5em;padding:2px;position:absolute;text-align:center;top:0;z-index:5}.fc .fc-more-popover .fc-popover-body{min-width:220px;padding:10px}.fc-direction-ltr .fc-daygrid-event.fc-event-start,.fc-direction-rtl .fc-daygrid-event.fc-event-end{margin-left:2px}.fc-direction-ltr .fc-daygrid-event.fc-event-end,.fc-direction-rtl .fc-daygrid-event.fc-event-start{margin-right:2px}.fc-direction-ltr .fc-daygrid-more-link{float:left}.fc-direction-ltr .fc-daygrid-week-number{border-radius:0 0 3px 0;left:0}.fc-direction-rtl .fc-daygrid-more-link{float:right}.fc-direction-rtl .fc-daygrid-week-number{border-radius:0 0 0 3px;right:0}.fc-liquid-hack .fc-daygrid-day-frame{position:static}.fc-daygrid-event{border-radius:3px;font-size:var(--fc-small-font-size);position:relative;white-space:nowrap}.fc-daygrid-block-event .fc-event-time{font-weight:700}.fc-daygrid-block-event .fc-event-time,.fc-daygrid-block-event .fc-event-title{padding:1px}.fc-daygrid-dot-event{align-items:center;display:flex;padding:2px 0}.fc-daygrid-dot-event .fc-event-title{flex-grow:1;flex-shrink:1;font-weight:700;min-width:0;overflow:hidden}.fc-daygrid-dot-event.fc-event-mirror,.fc-daygrid-dot-event:hover{background:rgba(0,0,0,.1)}.fc-daygrid-dot-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-daygrid-event-dot{border:calc(var(--fc-daygrid-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-daygrid-event-dot-width)/2);box-sizing:content-box;height:0;margin:0 4px;width:0}.fc-direction-ltr .fc-daygrid-event .fc-event-time{margin-right:3px}.fc-direction-rtl .fc-daygrid-event .fc-event-time{margin-left:3px}\";\ninjectStyles(css_248z);\n\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableDateProfileGenerator, TableRows, TableView, buildDayTableModel, buildDayTableRenderRange };\n"],"names":["TableView","DateComponent","constructor","super","arguments","this","headerElRef","createRef","renderSimpleLayout","headerRowContent","bodyContent","props","context","sections","stickyHeaderDates","getStickyHeaderDates","options","push","type","key","isSticky","chunk","elRef","tableClassName","rowContent","liquid","content","createElement","ViewContainer","elClasses","viewSpec","SimpleScrollGrid","isHeightAuto","forPrint","collapsibleWidth","cols","renderHScrollLayout","colCnt","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","getStickyFooterScrollbar","chunks","renderScrollShim","colGroups","span","minWidth","splitSegsByRow","segs","rowCnt","byRow","i","seg","row","splitSegsByFirstCol","byCol","firstCol","splitInteractionByRow","ui","affectedInstances","isEvent","DEFAULT_TABLE_EVENT_TIME_FORMAT","createFormatter","hour","minute","omitZeroMinute","meridiem","hasListItemDisplay","display","eventRange","def","allDay","lastCol","isStart","isEnd","TableBlockEvent","BaseComponent","render","StandardEvent","Object","assign","defaultTimeFormat","defaultDisplayEventEnd","disableResizing","TableListItemEvent","timeFormat","eventTimeFormat","timeText","buildSegTimeText","EventContainer","elTag","elAttrs","getSegAnchorAttrs","defaultGenerator","renderInnerContent","isResizing","isDateSelecting","renderProps","Fragment","className","style","borderColor","backgroundColor","event","title","TableCellMoreLink","compileSegs","memoize","allSegs","invisibleSegs","singlePlacements","MoreLinkContainer","dateProfile","todayRange","allDayDate","moreCnt","hiddenSegs","alignmentElRef","alignGridTop","extraDateSpan","popoverContent","isForcedInvisible","eventDrag","eventResize","map","instanceId","instance","visibility","isDragging","isSelected","eventSelection","getSegMeta","placement","isVisible","DEFAULT_WEEK_NUM_FORMAT","week","TableCell","rootElRef","state","dayNumberId","getUniqueDomId","handleRootEl","el","setRef","dateEnv","date","isMonthStart","showDayNumber","currentRange","start","currentStart","end","currentEnd","currentEndIncl","addMs","currentFirstYear","getYear","currentFirstMonth","getMonth","currentLastYear","currentLastMonth","Boolean","valueOf","getDay","shouldDisplayMonthStart","DayCellContainer","extraClassNames","extraDataAttrs","role","renderTopInner","extraRenderProps","InnerContent","ref","innerElRef","minHeight","showWeekNumber","WeekNumberContainer","buildNavLinkAttrs","defaultFormat","isDisabled","hasCustomDayCellContent","forceDayTop","id","undefined","fgContentElRef","fgContent","marginTop","moreMarginTop","bgContent","dayNumberText","generateSegKey","generateSegUid","computeFgSegPlacement","dayMaxEvents","dayMaxEventRows","strictOrder","segHeights","maxContentHeight","cells","hierarchy","DayGridSegHierarchy","segEntry","segUid","index","allowReslicing","maxCoord","hiddenConsumes","maxStackCnt","segInputs","unknownHeightSegs","length","hiddenEntries","addSegs","segRects","toRects","singleColPlacements","multiColPlacements","leftoverMargins","allRects","rectsByEachCol","rects","col","rect","groupRectsByEachCol","currentHeight","currentMarginTop","resliceSeg","isAbsolute","absoluteTop","levelCoord","thickness","multiPlacements","isFirstCol","placeRects","moreCnts","moreMarginTops","hiddenEntry","hiddenSpan","spanStart","spanEnd","origRange","range","slicedRange","intersectRanges","addDays","durationEditable","SegHierarchy","forceHidden","entriesByLevel","excludeHidden","entry","buildEntryKey","level","filter","handleInvalidInsertion","insertion","touchingEntry","touchingLevel","touchingLateral","touchingEntryId","placeholderEntry","intersectSpans","splitEntry","TableRow","cellElRefs","RefMap","frameElRefs","fgElRefs","segHarnessRefs","framePositions","handleResize","isForced","updateSizing","businessHoursByCol","businessHourSegs","bgEventSegsByCol","bgEventSegs","highlightSegsByCol","getHighlightSegs","mirrorSegsByCol","getMirrorSegs","sortEventSegs","fgEventSegs","eventOrder","eventOrderStrict","renderIntro","cell","normalFgNodes","renderFgSegs","mirrorFgNodes","mirrorSegs","colPlacements","topsByInstanceId","placements","buildAbsoluteTopHash","buildMirrorPlacements","showDayNumbers","showWeekNumbers","renderFillSegs","cellMinHeight","componentDidMount","addResizeHandler","componentDidUpdate","prevProps","prevState","currentProps","isPropsEqual","componentWillUnmount","removeResizeHandler","dateSelectionSegs","segPlacements","isMirror","nodes","left","right","isRtl","lefts","rights","top","fillType","leftRightCss","buildEventRangeKey","BgEvent","renderFill","isExternalSizingChange","clientWidth","frameEls","currentMap","originEl","current","newPositionCache","PositionCache","similarTo","setState","oldSegHeights","newSegHeights","querySegHeights","limitByContentHeight","safeSetState","computeMaxContentHeight","segElMap","height","Math","round","getBoundingClientRect","max","firstKey","cellEl","fcContainerEl","bottom","getCellEls","elMap","addStateEquality","TableRows","splitBusinessHourSegs","splitBgEventSegs","splitFgEventSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","rowRefs","businessHourSegsByRow","bgEventSegsByRow","fgEventSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","aspectRatio","NowTimer","unit","nowDate","toISOString","renderRowIntro","isSegAllDay","clientHeight","registerInteractiveComponent","rootEl","firstCellEl","closest","isHitComboAllowed","unregisterInteractiveComponent","prepareHits","rowPositions","collect","rowObj","colPositions","queryHit","positionLeft","positionTop","leftToIndex","topToIndex","dateSpan","getCellRange","dayEl","getCellEl","tops","bottoms","layer","Table","needsScrollReset","expandRows","limitViaBalanced","classNames","join","width","tableMinWidth","colGroupNode","requestScrollReset","flushScrollReset","subjectEl","containerEl","currentRangeUnit","match","querySelector","concat","formatIsoMonthStr","currentDate","formatDayString","getScrollSubjectEl","scrollEl","scrollTop","DayTableSlicer","Slicer","forceDayIfListItem","sliceRange","dateRange","dayTableModel","DayTable","slicer","tableRef","sliceProps","nextDayThreshold","headerAlignElRef","DayTableView","buildDayTableModel","headerRef","dateProfileGenerator","headerContent","dayHeaders","DayHeader","dates","headerDates","datesRepDistinctDays","contentArg","businessHours","dateSelection","eventStore","eventUiBases","tableColGroupNode","weekNumbers","daySeries","DaySeriesModel","renderRange","DayTableModel","test","TableDateProfileGenerator","DateProfileGenerator","buildRenderRange","isRangeAllDay","endOfWeek","snapToWeek","startOfWeek","addWeeks","fixedWeekCount","lastMonthRenderStart","startOfMonth","ceil","diffWeeks","buildDayTableRenderRange","injectStyles"],"sourceRoot":""}