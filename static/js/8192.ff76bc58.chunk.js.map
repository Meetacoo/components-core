{"version":3,"file":"static/js/8192.ff76bc58.chunk.js","mappings":"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","sources":["components/Common/README.md","components/ConfirmButton/README.md","components/Content/README.md","components/Descriptions/README.md","components/Drawer/README.md","components/Enum/README.md","components/ExportTable/README.md","components/Features/README.md","components/File/README.md","components/FilePreview/README.md","components/Filter/README.md","components/FlexBox/README.md","components/FormInfo/README.md","components/FullCalendar/README.md","components/Global/README.md","components/HelperGuide/README.md","components/Highlight/README.md","components/HistoryStore/README.md","components/Icon/README.md","components/Image/README.md","components/InfoPage/README.md","components/Intl/doc/locale/en-US.js","components/Intl/doc/locale/zh-CN.js","components/Intl/README.md","components/Layout/README.md","components/LoadingButton/README.md","components/Menu/README.md","components/Modal/README.md","components/Navigation/README.md","components/Notification/README.md","components/Permissions/README.md","components/RichEditor/README.md","components/StateBar/README.md","components/StateTag/README.md","components/Table/README.md","components/TablePage/README.md","components/Tooltip/README.md","common/utils/localStorage.js","webpack://@kne-components/components-core/./src/components/Content/style.module.scss?6a0e","components/Content/index.js","webpack://@kne-components/components-core/./src/components/Descriptions/style.module.scss?d348","components/Descriptions/index.js","components/ExportTable/locale/index.js","webpack://@kne-components/components-core/./src/components/ExportTable/style.module.scss?7343","components/ExportTable/index.js","webpack://@kne-components/components-core/./src/components/Filter/style.module.scss?eebc","components/Filter/locale/index.js","components/Filter/FilterValueDisplay.js","components/Filter/FilterItem.js","components/Filter/context.js","components/Filter/FilterLines.js","components/Filter/PopoverItem.js","components/Filter/withFieldItem.js","components/Filter/getFilterValue.js","components/Filter/FilterItemContainer.js","webpack://@kne-components/components-core/./src/common/components/TreeField/style.module.scss?bcd6","common/components/TreeField/index.js","components/Filter/fields/InputFilterItem.js","components/Filter/fields/DatePickerFilterItem.js","components/Filter/fields/DateRangePickerFilterItem.js","components/Filter/fields/TypeDateRangePickerFilterItem.js","components/Filter/fields/index.js","components/Filter/Filter.js","webpack://@kne-components/components-core/./src/components/FullCalendar/style.module.scss?012e","components/FullCalendar/FullCalendar.js","webpack://@kne-components/components-core/./src/components/Highlight/style.module.scss?a31a","components/Highlight/index.js","webpack://@kne-components/components-core/./src/components/HistoryStore/style.module.scss?1856","components/HistoryStore/index.js","components/Layout/context.js","webpack://@kne-components/components-core/./src/components/Layout/style.module.scss?8c20","components/Layout/Page/FixedContainer.js","components/Layout/Page/Menu.js","components/Layout/Page/Page.js","components/Layout/Affix.js","components/Layout/Page/ContainerHeight.js","components/Layout/Page/Header.js","components/Layout/Page/HeaderInfo.js","components/Layout/Page/PageTitle.js","components/Layout/Page/Option.js","components/Layout/Layout.js","components/Layout/PermissionsPage.js","components/Layout/TablePage.js","components/Layout/StateBarPage.js","webpack://@kne-components/components-core/./src/components/Menu/style.module.scss?ca16","components/Menu/index.js","components/Navigation/favicon.svg","components/Navigation/locale/index.js","webpack://@kne-components/components-core/./src/components/Navigation/style.module.scss?d5bc","components/Navigation/index.js","webpack://@kne-components/components-core/./src/components/Notification/style.module.scss?659e","components/Notification/index.js","webpack://@kne-components/components-core/./src/components/Permissions/style.module.scss?e327","components/Permissions/index.js","webpack://@kne-components/components-core/./src/components/StateBar/style.module.scss?ecea","components/StateBar/index.js","webpack://@kne-components/components-core/./src/components/StateTag/style.module.scss?5aff","components/StateTag/index.js","webpack://@kne-components/components-core/./src/components/Table/style.module.scss?5d23","webpack://@kne-components/components-core/./src/components/Table/columns.module.scss?6c8d","components/Table/OptionsList.js","components/Table/Ellipsis.js","components/Table/ColItem.js","components/Table/HideInfoComponent.js","components/Table/columnTypes.js","components/Table/ColumnsControlContent.js","components/Table/useTableConfig.js","components/Table/useColumnTypeProps.js","components/Table/useGroupHeader.js","components/Table/useSort.js","components/Table/Table.js","components/Table/locale/index.js","components/Table/TablePage.js"],"sourcesContent":["import * as component_1 from '@components/Common';\nimport * as component_2 from '@kne/react-fetch';\nimport * as component_3 from 'lodash';\nconst readmeConfig = {\n    name: `Common`,\n    summary: `<p>为组件库提供通用的组件、方法、hooks</p>\n<h3>组件</h3>\n<ol>\n<li>FetchButton Button触发加载数据</li>\n<li>ScrollLoader 下拉滚动加载组件</li>\n<li>SearchInput 提供防抖的查询输入框</li>\n<li>SimpleBarBox</li>\n</ol>\n<h3>方法</h3>\n<ol>\n<li>changeMoneyToChinese 将金额转化为大写的人民币金额</li>\n<li>getPopupContainer</li>\n<li>getScrollEl</li>\n<li>getContainerBody</li>\n</ol>\n<h3>hooks</h3>\n<ol>\n<li>withOSSFile</li>\n</ol>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Common_d13bc`,\n        style: `.Common_d13bc .scroll-list {\n  max-height: 300px; }\n`,\n        list: [{\n    title: `FetchButton`,\n    description: `这里填写示例说明`,\n    code: `const Common = _Common;\n\nconst { FetchButton } = Common;\n\nconst BaseExample = () => {\n  return (\n    <FetchButton\n      api={{\n        loader: () => {\n          return [\n            { label: \"1\", content: \"11\" },\n            { label: \"2\", content: \"22\" },\n          ];\n        },\n      }}\n      modalProps={({ data }) => {\n        console.log(data);\n        alert(JSON.stringify(data));\n        return {\n          children: (\n            <div>\n              <div>我是一个弹窗</div>\n              <div>{data[0].label}</div>\n              <div>{data[0].content}</div>\n              <div>{data[1].label}</div>\n              <div>{data[1].content}</div>\n            </div>\n          ),\n        };\n      }}\n      modalFunc={() => {}}\n    >\n      FetchButton\n    </FetchButton>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Common\",\n    packageName: \"@components/Common\",\n    component: component_1\n}]\n},{\n    title: `ScrollLoader`,\n    description: `这里填写示例说明`,\n    code: `const { get, merge, range } = lodash;\nconst Common = _Common;\nconst { default: Fetch } = _reactFetch;\n\nconst { ScrollLoader } = Common;\n\nconst BaseExample = () => {\n  console.log(Fetch, _reactFetch);\n  return (\n    <Fetch\n      loader={({ data }) => {\n        const params = Object.assign(\n          {\n            perPage: 20,\n            currentPage: 1,\n          },\n          data\n        );\n        return new Promise((resolve) => {\n          const start = (params.currentPage - 1) * params.perPage;\n          setTimeout(() => {\n            resolve({\n              totalCount: 100,\n              pageData: range(start, start + params.perPage).map((key) => {\n                return {\n                  label: \\`第\\${key + 1}项\\`,\n                  value: key + 1,\n                };\n              }),\n            });\n          }, 500);\n        });\n      }}\n      render={(fetchApi) => {\n        const pagination = {\n          paramsType: \"data\",\n          current: \"currentPage\",\n          pageSize: \"perPage\",\n          defaultPageSize: 20,\n        };\n        const current = get(\n            fetchApi.requestParams,\n            [pagination.paramsType, pagination.current],\n            1\n          ),\n          pageSize =\n            get(fetchApi.requestParams, [\n              pagination.paramsType,\n              pagination.pageSize,\n            ]) || pagination.defaultPageSize;\n\n        const formatData = {\n          list: fetchApi.data.pageData,\n          total: fetchApi.data.totalCount,\n        };\n        return (\n          <ScrollLoader\n            completeTips=\"\"\n            className=\"scroll-list\"\n            isLoading={!fetchApi.isComplete}\n            noMore={!formatData.total || current * pageSize >= formatData.total}\n            onLoader={async () => {\n              await fetchApi.loadMore(\n                merge({\n                  data: {\n                    [pagination.pageSize]: pageSize,\n                    [pagination.current]: current + 1,\n                  },\n                }),\n                (data, newData) => {\n                  return Object.assign({}, newData, {\n                    pageData: data.pageData.concat(newData.pageData),\n                  });\n                }\n              );\n            }}\n          >\n            {formatData.list.map((item) => {\n              return <div>{item.label}</div>;\n            })}\n          </ScrollLoader>\n        );\n      }}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Common\",\n    packageName: \"@components/Common\",\n    component: component_1\n},{\n    name: \"_reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_2\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_3\n}]\n},{\n    title: `SearchInput`,\n    description: `搜索框`,\n    code: `const Common = _Common;\n\nconst { SearchInput } = Common;\nconst { useState } = React;\n\nconst BaseExample = () => {\n  const [value, setValue] = useState(\"\");\n  return (\n    <SearchInput\n      value={value}\n      onSearch={(value) => {\n        setValue(value);\n        console.log(value);\n      }}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Common\",\n    packageName: \"@components/Common\",\n    component: component_1\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_6 from '@components/ConfirmButton';\nimport * as component_7 from 'antd';\nimport * as component_8 from '@components/Global';\nconst readmeConfig = {\n    name: `ConfirmButton`,\n    summary: `<h3>何时使用</h3>\n<p>执行操作前确认后再执行</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>message</td>\n<td>删除提示</td>\n<td>jsx</td>\n<td>确定要删除吗？</td>\n</tr>\n<tr>\n<td>title</td>\n<td>删除提示标题</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>isDelete</td>\n<td>是否为删除操作</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>onClick</td>\n<td>点击确认后执行的事件</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>点击取消后执行的事件</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>按钮是否禁用</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>showCancel</td>\n<td>是否显示取消按钮</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancelText</td>\n<td>取消按钮文案</td>\n<td>string</td>\n<td>取消</td>\n</tr>\n<tr>\n<td>okText</td>\n<td>确认按钮文案</td>\n<td>string</td>\n<td>确认</td>\n</tr>\n<tr>\n<td>isModal</td>\n<td>是否以弹窗方式展示，默认为Popconfirm</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>placement</td>\n<td>当isModal为false时生效，指定Popconfirm的弹出方向</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getContainer</td>\n<td>指定Popconfirm或Modal弹出位置，一般不需要指定</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>ConfirmLink</h3>\n<p>另外的一种按钮形式参数同ConfirmButton</p>\n<h3>withConfirm</h3>\n<p>高阶组件可以自定义按钮</p>`,\n    example: {\n        isFull: false,\n        className: `ConfirmButton_5f815`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: ConfirmButton, ConfirmLink } = _ConfirmButton;\nconst { Space } = antd;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <Space>\n      <ConfirmButton\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        删除\n      </ConfirmButton>\n      <ConfirmButton\n        isModal\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        Modal确认删除\n      </ConfirmButton>\n      <ConfirmLink\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        Link删除\n      </ConfirmLink>\n      <ConfirmButton\n        title=\"确定要删除吗？\"\n        message=\"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\"\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        有title的删除\n      </ConfirmButton>\n      <ConfirmButton\n        isModal\n        title=\"确定要删除吗？\"\n        message=\"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\"\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        有title的Modal确认删除\n      </ConfirmButton>\n\n      <ConfirmButton\n        title=\"确定要删除吗？\"\n        isDelete={false}\n        message=\"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\"\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        非警告有title的删除\n      </ConfirmButton>\n      <ConfirmButton\n        isModal\n        title=\"确定要删除吗？\"\n        isDelete={false}\n        message=\"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\"\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        非警告有title的Modal确认删除\n      </ConfirmButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_ConfirmButton\",\n    packageName: \"@components/ConfirmButton\",\n    component: component_6\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_7\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_8\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_4 from '@components/Content';\nconst readmeConfig = {\n    name: `Content`,\n    summary: `<h3>何时使用</h3>\n<p>成组展示多个字段，常见于详情页的信息展示</p>\n<h3>特点</h3>\n<p>labelAlign不为auto时会自动计算label的最小宽度使所有label的宽度等于最长的label宽度使视觉上更加整齐有秩序感</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>list</td>\n<td>内容，为一个数组，数组里面每一个值{label,content}</td>\n<td>array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>labelAlign</td>\n<td>label的对齐方式可以传入的值 left,right,center,auto,为auto时label不计算最小宽度</td>\n<td>string</td>\n<td>left</td>\n</tr>\n<tr>\n<td>col</td>\n<td>显示列数</td>\n<td>number</td>\n<td>1</td>\n</tr>\n<tr>\n<td>gutter</td>\n<td>栅格间隔，可以写成像素值或支持响应式的对象写法来设置水平间隔 { xs: 8, sm: 16, md: 24}。或者使用数组形式同时设置 [水平间距, 垂直间距]</td>\n<td>number</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Content_f15c1`,\n        style: ``,\n        list: [{\n    title: `基本示例`,\n    description: `展示了一个基本内容`,\n    code: `const {default:Content} = _Content;\nconst BaseExample = ()=>{\n    return <Content list={[\n        {label:'标题',content:'内容'},\n        {label:'标题标题',content:'内容内容'},\n        {label:'标题标',content:'内容内容内容内容内容内容内容内容内容内容'},\n        {label:'标题标题标题',content:'内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容'}\n    ]}/>;\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_4\n}]\n},{\n    title: `labelAlign auto`,\n    description: `展示了设置labelAlign为auto的情况`,\n    code: `const {default: Content} = _Content;\nconst BaseExample = () => {\n    return <Content labelAlign=\"auto\" list={[\n        {label: '标题', content: '内容'},\n        {label: '标题标题', content: '内容内容'},\n        {label: '标题标', content: '内容内容内容内容内容内容内容内容内容内容'},\n        {\n            label: '标题标题标题',\n            content: '内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容'\n        }\n    ]}/>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_4\n}]\n},{\n    title: `多列`,\n    description: `展示了两列的情况`,\n    code: `const {default: Content} = _Content;\nconst BaseExample = () => {\n    return <Content col={2} labelAlign=\"auto\" list={[\n        {label: '标题', content: '内容'},\n        {label: '标题标题', content: '内容内容'},\n        {label: '标题标', content: '内容内容内容内容内容内容内容内容内容内容'},\n        {\n            label: '标题标题标题',\n            content: '内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容'\n        }\n    ]}/>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_4\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_5 from '@components/Descriptions';\nconst readmeConfig = {\n    name: `Descriptions`,\n    summary: `<h3>何时使用</h3>\n<p>常见于详情页的信息展示</p>\n<h3>特点</h3>\n<ul>\n<li>最多支持两列数据展示，多余的列将不展示</li>\n<li>支持Features控制列内容开启和关闭</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dataSource</td>\n<td>详情数据源，内部每个数组为一行数据，每行数据中每个对象为一列数据，每行最多包含2列内容，多余的会被丢弃</td>\n<td>array[[{display,label,content,featureId}]]</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[[{display}]]</td>\n<td>数据是否展示,当为function时可以接收到(item,dataSource)参数，item为当前项配置，dataSource为整个组件的dataSource配置</td>\n<td>boolean,function</td>\n<td>true</td>\n</tr>\n<tr>\n<td>dataSource[[{label}]]</td>\n<td>数据展示的label</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[[{content}]]</td>\n<td>数据展示的内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[[{featureId}]]</td>\n<td>Features控制的id，参考Features组件的id参数</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Descriptions_8bc84`,\n        style: ``,\n        list: [{\n    title: `展示一个信息详情`,\n    description: `展示一个信息详情`,\n    code: `const { default: Descriptions } = _Descriptions;\nconst BaseExample = () => {\n  return (\n    <Descriptions\n      dataSource={[\n        [\n          { label: \"客户名称\", content: \"腾讯\" },\n          {\n            label: \"发票抬头\",\n            content: \"腾讯科技公司\",\n          },\n        ],\n        [\n          { label: \"发票类型\", content: \"增值税专用发票\" },\n          {\n            label: \"发票开具日期\",\n            content: \"2022-08-15\",\n          },\n        ],\n        [{ label: \"退票金额\", content: \"22000.00元\" }],\n        [\n          {\n            label: \"发票号\",\n            content: (\n              <div>\n                <div>00384895992774</div>\n                <div>00384895992774</div>\n                <div>00384895992774</div>\n                <div>00384895992774</div>\n              </div>\n            ),\n          },\n        ],\n        [\n          { label: \"是否需要重开发票\", content: \"否\" },\n          {\n            label: \"是否涉及金融变动\",\n            content: \"否\",\n          },\n        ],\n        [\n          { label: \"是否造成实质损失\", content: \"否\" },\n          { label: \"责任归属\", content: \"客户原因\" },\n        ],\n        [\n          {\n            label: \"退票原因\",\n            content: \"退票原因的描述退票原因的描述退票原因的描\",\n          },\n        ],\n        [{ label: \"附件\", content: \"附件名称\" }],\n        [\n          { label: \"操作时间\", content: \"2022-08-01 16:32\" },\n          {\n            label: \"操作人\",\n            content: \"西西歪\",\n          },\n        ],\n        [\n          {\n            label: \"超长内容\",\n            content:\n              \"超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容\",\n          },\n          {\n            label: \"超长英文\",\n            content:\n              \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n          },\n        ],\n      ]}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Descriptions\",\n    packageName: \"@components/Descriptions\",\n    component: component_5\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_9 from '@components/Drawer';\nimport * as component_10 from '@components/Global';\nimport * as component_11 from '@components/Content';\nimport * as component_12 from 'antd';\nimport * as component_13 from 'lodash';\nconst readmeConfig = {\n    name: `Drawer`,\n    summary: `<p>屏幕边缘滑出的浮层面板</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>footer</td>\n<td>弹窗的footer，当其被显式设置成null且footerButtons没有设置过时弹窗不显示footer。当它类型为function时可以得到close方法和withDecorator设置的props</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>footerButtons</td>\n<td>弹窗footer的按钮区，默认为确认和取消按钮，默认按钮分别响应onConfirm和onCancel方法，如果自定义设置footerButtons则需要自行传入onClick参数，onConfirm和onCancel方法将不生效</td>\n<td>array</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>弹窗关闭时调用，弹窗受控时由该方法将外部open状态修改</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onConfirm</td>\n<td>当footerButtons未自定义设置时点击确认按钮触发执行该方法，当其返回Promise点击后Promise，resolve之前确认按钮显示为loading状态，返回值为false或者Promise的resolve值为false时弹窗不会被关闭，其他情况弹窗默认关闭</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>和onConfirm类似，其为点击取消按钮触发</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>弹窗内容，可以为jsx或者function，为function时可以接收到close和withDecorator设置的props</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>withDecorator</td>\n<td>弹窗修饰器，会接收到弹窗children的render方法，可以在其外部添加修饰内容后执行render方法，给render方法传入的值可以在children,footer,rightOptions类型为function时接收到对应的参数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>maskClosable</td>\n<td>点击蒙层是否允许关闭</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数参考antd Drawer组件</p>\n<h3>AppDrawer</h3>\n<p>全局抽屉包裹组件，提供消费上下文的默认环境，提供可消费 React context 的 drawer 的静态方法，可以简化 useDrawer 等方法需要手动植入 contextHolder 的问题。</p>\n<h3>useDrawer</h3>\n<p>获取一个执行后可以弹出一个Drawer组件的方法,前置条件是需要再全局注入AppDrawer包裹组件</p>\n<h4>return:drawer</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>drawer</td>\n<td>执行后可以弹出一个Drawer弹窗，参数同Drawer组件参数</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>\n<h3>DrawerButton</h3>\n<p>点击以后可以执行获取数据，在数据未返回时按钮展示为loading状态，数据返回后弹出Drawer弹窗</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>@kne/react-fetch 所需参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>drawerProps</td>\n<td>同Drawer参数,当它为function时，执行function后返回的值作为drawerProps</td>\n<td>object,function({data,fetchApi,close})</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数同antd Button 组件</p>`,\n    example: {\n        isFull: false,\n        className: `Drawer_9b1ed`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Drawer, useDrawer, DrawerButton } = _Drawer;\nconst { Button, Space } = antd;\nconst { range } = lodash;\nconst { useRef, useState } = React;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst api = {\n  loader: () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve([\n          {\n            label: \"内容1\",\n            content:\n              \"内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1\",\n          },\n          {\n            label: \"内容2\",\n            content:\n              \"内容2内容2内内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n        ]);\n      }, 1000);\n    });\n  },\n};\n\nconst BaseExample = () => {\n  const drawer = useDrawer();\n  const [open, setOpen] = useState(false);\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        open 组件打开\n      </Button>\n      <Button\n        onClick={() => {\n          drawer({\n            title: \"标题\",\n            children: \"打开了一个抽屉\",\n          });\n        }}\n      >\n        hook 打开\n      </Button>\n      <DrawerButton\n        api={api}\n        modalProps={({ data }) => {\n          return {\n            title: \"加载数据的弹窗\",\n            children: <Content list={data} col={1} />,\n          };\n        }}\n      >\n        按钮点击加载数据\n      </DrawerButton>\n      <Drawer title=\"Basic Drawer\" onClose={() => setOpen(false)} open={open}>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n      </Drawer>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Drawer\",\n    packageName: \"@components/Drawer\",\n    component: component_9\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_10\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_11\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_12\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_13\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_14 from '@components/Enum';\nimport * as component_15 from 'antd';\nimport * as component_16 from '@components/Global';\nconst readmeConfig = {\n    name: `Enum`,\n    summary: ``,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Enum_cf204`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Enum } = _Enum;\nconst { PureGlobal } = global;\nconst { Space, Select } = antd;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        locale: \"zh-CN\",\n        enums: {\n          testEnums: async ({ locale }) => {\n            console.log(locale);\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve([\n                  { value: \"1\", description: \"第一项\" },\n                  { value: \"2\", description: \"第二项\" },\n                  {\n                    value: \"3\",\n                    description: \"第三项\",\n                  },\n                ]);\n              }, 1000);\n            });\n          },\n        },\n      }}\n    >\n      <Space>\n        <Enum moduleName=\"gender\" name=\"M\">\n          {(data) => data.description}\n        </Enum>\n        <Enum moduleName=\"testEnums\" name=\"1\">\n          {(data) => data.description}\n        </Enum>\n        <Enum moduleName=\"testEnums\" name=\"2\">\n          {(data) => data.description}\n        </Enum>\n        <Enum moduleName=\"testEnums\">\n          {(list) => {\n            return (\n              <Select\n                placeholder=\"请选择\"\n                options={list.map((item) => ({\n                  value: item.value,\n                  label: item.description,\n                }))}\n              />\n            );\n          }}\n        </Enum>\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Enum\",\n    packageName: \"@components/Enum\",\n    component: component_14\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_15\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_16\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_17 from '@components/ExportTable';\nimport * as component_18 from '@components/Global';\nimport * as component_19 from '@kne/react-fetch';\nconst readmeConfig = {\n    name: `ExportTable`,\n    summary: `<p>自定义表格导出列 <em><strong>（已废弃请勿使用）</strong></em></p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>columns</td>\n<td>配置同TablePage列,属性key对应后端导出的字段名，不需要参与导出的列可以配置属性exportHidden:true</td>\n<td>function, array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>name</td>\n<td>缓存的名称key（导出接口的key）</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>onExport</td>\n<td>导出事件</td>\n<td>function({name,downloadBlobFile})</td>\n<td></td>\n</tr>\n<tr>\n<td>saveDataApi</td>\n<td>保存接口APi,如果配置优先取当前值，否则取全局中的配置</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>getDataApi</td>\n<td>获取上一次保存的列名数据，如果配置优先取当前值，否则取全局中的配置</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `ExportTable_487be`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: ExportTable } = _ExportTable;\nconst { default: Global } = global;\nconst { preset } = reactFetch;\n\nconst ajax = (config) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: {\n          code: 0,\n          data: [\"remark1\", \"remark3\"],\n        },\n      });\n    }, 100);\n  });\n};\n\npreset({\n  ajax,\n});\nconst BaseExample = () => {\n  return (\n    <Global\n      preset={{\n        ajax,\n        exportTableServerApis: {\n          getDataApi: (name) => {\n            return {\n              url: \"/api/v1/client/client/get_client_export_column\",\n              method: \"POST\",\n              data: {\n                key: name,\n              },\n              transformResponse: (response) => {\n                const { data } = response;\n                response.data = Object.assign({}, data, {\n                  data: (() => {\n                    try {\n                      return data.data ? JSON.parse(data.data) : [];\n                    } catch (e) {\n                      return [];\n                    }\n                  })(),\n                });\n                response.data = {\n                  code: response.data.code === 0 ? 200 : data.code,\n                  msg: response.data.msg,\n                  results: response.data.data,\n                };\n                return response;\n              },\n            };\n          },\n          saveDataApi: ({ name, data }) => {\n            return ajax({\n              url: \"/api/v1/client/client/save_client_export_column\",\n              method: \"POST\",\n              data: {\n                exportColumn: data,\n                key: name,\n              },\n            });\n          },\n        },\n      }}\n    >\n      <ExportTable\n        name=\"ExportTableInvoice\"\n        columns={[\n          {\n            title: \"发票备注1\",\n            groupName: \"开票信息\",\n            hidden: true,\n            name: \"remark1\",\n            key: \"remark1\",\n            width: 150,\n          },\n          {\n            title: \"发票备注2\",\n            groupName: \"开票信息\",\n            hidden: true,\n            name: \"remark2\",\n            key: \"remark2\",\n            width: 150,\n          },\n          {\n            title: \"发票备注3\",\n            groupName: \"开票信息1\",\n            hidden: true,\n            name: \"remark3\",\n            key: \"remark3\",\n            width: 150,\n          },\n          {\n            title: \"发票备注4\",\n            groupName: \"开票信息1\",\n            hidden: true,\n            name: \"remark4\",\n            key: \"remark4\",\n            width: 150,\n          },\n          {\n            title: \"发票备注5\",\n            groupName: \"开票信息3\",\n            hidden: true,\n            name: \"remark5\",\n            key: \"remark5\",\n            width: 150,\n          },\n          {\n            title: \"发票备注6\",\n            groupName: \"开票信息3\",\n            hidden: true,\n            name: \"remark6\",\n            key: \"remark6\",\n            width: 150,\n          },\n          {\n            title: \"发票备注7\",\n            groupName: \"开票信息4\",\n            hidden: true,\n            name: \"remark7\",\n            key: \"remark7\",\n            width: 150,\n          },\n          {\n            title: \"发票备注8\",\n            groupName: \"开票信息4\",\n            hidden: true,\n            name: \"remark8\",\n            key: \"remark8\",\n            width: 150,\n          },\n        ]}\n      />\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ExportTable\",\n    packageName: \"@components/ExportTable\",\n    component: component_17\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_18\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_19\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_20 from '@components/Features';\nimport * as component_21 from '@components/Global';\nimport * as component_22 from '@components/Layout';\nimport * as component_23 from 'react-router-dom';\nimport * as component_24 from 'antd';\nconst readmeConfig = {\n    name: `Features`,\n    summary: `<h3>何时使用</h3>\n<p>在系统中需要通过一些条件，系统性地让整个系统的某些功能屏蔽或者有另外的一些展现方式，可以用该组件来实现</p>\n<h3>特点</h3>\n<ul>\n<li>全局性配置，一次性声明，避免将各种判断语句散落在项目各处造成难以维护</li>\n<li>具有特征判断和依赖性判断，即当系统描述性文件中含有某个模块且含有所有依赖项模块则判断该组件为正常状态，其他情况为关闭状态</li>\n<li>可以通过配置文件给正常状态和关闭状态的组件传递不同的props来控制两种状态下组件的不同逻辑</li>\n<li>在配置文件中，组件的id是简写，只需要保证同一层级的组件id不重复就可以了，它的真实id会通过其所在的上下级关系，通过冒号将每一层的组件id链接起来组成其真实的id，你可以打开调试模式查看每一个组件实际运行时的id和判断状态</li>\n<li>组件的type可以设置为三种：system,module,feature。system为配置文件最顶级组件，module为功能模块，默认Layout的Page组件openFeatures为true时它的name会被设置成module，feature为具体的功能项</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>模块或功能id，通过Global里面的preset的features配置确定该模块开启或者关闭</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>features 参数设置</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>debug</td>\n<td>是否开启调试模式，开启后控制台会打印所有模块的id和判断结果</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>profile</td>\n<td>模块配置列表，具体参考下面profile参数说明</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>profile参数说明</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>模块的唯一标识符，需要保证在当前一级中不重复，实际id为所有父级的id用’:‘链接的字符串</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>type</td>\n<td>可能取值为system,module,feature，注意最外层的type必须为system</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>name</td>\n<td>模块的中文名称，不参与判断，只标识模块名帮助开发者识别</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>close</td>\n<td>模块是否关闭，可以缺省该值，缺省时profile里面存在某id的模块即为模块开启，不存在即为关闭。在特殊情况下，在profile存在该模块配置但是希望其关闭时可以显示指定该参数为true来关闭模块</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>dependencies</td>\n<td>依赖模块列表，每一项为一个模块id（该id必须为完整的id串，即带有所有父级id的用’:‘链接起来的字符串）,当所有id的指代模块都被判断开启时，该模块被判断为开启</td>\n<td>array[string]</td>\n<td>-</td>\n</tr>\n<tr>\n<td>options</td>\n<td>模块开启时获取的参数</td>\n<td>any</td>\n<td>-</td>\n</tr>\n<tr>\n<td>rejectedOptions</td>\n<td>模块关闭时获取的参数</td>\n<td>any</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>被控制的模块，为function时可以接收到({isPass,options})参数 isPass为模块是否开启，options在模块开启时为options参数，在模块关闭时为rejectedOptions参数，其不为function类型时当模块关闭则不显示children，模块开启时正常显示children</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Features_98f77`,\n        style: ``,\n        list: [{\n    title: `展示了一个系统中功能一开启功能二关闭的情况`,\n    description: `展示了一个系统中功能一开启功能二关闭的情况`,\n    code: `const { default: Features } = _Features;\nconst { default: Layout, PermissionsPage } = layout;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        features: {\n          debug: true,\n          profile: {\n            id: \"erc\",\n            type: \"system\",\n            name: \"业务系统\",\n            children: [\n              {\n                id: \"home\",\n                type: \"module\",\n                name: \"首页\",\n                children: [\n                  {\n                    id: \"test\",\n                    type: \"feature\",\n                    name: \"测试功能\",\n                    dependencies: [\"erc:client\"],\n                  },\n                ],\n              },\n              {\n                id: \"position\",\n                type: \"module\",\n                name: \"职位\",\n                children: [\n                  {\n                    id: \"position-list\",\n                    type: \"feature\",\n                    options: [],\n                    rejectedOptions: [],\n                  },\n                ],\n              },\n              {\n                id: \"client\",\n                type: \"module\",\n                name: \"客户\",\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <Layout navigation={{ isFixed: false }}>\n        <PermissionsPage name=\"home\" openFeatures>\n          <Features id=\"test\">功能模块一</Features>\n          <Features id=\"test2\">功能模块二</Features>\n        </PermissionsPage>\n      </Layout>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Features\",\n    packageName: \"@components/Features\",\n    component: component_20\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_21\n},{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_22\n}]\n},{\n    title: `展示了打开页面特性配置开启和关闭的情况`,\n    description: `展示了打开页面特性配置开启和关闭的情况`,\n    code: `const { default: Features } = _Features;\nconst { default: Layout, PermissionsPage } = layout;\nconst { PureGlobal } = global;\nconst { Route, Routes } = Router;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        features: {\n          debug: true,\n          profile: {\n            id: \"erc\",\n            type: \"system\",\n            name: \"业务系统\",\n            children: [\n              {\n                id: \"home\",\n                type: \"module\",\n                name: \"首页\",\n                children: [\n                  {\n                    id: \"test\",\n                    type: \"feature\",\n                    name: \"测试功能\",\n                  },\n                  {\n                    id: \"test2\",\n                    type: \"feature\",\n                    name: \"测试功能2\",\n                    dependencies: [\"erc:client\"],\n                  },\n                ],\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <Layout\n        navigation={{\n          isFixed: false,\n          list: [\n            {\n              key: \"position\",\n              title: \"职位\",\n              path: \"/position\",\n            },\n            {\n              key: \"client\",\n              title: \"客户\",\n              path: \"/client\",\n            },\n          ],\n        }}\n      >\n        <Routes>\n          <Route\n            index\n            element={\n              <PermissionsPage name=\"home\" openFeatures>\n                home页面模块\n                <div>\n                  <Features id=\"test\">开启模块</Features>\n                  <Features id=\"test2\">关闭模块</Features>\n                </div>\n              </PermissionsPage>\n            }\n          />\n          <Route\n            path=\"/position\"\n            element={\n              <PermissionsPage name=\"position\" openFeatures>\n                position页面模块\n              </PermissionsPage>\n            }\n          />\n          <Route\n            path=\"/client\"\n            element={\n              <PermissionsPage name=\"client\">\n                client页面模块,未打开features\n              </PermissionsPage>\n            }\n          />\n        </Routes>\n      </Layout>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Features\",\n    packageName: \"@components/Features\",\n    component: component_20\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_21\n},{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_22\n},{\n    name: \"Router\",\n    packageName: \"react-router-dom\",\n    component: component_23\n}]\n},{\n    title: `展示了一个系统中功能开启和关闭参数获取`,\n    description: `展示了一个系统中功能开启和关闭参数获取`,\n    code: `const { default: Features } = _Features;\nconst { default: Layout, PermissionsPage } = layout;\nconst { PureGlobal } = global;\nconst { useState } = React;\nconst { Button, Space } = antd;\nconst BaseExample = () => {\n  const [close, setClose] = useState(false);\n  return (\n    <PureGlobal\n      preset={{\n        features: {\n          debug: true,\n          profile: {\n            id: \"erc\",\n            type: \"system\",\n            name: \"业务系统\",\n            children: [\n              {\n                id: \"home\",\n                type: \"module\",\n                name: \"首页\",\n                children: [\n                  {\n                    id: \"test\",\n                    type: \"feature\",\n                    name: \"测试功能\",\n                    options: {\n                      state: \"开启\",\n                    },\n                    rejectedOptions: {\n                      state: \"关闭\",\n                    },\n                    close: close,\n                  },\n                ],\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <Space direction=\"vertical\">\n        <Button\n          onClick={() => {\n            setClose((value) => !value);\n          }}\n        >\n          切换\n        </Button>\n        <Layout navigation={{ isFixed: false }}>\n          <PermissionsPage name=\"home\" openFeatures>\n            <Features id=\"test\">\n              {({ isPass, options }) => {\n                return isPass\n                  ? \"模块开启,options:\" + JSON.stringify(options)\n                  : \"模块关闭,options:\" + JSON.stringify(options);\n              }}\n            </Features>\n          </PermissionsPage>\n        </Layout>\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Features\",\n    packageName: \"@components/Features\",\n    component: component_20\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_21\n},{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_22\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_24\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_25 from '@components/File';\nimport * as component_26 from '@components/Global';\nimport * as component_27 from 'lodash';\nimport * as component_28 from 'antd';\nimport * as component_29 from '@kne/remote-loader';\nconst readmeConfig = {\n    name: `File`,\n    summary: `<p>提供文件展示，下载等操作</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `File_0b279`,\n        style: ``,\n        list: [{\n    title: `获取文件地址`,\n    description: `通过一个ossId获取文件地址`,\n    code: `const { default: File } = _File;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return <File id=\"qqq\">{({ url }) => url}</File>;\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      apis: {\n        oss: {\n          loader: async ({ params }) => {\n            console.log(params);\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve(window.PUBLIC_URL + \"/avatar.png\");\n              }, 1000);\n            });\n          },\n        },\n      },\n    }}\n  >\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_File\",\n    packageName: \"@components/File\",\n    component: component_25\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_26\n}]\n},{\n    title: `文件下载`,\n    description: `展示文件下载`,\n    code: `const { Download } = _File;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <Download\n      id=\"123\"\n      filename=\"下载的文件\"\n      onSuccess={() => {\n        console.log(\"下载成功\");\n      }}\n    >\n      文件下载\n    </Download>\n  );\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      apis: {\n        oss: {\n          loader: async ({ params }) => {\n            console.log(params);\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve(window.PUBLIC_URL + \"/avatar.png\");\n              }, 1000);\n            });\n          },\n        },\n      },\n    }}\n  >\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_File\",\n    packageName: \"@components/File\",\n    component: component_25\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_26\n}]\n},{\n    title: `文件列表`,\n    description: `展示文件列表`,\n    code: `const { List } = _FileList;\nconst { Space } = antd;\nconst { PureGlobal } = global;\n\nconst BaseExample = () => {\n  return (\n    <Space direction=\"vertical\">\n      <List\n        dataSource={[\n          {\n            uuid: \"121233\",\n            type: \"uploading\",\n            filename: \"张三的简历.doc\",\n          },\n          {\n            id: \"xxxxx\",\n            filename: \"我是一份简历.pdf\",\n            date: \"2022-07-15T11:09:15.000+08:00\",\n            userName: \"用户名\",\n          },\n        ]}\n      />\n      <List dataSource={[]} />\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      apis: {\n        oss: {\n          loader: async ({ params }) => {\n            console.log(params);\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve(window.PUBLIC_URL + \"/mock/demo.pdf\");\n              }, 1000);\n            });\n          },\n        },\n      },\n    }}\n  >\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FileList\",\n    packageName: \"@components/File\",\n    component: component_25\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_27\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_26\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_28\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { FileLink } = _File;\nconst { getPublicPath } = remoteLoader;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        apis: {\n          oss: {\n            loader: async ({ params }) => {\n              const mapping = {\n                \"01\": \"/avatar.png\",\n                \"02\": \"/mock/demo.html\",\n                \"03\": \"/mock/1_王晶简历-2023_06_2.pdf\",\n              };\n              return new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve(\n                    getPublicPath(\"components-core\") + mapping[params.id]\n                  );\n                }, 1000);\n              });\n            },\n          },\n        },\n      }}\n    >\n      <FileLink id=\"01\" originName=\"我是一个图片.jpg\" />\n      <FileLink id=\"02\" originName=\"我是一个网页.html\" />\n      <FileLink id=\"03\" originName=\"我是一个pdf.pdf\" />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_File\",\n    packageName: \"@components/File\",\n    component: component_25\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_29\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_26\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_30 from '@components/FilePreview';\nconst readmeConfig = {\n    name: `FilePreview`,\n    summary: `<p>文件预览</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `FilePreview_143ff`,\n        style: ``,\n        list: [{\n    title: `HtmlPreview`,\n    description: `这里填写示例说明`,\n    code: `const { default: FilePreview, HtmlPreview } = _FilePreview;\nconst BaseExample = () => {\n  return (\n    <HtmlPreview\n      maxWidth={900}\n      url=\"/ui_components/components-core/1.0.0/mock/demo2.html\"\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_30\n}]\n},{\n    title: `PdfPreview`,\n    description: `这里填写示例说明`,\n    code: `const { PdfPreview } = _FilePreview;\nconst BaseExample = () => {\n  return (\n    <PdfPreview\n      maxWidth={900}\n      url={\\`/ui_components/components-core/1.0.0/mock/1_王晶简历-2023_06_2.pdf\\`}\n      renderTextLayer={true}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_30\n}]\n},{\n    title: `TextPreview`,\n    description: `这里填写示例说明`,\n    code: `const { TextPreview } = _FilePreview;\nconst BaseExample = () => {\n  return (\n    <TextPreview\n      maxWidth={900}\n      url=\"/ui_components/components-core/1.0.0/mock/demo.txt\"\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_30\n}]\n},{\n    title: `ImagePreview`,\n    description: `这里填写示例说明`,\n    code: `const { ImagePreview } = _FilePreview;\nconst BaseExample = () => {\n  return (\n    <ImagePreview\n      url={\\`/ui_components/components-core/1.0.0/mock/demo2.jpg\\`}\n      renderTextLayer={true}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_30\n}]\n},{\n    title: `unknown`,\n    description: `这里填写示例说明`,\n    code: `const { UnknownPreview } = _FilePreview;\nconst BaseExample = () => {\n  return (\n    <UnknownPreview url=\"/ui_components/components-core/1.0.0/mock/demo.des\" />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_30\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_31 from '@components/Filter';\nimport * as component_32 from 'antd';\nimport * as component_33 from '@components/Filter/doc/mock/tree-data.json';\nconst readmeConfig = {\n    name: `Filter`,\n    summary: ``,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Filter_d7778`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {\n  FilterValueDisplay,\n  FilterItem,\n  FilterLines,\n  PopoverItem,\n  InputFilterItem,\n  CityFilterItem,\n  AdvancedSelectFilterItem,\n  UserFilterItem,\n  FunctionSelectFilterItem,\n  IndustrySelectFilterItem,\n} = _Filter;\nconst { Space, Input } = antd;\nconst { useState } = React;\nconst BaseExample = () => {\n  const [value, setValue] = useState([\n    {\n      label: \"城市\",\n      name: \"city\",\n      value: [\n        { label: \"上海\", value: \"010\" },\n        { label: \"北京\", value: \"020\" },\n      ],\n    },\n    {\n      label: \"职能\",\n      name: \"function\",\n      value: [\n        { label: \"产品经理\", value: \"010\" },\n        { label: \"销售\", value: \"020\" },\n        {\n          label: \"客户经理\",\n          value: \"030\",\n        },\n      ],\n    },\n  ]);\n  return (\n    <Space direction=\"vertical\">\n      <FilterValueDisplay value={value} onChange={setValue} />\n      <Space>\n        <FilterItem label=\"客户\" />\n        <FilterItem label=\"客户\" active />\n        <FilterItem label=\"客户\" open />\n        <FilterItem label=\"超长超长超长超长超长超长超长超长\" active open />\n      </Space>\n      <FilterLines\n        list={[\n          [\n            <FilterItem label=\"客户\" />,\n            <FilterItem label=\"职位\" />,\n            <FilterItem label=\"职位负责人\" />,\n          ],\n          [\n            <FilterItem label=\"开始时间\" />,\n            <FilterItem label=\"结束时间\" />,\n            <FilterItem label=\"职位BD人\" />,\n          ],\n          [\n            <FilterItem label=\"开始时间\" />,\n            <FilterItem label=\"结束时间\" />,\n            <FilterItem label=\"职位BD人\" />,\n          ],\n          [\n            <FilterItem label=\"开始时间\" />,\n            <FilterItem label=\"结束时间\" />,\n            <FilterItem label=\"职位BD人\" />,\n          ],\n        ]}\n      />\n      <PopoverItem label=\"客户\">\n        {({ value, onChange }) => (\n          <Input value={value} onChange={(e) => onChange(e.target.value)} />\n        )}\n      </PopoverItem>\n      <FilterLines\n        list={[\n          [\n            <InputFilterItem label=\"文字\" />,\n            <CityFilterItem label=\"城市\" />,\n            <AdvancedSelectFilterItem\n              label=\"高级选择\"\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1 },\n                      { label: \"第二项\", value: 2, disabled: true },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n            />,\n            <UserFilterItem\n              label=\"用户选择\"\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        value: 1,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户二\",\n                        value: 2,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户三\",\n                        value: 3,\n                        description: \"我是用户描述\",\n                      },\n                    ],\n                  };\n                },\n              }}\n            />,\n            <FunctionSelectFilterItem label=\"职能选择\" />,\n            <IndustrySelectFilterItem label=\"行业选择\" />,\n          ],\n        ]}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Filter\",\n    packageName: \"@components/Filter\",\n    component: component_31\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_32\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {\n  default: Filter,\n  InputFilterItem,\n  DatePickerFilterItem,\n  DateRangePickerFilterItem,\n  TypeDateRangePickerFilterItem,\n  CityFilterItem,\n  AdvancedSelectFilterItem,\n  UserFilterItem,\n  FunctionSelectFilterItem,\n  IndustrySelectFilterItem,\n  getFilterValue,\n  FilterItemContainer,\n} = _Filter;\nconst { useState } = React;\nconst BaseExample = () => {\n  const [value, onChange] = useState([]);\n  return (\n    <Filter\n      value={value}\n      onChange={(value) => {\n        console.log(getFilterValue(value));\n        onChange(value);\n      }}\n      list={[\n        [\n          <InputFilterItem label=\"文字\" name=\"text\" />,\n          <CityFilterItem label=\"城市\" name=\"city\" />,\n          <FilterItemContainer name=\"select\" label=\"高级选择\">\n            {(props) => (\n              <div>\n                <AdvancedSelectFilterItem\n                  {...props}\n                  api={{\n                    loader: () => {\n                      return {\n                        pageData: [\n                          { label: \"第一项\", value: 1 },\n                          {\n                            label: \"第二项\",\n                            value: 2,\n                            disabled: true,\n                          },\n                          {\n                            label: \"第三项\",\n                            value: 3,\n                          },\n                        ],\n                      };\n                    },\n                  }}\n                />\n              </div>\n            )}\n          </FilterItemContainer>,\n          <DatePickerFilterItem label=\"日期\" name=\"date\" picker=\"week\" />,\n          <TypeDateRangePickerFilterItem\n            label=\"复杂日期范围\"\n            name=\"type-data-range\"\n            allowEmpty={[true, true]}\n          />,\n          <DateRangePickerFilterItem label=\"日期范围\" name=\"date-range\" />,\n          <UserFilterItem\n            label=\"用户选择\"\n            name=\"user\"\n            api={{\n              loader: () => {\n                return {\n                  pageData: [\n                    {\n                      label: \"用户一\",\n                      value: 1,\n                      description: \"我是用户描述\",\n                    },\n                    {\n                      label: \"用户二\",\n                      value: 2,\n                      description: \"我是用户描述\",\n                    },\n                    {\n                      label: \"用户三\",\n                      value: 3,\n                      description: \"我是用户描述\",\n                    },\n                  ],\n                };\n              },\n            }}\n          />,\n          <FunctionSelectFilterItem\n            label=\"职能选择\"\n            name=\"function\"\n            onlyAllowLastLevel\n            single\n          />,\n          <IndustrySelectFilterItem\n            label=\"行业选择\"\n            name=\"industry\"\n            onlyAllowLastLevel\n          />,\n        ],\n      ]}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Filter\",\n    packageName: \"@components/Filter\",\n    component: component_31\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Filter, TreeFilterItem } = _Filter;\nconst { default: treeData } = _data;\nconst { useState } = React;\nconst { Space } = antd;\n\nconst BaseExample = () => {\n  const [filter, setFilter] = useState([]);\n  const [filter2, setFilter2] = useState([]);\n\n  return (\n    <Space direction=\"vertical\">\n      <Filter\n        value={filter}\n        onChange={setFilter}\n        list={[\n          [\n            <TreeFilterItem\n              name=\"tree\"\n              single\n              label=\"树组件\"\n              fieldNames={{\n                title: \"name\",\n                key: \"id\",\n                children: \"children\",\n              }}\n              api={{\n                loader: () => {\n                  return treeData.children;\n                },\n              }}\n            />,\n          ],\n        ]}\n      />\n      <Filter\n        value={filter2}\n        onChange={setFilter2}\n        list={[\n          [\n            <TreeFilterItem\n              name=\"tree\"\n              label=\"树组件\"\n              fieldNames={{\n                title: \"name\",\n                key: \"id\",\n                children: \"children\",\n              }}\n              api={{\n                loader: () => {\n                  return treeData.children;\n                },\n              }}\n            />,\n          ],\n        ]}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Filter\",\n    packageName: \"@components/Filter\",\n    component: component_31\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_32\n},{\n    name: \"_data\",\n    packageName: \"@components/Filter/doc/mock/tree-data.json\",\n    component: component_33\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_34 from '@components/FlexBox';\nimport * as component_35 from 'antd';\nimport * as component_36 from 'lodash';\nconst readmeConfig = {\n    name: `FlexBox`,\n    summary: `<p>用于根据盒子大小响应式展示不同列</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `FlexBox_51df0`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: FlexBox } = _FlexBox;\nconst { Card } = antd;\nconst BaseExample = () => {\n  return (\n    <FlexBox\n      dataSource={[\n        {\n          title: \"Title 1\",\n        },\n        {\n          title: \"Title 2\",\n        },\n        {\n          title: \"Title 3\",\n        },\n        {\n          title: \"Title 4\",\n        },\n        {\n          title: \"Title 5\",\n        },\n        {\n          title: \"Title 6\",\n        },\n      ]}\n      renderItem={(item) => (\n        <FlexBox.Item>\n          <Card title={item.title}>Card content</Card>\n        </FlexBox.Item>\n      )}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FlexBox\",\n    packageName: \"@components/FlexBox\",\n    component: component_34\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_35\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: FlexBox } = _FlexBox;\nconst { Card, Button } = antd;\nconst { range } = lodash;\nconst { useRef } = React;\nconst BaseExample = () => {\n  const ref = useRef();\n  return (\n    <div>\n      <FlexBox.Fetch\n        ref={ref}\n        getFetchApi={({ size }) => {\n          return {\n            data: {\n              pageSize: size,\n            },\n            loader: ({ data }) => {\n              return new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve({\n                    pageData: range(0, data.pageSize).map((index) => {\n                      return {\n                        key: index,\n                        title: \\`第\\${index}项\\`,\n                      };\n                    }),\n                  });\n                }, 1000);\n              });\n            },\n          };\n        }}\n        renderItem={(item) => (\n          <FlexBox.Item>\n            <Card title={item.title}>Card content</Card>\n          </FlexBox.Item>\n        )}\n      />\n      <Button\n        onClick={() => {\n          console.log(ref.current);\n        }}\n      >\n        获取FetchApi\n      </Button>\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FlexBox\",\n    packageName: \"@components/FlexBox\",\n    component: component_34\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_35\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_36\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_37 from '@components/FormInfo';\nimport * as component_38 from '@components/Global';\nimport * as component_39 from '@components/Modal';\nimport * as component_40 from 'lodash';\nimport * as component_41 from 'antd';\nimport * as component_42 from '@kne/react-fetch';\nimport * as component_43 from '@components/Content';\nimport * as component_44 from '@components/Icon';\nimport * as component_45 from 'dayjs';\nconst readmeConfig = {\n    name: `FormInfo`,\n    summary: `<p>表单控件，自带数据域管理。包含数据录入、校验以及对应样式</p>\n<h3>何时使用</h3>\n<ul>\n<li>用于创建或编辑一个实体或收集信息</li>\n<li>需要对输入的数据类型进行校验时</li>\n</ul>\n<h3>概念</h3>\n<ul>\n<li>Form Data：\nForm提交时获取到的输出值通常用来提交给后端，不包含Form的校验信息，只包含Form组件可以向外部提供的数据输出信息。</li>\n<li>Form State：\nForm中用来存储一切状态的值，包含Field信息，校验信息，Form的值（需要一定的转换从才能变成Form Data），表单是否验证通过，表单错误信息等值。</li>\n<li>字段或称Field：\nForm中的一个项，必须拥有参数name,label,可选参数rule。name作为Form提交时获取到data的key值。\nlabel为字段展示给用户的名字以及字段报错时提示用户错误的语句中指代该字段的名字。\nrule为下方介绍的RULE。\n一个Field的取值可以是简单的Number，Boolean，String也可以是复杂的Array，Object等，所以在考虑一些值需要分成多个Field还是集中在一个Field时非常重要的。\n一个通用的规则是：<em><strong>对于Form来说，它的最小校验单元是一个Field</strong></em>。</li>\n<li>Field组件：\nField组件是Field的一部分，可以由用户自己实现也可以由组件库提供，通过Form提供的Field hooks将其变成Field。\nfield hooks主要接管Field组件的value，onChange参数，用来把Field组件的值获取到Form管理。Field组件必须为<em><strong>受控组件</strong></em>。\nfield hooks还会接管triggerValidate，用来获取Field的校验时机。field hooks会向Field组件提供Field的校验状态和校验错误信息。</li>\n<li>RULE：\n用于字段的校验。RULE可以为一个function或者正则表达式，不过推荐以大写字符串调用。\n字符串形式的RULE以空格为间隔可以传入多条规则，如：\"REQ TEL\"，\n执行校验时会从左至右依次校验，如果左侧的规则校验失败则不再执行其右侧规则，返回校验失败状态及该规则失败原因提示作为字段校验失败原因。\n字符串RULE允许传入参数，参数以中划线隔开，可传入多个参数，如：\"LEN-3-10\"。\n字符串RULE使用前必须在Form组件中有所声明，Form的RULE声明有3个级别：\n默认级，包含于Form内部，提供了一些基本的校验规则。preset级：在项目的preset中声明，应该把项目中常用的或者是比较复杂的RULE声明集中维护于此。\nForm级：以rules参数传入Form组件，主要是某Form单独使用的RULE。\n如果声明字符相同，会以 Form级&gt;preset级&gt;默认级 进行覆盖。\nRULE声明为一个对象，key和去掉参数的字符串RULE相同，value为一个function称为校验函数。此function接收到的参数有三部分(\nvalue,[...args]\n,{data,{field}}),第一个参数value为当前字段的值，最后一个参数为form的状态，data是form的当前值，field是form里面当前字段的信息，\n中间参数args为字符串参数如：\"LEN-3-10\"会接收到3和20两个参数。校验函数返回{result,errMsg}，\n或者一个Promise.resolve({result,errMsg})的Promise对象。result为校验是否通过，errMsg为失败提示，失败提示可以用%s占位，展示时会替换成字段的label。</li>\n<li>校验或称Validate：\nForm会在Field组件执行triggerValidate时执行当前Field的Validate，表单提交时执行所有Field的Validate。\nValidate会串行执行RULE里面的所有规则的校验函数，校验函数返回Promise时也会等待左边的校验函数的Promise完成再执行右边的规则校验函数。\n表单提交时，正在执行异步的校验函数的Field将不会重复执行Validate。表单提交时所有Field的校验状态为通过时才会执行onSubmit方法，否则会执行onError方法，\nonPrevSubmit方法在用户点击提交按钮时就会触发，不管Validate结果是否为通过。</li>\n<li>Event：\nForm采用了事件驱动的方式来设计，用以满足多种异步校验，和给Form提供强大的可扩展性。\nForm的API里面可以获取到的emitter就是Form内部的事件发射器，可以触发Form内部定义的事件，也可以自定义一些事件。同时可以通过emitter.addListener监听事件。\nForm内部定义的事件有：\nform-field-add：Field被添加进Form时触发，\nform-field-edit：Field的参数发生改变时触发，\norm-field-remove：Field被卸载时触发，\nform-field-validate：Field执行Validate时触发，\nform-field-data-change：Field的值发生修改时触发，\nform-data-reset：Form组件重置data时触发，\nform-data-set-field：Form组件给data赋值时触发，\nform-data-set-field-validate：Field被赋值时触发，\nform-validate-all：Form执行全部Field的Validate时触发，一般为表单提交时，\nform-submit：表单提交时触发。</li>\n<li>拦截器或称Interceptor：\n没有Field可以接收一个interceptor参数，字符串类型，和RULE类似可以再preset或者Form的interceptors props中声明以后使用，可以配置多个用空格连接。\n拦截器的作用是，在Field接收到一个新的值时，会串行执行拦截器的output部分，把其返回值输出到Form Data。\n在执行Form Data的赋值操作时把赋值作为输入串行执行拦截器的input部分，把其结果作为Form Data的输入。\n现在有个Field是日期选择，输出Date类型值，但是Form Data输出希望将其格式化为日期字符串，在表单编辑时Form\nData输入格式化后的日期字符串，但是Field只接收Date类型的值，\n以下例子可以来解决此问题：<pre><code class=\"language-jsx\">interceptors.input.use(\"date-string\", (value) =&gt; {\n  return value ? new Date(value) : null;\n});\n\ninterceptors.output.use(\"date-string\", (value) =&gt; {\n  return value ? dayjs(value).format(\"YYYY-MM-DD\") : \"\";\n});\n\n&lt;Field name=\"date\" label=\"日期\" interceptor=\"date-string\"/&gt;\n</code></pre>\n</li>\n<li>Group：\n当Form的data需要接收到一个复杂值的时候，可以使用Group来实现，如：<pre><code class=\"language-jsx\">&lt;Group name=\"baseInfo\"&gt;\n  &lt;Field name=\"name\" label=\"名称\"/&gt;\n  &lt;Field name=\"des\" label=\"说明\"/&gt;\n&lt;/Group&gt;\n</code></pre>\nForm的data可以接收到 {baseInfo:{name:\"xxx\",des:\"xxx\"}}，Group的name和Field的name一致时也可以用来表示数组如：<pre><code class=\"language-jsx\">&lt;Group name=\"name\"&gt;\n  &lt;Field name=\"name\" label=\"名称\"/&gt;\n&lt;/Group&gt;\n&lt;Group name=\"des\"&gt;\n  &lt;Field name=\"des\" label=\"说明\"/&gt;\n&lt;/Group&gt;\n</code></pre>\nForm的data可以接收到 {name:[\"name1\",\"name2\"],des:[\"des1\",\"des2\"]}。\nGroup可以嵌套，如<pre><code class=\"language-jsx\">&lt;Group name=\"baseInfo\"&gt;\n  &lt;Group name=\"info\"&gt;\n    &lt;Field name=\"name\" label=\"名称\"/&gt;\n  &lt;/Group&gt;\n  &lt;Field name=\"des\" label=\"说明\"/&gt;\n&lt;/Group&gt;\n</code></pre>\nForm的data可以接收到 {baseInfo:{info:{name:'xxx'},des:'xxx'}}。\n支持点操作，如：<pre><code class=\"language-jsx\">&lt;Group name=\"baseInfo.info\"&gt;\n  &lt;Field name=\"name\" label=\"名称\"/&gt;\n  &lt;Field name=\"des\" label=\"说明\"/&gt;\n&lt;/Group&gt;\n</code></pre>\nForm的data可以接收到 {baseInfo:{info:{name:'xxx',des:'xxx'}}}。</li>\n<li>GroupList：\n使用Group实现的一个特殊的区域用来更方便的实现多段式的表单如：<pre><code class=\"language-jsx\">&lt;Button onClick={()=&gt;ref.current.onAdd()}&gt;添加&lt;/Button&gt;\n&lt;GroupList name=\"edu\" ref={ref}&gt;\n  {(key,{index,length,onAdd,onRemore})=&gt;&lt;&gt;\n    &lt;Button onClick={onRemore}&gt;删除&lt;/Button&gt;\n    &lt;Field name=\"schoolName\" label=\"学校名称\"/&gt;\n    &lt;Field name=\"degree\" label=\"学历\"/&gt;\n    &lt;Field name=\"des\" label=\"说明\"/&gt;\n  &lt;/&gt;}\n&lt;/GroupList&gt;\n</code></pre>\n以上是一个简历的学历列表的实现，可以点击添加按钮添加多段学历Field，可以点击删除按钮删除当前一段学历Field，\nForm的data可以接收到的 {edu:[{schoolName:'xxx',degree:'xxx',des:'xxx'}]}。\n当然你可以不用使用这样底层的API，FormInfo.List 已经帮你处理好一切。</li>\n</ul>\n<h3>特点</h3>\n<ul>\n<li>集中化校验规则管理，分层抽象，调用简便</li>\n<li>支持异步校验规则</li>\n<li>事件驱动式架构设计，便于扩展</li>\n<li>支持Group及GroupList，可轻松实现复杂表单</li>\n<li>UI，校验逻辑分层抽象，一次封装使用简单</li>\n<li>context和ref双重API暴露，在Form内还是Form外都能轻松获取</li>\n<li>form-helper提供基本的表单封装，灵活组合</li>\n<li>支持拦截器，便捷实现FormData和Field的值之间的转换</li>\n</ul>\n<h3>Field实现规范</h3>\n<ul>\n<li>FormInfo里面的Field都会放置在fields文件夹，其中每个文件夹代表一个Field</li>\n<li>一个Field只能默认导出会被引用，其他的方法枚举等需要放置在默认导出的组件的function的静态属性上</li>\n<li>一个Field的默认导出组件只能被放置在Form中作为Field被使用，它的Field组件会被挂载在默认导出的组件的function的Field静态属性上</li>\n<li>一个Field的Field组件必须支持受控和非受控两种形式</li>\n<li>一个Field的导出必须被包含在FormInfo导出的formModule中和FormInfo中，即：以下两种方法都可以获取到该Field<pre><code class=\"language-jsx\">import {SomeField} from \"@component/FormInfo\";\n</code></pre>\n<pre><code class=\"language-jsx\">import {formModule} from \"@component/FormInfo\";\nconst {SomeField} = formModule;\n</code></pre>\n</li>\n</ul>\n<h3>选择器类型Field组件实现规范</h3>\n<ul>\n<li>必须使用SelectInnerInput作为选择器的值显示和触发的输入框</li>\n<li>SelectInnerInput可以通过isPopup提供popup和modal两种展示形态和交互逻辑，Field组件可以通过自身的默认值或者调用SelectInnerInput时显式指定来设置最佳推荐的默认形式，一般情况一种选择器需要良好支持两种形式</li>\n<li>SelectInnerInput可以通过single决定输出值是单项还是多项，单项和多项的交互逻辑也可能不同，SelectInnerInput的内部value state都是使用多项值来处理的，在输入值和在onChange输出时根据参数转化成数组，一般情况一种选择器需要支持两种情况</li>\n<li>选择器可能会在顶部有一个搜索框，通过使用时是否传入getSearchProps来决定搜索框是否显示，在FormInfo/common中提供了默认的SearchInput实现，SelectInnerInput中管理了其searchText和setSearchText状态</li>\n<li>FormInfo/fields/AdvancedSelect/createList.js 实现了一个列表式选择器，实现了包括搜索，下拉加载等逻辑，只需要实现列表渲染逻辑就可以方便的扩展出新的List类型选择器</li>\n<li>通过SelectInnerInput.useContext 可以拿到选择器的用户传入属性（props），值到选项的映射（mapping），搜索框的state（searchText,setSearchText），数据加载器的API（fetchApi）原始value值（valueState），添加映射方法（appendItems）</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>debug</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>rules</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>interceptors</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>noFilter</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onError</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onSubmit</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onPrevSubmit</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>SelectInnerInput</h3>\n<h3>formModule</h3>\n<h3>FormInfo</h3>\n<h3>preset</h3>\n<h3>List</h3>\n<h3>Form</h3>\n<p>同default导出组件</p>\n<h3>useField</h3>\n<h3>useReset</h3>\n<h3>useSubmit</h3>\n<h3>Group</h3>\n<h3>GroupList</h3>\n<h3>useFormContext</h3>\n<h3>RULES</h3>\n<h3>interceptors</h3>\n<h3>SubmitButton</h3>\n<h3>CancelButton</h3>\n<h3>ResetButton</h3>\n<h3>Field类型:antd组件</h3>\n<p>以下组件请参考antd具体的组件文档此处不再赘述</p>\n<p>Checkbox,CheckboxGroup,DatePicker,Input,InputNumber,RadioGroup,Select,Switch,TextArea,TimePicker,TreeSelect</p>\n<h3>Field类型:@kne/react-form-antd实现组件</h3>\n<p>DatePickerToday</p>\n<h3>Field类型:components-core实现组件</h3>\n<p>AddressSelect</p>\n<p>AdvancedSelect</p>\n<p>Avatar</p>\n<p>Cascader</p>\n<p>FunctionSelect</p>\n<p>IndustrySelect</p>\n<p>Money</p>\n<p>PartSelect</p>\n<p>PhoneNumber</p>\n<p>TableDataSelect</p>\n<p>Upload</p>\n<h3>FormModal</h3>\n<p>一个Form和Modal组合起来的组件，它预置了Form组件，children传入的内容和footer区域均在Form的context内</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>formProps</td>\n<td>同Form组件参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>useFormModal</h3>\n<p>获取一个执行后可以弹出一个FormModal组件的方法</p>\n<h4>return:formModal</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>formModal</td>\n<td>执行后可以弹出一个FormModal弹窗，参数同FormModal组件参数</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>\n<h3>FormModalButton</h3>\n<p>点击以后可以执行获取数据，在数据未返回时按钮展示为loading状态，数据返回后弹出FormModal弹窗</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>@kne/react-fetch 所需参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modalProps</td>\n<td>同FormModal参数,当它为function时，执行function后返回的值作为modalProps</td>\n<td>object,function({data,fetchApi,close})</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数同antd Button 组件</p>`,\n    example: {\n        isFull: true,\n        className: `FormInfo_f344c`,\n        style: `.FormInfo_f344c .input > .ant-row > .ant-col {\n  padding: 10px 0; }\n\n.FormInfo_f344c .input .ant-space-item:last-child {\n  width: 100%; }\n`,\n        list: [{\n    title: `一个简单表单示例`,\n    description: `展示了一个简单表单示例`,\n    code: `const { default: FormInfo, Form, SubmitButton, ErrorTip, fields } = _FormInfo;\nconst { PureGlobal } = global;\nconst { useModal } = _Modal;\nconst { uniqueId } = lodash;\n\nconst { Input, TextArea, Upload, Avatar, TypeDateRangePicker } = fields;\n\nconst BaseExample = () => {\n  const modal = useModal();\n  return (\n    <Form\n      helperGuideName=\"test-from\"\n      lang={[\n        \"cn\",\n        {\n          name: \"EnUS\",\n          label: \"英文\",\n          options: {\n            //labelTransform: (label) => label + \"(en)\",\n            ignore: [{ name: \"avatar\" }, { name: \"photo\" }],\n            disabled: [{ name: \"file\" }], //fields:[{name:'name'}]\n          },\n        },\n      ]}\n      rules={{\n        REP: (value) => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                result: false,\n                errMsg: \"%s重复\",\n                data: {\n                  user: \"我是一个重复的东西\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n      onSubmit={(data) => {\n        modal({\n          title: \"表单提交数据\",\n          children: <pre>{JSON.stringify(data, null, 2)}</pre>,\n        });\n      }}\n    >\n      <FormInfo\n        title=\"基本信息\"\n        list={[\n          <Avatar name=\"avatar\" label=\"头像\" labelHidden block />,\n          <Avatar\n            name=\"photo\"\n            label=\"证件照\"\n            dropModalSize=\"default\"\n            border={50}\n            width={960}\n            height={540}\n            block\n          />,\n          <ErrorTip\n            name=\"name\"\n            errorRender={({ validateData }) => {\n              console.log(validateData);\n              if (!validateData.REP) {\n                return null;\n              }\n              return <div>哈哈哈{validateData.REP.user}</div>;\n            }}\n          >\n            <Input\n              name=\"name\"\n              label=\"姓名\"\n              rule=\"REQ LEN-3-10 REP\"\n              tips=\"请输入姓名\"\n            />\n          </ErrorTip>,\n          <Input name=\"phone\" label=\"手机\" rule=\"REQ TEL\" />,\n          <Input name=\"email\" label=\"邮箱\" rule=\"EMAIL\" />,\n          <Upload name=\"file\" label=\"文件\" block />,\n          <TypeDateRangePicker\n            name=\"type_date\"\n            label=\"日期时间段\"\n            rule=\"REQ\"\n          />,\n          <TextArea name=\"des\" label=\"备注\" block />,\n          <SubmitButton>提交</SubmitButton>,\n        ]}\n      />\n    </Form>\n  );\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      locale: \"en-US\",\n      enums: {\n        helperGuide: () => [\n          {\n            value: \"test-from-name\",\n            content: \"测试帮助文档\",\n            url: \"/\",\n          },\n        ],\n      },\n      apis: {\n        oss: {\n          loader: () => {\n            return window.PUBLIC_URL + \"/avatar.png\";\n          },\n        },\n        ossUpload: async ({ file }) => {\n          console.log(file);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              const id = uniqueId(\"file-\");\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id,\n                    originalName: id + \"简历.pdf\",\n                  },\n                },\n              });\n            }, 1000);\n          });\n        },\n      },\n    }}\n  >\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_39\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_40\n}]\n},{\n    title: `一个含有多段列表的表单示例`,\n    description: `展示了一个含有多段列表的表单示例，列表的最大长度为5，在添加5段之后添加按钮自动隐藏`,\n    code: `const {\n  default: FormInfo,\n  Form,\n  List,\n  AdvancedSelect,\n  TableList,\n  Input,\n  TextArea,\n  SubmitButton,\n  FormApiButton,\n} = _FormInfo;\nconst { PureGlobal } = global;\nconst { useModal } = _Modal;\nconst { Space } = antd;\n\nconst BaseExample = () => {\n  const modal = useModal();\n  return (\n    <Form\n      onSubmit={(data) => {\n        modal({\n          title: \"表单提交数据\",\n          children: <pre>{JSON.stringify(data, null, 2)}</pre>,\n        });\n      }}\n    >\n      <Space direction=\"vertical\" size={16}>\n        <FormInfo\n          title=\"基本信息\"\n          list={[\n            <Input name=\"name\" label=\"基本名称\" rule=\"REQ\" block />,\n            <TextArea name=\"des\" label=\"基本描述\" block />,\n          ]}\n        />\n        <List\n          name=\"list\"\n          title=\"列表\"\n          itemTitle={({ index }) => \\`经历\\${index + 1}\\`}\n          maxLength={5}\n          list={[\n            <Input name=\"name\" label=\"名称\" rule=\"REQ\" />,\n            <Input name=\"title\" label=\"标题\" rule=\"REQ\" />,\n            <TextArea name=\"des\" label=\"描述\" block rule=\"REQ\" />,\n          ]}\n        />\n        <TableList\n          name=\"tableList\"\n          title=\"表格列表\"\n          maxLength={5}\n          minLength={1}\n          list={[\n            <Input name=\"name\" label=\"名称\" rule=\"REQ\" value=\"xxxxx\" />,\n            <Input name=\"title\" label=\"标题\" rule=\"REQ\" />,\n            <AdvancedSelect\n              name=\"select\"\n              label=\"选项\"\n              rule=\"REQ\"\n              value={[1]}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"第一项\",\n                        value: 1,\n                      },\n                      {\n                        label: \"第二项\",\n                        value: 2,\n                        disabled: true,\n                      },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n            />,\n          ]}\n        />\n        <FormInfo\n          list={[\n            <SubmitButton>提交</SubmitButton>,\n            <FormApiButton\n              onClick={({ openApi }) => {\n                openApi.setFields(\n                  [\n                    {\n                      groupName: \"tableList\",\n                      name: \"name\",\n                      value: \"\",\n                    },\n                    {\n                      groupName: \"tableList\",\n                      name: \"title\",\n                      value: \"ssssssss\",\n                    },\n                  ],\n                  { runValidate: false }\n                );\n              }}\n            >\n              设置表单值\n            </FormApiButton>,\n          ]}\n        />\n      </Space>\n    </Form>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_39\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_41\n}]\n},{\n    title: `Modal Form弹窗`,\n    description: `展示一个form弹窗`,\n    code: `const { Space, Button } = antd;\nconst { PureGlobal } = global;\nconst {\n  default: FormInfo,\n  List,\n  Input,\n  TextArea,\n  FormModal,\n  useFormModal,\n  CancelButton,\n  FormApiButton,\n  SubmitButton,\n  FormModalButton,\n} = _FormInfo;\nconst { useState } = React;\nconst { default: Fetch } = fetch;\n\nconst BaseExample = () => {\n  const [open, setOpen] = useState(false);\n  const formModal = useFormModal();\n  return (\n    <Space wrap>\n      <FormModal\n        open={open}\n        title=\"表单弹窗\"\n        onClose={() => {\n          setOpen(false);\n        }}\n        formProps={{\n          data: {\n            field1: \"field1field1field1field1\",\n          },\n          onSubmit: async (data) => {\n            console.log(data);\n            await new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n              }, 1000);\n            });\n            setOpen(false);\n          },\n        }}\n      >\n        <FormInfo\n          title=\"基本信息\"\n          list={[\n            <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n            <TextArea name=\"field3\" label=\"字段3\" />,\n          ]}\n        />\n        <List\n          title=\"列表\"\n          name=\"list\"\n          maxLength={3}\n          list={[\n            <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n            <TextArea name=\"field3\" label=\"字段3\" />,\n          ]}\n        />\n      </FormModal>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        组件调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            formProps: ({ data }) => {\n              return {\n                data: data,\n                onSubmit: async (data) => {\n                  console.log(data);\n                  await new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                  api.close();\n                },\n              };\n            },\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve({\n                        field1: \"我接口获取的数据\",\n                      });\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks加载form数据调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            footerButtons: [\n              { ButtonComponent: CancelButton, children: \"取消\" },\n              {\n                ButtonComponent: FormApiButton,\n                autoClose: false,\n                onClick: (context) => {\n                  console.log(context);\n                },\n                children: \"FormApiButton\",\n              },\n              {\n                ButtonComponent: SubmitButton,\n                autoClose: false,\n                children: \"提交\",\n              },\n            ],\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        自定义footerButtons\n      </Button>\n      <FormModalButton\n        api={{\n          loader: () => {\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve({\n                  name: \"Lucy\",\n                  desc: \"个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍\",\n                });\n              }, 1000);\n            });\n          },\n        }}\n        modalProps={({ data, close }) => {\n          return {\n            title: \"加载数据的form弹窗\",\n            formProps: {\n              data,\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                close();\n              },\n            },\n            children: (\n              <FormInfo\n                title=\"基本信息\"\n                column={1}\n                list={[\n                  <Input name=\"name\" label=\"姓名\" rule=\"REQ\" />,\n                  <TextArea name=\"desc\" label=\"介绍\" rule=\"REQ\" />,\n                ]}\n              />\n            ),\n          };\n        }}\n      >\n        加载form数据按钮\n      </FormModalButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_41\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_42\n}]\n},{\n    title: `Modal Step Form弹窗`,\n    description: `展示一个step form弹窗`,\n    code: `const { Space, Button } = antd;\nconst { PureGlobal } = global;\nconst {\n  default: FormInfo,\n  List,\n  Input,\n  TextArea,\n  FormModal,\n  FormStepModal,\n  useFormModal,\n  useFormStepModal,\n  CancelButton,\n  FormApiButton,\n  SubmitButton,\n  FormModalButton,\n} = _FormInfo;\nconst { useState } = React;\nconst { default: Fetch } = fetch;\n\nconst BaseExample = () => {\n  const [open, setOpen] = useState(false);\n  const formModal = useFormStepModal();\n  return (\n    <Space wrap>\n      <FormStepModal\n        open={open}\n        title=\"表单弹窗\"\n        onClose={() => {\n          setOpen(false);\n        }}\n        formProps={{\n          data: {\n            field1: \"field1field1field1field1\",\n          },\n          onSubmit: async (data) => {\n            console.log(data);\n            await new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n              }, 1000);\n            });\n            setOpen(false);\n          },\n        }}\n        items={[\n          {\n            name: \"basic\",\n            title: \"基本信息\",\n            children: (\n              <FormInfo\n                title=\"基本信息\"\n                list={[\n                  <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                  <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                  <TextArea name=\"field3\" label=\"字段3\" />,\n                ]}\n              />\n            ),\n          },\n          {\n            name: \"list\",\n            title: \"列表信息\",\n            children: (\n              <List\n                title=\"列表\"\n                name=\"list\"\n                maxLength={3}\n                list={[\n                  <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                  <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                  <TextArea name=\"field3\" label=\"字段3\" />,\n                ]}\n              />\n            ),\n          },\n        ]}\n      ></FormStepModal>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        组件调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            formProps: ({ data }) => {\n              return {\n                data: data,\n                onSubmit: async (data) => {\n                  console.log(data);\n                  await new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                  api.close();\n                },\n              };\n            },\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve({\n                        field1: \"我接口获取的数据\",\n                      });\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks加载form数据调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            footerButtons: [\n              { ButtonComponent: CancelButton, children: \"取消\" },\n              {\n                ButtonComponent: FormApiButton,\n                autoClose: false,\n                onClick: (context) => {\n                  console.log(context);\n                },\n                children: \"FormApiButton\",\n              },\n              {\n                ButtonComponent: SubmitButton,\n                autoClose: false,\n                children: \"提交\",\n              },\n            ],\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        自定义footerButtons\n      </Button>\n      <FormModalButton\n        api={{\n          loader: () => {\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve({\n                  name: \"Lucy\",\n                  desc: \"个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍\",\n                });\n              }, 1000);\n            });\n          },\n        }}\n        modalProps={({ data, close }) => {\n          return {\n            title: \"加载数据的form弹窗\",\n            formProps: {\n              data,\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                close();\n              },\n            },\n            children: (\n              <FormInfo\n                title=\"基本信息\"\n                column={1}\n                list={[\n                  <Input name=\"name\" label=\"姓名\" rule=\"REQ\" />,\n                  <TextArea name=\"desc\" label=\"介绍\" rule=\"REQ\" />,\n                ]}\n              />\n            ),\n          };\n        }}\n      >\n        加载form数据按钮\n      </FormModalButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_41\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_42\n}]\n},{\n    title: `Drawer Form 抽屉弹窗`,\n    description: `展示一个form抽屉弹窗`,\n    code: `const { Space, Button } = antd;\nconst { PureGlobal } = global;\nconst {\n  default: FormInfo,\n  List,\n  Input,\n  TextArea,\n  FormDrawer,\n  useFormDrawer,\n  CancelButton,\n  FormApiButton,\n  SubmitButton,\n  FormDrawerButton,\n} = _FormInfo;\nconst { useState } = React;\nconst { default: Fetch } = fetch;\n\nconst BaseExample = () => {\n  const [open, setOpen] = useState(false);\n  const formDrawer = useFormDrawer();\n  return (\n    <Space wrap>\n      <FormDrawer\n        open={open}\n        title=\"表单弹窗\"\n        onClose={() => {\n          setOpen(false);\n        }}\n        formProps={{\n          data: {\n            field1: \"field1field1field1field1\",\n          },\n          onSubmit: async (data) => {\n            console.log(data);\n            await new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n              }, 1000);\n            });\n            setOpen(false);\n          },\n        }}\n      >\n        <FormInfo\n          title=\"基本信息\"\n          list={[\n            <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n            <TextArea name=\"field3\" label=\"字段3\" />,\n          ]}\n        />\n        <List\n          title=\"列表\"\n          name=\"list\"\n          maxLength={3}\n          list={[\n            <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n            <TextArea name=\"field3\" label=\"字段3\" />,\n          ]}\n        />\n      </FormDrawer>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        组件调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formDrawer({\n            title: \"表单弹窗\",\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formDrawer({\n            title: \"表单弹窗\",\n            formProps: ({ data }) => {\n              return {\n                data: data,\n                onSubmit: async (data) => {\n                  console.log(data);\n                  await new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                  api.close();\n                },\n              };\n            },\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve({\n                        field1: \"我接口获取的数据\",\n                      });\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks加载form数据调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formDrawer({\n            title: \"表单弹窗\",\n            footerButtons: [\n              { ButtonComponent: CancelButton, children: \"取消\" },\n              {\n                ButtonComponent: FormApiButton,\n                autoClose: false,\n                onClick: (context) => {\n                  console.log(context);\n                },\n                children: \"FormApiButton\",\n              },\n              {\n                ButtonComponent: SubmitButton,\n                autoClose: false,\n                children: \"提交\",\n              },\n            ],\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        自定义footerButtons\n      </Button>\n      <FormDrawerButton\n        api={{\n          loader: () => {\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve({\n                  name: \"Lucy\",\n                  desc: \"个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍\",\n                });\n              }, 1000);\n            });\n          },\n        }}\n        modalProps={({ data, close }) => {\n          return {\n            title: \"加载数据的form弹窗\",\n            formProps: {\n              data,\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                close();\n              },\n            },\n            children: (\n              <FormInfo\n                title=\"基本信息\"\n                column={1}\n                list={[\n                  <Input name=\"name\" label=\"姓名\" rule=\"REQ\" />,\n                  <TextArea name=\"desc\" label=\"介绍\" rule=\"REQ\" />,\n                ]}\n              />\n            ),\n          };\n        }}\n      >\n        加载form数据按钮\n      </FormDrawerButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_41\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_42\n}]\n},{\n    title: `选择控件的数据展示框`,\n    description: `展示了一个选择控件的数据展示框，它是其他选择器的子组件一般不独立使用，开放该组件是为了方面自定义新的选择控件，但是请谨慎使用`,\n    code: `const { SelectInnerInput } = _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button, List } = antd;\nconst { default: Content } = _Content;\nconst { useState } = React;\n\nconst ControlledSelectInnerInput = (props) => {\n  const [value, setValue] = useState([1, 2, 3]);\n\n  return <SelectInnerInput {...props} value={value} onChange={setValue} />;\n};\n\nconst useSelectInnerContext = SelectInnerInput.useContext;\n\nconst ResetMapping = () => {\n  const { mapping, appendMapping } = useSelectInnerContext();\n  return (\n    <span>\n      <Button\n        onClick={() => {\n          appendMapping([\n            { label: \"修改的项\", value: 1 },\n            { label: \"新增的项\", value: 4 },\n          ]);\n        }}\n      >\n        点击设置mapping值\n      </Button>\n      <List\n        dataSource={mapping.values()}\n        renderItem={(item) => <div>{item.label}</div>}\n      />\n    </span>\n  );\n};\n\nconst BaseExample = () => {\n  const children = \"选区内容\";\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"非受控状态\",\n          content: (\n            <SelectInnerInput\n              defaultValue={[1, 2, 3]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"受控状态\",\n          content: (\n            <ControlledSelectInnerInput>{children}</ControlledSelectInnerInput>\n          ),\n        },\n        {\n          label: \"mapping值显示\",\n          content: (\n            <SelectInnerInput\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        { label: \"第一项\", value: 1 },\n                        { label: \"第二项\", value: 2 },\n                        {\n                          label: \"第三项\",\n                          value: 3,\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"单项值显示\",\n          content: (\n            <SelectInnerInput\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        { label: \"第一项\", value: 1 },\n                        { label: \"第二项\", value: 2 },\n                        {\n                          label: \"第三项\",\n                          value: 3,\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"多项超出情况\",\n          content: (\n            <SelectInnerInput\n              defaultValue={[1, 2, 3, 4, 5, 6, 7, 8, 9]}\n              api={{\n                loader: () => {\n                  return [\n                    {\n                      label:\n                        \"第一项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 1,\n                    },\n                    {\n                      label:\n                        \"第二项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 2,\n                    },\n                    {\n                      label: \"第三项\",\n                      value: 3,\n                    },\n                    {\n                      label:\n                        \"第四项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 4,\n                    },\n                    {\n                      label:\n                        \"第五项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 5,\n                    },\n                    {\n                      label:\n                        \"第六项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 6,\n                    },\n                    {\n                      label:\n                        \"第七项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 7,\n                    },\n                    { label: \"第八项\", value: 8 },\n                    { label: \"第九项\", value: 9 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"单项超出情况\",\n          content: (\n            <SelectInnerInput\n              defaultValue={1}\n              single\n              api={{\n                loader: () => {\n                  return [\n                    {\n                      label:\n                        \"第一项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 1,\n                    },\n                    {\n                      label:\n                        \"第二项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 2,\n                    },\n                    {\n                      label: \"第三项\",\n                      value: 3,\n                    },\n                    {\n                      label:\n                        \"第四项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 4,\n                    },\n                    {\n                      label:\n                        \"第五项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 5,\n                    },\n                    {\n                      label:\n                        \"第六项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 6,\n                    },\n                    {\n                      label:\n                        \"第七项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 7,\n                    },\n                    { label: \"第八项\", value: 8 },\n                    { label: \"第九项\", value: 9 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"popup多项超出情况\",\n          content: (\n            <SelectInnerInput\n              isPopup\n              defaultValue={[1, 2, 3, 4, 5, 6, 7, 8]}\n              api={{\n                loader: () => {\n                  return [\n                    {\n                      label:\n                        \"第一项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 1,\n                    },\n                    {\n                      label:\n                        \"第二项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 2,\n                    },\n                    {\n                      label: \"第三项\",\n                      value: 3,\n                    },\n                    {\n                      label:\n                        \"第四项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 4,\n                    },\n                    {\n                      label: \"第五项\",\n                      value: 5,\n                    },\n                    {\n                      label: \"第六项\",\n                      value: 6,\n                    },\n                    { label: \"第七项\", value: 7 },\n                    { label: \"第八项\", value: 8 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"popup选区\",\n          content: (\n            <SelectInnerInput\n              single\n              isPopup\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        { label: \"第一项\", value: 1 },\n                        { label: \"第二项\", value: 2 },\n                        {\n                          label: \"第三项\",\n                          value: 3,\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"更新mapping\",\n          content: (\n            <SelectInnerInput\n              single\n              isPopup\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        { label: \"第一项\", value: 1 },\n                        { label: \"第二项\", value: 2 },\n                        {\n                          label: \"第三项\",\n                          value: 3,\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n            >\n              <ResetMapping />\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"隐藏已选标签\",\n          content: (\n            <SelectInnerInput\n              showSelectedTag={false}\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"popup隐藏已选标签\",\n          content: (\n            <SelectInnerInput\n              isPopup\n              showSelectedTag={false}\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"extra\",\n          content: (\n            <SelectInnerInput\n              extra={<Button>添加</Button>}\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"popup的extra\",\n          content: (\n            <SelectInnerInput\n              isPopup\n              extra={({ close }) => <Button onClick={close}>添加</Button>}\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"valueType为all\",\n          content: (\n            <SelectInnerInput\n              isPopup\n              valueType=\"all\"\n              defaultValue={[\n                { label: \"额外的一项\", value: 100 },\n                { label: \"额外的二项\", value: 200 },\n              ]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_43\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_41\n}]\n},{\n    title: `高级选择组件`,\n    description: `展示了高级选择组件的List形态`,\n    code: `const { AdvancedSelect: _AdvancedSelect, SelectInnerInput } = _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button } = antd;\nconst { default: Content } = _Content;\nconst { range, uniqueId } = lodash;\n\nconst AdvancedSelect = _AdvancedSelect.Field;\n\nconst useSelectInnerContext = SelectInnerInput.useContext;\n\nconst AddExtraButton = () => {\n  const { appendItems, fetchApi } = useSelectInnerContext();\n\n  return (\n    <Button\n      type=\"link\"\n      onClick={() => {\n        const id = uniqueId(\"new_item_\");\n        appendItems({\n          pageData: [\n            {\n              label: \"添加的新项目_\" + id,\n              value: id,\n            },\n            ...fetchApi.data.pageData,\n          ],\n          totalCount: fetchApi.data.totalCount,\n        });\n      }}\n    >\n      添加\n    </Button>\n  );\n};\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"多选\",\n          content: (\n            <AdvancedSelect\n              defaultValue={[1]}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1 },\n                      { label: \"第二项\", value: 2, disabled: true },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选\",\n          content: (\n            <AdvancedSelect\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: range(0, 100).map((key) => {\n                      return {\n                        label: \\`第\\${key + 1}项\\`,\n                        value: key + 1,\n                        disabled: key === 2,\n                      };\n                    }),\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"多选modal\",\n          content: (\n            <AdvancedSelect\n              defaultValue={[1]}\n              isPopup={false}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1 },\n                      { label: \"第二项\", value: 2 },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选modal\",\n          content: (\n            <AdvancedSelect\n              single\n              defaultValue={1}\n              isPopup={false}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1 },\n                      { label: \"第二项\", value: 2 },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"描述信息\",\n          content: (\n            <AdvancedSelect\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1, description: \"描述信息\" },\n                      {\n                        label: \"第二项\",\n                        value: 2,\n                        description: \"描述信息\",\n                      },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                        description: \"描述信息\",\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"分页加载数据\",\n          content: (\n            <AdvancedSelect\n              single\n              defaultValue={90}\n              getSearchProps={(text) => {\n                return {\n                  data: { keyword: text },\n                };\n              }}\n              displayItems={[{ label: \"第九十项\", value: 90 }]}\n              extra={<AddExtraButton />}\n              api={{\n                loader: ({ data }) => {\n                  const params = Object.assign(\n                    {\n                      perPage: 20,\n                      currentPage: 1,\n                    },\n                    data\n                  );\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      const start = (params.currentPage - 1) * params.perPage;\n                      resolve({\n                        totalCount: 100,\n                        pageData: range(start, start + 20)\n                          .map((key) => {\n                            return {\n                              label: \\`第\\${key + 1}项\\`,\n                              value: key + 1,\n                            };\n                          })\n                          .filter(({ label }) => {\n                            return params.keyword\n                              ? label.indexOf(params.keyword) > -1\n                              : true;\n                          }),\n                      });\n                    }, 1000);\n                  });\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal分页加载数据\",\n          content: (\n            <AdvancedSelect\n              defaultValue={[90]}\n              isPopup={false}\n              extra={<AddExtraButton />}\n              getSearchProps={(text) => {\n                return {\n                  data: { keyword: text },\n                };\n              }}\n              displayItems={[{ label: \"第九十项\", value: 90 }]}\n              api={{\n                data: {\n                  perPage: 10,\n                },\n                loader: ({ data }) => {\n                  const params = Object.assign(\n                    {\n                      perPage: 20,\n                      currentPage: 1,\n                    },\n                    data\n                  );\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      const start = (params.currentPage - 1) * params.perPage;\n                      resolve({\n                        totalCount: 100,\n                        pageData: range(start, start + params.perPage)\n                          .map((key) => {\n                            return {\n                              label: \\`第\\${key + 1}项\\`,\n                              value: key + 1,\n                            };\n                          })\n                          .filter(({ label }) => {\n                            return params.keyword\n                              ? label.indexOf(params.keyword) > -1\n                              : true;\n                          }),\n                      });\n                    }, 1000);\n                  });\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_43\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_41\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_40\n}]\n},{\n    title: `用户选择组件`,\n    description: `在List的交互逻辑基础上扩展出的不同列表样式`,\n    code: `const { AdvancedSelect: _AdvancedSelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button } = antd;\nconst { default: Content } = _Content;\nconst { range, uniqueId } = lodash;\n\nconst UserSelect = _AdvancedSelect.User.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"多选\",\n          content: (\n            <UserSelect\n              defaultValue={[1]}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        value: 1,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户二\",\n                        value: 2,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户三\",\n                        value: 3,\n                        description: \"我是用户描述\",\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选\",\n          content: (\n            <UserSelect\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: range(0, 30).map((key) => {\n                      return {\n                        label: \\`用户\\${key + 1}\\`,\n                        description: \"我是用户描述\",\n                        value: key + 1,\n                      };\n                    }),\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"多选modal\",\n          content: (\n            <UserSelect\n              defaultValue={[1]}\n              isPopup={false}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        value: 1,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户二\",\n                        value: 2,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户三\",\n                        value: 3,\n                        description: \"我是用户描述\",\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选modal\",\n          content: (\n            <UserSelect\n              single\n              defaultValue={1}\n              isPopup={false}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        value: 1,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户二\",\n                        value: 2,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户三\",\n                        value: 3,\n                        description: \"我是用户描述\",\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_43\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_41\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_40\n}]\n},{\n    title: `表格选择组件`,\n    description: `在List的交互逻辑基础上扩展出的不同列表样式`,\n    code: `const { AdvancedSelect: _AdvancedSelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button } = antd;\nconst { default: Content } = _Content;\nconst { range, uniqueId } = lodash;\n\nconst TableSelect = _AdvancedSelect.Table.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"多选\",\n          content: (\n            <TableSelect\n              defaultValue={[1]}\n              getSearchProps={(text) => {\n                return {\n                  data: { keyword: text },\n                };\n              }}\n              api={{\n                data: {\n                  perPage: 10,\n                },\n                loader: ({ data }) => {\n                  const params = Object.assign(\n                    {\n                      perPage: 20,\n                      currentPage: 1,\n                    },\n                    data\n                  );\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      const start = (params.currentPage - 1) * params.perPage;\n                      resolve({\n                        totalCount: 100,\n                        pageData: range(start, start + params.perPage)\n                          .map((key) => {\n                            return {\n                              label: \\`员工\\${key + 1}\\`,\n                              company: \"北京科技有限公司\",\n                              department: \"技术部\",\n                              value: key + 1,\n                            };\n                          })\n                          .filter(({ label }) => {\n                            return params.keyword\n                              ? label.indexOf(params.keyword) > -1\n                              : true;\n                          }),\n                      });\n                    }, 1000);\n                  });\n                },\n              }}\n              columns={[\n                {\n                  title: \"姓名\",\n                  dataIndex: \"label\",\n                },\n                {\n                  title: \"所属公司\",\n                  dataIndex: \"company\",\n                },\n                {\n                  title: \"所属部门\",\n                  dataIndex: \"department\",\n                },\n              ]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选\",\n          content: (\n            <TableSelect\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        company: \"北京科技有限公司\",\n                        department: \"财务部\",\n                        value: 1,\n                      },\n                      {\n                        label: \"用户二\",\n                        company: \"北京科技有限公司\",\n                        department: \"技术部\",\n                        value: 2,\n                      },\n                      {\n                        label: \"用户三\",\n                        company: \"北京科技有限公司\",\n                        department: \"商务部\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              columns={[\n                {\n                  title: \"姓名\",\n                  dataIndex: \"label\",\n                },\n                {\n                  title: \"所属公司\",\n                  dataIndex: \"company\",\n                },\n                {\n                  title: \"所属部门\",\n                  dataIndex: \"department\",\n                },\n              ]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"多选modal\",\n          content: (\n            <TableSelect\n              defaultValue={[1]}\n              isPopup={false}\n              getSearchProps={(text) => {\n                return {\n                  data: { keyword: text },\n                };\n              }}\n              api={{\n                data: {\n                  perPage: 10,\n                },\n                loader: ({ data }) => {\n                  const params = Object.assign(\n                    {\n                      perPage: 20,\n                      currentPage: 1,\n                    },\n                    data\n                  );\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      const start = (params.currentPage - 1) * params.perPage;\n                      resolve({\n                        totalCount: 100,\n                        pageData: range(start, start + params.perPage)\n                          .map((key) => {\n                            return {\n                              label: \\`员工\\${key + 1}\\`,\n                              company: \"北京科技有限公司\",\n                              department: \"技术部\",\n                              value: key + 1,\n                            };\n                          })\n                          .filter(({ label }) => {\n                            return params.keyword\n                              ? label.indexOf(params.keyword) > -1\n                              : true;\n                          }),\n                      });\n                    }, 1000);\n                  });\n                },\n              }}\n              columns={[\n                {\n                  title: \"姓名\",\n                  dataIndex: \"label\",\n                },\n                {\n                  title: \"所属公司\",\n                  dataIndex: \"company\",\n                },\n                {\n                  title: \"所属部门\",\n                  dataIndex: \"department\",\n                },\n              ]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选modal\",\n          content: (\n            <TableSelect\n              single\n              isPopup={false}\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        company: \"北京科技有限公司\",\n                        department: \"财务部\",\n                        value: 1,\n                      },\n                      {\n                        label: \"用户二\",\n                        company: \"北京科技有限公司\",\n                        department: \"技术部\",\n                        value: 2,\n                      },\n                      {\n                        label: \"用户三\",\n                        company: \"北京科技有限公司\",\n                        department: \"商务部\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              columns={[\n                {\n                  title: \"姓名\",\n                  dataIndex: \"label\",\n                },\n                {\n                  title: \"所属公司\",\n                  dataIndex: \"company\",\n                },\n                {\n                  title: \"所属部门\",\n                  dataIndex: \"department\",\n                },\n              ]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_43\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_41\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_40\n}]\n},{\n    title: `地址选择组件`,\n    description: `展示地址选择组件`,\n    code: `const { AddressSelect: _AddressSelect, AddressInput: _AddressInput } =\n  _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button } = antd;\nconst { default: Content } = _Content;\nconst { range, uniqueId } = lodash;\n\nconst AddressSelect = _AddressSelect.Field;\nconst AddressEnum = _AddressSelect.AddressEnum;\nconst AddressInput = _AddressInput.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"多选\",\n          content: (\n            <AddressSelect\n              maxLength={3}\n              defaultValue={[\"110\"]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选\",\n          content: (\n            <AddressSelect\n              single\n              defaultValue={\"110\"}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal多选\",\n          content: (\n            <AddressSelect\n              maxLength={3}\n              isPopup={false}\n              defaultValue={[\"110\"]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal单选\",\n          content: (\n            <AddressSelect\n              isPopup={false}\n              single\n              defaultValue={\"110\"}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"valueType为all\",\n          content: (\n            <AddressSelect\n              valueType=\"all\"\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"地址显示\",\n          content: <AddressEnum name=\"270070\" />,\n        },\n        {\n          label: \"显示父级\",\n          content: <AddressEnum name=\"270070\" displayParent />,\n        },\n        {\n          label: \"地址输入\",\n          content: (\n            <AddressInput\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal preset={{ locale: \"en-US\" }}>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_43\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_41\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_40\n}]\n},{\n    title: `级联选择组件`,\n    description: `展示级联选择组件`,\n    code: `const { Cascader: _Cascader } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst { range, get } = lodash;\n\nconst Cascader = _Cascader.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"一次性获取数据\",\n          content: (\n            <Cascader\n              onlyAllowLastLevel\n              single\n              api={{\n                loader: async () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        {\n                          id: \"client\",\n                          value: \"client\",\n                          type: \"module\",\n                          name: \"客户\",\n                          label: \"客户\",\n                          children: [\n                            {\n                              id: \"client-list\",\n                              value: \"client-list\",\n                              type: \"feature\",\n                              name: \"客户列表页\",\n                              label: \"客户列表页\",\n                            },\n                            {\n                              id: \"client-detail\",\n                              value: \"client-detail\",\n                              type: \"module\",\n                              name: \"客户详情页\",\n                              label: \"客户详情页\",\n                              children: [\n                                {\n                                  id: \"contract\",\n                                  value: \"contract\",\n                                  type: \"module\",\n                                  name: \"合同信息\",\n                                  label: \"合同信息\",\n                                },\n                              ],\n                            },\n                            {\n                              id: \"client-form\",\n                              value: \"client-form\",\n                              type: \"feature\",\n                              name: \"客户表单\",\n                              label: \"客户表单\",\n                              children: [\n                                {\n                                  id: \"taxpayerIdNumber\",\n                                  value: \"taxpayerIdNumber\",\n                                  type: \"feature\",\n                                  name: \"税号\",\n                                  label: \"税号\",\n                                },\n                              ],\n                            },\n                          ],\n                        },\n                        {\n                          id: \"position\",\n                          value: \"position\",\n                          type: \"module\",\n                          name: \"职位\",\n                          label: \"职位\",\n                          children: [\n                            {\n                              id: \"position-list\",\n                              value: \"position-list\",\n                              type: \"feature\",\n                              name: \"职位列表页\",\n                              label: \"职位列表页\",\n                            },\n                            {\n                              id: \"position-detail\",\n                              value: \"position-detail\",\n                              type: \"module\",\n                              name: \"职位详情页\",\n                              label: \"职位详情页\",\n                            },\n                            {\n                              id: \"position-form\",\n                              value: \"position-form\",\n                              type: \"feature\",\n                              name: \"职位表单\",\n                              label: \"职位表单\",\n                              children: [\n                                {\n                                  id: \"industry\",\n                                  value: \"industry\",\n                                  type: \"feature\",\n                                  name: \"行业\",\n                                  label: \"行业\",\n                                },\n                              ],\n                            },\n                          ],\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"分层加载数据\",\n          content: (\n            <Cascader\n              openLoadData\n              onSearch={async (searchText) => {\n                return range(0, 20).map((key) => {\n                  const parentId = \"2\";\n                  return {\n                    id: \\`\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${key + 1}\\`,\n                    label: \\`节点-\\${searchText}-\\${\n                      parentId ? \\`\\${parentId}-\\` : \"\"\n                    }\\${key + 1}\\`,\n                    parentId,\n                  };\n                });\n              }}\n              api={{\n                loader: async ({ data }) => {\n                  const parentId = get(data, \"id\", \"\");\n                  const level = parentId.split(\"-\").length;\n                  console.log(\"loadData\", parentId, level);\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve(\n                        range(0, 20).map((key) => {\n                          return Object.assign(\n                            {\n                              id: \\`\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${key + 1}\\`,\n                              label: \\`节点-\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${\n                                key + 1\n                              }\\`,\n                              parentId,\n                            },\n                            level >= 3 ? { children: null } : {}\n                          );\n                        })\n                      );\n                    }, 1000);\n                  });\n                },\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal分层加载数据\",\n          content: (\n            <Cascader\n              openLoadData\n              isPopup={false}\n              api={{\n                loader: async ({ data }) => {\n                  const parentId = get(data, \"id\", \"\");\n                  const level = parentId.split(\"-\").length;\n                  console.log(\"loadData\", parentId, level);\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve(\n                        range(0, 20).map((key) => {\n                          return Object.assign(\n                            {\n                              id: \\`\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${key + 1}\\`,\n                              label: \\`节点-\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${\n                                key + 1\n                              }\\`,\n                              parentId,\n                            },\n                            level >= 3 ? { children: null } : {}\n                          );\n                        })\n                      );\n                    }, 1000);\n                  });\n                },\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_43\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_40\n}]\n},{\n    title: `职能选择`,\n    description: `展示行业职能选择`,\n    code: `const { FunctionSelect: _FunctionSelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst { range, get } = lodash;\n\nconst FunctionSelect = _FunctionSelect.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"职能选择\",\n          content: (\n            <FunctionSelect\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal职能选择\",\n          content: (\n            <FunctionSelect\n              isPopup={false}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"职能选择无搜索\",\n          content: (\n            <FunctionSelect\n              search={null}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"职能枚举显示\",\n          content: <FunctionSelect.Enum name=\"001\" />,\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal preset={{ locale: \"en-US\" }}>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_43\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_40\n}]\n},{\n    title: `行业选择`,\n    description: `展示行业选择组件`,\n    code: `const { IndustrySelect: _IndustrySelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst { range, get } = lodash;\n\nconst IndustrySelect = _IndustrySelect.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"行业选择\",\n          content: (\n            <IndustrySelect\n              defaultValue={[\"001\"]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal行业选择\",\n          content: (\n            <IndustrySelect\n              isPopup={false}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"职能枚举显示\",\n          content: <IndustrySelect.Enum name=\"004\" />,\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal preset={{ locale: \"en-US\" }}>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_43\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_40\n}]\n},{\n    title: `金额输入`,\n    description: `展示金额输入组件`,\n    code: `const { MoneyInput: _MoneyInput } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst MoneyInput = _MoneyInput.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"金额输入\",\n          content: <MoneyInput />,\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_43\n}]\n},{\n    title: `电话号码输入`,\n    description: `展示电话号码输入组件`,\n    code: `const { PhoneNumber: _PhoneNumber } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst PhoneNumber = _PhoneNumber.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"电话输入\",\n          content: (\n            <PhoneNumber\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_43\n}]\n},{\n    title: `薪资组件`,\n    description: `展示填写薪资范围输入组件`,\n    code: `const { SalaryInput, Form } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst SalaryInputField = SalaryInput.Field;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <Content\n        col={1}\n        list={[\n          {\n            label: \"薪资范围\",\n            content: (\n              <SalaryInputField\n                onChange={(value) => {\n                  console.log(value);\n                }}\n              />\n            ),\n          },\n        ]}\n      />\n      <Form\n        rules={{\n          SALARYRANGE: ({ min, max, type }) => {\n            if (type !== 1) {\n              if (!min || !max) {\n                return {\n                  result: false,\n                  errMsg: \\`\\${!min ? \"最低薪资\" : \"最高薪资\"}不能为空\\`,\n                };\n              }\n              if (min > max) {\n                return {\n                  result: false,\n                  errMsg: \"最高薪资应大于最低薪资\",\n                };\n              }\n            }\n            return {\n              result: true,\n              errMsg: \"\",\n            };\n          },\n        }}\n        data={{ salaryRange: { type: 5, month: 12 } }}\n      >\n        <SalaryInput\n          name=\"salaryRange\"\n          label=\"薪资范围\"\n          rule=\"REQ SALARYRANGE\"\n          remindUnit\n        />\n      </Form>\n    </div>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_43\n}]\n},{\n    title: `可编辑的表格表单`,\n    description: `可编辑的表格表单`,\n    code: `const { TableInput, Form, Input, SubmitButton } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <Form\n        data={{\n          tableInput: {\n            1: { otherCode: \"111\" },\n            2: { otherCode: \"222\" },\n          },\n        }}\n        onSubmit={(formData) => {\n          console.log(formData);\n        }}\n      >\n        <TableInput\n          controllerOpen={false}\n          name=\"tableInput\"\n          label=\"表格表单\"\n          columns={[\n            {\n              title: \"系统字段\",\n              dataIndex: \"systemCode\",\n              key: \"systemCode\",\n              width: 200,\n            },\n            {\n              title: \"对应的字段\",\n              dataIndex: \"otherCode\",\n              key: \"otherCode\",\n              editable: (text, record, index) => index !== 0,\n              field: {\n                type: Input,\n                rule: \"REQ\",\n                getValue: (e) => e.target.value,\n              },\n            },\n          ]}\n          api={{\n            loader: () => {\n              return {\n                pageData: [\n                  {\n                    id: 1,\n                    systemCode: \"流水号\",\n                  },\n                  {\n                    id: 2,\n                    systemCode: \"流水号2\",\n                  },\n                ],\n              };\n            },\n          }}\n          onChange={(value) => {\n            console.log(value);\n          }}\n        />\n        <SubmitButton>提交</SubmitButton>\n      </Form>\n    </div>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_43\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_41\n}]\n},{\n    title: `可扩展的AdvanceSelect`,\n    description: `AdvanceSelect支持左右布局`,\n    code: `const { AdvancedSelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Icon } = icon;\nconst { useState } = React;\nconst { range, merge, get } = _lodash;\nconst dayjs = _dayjs;\nconst { Col } = _antd;\n\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax: () => {\n          return Promise.resolve({ data: { code: 0, data: [] } });\n        },\n      }}\n    >\n      <AdvancedSelect.Field\n        getSearchProps={(text) => {\n          return {\n            data: { keyword: text },\n          };\n        }}\n        displayItems={[{ label: \"第九十项\", value: 90 }]}\n        api={{\n          loader: ({ data }) => {\n            const params = Object.assign(\n              {\n                perPage: 20,\n                currentPage: 1,\n              },\n              data\n            );\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                const start = (params.currentPage - 1) * params.perPage;\n                resolve({\n                  totalCount: 100,\n                  pageData: range(start, start + 20)\n                    .map((key) => {\n                      return {\n                        label: \\`第\\${key + 1}项\\`,\n                        value: key + 1,\n                      };\n                    })\n                    .filter(({ label }) => {\n                      return params.keyword\n                        ? label.indexOf(params.keyword) > -1\n                        : true;\n                    }),\n                });\n              }, 1000);\n            });\n          },\n        }}\n        onChange={(value) => {\n          console.log(value);\n        }}\n        single\n        isPopup={false}\n        label={\"面试官\"}\n        placeholder={\"选择面试官\"}\n        modalSize={\"large\"}\n        wrapClassName={\"calendar-modal\"}\n        selectIcon={\n          <div>\n            <Icon type={\"icon-gouxuan\"} />\n          </div>\n        }\n        leftSpan={6}\n        right={() => (\n          <Col flex={1}>\n            <div>我是header</div>\n            <div>我是body</div>\n          </Col>\n        )}\n        leftBottom={() => <div>我是leftBottom</div>}\n      />\n    </PureGlobal>\n  );\n};\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_37\n},{\n    name: \"icon\",\n    packageName: \"@components/Icon\",\n    component: component_44\n},{\n    name: \"_antd\",\n    packageName: \"antd\",\n    component: component_41\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_38\n},{\n    name: \"_lodash\",\n    packageName: \"lodash\",\n    component: component_40\n},{\n    name: \"_dayjs\",\n    packageName: \"dayjs\",\n    component: component_45\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_46 from '@components/FullCalendar';\nimport * as component_47 from 'antd';\nimport * as component_48 from '@kne/remote-loader';\nimport * as component_49 from 'lodash';\nimport * as component_50 from 'dayjs';\nconst readmeConfig = {\n    name: `FullCalendar`,\n    summary: `<p>日程组件</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `FullCalendar_850b7`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: FullCalendar, transformEvents } = _FullCalendar;\nconst { createWithRemoteLoader } = _remoteLoader;\nconst { useState } = React;\nconst { cloneDeep, merge, get } = _lodash;\nconst dayjs = _dayjs;\n\nconst defaultEvents = [\n  {\n    id: 1,\n    title: \"我已预约\",\n    start: \"2023-08-22 13:23\",\n    end: \"2023-08-23 14:23\",\n    bookable: 0,\n  },\n  {\n    id: 2,\n    title: \"zhangjian\",\n    bookable: 0,\n    start: \"2023-08-23 13:23\",\n    end: \"2023-08-23 16:23\",\n  },\n  {\n    id: 3,\n    title: \"sssssadsf\",\n    start: \"2023-08-23 12:23\",\n    end: \"2023-08-23 14:23\",\n  },\n  {\n    id: 4,\n    title: \"我已预约\",\n    start: \"2023-08-23 12:23\",\n    end: \"2023-08-23 14:23\",\n  },\n  {\n    id: 5,\n    title: \"我已预约\",\n    start: \"2023-08-22 12:23\",\n    end: \"2023-08-23 14:23\",\n  },\n];\n\nconst Content = ({ remoteModules }) => {\n  const [events, setEvents] = useState(defaultEvents);\n  const [_, useFormModal] = remoteModules;\n  const formModal = useFormModal();\n\n  const onSuccess = ({ start, end, id }) => {\n    const obj = {\n      title: \"已预约\",\n      start,\n      end,\n      id: id ? id : null,\n    };\n    setEvents((events) => {\n      const _events = cloneDeep(events);\n      const index = _events.findIndex((item) => item.id === id);\n\n      if (index === -1) {\n        _events.push(obj);\n      } else {\n        _events.splice(index, 1, obj);\n      }\n\n      return _events;\n    });\n  };\n\n  const deleteDate = (id) => {\n    setEvents((events) => {\n      const _events = cloneDeep(events);\n      const index = _events.findIndex((item) => item.id === id);\n\n      _events.splice(index, 1);\n\n      return _events;\n    });\n  };\n\n  return (\n    <FullCalendar\n      eventSources={[transformEvents(events)]}\n      // events={(eventInfo = {}, successCallback) => {\n      //   let newData = {};\n      //   if (eventInfo.start && eventInfo.end) {\n      //     newData = defaultEvents;\n      //   }\n      //\n      //   return successCallback(newData);\n      // }}\n      dateClick={(eventInfo) => {\n        formModal({\n          title: \"添加\",\n          children: <div>11111</div>,\n        });\n      }}\n      eventClick={(eventInfo) => {\n        const currentData = get(eventInfo, \"event._def.extendedProps.main\");\n        console.log(1111, currentData);\n\n        formModal({\n          title: \"编辑\",\n          children: <div>11111</div>,\n        });\n      }}\n    />\n  );\n};\n\nconst BaseExample = createWithRemoteLoader({\n  modules: [\n    \"components-core:Global@PureGlobal\",\n    \"components-core:FormInfo@useFormModal\",\n  ],\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n\n  return (\n    <PureGlobal>\n      <Content remoteModules={remoteModules} />\n    </PureGlobal>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FullCalendar\",\n    packageName: \"@components/FullCalendar\",\n    component: component_46\n},{\n    name: \"_antd\",\n    packageName: \"antd\",\n    component: component_47\n},{\n    name: \"_remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_48\n},{\n    name: \"_lodash\",\n    packageName: \"lodash\",\n    component: component_49\n},{\n    name: \"_dayjs\",\n    packageName: \"dayjs\",\n    component: component_50\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_51 from '@components/Global';\nimport * as component_52 from 'antd';\nimport * as component_53 from '@components/Icon';\nconst readmeConfig = {\n    name: `Global`,\n    summary: `<h3>何时使用</h3>\n<p>在使用components-core的任何组件的业务系统，需要将该组件放置于最外层，并且按照要求正确设置preset。</p>\n<p>以下是components-core组件系统中需要设置的preset值，及使用这些值的组件</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>类型</th>\n<th>使用组件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>permissions</td>\n<td>配置功能权限列表，Permissions根据该列表里面是否存在某权限名称判断用户是否具有该功能权限，来控制对应操作行为</td>\n<td>array</td>\n<td>Permissions</td>\n</tr>\n<tr>\n<td>ajax</td>\n<td>用于发送ajax请求的方法，一般情况下其应该是一个axios对象</td>\n<td>object</td>\n<td>Image</td>\n</tr>\n<tr>\n<td>apis</td>\n<td>用于和后端进行一些交互行为的接口集合</td>\n<td>object</td>\n<td>Image</td>\n</tr>\n<tr>\n<td>apis.oss</td>\n<td>用于通过一个ossId向后端oss服务获取一个可以访问到指定文件的url</td>\n<td>object</td>\n<td>Image</td>\n</tr>\n<tr>\n<td>apis.ossUpload</td>\n<td>用于向oss服务上传一个文件</td>\n<td>object</td>\n<td>FormInfo.Upload,FormInfo.Avatar</td>\n</tr>\n<tr>\n<td>features</td>\n<td>用于配置系统的特性参数</td>\n<td>object</td>\n<td>Features</td>\n</tr>\n<tr>\n<td>features.profile</td>\n<td>系统的特性列表参考组件Features</td>\n<td>object</td>\n<td>Features</td>\n</tr>\n<tr>\n<td>features.debug</td>\n<td>特性的调试模式，可以在控制台打印Features的id和状态</td>\n<td>boolean</td>\n<td>Features</td>\n</tr>\n<tr>\n<td>enums</td>\n<td>公共枚举值，详情参看Enum组件</td>\n<td>object</td>\n<td>Enum</td>\n</tr>\n<tr>\n<td>enums.helperGuide</td>\n<td>帮助文档枚举配置</td>\n<td>function</td>\n<td>HelperGuide</td>\n</tr>\n<tr>\n<td>formInfo</td>\n<td>表单配置</td>\n<td>object</td>\n<td>FormInfo.formModule</td>\n</tr>\n<tr>\n<td>formInfo.rules</td>\n<td>表单规则配置</td>\n<td>object</td>\n<td>FormInfo.formModule</td>\n</tr>\n</tbody>\n</table>\n<p>全局context管理设置及默认样式</p>\n<ul>\n<li>请将全局覆盖性的样式放在此组件中</li>\n<li>请将字体文件的引用放在此组件中</li>\n<li>请将antd的覆盖性样式放在此组件中</li>\n<li>该组件需要放置在应用根位置</li>\n</ul>\n<p>更新字体文件:</p>\n<ul>\n<li>将iconfont上下载的字体包解压后放在public文件夹下面</li>\n<li>更新src/common/params.js 中的变量 iconfontBase</li>\n<li>修改后构建该项目发布到对应环境</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>preset</td>\n<td>全局预设参数，可以通过usePreset获取，由业务系统设置</td>\n<td>object</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>themeToken</td>\n<td>设置主题，参看antd的themeToken，一般只需要设置{colorPrimary}</td>\n<td>object</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>init</td>\n<td>初始化方法，在系统首次加载时执行，可以返回Promise。用来放置系统显示之前的异步操作</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>PureGlobal</h3>\n<p>api同Global，但是少了页面错误捕获和className:container-body带来的默认最小宽度等样式设置，主要用在组件库的演示环境和弹窗中</p>\n<h3>usePreset</h3>\n<p>获取预设的preset，已经确定为系统需要使用的key值:permissions,apis,formOptions,modalOptions</p>\n<h3>useGlobalContext</h3>\n<p>获取和设置全局状态，该状态保存在Global组件一级，不会随着内部组件本身的销毁而销毁。\n主要给组件内部使用，业务应该避免使用该api设置新的global变量。业务如果有需要应当自行在顶级组件中设置context。</p>\n<h4>params:useGlobalContext(globalKey)</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>globalKey</td>\n<td>全局参数的key，当存在globalKey时，默认获取和设置都是global[key]，当不存在globalKey获取和设置的都是global，除非存在多个获取和设置global的key-value，否则不推荐直接使用不存在globalKey的情况</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>return:{global,setGlobal}</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>global</td>\n<td>当前的global值</td>\n<td>any</td>\n</tr>\n<tr>\n<td>setGlobal</td>\n<td>设置当前的global值</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Global_4cc66`,\n        style: `.Global_4cc66 .label {\n  font-weight: bold; }\n`,\n        list: [{\n    title: `基本示例`,\n    description: `展示了文字大小颜色行高的设置`,\n    code: `const { PureGlobal } = _Global;\nconst { Space, Divider } = antd;\nconst BaseExample = () => {\n    return (\n        <PureGlobal>\n            <Space direction=\"vertical\">\n                <div className=\"label\">文字大小:</div>\n                <div style={{ fontSize: 'var(--font-size-large)' }}>大号文字</div>\n                <div>默认大小文字</div>\n                <div style={{ fontSize: 'var(--font-size-small)' }}>小号文字</div>\n                <Divider />\n                <div className=\"label\">文字颜色:</div>\n                <div style={{ color: 'var(--font-color)' }}>默认颜色</div>\n                <div style={{ color: 'var(--font-color-grey)' }}>灰色</div>\n                <div style={{ color: 'var(--font-color-grey-1)' }}>灰色1</div>\n                <div style={{ color: 'var(--font-color-grey-2)' }}>灰色2</div>\n                <Divider />\n                <div className=\"label\">行高:</div>\n                <div style={{ lineHeight: 'var(--line-height-large)' }}>\n                    宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高\n                </div>\n                <div>\n                    默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高\n                </div>\n                <div style={{ lineHeight: 'var(--line-height-small)' }}>\n                    紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高\n                </div>\n            </Space>\n        </PureGlobal>\n    );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_51\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_52\n}]\n},{\n    title: `警告提示`,\n    description: `展示了警告提示的覆盖样式`,\n    code: `const { PureGlobal } = _Global;\nconst { Alert, Space } = antd;\n\nconst BasicExample = () => {\n  return (\n      <PureGlobal>\n          <Space direction=\"vertical\">\n              <Alert message=\"提示提示提示提示提示提示提示提示提示\" type=\"success\" showIcon />\n              <Alert message=\"提示提示提示提示提示提示提示提示提示\" type=\"info\" showIcon />\n              <Alert message=\"提示提示提示提示提示提示提示提示提示\" type=\"warning\" showIcon />\n              <Alert message=\"提示提示提示提示提示提示提示提示提示\" type=\"error\" showIcon />\n\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"success\" showIcon />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"info\" showIcon />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"warning\" showIcon />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"error\" showIcon />\n\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"success\" showIcon closable />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"info\" showIcon closable />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"warning\" showIcon closable />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"error\" showIcon closable />\n          </Space>\n      </PureGlobal>\n  );\n};\n\nrender(<BasicExample />);\n\n`,\n    scope: [{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_51\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_52\n}]\n},{\n    title: `按钮`,\n    description: `展示了按钮的覆盖样式`,\n    code: `const { PureGlobal } = _Global;\nconst { Button, Typography, Space } = antd;\nconst { default: Icon } = icon;\n\nconst BaseExample = () => {\n  return (\n    <PureGlobal>\n      <Space direction=\"vertical\">\n        <Space>\n          <Button size=\"large\">大按钮</Button>\n          <Button>默认按钮</Button>\n          <Button size=\"small\">小按钮</Button>\n        </Space>\n        <Space>\n          <Button type=\"primary\">按钮</Button>\n          <Button type=\"link\">按钮</Button>\n          <Button type=\"text\">按钮</Button>\n        </Space>\n        <Space>\n          <Button danger>危险按钮</Button>\n          <Button type=\"primary\" danger>\n            危险按钮\n          </Button>\n          <Button type=\"link\" danger>\n            危险按钮\n          </Button>\n          <Button type=\"text\" danger>\n            危险按钮\n          </Button>\n        </Space>\n        <Space>\n          <Button disabled>禁用按钮</Button>\n          <Button type=\"primary\" danger disabled>\n            禁用危险按钮\n          </Button>\n          <Button type=\"link\" disabled>\n            禁用Link按钮\n          </Button>\n          <Button type=\"text\" disabled>\n            禁用Text按钮\n          </Button>\n        </Space>\n        <Space>\n          <Button type=\"text\" icon={<Icon type=\"icon-tianjia\" />}>\n            图标按钮\n          </Button>\n          <Button type=\"text\">\n            图标按钮右\n            <Icon type=\"icon-arrow-thin-down\" />\n          </Button>\n        </Space>\n        <Space>\n          <Button type=\"primary\" icon={<Icon type=\"icon-tianjia\" />} />\n          <Button icon={<Icon type=\"icon-tianjia\" />} />\n          <Button danger icon={<Icon type=\"icon-tianjia\" />} />\n          <Button type=\"link\" icon={<Icon type=\"icon-tianjia\" />} />\n          <Button type=\"text\" icon={<Icon type=\"icon-tianjia\" />} />\n        </Space>\n        <Space>\n          <Button type=\"primary\" disabled icon={<Icon type=\"icon-tianjia\" />} />\n          <Button disabled icon={<Icon type=\"icon-tianjia\" />} />\n          <Button disabled danger icon={<Icon type=\"icon-tianjia\" />} />\n          <Button disabled type=\"link\" icon={<Icon type=\"icon-tianjia\" />} />\n          <Button disabled type=\"text\" icon={<Icon type=\"icon-tianjia\" />} />\n        </Space>\n        <Space>\n          <Typography.Link>Link文字</Typography.Link>\n          <Typography.Text className=\"ant-btn\">文字</Typography.Text>\n          <Typography.Link>\n            <Icon type=\"icon-tianjia\" />\n            Link文字\n          </Typography.Link>\n          <Typography.Text className=\"ant-btn\">\n            <Icon type=\"icon-tianjia\" />\n            文字\n          </Typography.Text>\n          <Typography.Link className=\"ant-btn-dangerous\">\n            Link文字\n          </Typography.Link>\n        </Space>\n        <Space>\n          <Button className=\"btn-no-padding\" type=\"link\" size=\"large\">\n            大按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\">\n            默认按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\" size=\"small\">\n            小按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"text\" size=\"large\">\n            大按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"text\">\n            默认按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"text\" size=\"small\">\n            小按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\" size=\"large\" danger>\n            大按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\" danger>\n            默认按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\" size=\"small\" danger>\n            小按钮\n          </Button>\n        </Space>\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_51\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_52\n},{\n    name: \"icon\",\n    packageName: \"@components/Icon\",\n    component: component_53\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_54 from '@components/HelperGuide';\nimport * as component_55 from '@components/Global';\nconst readmeConfig = {\n    name: `HelperGuide`,\n    summary: `<p>给用户提供帮助文档</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `HelperGuide_4e237`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: HelperGuide } = _HelperGuide;\nconst { PureGlobal } = Global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        enums: {\n          helperGuide: () => [\n            {\n              value: \"test\",\n              content:\n                \"哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈\",\n              url: \"/xxxx\",\n            },\n          ],\n        },\n      }}\n    >\n      <HelperGuide name=\"test\" />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_HelperGuide\",\n    packageName: \"@components/HelperGuide\",\n    component: component_54\n},{\n    name: \"Global\",\n    packageName: \"@components/Global\",\n    component: component_55\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_56 from '@components/Highlight';\nconst readmeConfig = {\n    name: `Highlight`,\n    summary: `<p>用于显示文本高亮</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Highlight_0b905`,\n        style: ``,\n        list: [{\n    title: `基本文字高亮`,\n    description: `展示基本文字高亮`,\n    code: `const { default: Highlight, HighlightProvider } = _Highlight;\nconst BaseExample = () => {\n  return (\n    <HighlightProvider list={[\"哈\", \"呃呃\"]}>\n      <Highlight>哈哈哈西西西西呃呃呃</Highlight>\n    </HighlightProvider>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Highlight\",\n    packageName: \"@components/Highlight\",\n    component: component_56\n}]\n},{\n    title: `xss测试`,\n    description: `xss测试`,\n    code: `const { default: Highlight, HighlightProvider } = _Highlight;\nconst BaseExample = () => {\n  const str = '<img src=\"/aaaa\"/>';\n  return (\n    <HighlightProvider list={[\"哈\", \"呃呃\"]}>\n      <Highlight>哈哈哈西西西西呃呃呃{str}</Highlight>\n    </HighlightProvider>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Highlight\",\n    packageName: \"@components/Highlight\",\n    component: component_56\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_57 from '@components/HistoryStore';\nimport * as component_58 from 'antd';\nconst readmeConfig = {\n    name: `HistoryStore`,\n    summary: `<p>历史记录提示</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `HistoryStore_a963f`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: HistoryStore } = _HistoryStore;\nconst { Input } = antd;\nconst { useState } = React;\nconst BaseExample = () => {\n  const [value, setValue] = useState(\"\");\n  return (\n    <HistoryStore\n      onSelect={(value) => {\n        setValue(value);\n      }}\n    >\n      {({ appendHistory, openHistory }) => (\n        <Input.Search\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n          onFocus={openHistory}\n          onSearch={(value) => {\n            appendHistory({\n              value,\n              label: value,\n            });\n          }}\n        />\n      )}\n    </HistoryStore>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_HistoryStore\",\n    packageName: \"@components/HistoryStore\",\n    component: component_57\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_58\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_59 from '@components/Icon';\nimport * as component_60 from 'antd';\nimport * as component_61 from '@kne/react-fetch';\nimport * as component_62 from '@components/Global';\nimport * as component_63 from 'axios';\nimport * as component_64 from '@kne/remote-loader';\nconst readmeConfig = {\n    name: `Icon`,\n    summary: `<p>可以显示一个图标，图标必须在字体文件中被定义过</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>图标类型，参考示例下的字符串</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>colorful</td>\n<td>是否是彩色图标</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>图标前缀</td>\n<td>string</td>\n<td>\"\"</td>\n</tr>\n<tr>\n<td>size</td>\n<td>图标大小</td>\n<td>number</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Icon_81743`,\n        style: `.Icon_81743 .item {\n  width: 150px;\n  word-break: break-all; }\n`,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Icon } = _Icon;\nconst { Slider, Space } = antd;\nconst { useState } = React;\nconst { createWithFetch } = ReactFetch;\nconst { loadFont } = Global;\nconst { default: axios } = _axios;\nconst { createWithRemoteLoader } = remoteLoader;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: [\"components-iconfont:Font\"],\n})(({ remoteModules }) => {\n  const [Font] = remoteModules;\n  const [value, setValue] = useState(30);\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <div>调整大小:</div>\n        <Slider\n          style={{ width: 100 }}\n          max={60}\n          min={12}\n          value={value}\n          onChange={setValue}\n        />\n        <div>{value}px</div>\n      </Space>\n      {\n        <Font>\n          {({ list }) => {\n            return (\n              <Space wrap align=\"top\" size=\"large\">\n                {list.map(({ name, font_class }) => {\n                  return (\n                    <Space\n                      className=\"item\"\n                      direction=\"vertical\"\n                      align=\"center\"\n                      key={name}\n                    >\n                      <Icon type={font_class} size={value} />\n                      <div>{name}</div>\n                    </Space>\n                  );\n                })}\n              </Space>\n            );\n          }}\n        </Font>\n      }\n    </Space>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Icon\",\n    packageName: \"@components/Icon\",\n    component: component_59\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_60\n},{\n    name: \"ReactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_61\n},{\n    name: \"Global\",\n    packageName: \"@components/Global\",\n    component: component_62\n},{\n    name: \"_axios\",\n    packageName: \"axios\",\n    component: component_63\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_64\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Icon } = _Icon;\nconst { Space, Slider } = antd;\nconst { useState } = React;\nconst { createWithFetch } = ReactFetch;\nconst { createWithRemoteLoader } = remoteLoader;\nconst { default: axios } = _axios;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: [\"components-iconfont:ColorfulFont\"],\n})(({ remoteModules }) => {\n  const [ColorfulFont] = remoteModules;\n  const [value, setValue] = useState(30);\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <div>调整大小:</div>\n        <Slider\n          style={{ width: 100 }}\n          max={60}\n          min={12}\n          value={value}\n          onChange={setValue}\n        />\n        <div>{value}px</div>\n      </Space>\n      <ColorfulFont>\n        {({ list }) => (\n          <Space wrap align=\"top\" size=\"large\">\n            {list.map(({ name }) => {\n              return (\n                <Space\n                  className=\"item\"\n                  direction=\"vertical\"\n                  align=\"center\"\n                  key={name}\n                >\n                  <Icon colorful type={name} size={value} />\n                  <div>{name}</div>\n                </Space>\n              );\n            })}\n          </Space>\n        )}\n      </ColorfulFont>\n    </Space>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Icon\",\n    packageName: \"@components/Icon\",\n    component: component_59\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_60\n},{\n    name: \"ReactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_61\n},{\n    name: \"Global\",\n    packageName: \"@components/Global\",\n    component: component_62\n},{\n    name: \"_axios\",\n    packageName: \"axios\",\n    component: component_63\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_64\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_65 from '@components/Image';\nimport * as component_66 from '@components/Global';\nimport * as component_67 from 'antd';\nconst readmeConfig = {\n    name: `Image`,\n    summary: `<p>用于展示一张图片，和img标签不同的是，可以展示一张普通图片，也可以通过id加载一张oss图片，在加载oss地址和图片数据的时候会显示loading状态</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src</td>\n<td>图片的src地址</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>id</td>\n<td>oss的id</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>加载时显示的组件</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>error</td>\n<td>加载错误时显示的组件</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Image.Avatar</h3>\n<p>用antd的Avatar来显示图片，可以显示默认的男女头像，其他参数参考antd的Avatar组件</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>gender</td>\n<td>性别 F，female，f为女其他为男</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Image_be53a`,\n        style: ``,\n        list: [{\n    title: `通过src加载一个普通图片`,\n    description: `通过src加载一个普通图片`,\n    code: `const {default: Image} = _Image;\nconst BaseExample = () => {\n    return <Image src={window.PUBLIC_URL + \"/logo512.png\"} style={{width: '100px', height: '100px'}}/>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Image\",\n    packageName: \"@components/Image\",\n    component: component_65\n}]\n},{\n    title: `通过id加载一个oss图片`,\n    description: `图片一加载成功，图片二加载中，图片三加载失败`,\n    code: `const {default: Image} = _Image;\nconst {PureGlobal} = global;\nconst {Space} = antd;\nconst BaseExample = () => {\n    return <PureGlobal preset={{\n        apis: {\n            oss: {\n                loader: ({params}) => {\n                    if(params.id ==='logo513.png'){\n                        return new Promise(()=>{\n\n                        });\n                    }\n                    return new Promise((resolve) => {\n                        resolve(window.PUBLIC_URL + '/' + params.id);\n                    });\n\n                }\n            }\n        }\n    }}>\n        <Space>\n            <Image id=\"logo512.png\" style={{width: '100px', height: '100px'}}/>\n            <Image id=\"logo513.png\" style={{width: '100px', height: '100px'}}/>\n            <Image id=\"logo511.png\" style={{width: '100px', height: '100px'}}/>\n        </Space>\n    </PureGlobal>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Image\",\n    packageName: \"@components/Image\",\n    component: component_65\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_66\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_67\n}]\n},{\n    title: `显示一个头像`,\n    description: `显示图片头像和默认头像`,\n    code: `const { default: Image } = _Image;\nconst { Space } = antd;\nconst BaseExample = () => {\n  return (\n    <Space>\n      <Image.Avatar src={window.PUBLIC_URL + \"/avatar.png\"} shape=\"circle\" />\n      <Image.Avatar\n        src={window.PUBLIC_URL + \"/avatar.png\"}\n        shape=\"circle\"\n        size={80}\n      />\n      <Image.Avatar\n        src={window.PUBLIC_URL + \"/avatar.png\"}\n        shape=\"circle\"\n        size={50}\n      />\n\n      <Image.Avatar shape=\"circle\" />\n      <Image.Avatar gender=\"M\" shape=\"circle\" size={80} />\n      <Image.Avatar gender=\"female\" shape=\"circle\" size={50} />\n      <Image.Avatar gender=\"m\" shape=\"circle\" size={50} />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Image\",\n    packageName: \"@components/Image\",\n    component: component_65\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_67\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_68 from '@components/InfoPage';\nimport * as component_69 from '@components/Content';\nimport * as component_70 from '@components/Descriptions';\nimport * as component_71 from 'antd';\nconst readmeConfig = {\n    name: `InfoPage`,\n    summary: `<h3>何时使用</h3>\n<p>一般用在复杂的详情展示页面，InfoPage提供了一个标准的展示信息的格式</p>\n<h3>特点</h3>\n<ul>\n<li>支持Content组件Descriptions组件的组合</li>\n<li>支持Collapse组件组合</li>\n<li>InfoPage.Part 需要放在InfoPage之下，InfoPage.Collapse,Content,Descriptions 需要放在 InfoPage.Part之下</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children</td>\n<td>内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>InfoPage.Part</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>标题</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>extra</td>\n<td>额外内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>InfoPage.Collapse</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children</td>\n<td>内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `InfoPage_fb7ea`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: InfoPage } = _InfoPage;\nconst { default: Content } = _Content;\nconst { default: Descriptions } = _Descriptions;\nconst { Space } = antd;\nconst BaseExample = () => {\n  return (\n    <InfoPage>\n      <InfoPage.Part title=\"退票信息\">\n        <Descriptions\n          dataSource={[\n            [\n              { label: \"客户名称\", content: \"腾讯\" },\n              { label: \"发票抬头\", content: \"腾讯科技公司\" },\n            ],\n            [\n              { label: \"发票类型\", content: \"增值税专用发票\" },\n              { label: \"发票开具日期\", content: \"2022-08-15\" },\n            ],\n            [{ label: \"退票金额\", content: \"22000.00元\" }],\n            [\n              {\n                label: \"发票号\",\n                content: (\n                  <div>\n                    <div>00384895992774</div>\n                    <div>00384895992774</div>\n                    <div>00384895992774</div>\n                    <div>00384895992774</div>\n                  </div>\n                ),\n              },\n            ],\n            [\n              { label: \"是否需要重开发票\", content: \"否\" },\n              { label: \"是否涉及金融变动\", content: \"否\" },\n            ],\n            [\n              { label: \"是否造成实质损失\", content: \"否\" },\n              { label: \"责任归属\", content: \"客户原因\" },\n            ],\n            [\n              {\n                label: \"退票原因\",\n                content: \"退票原因的描述退票原因的描述退票原因的描\",\n              },\n            ],\n            [{ label: \"附件\", content: \"附件名称\" }],\n            [\n              { label: \"操作时间\", content: \"2022-08-01 16:32\" },\n              { label: \"操作人\", content: \"西西歪\" },\n            ],\n          ]}\n        />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"开票信息\">\n        <Space direction=\"vertical\" size={24}>\n          <Descriptions\n            dataSource={[\n              [{ label: \"客户名称\", content: \"腾讯\" }],\n              [{ label: \"合同\", content: \"合同3\" }],\n            ]}\n          />\n          <InfoPage.Part title=\"发票费用信息\">\n            <Space direction=\"vertical\">\n              <InfoPage.Collapse defaultActiveKey={[\"0\", \"1\"]}>\n                <InfoPage.Collapse.Panel key=\"0\" header=\"项目类型1\">\n                  <Content\n                    labelAlign=\"auto\"\n                    col={3}\n                    gutter={[0, 12]}\n                    list={[\n                      { label: \"项目类型\", content: \"面试到岗\" },\n                      { label: \"费用类型\", content: \"服务费\" },\n                      { label: \"费用总金额\", content: \"10,000元\" },\n                      { label: \"本次支付费用比例\", content: \"30%\" },\n                      { label: \"本次支付费用金额\", content: \"3,000元\" },\n                      { label: \"开票候选人\", content: \"李小萌\" },\n                    ]}\n                  />\n                </InfoPage.Collapse.Panel>\n                <InfoPage.Collapse.Panel key=\"1\" header=\"项目类型2\">\n                  <Content\n                    labelAlign=\"auto\"\n                    col={3}\n                    gutter={[0, 12]}\n                    list={[\n                      { label: \"项目类型\", content: \"面试到岗\" },\n                      { label: \"费用类型\", content: \"服务费\" },\n                      { label: \"费用总金额\", content: \"10,000元\" },\n                      { label: \"本次支付费用比例\", content: \"30%\" },\n                      { label: \"本次支付费用金额\", content: \"3,000元\" },\n                      { label: \"开票候选人\", content: \"李小萌\" },\n                    ]}\n                  />\n                </InfoPage.Collapse.Panel>\n              </InfoPage.Collapse>\n              <Descriptions\n                dataSource={[\n                  [\n                    { label: \"客户付税比例\", content: \"1%\" },\n                    { label: \"客户所付税金\", content: \"30元\" },\n                  ],\n                  [\n                    { label: \"服务费\", content: \"2886.29元\" },\n                    { label: \"发票增值税\", content: \"172.38元\" },\n                  ],\n                  [{ label: \"发票金额\", content: \"22000.00元\" }],\n                  [\n                    {\n                      label: \"发票备注\",\n                      content: \"备注的内容备注的内容备注的内容备注的内容\",\n                    },\n                  ],\n                ]}\n              />\n            </Space>\n          </InfoPage.Part>\n          <InfoPage.Part title=\"发票信息\">\n            <Descriptions\n              dataSource={[\n                [{ label: \"付款信息\", content: \"ASB54492789374983798\" }],\n                [{ label: \"发票收件人\", content: \"西西歪\" }],\n                [{ label: \"附件\", content: \"附件名称\" }],\n                [{ label: \"预计入职日期\", content: \"2022-08-15\" }],\n              ]}\n            />\n          </InfoPage.Part>\n          <InfoPage.Part title=\"业绩分配\">\n            <InfoPage.Collapse defaultActiveKey={[\"0\", \"1\"]}>\n              <InfoPage.Collapse.Panel key=\"0\" header=\"项目类型1\">\n                <Content\n                  labelAlign=\"auto\"\n                  col={3}\n                  gutter={[0, 12]}\n                  list={[\n                    { label: \"分配用户\", content: \"王亚男\" },\n                    { label: \"分配比例\", content: \"40%\" },\n                    { label: \"分配金额\", content: \"1,200元\" },\n                  ]}\n                />\n              </InfoPage.Collapse.Panel>\n              <InfoPage.Collapse.Panel key=\"1\" header=\"项目类型2\">\n                <Content\n                  labelAlign=\"auto\"\n                  col={3}\n                  gutter={[0, 12]}\n                  list={[\n                    { label: \"分配用户\", content: \"王亚男\" },\n                    { label: \"分配比例\", content: \"40%\" },\n                    { label: \"分配金额\", content: \"1,200元\" },\n                  ]}\n                />\n              </InfoPage.Collapse.Panel>\n            </InfoPage.Collapse>\n          </InfoPage.Part>\n        </Space>\n      </InfoPage.Part>\n    </InfoPage>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_InfoPage\",\n    packageName: \"@components/InfoPage\",\n    component: component_68\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_69\n},{\n    name: \"_Descriptions\",\n    packageName: \"@components/Descriptions\",\n    component: component_70\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_71\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","const message = {\n    ButtonText: \"confirm\"\n};\n\nexport default message;","const message = {\n    ButtonText: \"确定\"\n};\n\nexport default message;","import * as component_78 from '@components/Intl';\nimport * as component_79 from '@components/Global';\nimport * as component_80 from 'antd';\nimport * as component_81 from '@components/Intl/doc/locale/en-US';\nimport * as component_82 from '@components/Intl/doc/locale/zh-CN';\nconst readmeConfig = {\n    name: `Intl`,\n    summary: `<p>支持系统国际化</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Intl_51734`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {FormattedMessage, IntlProvider} = _Intl;\nconst {PureGlobal} = global;\nconst {Select, Space} = antd;\nconst {default: en} = localeEN;\nconst {default: cn} = localeCN;\nconst {useState} = React;\nconst BaseExample = () => {\n    const [locale, setLocale] = useState('zh-CN');\n    return (<Space>\n        <Select value={locale} onChange={setLocale}\n                options={['zh-CN', 'en-US'].map(key => ({value: key, label: key}))}/>\n        <PureGlobal\n            preset={{\n                locale\n            }}\n        >\n            <IntlProvider locale={locale} importMessages={locale => {\n                return {\n                    default: {\n                        'zh-CN': cn, 'en-US': en\n                    }[locale]\n                };\n            }}>\n                <FormattedMessage defaultMessage=\"按钮\" id=\"ButtonText\">\n                    {text => <div>{text}</div>}\n                </FormattedMessage>\n            </IntlProvider>\n\n        </PureGlobal>\n    </Space>);\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Intl\",\n    packageName: \"@components/Intl\",\n    component: component_78\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_79\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_80\n},{\n    name: \"localeEN\",\n    packageName: \"@components/Intl/doc/locale/en-US\",\n    component: component_81\n},{\n    name: \"localeCN\",\n    packageName: \"@components/Intl/doc/locale/zh-CN\",\n    component: component_82\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_74 from '@components/Layout';\nimport * as component_75 from '@components/Global';\nimport * as component_76 from 'antd';\nimport * as component_77 from '@components/Filter';\nconst readmeConfig = {\n    name: `Layout`,\n    summary: `<h3>何时使用</h3>\n<p>每个登录后的系统页面都应该在Layout的框架之下，它定义了页面的基本框架。根据设计对于页面的不同要求，适当选择不同的组合</p>\n<h3>特点</h3>\n<p>Layout将整个页面划分成以下几个区域</p>\n<ol>\n<li>导航区</li>\n<li>内容区</li>\n<li>左菜单区</li>\n<li>右操作区</li>\n<li>页头区</li>\n<li>页头信息区</li>\n<li>页面标题区</li>\n</ol>\n<p>通过给Page配置不同的参数实现不同区域的显示</p>\n<h3>注意</h3>\n<ul>\n<li>Page的name参数必须要传，用来在页面跳转时确定Page是不是同一个，决定着Page是否走install周期</li>\n<li>Page组件的参数是通过Context保存在Layout中的，这样做的目的是为了让页面跳转时，除页面区以外的区域在前后俩页面差别不大的情况下走更新周期而不是install周期，以此带来更快的渲染速度避免不必要的重复安装和卸载</li>\n<li>请尽量通过Page提供的参数来配置出设计要求的页面，不要自行用css实现，以便于Layout组件能从整体控制页面的基本形式和不同区域的padding和margin，让系统更加统一化标准化</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>navigation</td>\n<td>导航参数参考 Navigation 组件参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>一般放置Page组件</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Page</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>menu</td>\n<td>左菜单区内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>页面标题位置筛选器参数,参考 Filter 组件参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>menuOpen</td>\n<td>左菜单是否默认打开</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>menuWidth</td>\n<td>左菜单宽度</td>\n<td>string</td>\n<td>240px</td>\n</tr>\n<tr>\n<td>menuFixed</td>\n<td>左菜单是否fixed布局</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>menuCloseButton</td>\n<td>控制左菜单显示隐藏的按钮是否显示</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>header</td>\n<td>页头区内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>headerFixed</td>\n<td>页头区是否fixed布局</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>headerInfo</td>\n<td>页头信息区内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>backUrl</td>\n<td>右侧内容区的标题前展示返回按钮，并返回到该url</td>\n<td>参考 useNavigate</td>\n<td>-</td>\n</tr>\n<tr>\n<td>title</td>\n<td>页面标题</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>titleExtra</td>\n<td>页面标题区右侧位置内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>titleLeftExtra</td>\n<td>页面标题区左侧位置内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>noMargin</td>\n<td>页面内容区是否去掉Margin</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>noPadding</td>\n<td>页面内容区是否去掉Padding</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>option</td>\n<td>右操作区内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>optionWidth</td>\n<td>右操作区宽度</td>\n<td>string</td>\n<td>400px</td>\n</tr>\n<tr>\n<td>optionNoPadding</td>\n<td>右操作区是否去掉Padding</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>optionFixed</td>\n<td>右操作区是否fixed布局</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>optionFooter</td>\n<td>右操作区底部内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>openFeatures</td>\n<td>Page是否启用Features，启用时如果配置文件中没有该模块id则判断为模块关闭，会将name作为Features的id进行设置</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3>Affix</h3>\n<p>可以控制其中的内容是否是fixed布局</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>isFixed</td>\n<td>内容是否fixed布局</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>offsetTop</td>\n<td>距离窗口顶部达到指定偏移量后触发</td>\n<td>number</td>\n<td>0</td>\n</tr>\n<tr>\n<td>offsetBottom</td>\n<td>距离窗口底部达到指定偏移量后触发</td>\n<td>number</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>固定状态改变时触发的回调函数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Menu</h3>\n<p>显示一个菜单，最多支持两级，支持第一级展开收起，支持路径匹配自动高亮</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>items</td>\n<td>菜单项</td>\n<td>array[object]</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>items[].label</td>\n<td>菜单项显示内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].key</td>\n<td>菜单项的key要求必须唯一</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].iconType</td>\n<td>菜单项前面的icon类型参考 Icon组件的type参数</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].path</td>\n<td>菜单项的路径</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].onClick</td>\n<td>菜单项点击触发事件，注意：如果菜单项已经传入path参数则该参数不生效</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].children</td>\n<td>菜单项的第二级项列表，参考items参数。注意该组件只支持两级菜单，所以该参数内部的菜单项不再支持children参数</td>\n<td>array[object]</td>\n<td>-</td>\n</tr>\n<tr>\n<td>currentKey</td>\n<td>当前被选中的菜单项的key，如果菜单项又path参数，不需要传递该参数，组件会根据路由自动判断选中项</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>currentKey产生修改时触发函数，注意：如果菜单项已经传入path参数则该参数不生效</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>allowCollapsed</td>\n<td>是否允许一级菜单收起</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>defaultOpenKeys</td>\n<td>初始展开的 SubMenu 菜单项 key 数组</td>\n<td>string[]</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>PermissionsPage</h3>\n<p>加入权限判断的Page，错误类型默认为error，即在该页面没有权限时显示错误</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>permissions</td>\n<td>权限列表参考 Permissions 组件参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Layout_ebd9b`,\n        style: `.Layout_ebd9b .layout-content {\n  color: #fff;\n  background: var(--primary-color-4);\n  height: 100%;\n  text-align: center;\n  line-height: 300px; }\n\n.Layout_ebd9b .with-title-layout-content {\n  height: 100%; }\n\n.Layout_ebd9b .layout-menu {\n  background: #ff9c6e;\n  color: #fff;\n  height: 110vh;\n  text-align: center;\n  line-height: 300px; }\n\n.Layout_ebd9b .header {\n  background: #ff9c6e;\n  height: 100px;\n  padding: 10px;\n  color: #fff; }\n\n.Layout_ebd9b .right-options {\n  background: var(--primary-color-4);\n  height: 110vh;\n  color: #fff; }\n\n.Layout_ebd9b .header-info {\n  padding: 10px;\n  height: 100px;\n  background: var(--primary-color-4);\n  color: #fff; }\n`,\n        list: [{\n    title: `基础上下布局`,\n    description: `展示最基础的上导航栏，下内容的布局`,\n    code: `const { default: Layout, Page } = _Layout;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        enums: {\n          helperGuide: () => [\n            {\n              value: \"base-detail\",\n              content: \"测试帮助文档\",\n              url: \"/\",\n            },\n          ],\n        },\n      }}\n    >\n      <Layout navigation={{ isFixed: false }}>\n        <Page name=\"base\" helperGuideName=\"base-detail\">\n          <div className=\"layout-content\">内容区</div>\n        </Page>\n      </Layout>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Layout\",\n    packageName: \"@components/Layout\",\n    component: component_74\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_75\n}]\n},{\n    title: `带有左侧菜单布局`,\n    description: `展示带有左侧菜单布局`,\n    code: `const { default: Layout, Page, Menu } = layout;\nconst { Button, Space } = antd;\nconst { PureGlobal } = global;\n\nconst Example = () => {\n  return (\n    <Layout navigation={{ isFixed: false }}>\n      <Page\n        name=\"left-menu\"\n        menuFixed={false}\n        menu={\n          <Menu\n            items={[\n              {\n                label: \"父级标题1\",\n                key: \"p-0\",\n                iconType: \"icon-zhanghaodenglu\",\n                children: [\n                  {\n                    label: \"子标题1\",\n                    key: \"s-0\",\n                    path: \"/link1\",\n                  },\n                  {\n                    label: \"子标题2\",\n                    key: \"s-1\",\n                    path: \"/link2\",\n                  },\n                ],\n              },\n              {\n                label: \"父级标题2\",\n                key: \"p-1\",\n                iconType: \"icon-zhanghaodenglu\",\n                children: [\n                  {\n                    label: \"子标题1\",\n                    key: \"s-2\",\n                    path: \"/link3\",\n                  },\n                  {\n                    label: \"子标题2\",\n                    key: \"s-3\",\n                    path: \"/link4\",\n                  },\n                ],\n              },\n              {\n                label: \"父级标题3\",\n                key: \"p-2\",\n                iconType: \"icon-zhanghaodenglu\",\n                path: \"/link5\",\n              },\n            ]}\n          />\n        }\n        titleExtra={\n          <Space>\n            <Button type=\"primary\">新建</Button>\n          </Space>\n        }\n        backUrl={\"/\"}\n        title=\"标题\"\n      >\n        <div className=\"layout-content with-title-layout-content\">内容区</div>\n      </Page>\n    </Layout>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <Example />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_74\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_76\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_75\n}]\n},{\n    title: `左侧固定带Header`,\n    description: `展示带有header的左侧固定菜单布局`,\n    code: `const { default: Layout, Page } = layout;\nconst { Button, Space } = antd;\nconst { PureGlobal } = global;\n\nconst Example = () => {\n  return (\n    <Space className=\"container\" direction=\"vertical\">\n      <Layout navigation={{ isFixed: false }}>\n        <Page\n          name=\"with-header\"\n          helperGuideName=\"base-detail\"\n          menu={<div className=\"layout-menu\">左侧菜单区</div>}\n          titleExtra={\n            <Space>\n              <Button type=\"primary\">新建</Button>\n            </Space>\n          }\n          title=\"标题\"\n          hideCloseSvg={true}\n          headerHeight=\"40px\"\n          menuFixed={false}\n          header={<div className=\"header\">header</div>}\n          headerFixed={false}\n          headerInfo={<div className=\"header-info\">header info区域</div>}\n        >\n          <div>内容区</div>\n        </Page>\n      </Layout>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      enums: {\n        helperGuide: () => [\n          {\n            value: \"base-detail\",\n            content: \"测试帮助文档\",\n            url: \"/\",\n          },\n        ],\n      },\n    }}\n  >\n    <Example />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_74\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_76\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_75\n}]\n},{\n    title: `右侧固定`,\n    description: `展示带有header的右侧固定菜单布局`,\n    code: `const { default: Layout, Page } = layout;\nconst { Button, Space } = antd;\nconst { PureGlobal } = global;\n\nconst Example = () => {\n  return (\n    <Layout navigation={{ isFixed: false }}>\n      <Page\n        name=\"fix-right-menu\"\n        optionFixed={false}\n        option={<div className=\"right-options\">右侧操作区域</div>}\n        optionFooter={\n          <Space>\n            <Button type=\"primary\">新建</Button>\n          </Space>\n        }\n        titleExtra={\n          <Space>\n            <Button type=\"primary\">新建</Button>\n          </Space>\n        }\n        title=\"标题\"\n        header={<div className=\"header\">header</div>}\n        headerFixed={false}\n        menuFixed={false}\n      >\n        <div>内容区</div>\n      </Page>\n    </Layout>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <Example />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_74\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_76\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_75\n}]\n},{\n    title: `带有filter的列表页`,\n    description: `展示带有filter的列表页`,\n    code: `const { default: Layout, Page } = layout;\nconst {\n  InputFilterItem,\n  CityFilterItem,\n  AdvancedSelectFilterItem,\n  UserFilterItem,\n  FunctionSelectFilterItem,\n  IndustrySelectFilterItem,\n  getFilterValue,\n} = filter;\nconst { useState } = React;\nconst { Space, Button } = antd;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  const [filter, setFilter] = useState([]);\n  return (\n    <PureGlobal preset={{}}>\n      <Layout navigation={{ isFixed: false }}>\n        <Page\n          name=\"base\"\n          helperGuideName=\"base-detail\"\n          titleExtra={\n            <Space>\n              <Button type=\"primary\">添加</Button>\n            </Space>\n          }\n          filter={{\n            extraExpand: (\n              <Button type=\"primary\" size=\"small\">\n                订阅筛选项\n              </Button>\n            ),\n            value: filter,\n            onChange: (value) => {\n              setFilter(value);\n              console.log(getFilterValue(value));\n            },\n            list: [\n              [\n                <InputFilterItem label=\"文字\" name=\"text\" />,\n                <CityFilterItem label=\"城市\" name=\"city\" />,\n                <AdvancedSelectFilterItem\n                  label=\"高级选择\"\n                  name=\"select\"\n                  api={{\n                    loader: () => {\n                      return {\n                        pageData: [\n                          { label: \"第一项\", value: 1 },\n                          { label: \"第二项\", value: 2, disabled: true },\n                          {\n                            label: \"第三项\",\n                            value: 3,\n                          },\n                        ],\n                      };\n                    },\n                  }}\n                />,\n                <UserFilterItem\n                  label=\"用户选择\"\n                  name=\"user\"\n                  api={{\n                    loader: () => {\n                      return {\n                        pageData: [\n                          {\n                            label: \"用户一\",\n                            value: 1,\n                            description: \"我是用户描述\",\n                          },\n                          {\n                            label: \"用户二\",\n                            value: 2,\n                            description: \"我是用户描述\",\n                          },\n                          {\n                            label: \"用户三\",\n                            value: 3,\n                            description: \"我是用户描述\",\n                          },\n                        ],\n                      };\n                    },\n                  }}\n                />,\n                <FunctionSelectFilterItem\n                  label=\"职能选择\"\n                  name=\"function\"\n                  onlyAllowLastLevel\n                  single\n                />,\n                <IndustrySelectFilterItem\n                  label=\"行业选择\"\n                  name=\"industry\"\n                  onlyAllowLastLevel\n                />,\n              ],\n              [\n                <UserFilterItem\n                  label=\"职位协助人\"\n                  name=\"position_user\"\n                  api={{\n                    loader: () => {\n                      return {\n                        pageData: [\n                          {\n                            label: \"用户一\",\n                            value: 1,\n                            description: \"我是用户描述\",\n                          },\n                          {\n                            label: \"用户二\",\n                            value: 2,\n                            description: \"我是用户描述\",\n                          },\n                          {\n                            label: \"用户三\",\n                            value: 3,\n                            description: \"我是用户描述\",\n                          },\n                        ],\n                      };\n                    },\n                  }}\n                />,\n              ],\n            ],\n          }}\n        >\n          <div className=\"layout-content\">内容区</div>\n        </Page>\n      </Layout>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_74\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_76\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_75\n},{\n    name: \"filter\",\n    packageName: \"@components/Filter\",\n    component: component_77\n}]\n},{\n    title: `左侧导航菜单`,\n    description: `展示一个左侧导航菜单`,\n    code: `const { Menu } = layout;\nconst { Space } = antd;\nconst { useState } = React;\n\nconst ControlMenu = () => {\n  const [current, setCurrent] = useState();\n  return (\n    <Menu\n      currentKey={current}\n      onChange={setCurrent}\n      items={[\n        {\n          label: \"父级标题1\",\n          key: \"p-0\",\n          iconType: \"icon-zhanghaodenglu\",\n          children: [\n            {\n              label: \"子标题1\",\n              key: \"s-0\",\n            },\n            {\n              label: \"子标题2\",\n              key: \"s-1\",\n            },\n          ],\n        },\n        {\n          label: \"父级标题2\",\n          key: \"p-1\",\n          iconType: \"icon-zhanghaodenglu\",\n          children: [\n            {\n              label: \"子标题1\",\n              key: \"s-2\",\n            },\n            {\n              label: \"子标题2\",\n              key: \"s-3\",\n            },\n          ],\n        },\n        {\n          label: \"父级标题3\",\n          key: \"p-2\",\n          iconType: \"icon-zhanghaodenglu\",\n        },\n      ]}\n    />\n  );\n};\n\nconst Example = () => {\n  return (\n    <Space size={10}>\n      <Menu\n        items={[\n          {\n            label: \"父级标题1\",\n            key: \"p-0\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-0\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-1\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            key: \"p-1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-2\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-3\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            key: \"p-2\",\n            iconType: \"icon-zhanghaodenglu\",\n            path: \"/link5\",\n          },\n        ]}\n      />\n      <Menu\n        items={[\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题1\",\n            key: \"s-0\",\n            path: \"/link1\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题2\",\n            key: \"s-1\",\n            path: \"/link2\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题1\",\n            key: \"s-2\",\n            path: \"/link3\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题2\",\n            key: \"s-3\",\n            path: \"/link4\",\n          },\n        ]}\n      />\n      <Menu\n        allowCollapsed={false}\n        items={[\n          {\n            label: \"父级标题1\",\n            key: \"p-0\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-0\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-1\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            key: \"p-1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-2\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-3\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            key: \"p-2\",\n            iconType: \"icon-zhanghaodenglu\",\n            path: \"/link5\",\n          },\n        ]}\n      />\n      <ControlMenu />\n    </Space>\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_74\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_76\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_72 from '@components/LoadingButton';\nimport * as component_73 from 'antd';\nconst readmeConfig = {\n    name: `LoadingButton`,\n    summary: `<h3>何时使用</h3>\n<p>当点击按钮时，需要显示loading状态，当然你可以使用antd Button的loading属性，但是这样你需要自己声明一个state来控制，LoadingButton组件可以帮你做好这件事情</p>\n<h3>特点</h3>\n<p>通过onClick返回的Promise来控制Button的loading状态</p>\n<p>children除了可以传正常的jsx以外还接受function参数，可以接收到loading状态以便根据loading状态显示不同文案</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onClick</td>\n<td>点击按钮触发函数，可以返回一个Promise，当Promise再pending状态时Button将自动处于loading状态，当Promise返回结果会自动从loading切换回普通状态</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>Button的子元素，可以为jsx或者function，为function时可以接收到loading状态用来切换显示内容</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `LoadingButton_cd4ed`,\n        style: ``,\n        list: [{\n    title: `带有加载状态按钮`,\n    description: `点击按钮切换到加载状态，加载方法完成后自动切换为普通状态`,\n    code: `const { default: LoadingButton } = _LoadingButton;\nconst { Space, message } = antd;\n\nconst clickHandler = () => {\n  message.success(\"点击按钮1s后完成加载\");\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      message.success(\"完成\");\n      resolve();\n    }, 1000);\n  });\n};\nconst BaseExample = () => {\n  return (\n    <Space wrap>\n      <LoadingButton onClick={clickHandler}>按钮</LoadingButton>\n      <LoadingButton onClick={clickHandler}>\n        {(isLoading) => (isLoading ? \"正在加载中...\" : \"切换加载文案\")}\n      </LoadingButton>\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_LoadingButton\",\n    packageName: \"@components/LoadingButton\",\n    component: component_72\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_73\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_83 from '@components/Menu';\nimport * as component_84 from 'antd';\nconst readmeConfig = {\n    name: `Menu`,\n    summary: `<p>支持远程加载数据的菜单</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Menu_b6154`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Menu } = _Menu;\nconst { Space } = antd;\nconst { useState } = React;\n\nconst ControlMenu = () => {\n  const [current, setCurrent] = useState(\"s-0\");\n  return (\n    <Menu\n      currentKey={current}\n      onChange={setCurrent}\n      items={[\n        {\n          label: \"父级标题1\",\n          key: \"p-0\",\n          iconType: \"icon-zhanghaodenglu\",\n          children: [\n            {\n              label: \"子标题1\",\n              key: \"s-0\",\n            },\n            {\n              label: \"子标题2\",\n              key: \"s-1\",\n            },\n          ],\n        },\n        {\n          label: \"父级标题2\",\n          key: \"p-1\",\n          iconType: \"icon-zhanghaodenglu\",\n          children: [\n            {\n              label: \"子标题1\",\n              key: \"s-2\",\n            },\n            {\n              label: \"子标题2\",\n              key: \"s-3\",\n            },\n          ],\n        },\n        {\n          label: \"父级标题3\",\n          key: \"p-2\",\n          iconType: \"icon-zhanghaodenglu\",\n        },\n      ]}\n    />\n  );\n};\nconst BaseExample = () => {\n  return (\n    <Space>\n      <Menu\n        defaultItems={[\n          {\n            label: \"父级标题1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            iconType: \"icon-zhanghaodenglu\",\n            fetchOptions: {\n              loader: () => {\n                return new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve([\n                      {\n                        label: \"子标题1\",\n                        path: \"/link5\",\n                      },\n                      {\n                        label: \"子标题2\",\n                        path: \"/link6\",\n                      },\n                    ]);\n                  }, 1000);\n                });\n              },\n            },\n          },\n        ]}\n      />\n      <Menu\n        items={[\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题1\",\n            key: \"s-0\",\n            path: \"/link1\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题2\",\n            key: \"s-1\",\n            path: \"/link2\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题1\",\n            key: \"s-2\",\n            path: \"/link3\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题2\",\n            key: \"s-3\",\n            path: \"/link4\",\n          },\n        ]}\n      />\n      <Menu\n        allowCollapsed={false}\n        items={[\n          {\n            label: \"父级标题1\",\n            key: \"p-0\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-0\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-1\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            key: \"p-1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-2\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-3\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            key: \"p-2\",\n            iconType: \"icon-zhanghaodenglu\",\n            path: \"/link5\",\n          },\n        ]}\n      />\n      <Menu\n        allowCollapsed={false}\n        defaultItems={[\n          {\n            label: \"父级标题1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            iconType: \"icon-zhanghaodenglu\",\n            fetchOptions: {\n              loader: () => {\n                return new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve([\n                      {\n                        label: \"子标题1\",\n                        path: \"/link5\",\n                      },\n                      {\n                        label: \"子标题2\",\n                        path: \"/link6\",\n                      },\n                    ]);\n                  }, 1000);\n                });\n              },\n            },\n          },\n        ]}\n      />\n      <Menu\n        defaultItems={[\n          {\n            label: \"父级标题1\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link4\",\n              },\n            ],\n          },\n        ]}\n      />\n      <ControlMenu />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Menu\",\n    packageName: \"@components/Menu\",\n    component: component_83\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_84\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_85 from '@components/Modal';\nimport * as component_86 from '@components/Global';\nimport * as component_87 from 'antd';\nimport * as component_88 from '@kne/react-fetch';\nimport * as component_89 from '@components/Content';\nimport * as component_90 from '@components/FormInfo';\nconst readmeConfig = {\n    name: `Modal`,\n    summary: `<h3>何时使用</h3>\n<p>需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以在当前页面正中打开一个浮层，承载相应的操作。</p>\n<h3>特点</h3>\n<p>该组件是antd Modal组件的再封装：</p>\n<ul>\n<li>修改了footer部分的设置逻辑,能更加简单的定义footer区域的功能</li>\n<li>添加了withDecorator可以更加方便的处理Modal外层的显示逻辑</li>\n<li>扩展了用于方法调用的useModal的hooks，可以通过hooks获得一个Modal的调用方法，并且保证其和Modal组件式调用有相同的UI表现和行为</li>\n<li>扩展了ModalButton组件，可以在点击该按钮时执行加载数据，并且Button的状态变为loading，在数据加载完成之后再弹出弹窗</li>\n<li>扩展了TabsModal组件，它是一个Tabs和Modal组合起来的组件，对弹窗title做了特殊处理，更加符合UI交互逻辑</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>footer</td>\n<td>弹窗的footer，当其被显式设置成null且footerButtons没有设置过时弹窗不显示footer。当它类型为function时可以得到close方法和withDecorator设置的props</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>footerButtons</td>\n<td>弹窗footer的按钮区，默认为确认和取消按钮，默认按钮分别响应onConfirm和onCancel方法，如果自定义设置footerButtons则需要自行传入onClick参数，onConfirm和onCancel方法将不生效</td>\n<td>array</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>弹窗关闭时调用，弹窗受控时由该方法将外部open状态修改</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onConfirm</td>\n<td>当footerButtons未自定义设置时点击确认按钮触发执行该方法，当其返回Promise点击后Promise，resolve之前确认按钮显示为loading状态，返回值为false或者Promise的resolve值为false时弹窗不会被关闭，其他情况弹窗默认关闭</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>和onConfirm类似，其为点击取消按钮触发</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>弹窗内容，可以为jsx或者function，为function时可以接收到close和withDecorator设置的props</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>withDecorator</td>\n<td>弹窗修饰器，会接收到弹窗children的render方法，可以在其外部添加修饰内容后执行render方法，给render方法传入的值可以在children,footer,rightOptions类型为function时接收到对应的参数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>rightOptions</td>\n<td>弹窗右侧区域，和children类似可以为jsx或者function类型</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>maskClosable</td>\n<td>点击蒙层是否允许关闭</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数参考antd Modal组件</p>\n<h3>useModal</h3>\n<p>获取一个执行后可以弹出一个Modal组件的方法</p>\n<h4>return:modal</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>modal</td>\n<td>执行后可以弹出一个Modal弹窗，参数同Modal组件参数</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>\n<h3>TabsModal</h3>\n<p>一个Tabs和Modal组合起来的组件，对弹窗title做了特殊处理，更加符合UI交互逻辑</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>items</td>\n<td>同antd Tabs的items参数</td>\n<td>array</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].label</td>\n<td>选项卡头显示文字</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].children</td>\n<td>选项卡头显示内容，和antd Tabs不同的是它可以是一个function和Modal的children类似可以接收items[].withDecorator传入的参数</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].key</td>\n<td>对应activeKey值</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>activeKey</td>\n<td>当前激活 tab 面板的 key</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>withDecorator</td>\n<td>弹窗修饰器和Modal的withDecorator作用一致</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>defaultActiveKey</td>\n<td>初始化选中面板的 key，如果没有设置 activeKey</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>切换面板的回调</td>\n<td>function</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>useTabsModal</h3>\n<p>获取一个执行后可以弹出一个TabsModal组件的方法</p>\n<h4>return:tabsModal</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tabsModal</td>\n<td>执行后可以弹出一个TabsModal弹窗，参数同TabsModal组件参数</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>\n<h3>ModalButton</h3>\n<p>点击以后可以执行获取数据，在数据未返回时按钮展示为loading状态，数据返回后弹出Modal弹窗</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>@kne/react-fetch 所需参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modalProps</td>\n<td>同Modal参数,当它为function时，执行function后返回的值作为modalProps</td>\n<td>object,function({data,fetchApi,close})</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数同antd Button 组件</p>\n<h3>TabsModalButton</h3>\n<p>点击以后可以执行获取数据，在数据未返回时按钮展示为loading状态，数据返回后弹出TabsModal弹窗</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>@kne/react-fetch 所需参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modalProps</td>\n<td>同TabsModal参数,当它为function时，执行function后返回的值作为modalProps</td>\n<td>object,function({data,fetchApi,close})</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数同antd Button 组件</p>`,\n    example: {\n        isFull: false,\n        className: `Modal_c59d6`,\n        style: ``,\n        list: [{\n    title: `普通弹窗`,\n    description: `展示弹窗的基本用法，自定义footer等功能。\n注意:\n1.onConfirm和onCancel只对于默认的footerButtons生效，如果是自定义的footerButtons则不需要传这两个参数，直接定义按钮的onClick即可。\n2.自定义的footerButtons的onClick可以返回一个Promise来延迟关闭弹窗，resolve的值为false不关闭弹窗，其他情况会自动关闭弹窗。在resolve未返回之前按钮会变成loading状态`,\n    code: `const { default: Modal, useModal } = _Modal;\nconst { useState } = React;\nconst { Button, Space, message, Radio } = antd;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  const modal = useModal();\n  const [size, setSize] = useState(\"default\");\n  const [open, setOpen] = useState(false);\n  return (\n    <Space direction=\"vertical\">\n      <Radio.Group\n        value={size}\n        options={[\n          { label: \"small\", value: \"small\" },\n          { label: \"default\", value: \"default\" },\n          {\n            label: \"large\",\n            value: \"large\",\n          },\n        ]}\n        onChange={(e) => {\n          setSize(e.target.value);\n        }}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n      <Space wrap>\n        <Modal\n          title=\"确定延迟关闭弹窗\"\n          size={size}\n          open={open}\n          onClose={() => {\n            setOpen(false);\n          }}\n          onConfirm={() => {\n            return new Promise((resolve) => {\n              message.success(\"弹窗1s后关闭\");\n              setTimeout(() => {\n                message.success(\"弹窗关闭\");\n                resolve();\n              }, 1000);\n            });\n          }}\n        >\n          <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>\n        </Modal>\n        <Button\n          onClick={() => {\n            setOpen(true);\n          }}\n        >\n          确定延迟关闭弹窗\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"hooks调用弹框\",\n              size,\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n            });\n          }}\n        >\n          hooks调用弹框\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"超高弹窗\",\n              size,\n              children: (\n                <div style={{ height: \"2000px\" }}>\n                  超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗\n                </div>\n              ),\n            });\n          }}\n        >\n          展示超高弹窗\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"自定义footer弹框\",\n              size,\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n              footer: ({ close }) => (\n                <Space>\n                  <span>自定义footer</span>\n                  <Button\n                    type=\"link\"\n                    onClick={() => {\n                      close();\n                    }}\n                  >\n                    关闭\n                  </Button>\n                </Space>\n              ),\n            });\n          }}\n        >\n          展示自定义footer弹框\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"无footer弹框\",\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n              footer: null,\n            });\n          }}\n        >\n          无footer弹框\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"自定义按钮组\",\n              size,\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n              footerButtons: [\n                {\n                  children: \"按钮一\",\n                },\n                {\n                  type: \"primary\",\n                  children: \"按钮二\",\n                },\n                {\n                  children: \"按钮三\",\n                },\n              ],\n            });\n          }}\n        >\n          自定义按钮组\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"有rightOptions的弹窗\",\n              size,\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n              rightOptions: <div>右侧内容右侧内容右侧内容右侧内容</div>,\n            });\n          }}\n        >\n          有rightOptions的弹窗\n        </Button>\n      </Space>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_85\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_86\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_87\n}]\n},{\n    title: `需要加载数据的弹窗`,\n    description: `可以通过withDecorator属性实现弹窗的加载数据或者加载远程组件的逻辑，在数据或者远程组件加载完成之前弹窗展示loading状态，加载完成之后children可以获取到加载的数据`,\n    code: `const { default: Modal, useModal } = _Modal;\nconst { useState } = React;\nconst { Button, Space } = antd;\nconst { default: Fetch } = fetch;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst BaseExample = () => {\n  const modal = useModal();\n  const [open, setOpen] = useState(false);\n  return (\n    <Space wrap>\n      <Modal\n        title=\"组件调用方式\"\n        withDecorator={(render) => (\n          <Fetch\n            loader={() => {\n              return new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve([\n                    {\n                      label: \"内容1\",\n                      content: \"内容1内容1内容1内容1内容1内容1内容1\",\n                    },\n                    {\n                      label: \"内容2\",\n                      content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n                    },\n                  ]);\n                }, 1000);\n              });\n            }}\n            render={({ data }) => render({ data })}\n          />\n        )}\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n      >\n        {({ data }) => <Content list={data} col={2} />}\n      </Modal>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        组件调用方式\n      </Button>\n      <Button\n        onClick={() => {\n          modal({\n            title: \"hooks调用方式\",\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        {\n                          label: \"内容1\",\n                          content: \"内容1内容1内容1内容1内容1内容1内容1\",\n                        },\n                        {\n                          label: \"内容2\",\n                          content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: ({ data }) => <Content list={data} col={2} />,\n          });\n        }}\n      >\n        hooks调用方式\n      </Button>\n      <Button\n        onClick={() => {\n          modal({\n            title: (props) => {\n              return \"hooks调用方式\";\n            },\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        {\n                          label: \"内容1\",\n                          content: \"内容1内容1内容1内容1内容1内容1内容1\",\n                        },\n                        {\n                          label: \"内容2\",\n                          content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: ({ data }) => <Content list={data} col={2} />,\n          });\n        }}\n      >\n        hooks title调用方式\n      </Button>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_85\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_86\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_87\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_88\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_89\n}]\n},{\n    title: `可以弹出弹窗的按钮`,\n    description: `可以点击按钮弹出弹窗，并且在弹窗弹出之前可以加载数据，加载数据时，按钮为loading状态，数据加载完成之后再弹出弹窗`,\n    code: `const { ModalButton, TabsModalButton } = _Modal;\nconst { Space } = antd;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\nconst { default: FormInfo, Input, TextArea } = _FormInfo;\n\nconst api = {\n  loader: () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve([\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n        ]);\n      }, 1000);\n    });\n  },\n};\n\nconst BaseExample = () => {\n  return (\n    <Space wrap>\n      <ModalButton\n        api={api}\n        modalProps={({ data }) => {\n          return {\n            title: \"加载数据的弹窗\",\n            children: <Content list={data} col={2} />,\n          };\n        }}\n      >\n        点击加载数据\n      </ModalButton>\n      <TabsModalButton\n        api={api}\n        modalProps={({ data }) => {\n          return {\n            items: data.map(({ label, content }, index) => {\n              return {\n                key: index,\n                children: content,\n                label,\n              };\n            }),\n          };\n        }}\n      >\n        点击加载数据的Tabs弹窗\n      </TabsModalButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_85\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_86\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_87\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_89\n},{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_90\n}]\n},{\n    title: `tabs弹窗`,\n    description: `展示一个tabs弹窗，tabs的选项的label会占据弹窗title位置，弹框的title将不显示\ntabs的items多加了withDecorator参数和Modal的withDecorator参数类似可以控制其外部显示及渲染内容\ntabs的items的children也可以是function，同样可以接收到TabsModal的withDecorator传回的参数`,\n    code: `const { TabsModal, useTabsModal } = _Modal;\nconst { useState } = React;\nconst { default: Fetch } = fetch;\nconst { Button, Space } = antd;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst BaseExample = () => {\n  const [open, setOpen] = useState(false);\n  const tabsModal = useTabsModal();\n  return <Space wrap>\n    <TabsModal open={open} onClose={() => {\n      setOpen(false);\n    }} items={[{\n      label: \"项目 1\", key: \"item-1\", children: <div>项目 1项目 1项目 1项目 1项目 1项目 1项目 1项目 1</div>\n    }, {\n      label: \"项目 2\", key: \"item-2\", children: <div>项目 2项目 2项目 2项目 2项目 2项目 2项目 2项目 2</div>\n    }]} rightOptions={<div>右边栏内容右边栏内容右边栏内容右边栏内容</div>}>\n      <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>\n    </TabsModal>\n    <Button onClick={() => {\n      setOpen(true);\n    }}>组件调用方式</Button>\n    <Button onClick={() => {\n      tabsModal({\n        rightOptions: <div>右边栏内容右边栏内容右边栏内容右边栏内容</div>, items: [{\n          label: \"项目 1\", key: \"item-1\", children: <div>项目 1项目 1项目 1项目 1项目 1项目 1项目 1项目 1</div>\n        }, {\n          label: \"项目 2\", key: \"item-2\", children: <div>项目 2项目 2项目 2项目 2项目 2项目 2项目 2项目 2</div>\n        }]\n      });\n    }}>hooks调用方式</Button>\n    <Button onClick={() => {\n      tabsModal({\n        title: \"此title不展示\",\n        rightOptions: ({ data }) => <Content list={data} />,\n        withDecorator: (render) => <Fetch loader={() => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve([{ label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" }, {\n                label: \"内容2\", content: \"内容2内容2内容2内容2内容2内容2内容2内容2\"\n              }]);\n            }, 1000);\n          });\n        }} render={({ data }) => render({ data })} />,\n        items: [{\n          label: \"项目 1\", key: \"item-1\", children: ({ data }) => <Content list={data} col={2} />\n        }, {\n          withDecorator: (render) => <Fetch loader={() => {\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve([{ label: \"内容3\", content: \"内容3内容3内容3内容3内容3内容3内容3\" }, {\n                  label: \"内容4\", content: \"内容4内容4内容4内容4内容4内容4内容4内容4\"\n                }]);\n              }, 1000);\n            });\n          }} render={({ data }) => render({ tabData: data })} />,\n          label: \"项目 2\",\n          key: \"item-2\",\n          children: ({ data, tabData }) => <Content list={[...data, ...tabData]} col={2} />\n        }]\n      });\n    }}>复杂数据加载</Button>\n  </Space>;\n};\n\nrender(<PureGlobal><BaseExample /></PureGlobal>);\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_85\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_86\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_87\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_88\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_89\n}]\n},{\n    title: `消息确认和提示`,\n    description: `展示确认消息提醒`,\n    code: `const { default: Modal, useConfirmModal } = _Modal;\nconst { useState } = React;\nconst { Button, Space, message } = antd;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  const confirmModal = useConfirmModal();\n  return (\n    <Space wrap>\n      <Button\n        onClick={() => {\n          confirmModal({\n            danger: true,\n            type: \"confirm\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        confirm\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"confirm\",\n            confirmType: \"warning\",\n            title: \"确定要编辑吗？\",\n            message:\n              \"确定要编辑确定要编辑确定要编辑确定要编辑确定要编辑确定要编辑确定要编辑\",\n          });\n        }}\n      >\n        confirm 警告\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"info\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        info\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"info\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        info无标题\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"success\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        success\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"warning\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        warning\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"error\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        error\n      </Button>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_85\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_86\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_87\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_88\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_89\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_91 from '@components/Navigation';\nimport * as component_92 from '@components/Global';\nimport * as component_93 from 'antd';\nconst readmeConfig = {\n    name: `Navigation`,\n    summary: `<h3>何时使用</h3>\n<p>系统的顶部导航，一级导航项偏左靠近 logo 放置，辅助菜单偏右放置。</p>\n<h3>特点</h3>\n<ul>\n<li>集成了Permissions权限判断，可以通过权限列表来判断导项是否显示</li>\n<li>在屏幕显示不了全部的一级导航时可以自动将后面的导航项收起到更多下拉菜单里面</li>\n</ul>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Navigation_84649`,\n        style: `.Navigation_84649 .fold-items {\n  width: 600px; }\n`,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Navigation } = _Navigation;\nconst { PureGlobal } = global;\n\nconst menuList = [\n  {\n    key: \"client\",\n    title: \"客户\",\n    path: \"/client\",\n    permission: \"client:client:look\",\n  },\n  {\n    key: \"position\",\n    title: \"职位\",\n    path: \"/position\",\n    permission: \"jd:job:look\",\n  },\n  {\n    key: \"ats\",\n    title: \"招聘流程\",\n    path: \"/ats\",\n  },\n  {\n    key: \"talent\",\n    title: \"人才库\",\n    permission: \"cv:cv:look\",\n    path: \"/talent\",\n  },\n  {\n    key: \"contract\",\n    title: \"合同\",\n    permission: \"contract:mgr:look\",\n    path: \"/contract\",\n  },\n  {\n    key: \"payment\",\n    title: \"付款信息\",\n    permission: \"payment:mgr:look\",\n    path: \"/payment\",\n  },\n  {\n    key: \"invoice-center\",\n    title: \"开票\",\n    permission: \"client:invoice:center\",\n    path: \"/invoice-center\",\n  },\n  {\n    key: \"invoice-manage\",\n    title: \"发票管理\",\n    permission: \"client:invoice:manager\",\n    path: \"/invoice-manage\",\n  },\n  {\n    key: \"setting\",\n    title: \"设置\",\n    permission: (permissions) =>\n      permissions.some(\n        (x) =>\n          [\n            \"system:permissions:mgr\",\n            \"system:org:mgr\",\n            \"system:user:mgr\",\n          ].indexOf(x) !== -1\n      ),\n    path: \"/setting\",\n  },\n];\n\nrender(\n  <PureGlobal>\n    <Navigation\n      list={menuList}\n      isFixed={false}\n      permissions={[\n        \"client:client:look\",\n        \"jd:job:look\",\n        \"cv:cv:look\",\n        \"contract:mgr:look\",\n        \"payment:mgr:look\",\n        \"client:invoice:center\",\n        \"client:invoice:manager\",\n        \"system:permissions:mgr\",\n      ]}\n    />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Navigation\",\n    packageName: \"@components/Navigation\",\n    component: component_91\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_92\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Navigation } = _Navigation;\nconst { PureGlobal } = global;\n\nconst menuList = [\n  {\n    key: \"client\",\n    title: \"客户\",\n    path: \"/client\",\n    permission: \"client:client:look\",\n  },\n  {\n    key: \"position\",\n    title: \"职位\",\n    path: \"/position\",\n    permission: \"jd:job:look\",\n  },\n  {\n    key: \"ats\",\n    title: \"招聘流程\",\n    path: \"/ats\",\n  },\n  {\n    key: \"talent\",\n    title: \"人才库\",\n    permission: \"cv:cv:look\",\n    path: \"/talent\",\n  },\n  {\n    key: \"contract\",\n    title: \"合同\",\n    permission: \"contract:mgr:look\",\n    path: \"/contract\",\n  },\n  {\n    key: \"payment\",\n    title: \"付款信息\",\n    permission: \"payment:mgr:look\",\n    path: \"/payment\",\n  },\n  {\n    key: \"invoice-center\",\n    title: \"开票\",\n    permission: \"client:invoice:center\",\n    path: \"/invoice-center\",\n  },\n  {\n    key: \"invoice-manage\",\n    title: \"发票管理\",\n    permission: \"client:invoice:manager\",\n    path: \"/invoice-manage\",\n  },\n  {\n    key: \"setting\",\n    title: \"设置\",\n    permission: (permissions) =>\n      permissions.some(\n        (x) =>\n          [\n            \"system:permissions:mgr\",\n            \"system:org:mgr\",\n            \"system:user:mgr\",\n          ].indexOf(x) !== -1\n      ),\n    path: \"/setting\",\n  },\n];\n\nrender(\n  <PureGlobal>\n    <div className=\"fold-items\">\n      <Navigation\n        isFixed={false}\n        list={menuList}\n        permissions={[\n          \"client:client:look\",\n          \"jd:job:look\",\n          \"cv:cv:look\",\n          \"contract:mgr:look\",\n          \"payment:mgr:look\",\n          \"client:invoice:center\",\n          \"client:invoice:manager\",\n          \"system:permissions:mgr\",\n        ]}\n      />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Navigation\",\n    packageName: \"@components/Navigation\",\n    component: component_91\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_92\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { useState } = React;\nconst { PureGlobal } = global;\nconst { default: Navigation } = _Navigation;\nconst { Checkbox, Space } = antd;\n\nconst menuList = [\n  {\n    key: \"client\",\n    title: \"客户\",\n    path: \"/client\",\n    permission: \"client:client:look\",\n  },\n  {\n    key: \"position\",\n    title: \"职位\",\n    path: \"/position\",\n    permission: \"jd:job:look\",\n  },\n  {\n    key: \"ats\",\n    title: \"招聘流程\",\n    path: \"/ats\",\n  },\n  {\n    key: \"talent\",\n    title: \"人才库\",\n    permission: \"cv:cv:look\",\n    path: \"/talent\",\n  },\n  {\n    key: \"contract\",\n    title: \"合同\",\n    permission: \"contract:mgr:look\",\n    path: \"/contract\",\n  },\n  {\n    key: \"payment\",\n    title: \"付款信息\",\n    permission: \"payment:mgr:look\",\n    path: \"/payment\",\n  },\n  {\n    key: \"invoice-center\",\n    title: \"开票\",\n    permission: \"client:invoice:center\",\n    path: \"/invoice-center\",\n  },\n  {\n    key: \"invoice-manage\",\n    title: \"发票管理\",\n    permission: \"client:invoice:manager\",\n    path: \"/invoice-manage\",\n  },\n  {\n    key: \"setting\",\n    title: \"设置\",\n    permission: (permissions) =>\n      permissions.some(\n        (x) =>\n          [\n            \"system:permissions:mgr\",\n            \"system:org:mgr\",\n            \"system:user:mgr\",\n          ].indexOf(x) !== -1\n      ),\n    path: \"/setting\",\n  },\n];\n\nconst Example = () => {\n  const [permissions, setPermissions] = useState([]);\n  return (\n    <PureGlobal>\n      <Space className=\"container\" direction=\"vertical\" size={32}>\n        <Navigation isFixed={false} list={menuList} permissions={permissions} />\n        <Checkbox.Group\n          value={permissions}\n          options={[\n            \"client:client:look\",\n            \"jd:job:look\",\n            \"cv:cv:look\",\n            \"contract:mgr:look\",\n            \"payment:mgr:look\",\n            \"client:invoice:center\",\n            \"client:invoice:manager\",\n            \"system:permissions:mgr\",\n          ]}\n          onChange={(values) => {\n            setPermissions(values);\n          }}\n        />\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"_Navigation\",\n    packageName: \"@components/Navigation\",\n    component: component_91\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_93\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_92\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_94 from '@components/Notification';\nimport * as component_95 from '@components/Global';\nimport * as component_96 from 'antd';\nconst readmeConfig = {\n    name: `Notification`,\n    summary: `<p>消息通知</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Notification_96d00`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Notification } = _Notification;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({ data: { code: 0, data: {} } });\n            }, 1000);\n          });\n        },\n        apis: {\n          notification: {},\n        },\n        global: {\n          notification: {\n            list: [\n              {\n                id: 1,\n                level: \"high\",\n                title:\n                  \"我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知\",\n                subtitle:\n                  \"通知标题通知标题通知标题通知标题通知标题通知标题通知标题通知标题\",\n                link: \"https://www.baidu.com\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                  {\n                    label: \"字段\",\n                    content:\n                      \"哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈\",\n                  },\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈\",\n                  },\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 2,\n                level: \"high\",\n                title: \"我是一个高级通知2\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 3,\n                level: \"high\",\n                title: \"我是一个高级通知3\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 4,\n                level: \"high\",\n                title: \"我是一个高级通知4\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 5,\n                level: \"low\",\n                title: \"我是一个低级通知\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 6,\n                level: \"low\",\n                title: \"我是一个低级通知2\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 7,\n                level: \"middle\",\n                title: \"我是一个中级通知\",\n                children: \"哈哈哈哈\",\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <Notification />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Notification\",\n    packageName: \"@components/Notification\",\n    component: component_94\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_95\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_96\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_97 from '@components/Permissions';\nimport * as component_98 from '@components/Global';\nimport * as component_99 from 'antd';\nconst readmeConfig = {\n    name: `Permissions`,\n    summary: `<h3>何时使用</h3>\n<p>在系统中存在一些功能和操作只允许某些角色用户使用，使用该组件可以让其包裹的组件或者区域根据系统的权限列表配置展示不同的状态</p>\n<h3>特点</h3>\n<p>通过在Global中的preset中设置permissions作为当前用户的权限列表，在Permissions组件配置permissions作为该功能要求具备的权限项，当要求具备的权限项全部在用户的权限列表中找到时为权限通过状态否则为权限不通过状态</p>\n<p>当权限不通过时，Permissions组件可以有三种方式呈现：</p>\n<ol>\n<li>用户可以看到操作功能的组件显示，但是不能进行操作，在鼠标移入时会以ToolTip提示错误原因，一般用在按钮等需要用户交互的功能位置</li>\n<li>用户不能看到操作功能或者数据呈现，对应区域显示错误原因，一般用在要数据展示等场景</li>\n<li>隐藏内部组件，一般用在不需要干扰到用户或用户不需要了解其没有权限的功能或数据等场景</li>\n</ol>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>类型，可选值为hidden，tooltip，error，分别为隐藏，气泡提示，错误提示三种形式</td>\n<td>string</td>\n<td>hidden</td>\n</tr>\n<tr>\n<td>tagName</td>\n<td>当前组件的tagName，同React.createElement的type参数，默认为span</td>\n<td>string</td>\n<td>span</td>\n</tr>\n<tr>\n<td>message</td>\n<td>提示文案</td>\n<td>string</td>\n<td>您暂无权限，请联系管理员</td>\n</tr>\n<tr>\n<td>request</td>\n<td>权限列表为一个字符串数组，每个item为一项权限的key，所有权限在全局的permissions中存在则判断为权限通过</td>\n<td>array[string]</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>children</td>\n<td>该参数可以传function类型，children({isPass, type, request})，isPass为权限校验是否通过，type为提示类型，request为所需权限列表，可以自行实现权限的展示</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Permissions_d08cc`,\n        style: `.Permissions_d08cc .box {\n  padding: 20px;\n  background: #f8f8f8; }\n`,\n        list: [{\n    title: `展示权限不通过的几种形式`,\n    description: `通过切换不同的type，可以预览三种不同type的表现形式`,\n    code: `const { default: Permissions } = _Permissions;\nconst { PureGlobal } = global;\nconst { Button, Radio, Space } = antd;\nconst { useState } = React;\n\nconst BaseExample = () => {\n  const [type, setType] = useState(\"tooltip\");\n  return (\n    <PureGlobal\n      preset={{\n        permissions: [\"permission_1\", \"permission_2\"],\n      }}\n    >\n      <Space direction=\"vertical\">\n        <Radio.Group\n          value={type}\n          options={[\n            { label: \"tooltip\", value: \"tooltip\" },\n            {\n              label: \"error\",\n              value: \"error\",\n            },\n            { label: \"hidden\", value: \"hidden\" },\n          ]}\n          onChange={(e) => {\n            setType(e.target.value);\n          }}\n          optionType=\"button\"\n          buttonStyle=\"solid\"\n        />\n        <Permissions type={type} request={[\"permission_3\"]}>\n          <div className=\"box\">\n            <Button onClick={() => console.log(\"执行操作\")}>操作</Button>\n          </div>\n        </Permissions>\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Permissions\",\n    packageName: \"@components/Permissions\",\n    component: component_97\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_98\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_99\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_102 from '@components/RichEditor';\nimport * as component_103 from '@components/RichEditor/doc/data.json';\nimport * as component_104 from 'antd';\nimport * as component_105 from '@components/Global';\nimport * as component_106 from '@kne/react-form-antd';\nconst readmeConfig = {\n    name: `RichEditor`,\n    summary: `<p>富文本编辑器 <em><strong>（已废弃请勿使用）</strong></em></p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hideToolbar</td>\n<td>是否隐藏工具栏</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>value</td>\n<td>-</td>\n<td>object</td>\n<td>null</td>\n</tr>\n<tr>\n<td>readOnly</td>\n<td>是否只读</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>preview</td>\n<td>是否预览模式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>border</td>\n<td>是否显示border</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `RichEditor_801c7`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const RichEditor = _RichEditor.default.field;\nconst { Button } = antd;\nconst { useState } = React;\nconst { PureGlobal: Global } = global;\nconst BaseExample = () => {\n  // const data = {\"ops\": [{\"insert\": {\"image\": \"http://localhost:3001/ui_components/mock/xasdXsdgszxq-Zsdsrw.png?originalName=WechatIMG22%E5%89%AF%E6%9C%AC.jpg&id=xDBhiYMBxoTGC6WmoMbu\"}}]};\n  const data = \"<p>sdfasfsdf</p>\";\n  const [text, setText] = useState(data);\n  return (\n    <Global\n      preset={{\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        uploadFile: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id: \"xDBhiYMBxoTGC6WmoMbu\",\n                    originalName: \"WechatIMG22副本.jpg\",\n                  },\n                },\n              });\n            });\n          });\n        },\n        ossToStatic: ({ file, folder }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        urlToOss: ({ url, folder = \"richEditor\" }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        ajax: (config) => {\n          console.log(config);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: \"/ui_components/mock/xasdXsdgszxq-Zsdsrw.png\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n    >\n      <RichEditor type={\"html\"} value={text} onChange={setText} />\n      <div>值：{text ? JSON.stringify(text, null, 2) : \"\"}</div>\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_RichEditor\",\n    packageName: \"@components/RichEditor\",\n    component: component_102\n},{\n    name: \"data\",\n    packageName: \"@components/RichEditor/doc/data.json\",\n    component: component_103\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_104\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_105\n}]\n},{\n    title: `只读模式`,\n    description: `展示只读模式`,\n    code: `const RichEditor = _RichEditor.default.field;\nconst { Button } = antd;\nconst { useState } = React;\nconst { PureGlobal: Global } = global;\nconst BaseExample = () => {\n  const data = {\n    ops: [\n      { insert: \"Gandalf\", attributes: { bold: true } },\n      { insert: \" the \" },\n      { insert: \"Grey\", attributes: { color: \"#cccccc\" } },\n    ],\n  };\n  return (\n    <Global\n      preset={{\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n        },\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        uploadFile: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id: \"xDBhiYMBxoTGC6WmoMbu\",\n                    originalName: \"WechatIMG22副本.jpg\",\n                  },\n                },\n              });\n            });\n          });\n        },\n        ossToStatic: ({ file, folder }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        urlToOss: ({ url, folder = \"richEditor\" }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        ajax: (config) => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: \"/ui_components/mock/xasdXsdgszxq-Zsdsrw.png\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n    >\n      <RichEditor value={data} readOnly={true} />\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_RichEditor\",\n    packageName: \"@components/RichEditor\",\n    component: component_102\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_104\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_105\n}]\n},{\n    title: `在表单中使用`,\n    description: `展示在表单中使用`,\n    code: `const RichEditor = _RichEditor.default;\nconst { default: Form, SubmitButton } = reactForm;\nconst { PureGlobal: Global } = global;\n\nconst BaseExample = () => {\n  const data = {\n    ops: [\n      { insert: \"Gandalf\", attributes: { bold: true } },\n      { insert: \" the \" },\n      { insert: \"Grey\", attributes: { color: \"#cccccc\" } },\n    ],\n  };\n  return (\n    <Global\n      preset={{\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n        },\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        uploadFile: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id: \"xDBhiYMBxoTGC6WmoMbu\",\n                    originalName: \"WechatIMG22副本.jpg\",\n                  },\n                },\n              });\n            });\n          });\n        },\n        ossToStatic: ({ file, folder }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        urlToOss: ({ url, folder = \"richEditor\" }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        ajax: (config) => {\n          console.log(config);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: \"/ui_components/mock/eXur9YEBzBdA-Vkwaigw.png\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n    >\n      <Form\n        data={{\n          des: data,\n        }}\n        onSubmit={(data) => {\n          console.log(data);\n        }}\n      >\n        <RichEditor name=\"des\" label=\"描述\" />\n        <div>\n          <SubmitButton>提交</SubmitButton>\n        </div>\n      </Form>\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_RichEditor\",\n    packageName: \"@components/RichEditor\",\n    component: component_102\n},{\n    name: \"reactForm\",\n    packageName: \"@kne/react-form-antd\",\n    component: component_106\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_105\n}]\n},{\n    title: `支持Editor格式数据`,\n    description: `支持Editor格式数据`,\n    code: `const RichEditor = _RichEditor.default.field;\nconst { PureGlobal: Global } = global;\nconst { default: value } = data;\nconst { useState } = React;\n\nconst BaseExample = () => {\n  const [text, setText] = useState(value);\n  return (\n    <Global\n      preset={{\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        uploadFile: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id: \"xDBhiYMBxoTGC6WmoMbu\",\n                    originalName: \"WechatIMG22副本.jpg\",\n                  },\n                },\n              });\n            });\n          });\n        },\n        ossToStatic: ({ file, folder }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        urlToOss: ({ url, folder = \"richEditor\" }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        ajax: (config) => {\n          console.log(config);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: \"/ui_components/mock/xasdXsdgszxq-Zsdsrw.png\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n    >\n      <RichEditor value={text} onChange={setText} />\n      <div>转换后值：{JSON.stringify(text, null, 2)}</div>\n      <div>原始值：{JSON.stringify(value, null, 2)}</div>\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_RichEditor\",\n    packageName: \"@components/RichEditor\",\n    component: component_102\n},{\n    name: \"data\",\n    packageName: \"@components/RichEditor/doc/data.json\",\n    component: component_103\n},{\n    name: \"reactForm\",\n    packageName: \"@kne/react-form-antd\",\n    component: component_106\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_105\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_100 from '@components/StateBar';\nimport * as component_101 from 'antd';\nconst readmeConfig = {\n    name: `StateBar`,\n    summary: `<p>用于 State Bar</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>stateOption</td>\n<td>state操作列表</td>\n<td>string</td>\n<td>{key: string, tab: ReactNode}[]</td>\n</tr>\n<tr>\n<td>activeKey</td>\n<td>当前激活 tab 面板的 key</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>type</td>\n<td>当前tab展示样式</td>\n<td>'tab'、'radio'、'step'</td>\n<td>'tab'</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>事件返回选中的key</td>\n<td>(value: string) =&gt; void</td>\n<td></td>\n</tr>\n<tr>\n<td>tabBarExtraContent</td>\n<td>展示在state bar右侧</td>\n<td>ReactNode</td>\n<td>null</td>\n</tr>\n<tr>\n<td>isInner</td>\n<td>底部线延展至总长</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3>Mapping</h3>\n<h4>stateOption</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>对应 activeKey</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>tab</td>\n<td>选项卡头显示文字</td>\n<td>ReactNode</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `StateBar_de00a`,\n        style: ``,\n        list: [{\n    title: `State Bar`,\n    description: `State Bar`,\n    code: `const { default: StateBar } = _StateBar;\nconst { Button, Radio, Space } = antd;\nconst { useState } = React;\n\nconst BaseExample = () => {\n  const [size, setSize] = useState(\"default\");\n  const [isInner, setIsInner] = useState(false);\n  return (\n    <Space direction=\"vertical\">\n      <Radio.Group\n        value={isInner}\n        options={[\n          { label: \"inner\", value: true },\n          { label: \"normal\", value: false },\n        ]}\n        onChange={(e) => {\n          setIsInner(e.target.value);\n        }}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n      <Radio.Group\n        value={size}\n        options={[\n          { label: \"small\", value: \"small\" },\n          { label: \"default\", value: \"default\" },\n          { label: \"large\", value: \"large\" },\n        ]}\n        onChange={(e) => {\n          setSize(e.target.value);\n        }}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n      <StateBar\n        size={size}\n        isInner={isInner}\n        stateOption={[\n          { tab: \"全部\", key: \"1\" },\n          { tab: \"科目一\", key: \"2\" },\n          {\n            tab: \"科目二\",\n            key: \"3\",\n          },\n          { tab: \"科目三\", key: \"4\" },\n          { tab: \"科目四\", key: \"5\" },\n        ]}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateBar\",\n    packageName: \"@components/StateBar\",\n    component: component_100\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_101\n}]\n},{\n    title: `Radio State Bar`,\n    description: `Radio State Bar`,\n    code: `const { default: StateBar } = _StateBar;\nconst { Radio, Space } = antd;\nconst { useState } = React;\n\nconst BaseStateExample = () => {\n  const [size, setSize] = useState(\"default\");\n  return (\n    <Space direction=\"vertical\">\n      <Radio.Group\n        value={size}\n        options={[\n          { label: \"small\", value: \"small\" },\n          { label: \"default\", value: \"default\" },\n          { label: \"large\", value: \"large\" },\n        ]}\n        onChange={(e) => {\n          setSize(e.target.value);\n        }}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n      <StateBar\n        size={size}\n        type=\"radio\"\n        stateOption={[\n          { tab: \"全部\", key: \"1\" },\n          { tab: \"科目一\", key: \"2\" },\n          { tab: \"科目二\", key: \"3\" },\n          { tab: \"科目三\", key: \"4\" },\n          { tab: \"科目四\", key: \"5\" },\n          { tab: \"科目一1\", key: \"22\" },\n          { tab: \"科目二2\", key: \"33\" },\n          { tab: \"科目三3\", key: \"44\" },\n          { tab: \"科目四4\", key: \"55\", style: { cursor: \"copy\" } },\n        ]}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseStateExample />);\n\n`,\n    scope: [{\n    name: \"_StateBar\",\n    packageName: \"@components/StateBar\",\n    component: component_100\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_101\n}]\n},{\n    title: `Step State Bar`,\n    description: `Step State Bar`,\n    code: `const { default: StateBar } = _StateBar;\n\nconst BaseStateExample = () => {\n  return (\n    <StateBar\n      type=\"step\"\n      stateOption={[\n        { tab: \"全部\", key: \"1\" },\n        { tab: \"科目一\", key: \"2\" },\n        { tab: \"科目二\", key: \"3\" },\n        { tab: \"科目三\", key: \"4\" },\n        { tab: \"科目四\", key: \"5\" },\n        { tab: \"科目一1\", key: \"22\" },\n        { tab: \"科目二2\", key: \"33\" },\n        { tab: \"科目三3\", key: \"44\" },\n        { tab: \"科目四4\", key: \"55\", className: \"last\" },\n      ]}\n      tabBarExtraContent={<div>测试</div>}\n    />\n  );\n};\n\nrender(<BaseStateExample />);\n\n`,\n    scope: [{\n    name: \"_StateBar\",\n    packageName: \"@components/StateBar\",\n    component: component_100\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_112 from '@components/StateTag';\nimport * as component_113 from '@components/Descriptions';\nimport * as component_114 from 'lodash';\nconst readmeConfig = {\n    name: `StateTag`,\n    summary: `<p>用于展示标签</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>tag的类型，类型决定显示的颜色</td>\n<td>'default'(#666666)、'skill'(#666666)(此时边框颜色为 #EEEEEE)、'success'(#027A48)、'progress'(#F09700)、'danger'(#D14343)、'info'(#155ACF)、'other'(#6740C3)(待定颜色)、'result'(#666666)、'filterResult'(#5CB8B2)</td>\n<td>'default'</td>\n</tr>\n<tr>\n<td>showBorder</td>\n<td>是否展示边框</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>showBackground</td>\n<td>是否展示背景色</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>text</td>\n<td>tag文案</td>\n<td>string</td>\n<td>''</td>\n</tr>\n<tr>\n<td>filterName</td>\n<td>tag类型为“filterResult”时显示在前边的文案</td>\n<td>string</td>\n<td>''</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数参考 <a href=\"https://ant.design/components/tag-cn\">antd Tag.Tag</a></p>`,\n    example: {\n        isFull: true,\n        className: `StateTag_cfeaa`,\n        style: ``,\n        list: [{\n    title: `基本示例`,\n    description: `状态标签`,\n    code: `const { default: StateTag } = _StateTag;\nconst { default: Descriptions } = _Descriptions;\nconst { range } = lodash;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <div>使用场景: 列表页Table,简历详情页</div>\n      <br />\n      <Descriptions\n        dataSource={[\n          [\n            { label: \"使用规则\", content: \"待XX，暂停\" },\n            { label: \"代码示例\", content: \\`{type: \"info\", text: \"标签内容\"}\\` },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"info\", text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: <StateTag {...{ type: \"info\", text: \"待提交开票\" }} />,\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"XX中，正在XX中\" },\n            {\n              label: \"代码示例\",\n              content: \\`{type: \"progress\", text: \"退票审核中\"}\\`,\n            },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"progress\", text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: (\n                <StateTag {...{ type: \"progress\", text: \"退票审核中\" }} />\n              ),\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"通过，成功，完成\" },\n            {\n              label: \"代码示例\",\n              content: \\`{type: \"success\", text: \"标签内容\"}\\`,\n            },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"success\", text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: <StateTag {...{ type: \"success\", text: \"标签内容\" }} />,\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"不通过，失败，淘汰，缺席，拒绝\" },\n            {\n              label: \"代码示例\",\n              content: \\`{type: \"danger\", text: \"退票拒绝\"}\\`,\n            },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"danger\", text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: <StateTag {...{ type: \"danger\", text: \"退票拒绝\" }} />,\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"取消，撤销，停止\" },\n            { label: \"代码示例\", content: \\`{text: \"撤销开票审核\"}\\` },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: <StateTag {...{ text: \"撤销开票审核\" }} />,\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"（暂时还未用到）\" },\n            { label: \"代码示例\", content: \\`{type: \"other\", text: \"标签内容\"}\\` },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"other\", text: \"标签内容\" }} />,\n            },\n          ],\n        ]}\n      />\n      <br />\n      <br />\n      <div>个别特殊场景（需要单独询问UI):</div>\n      <br />\n      <Descriptions\n        dataSource={[\n          [\n            { label: \"使用规则\", content: \"待XX，暂停\" },\n            {\n              label: \"示例\",\n              content: (\n                <div>\n                  <StateTag {...{ type: \"success\", text: \"已推荐简历\" }} />\n                  <StateTag {...{ type: \"success\", text: \"已退票\" }} />\n                </div>\n              ),\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"已XX待XX\" },\n            {\n              label: \"示例\",\n              content: (\n                <div>\n                  <StateTag {...{ type: \"success\", text: \"已开票待寄出\" }} />\n                  <StateTag {...{ type: \"success\", text: \"已待寄待收款\" }} />\n                </div>\n              ),\n            },\n          ],\n          [\n            {\n              label: \"使用规则\",\n              content: \"已XX+词语：根据后面的词语语义进行判断\",\n            },\n            {\n              label: \"示例\",\n              content: (\n                <div>\n                  <StateTag {...{ type: \"success\", text: \"已成功\" }} />\n                  <StateTag {...{ type: \"default\", text: \"已取消\" }} />\n                  <StateTag {...{ type: \"danger\", text: \"已失败\" }} />\n                  <StateTag {...{ type: \"progress\", text: \"已暂停\" }} />\n                </div>\n              ),\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"完全根据语义语境判断\" },\n            {\n              label: \"示例\",\n              content: (\n                <div>\n                  <StateTag {...{ type: \"success\", text: \"全部到款\" }} />\n                  <StateTag {...{ type: \"success\", text: \"部分到款\" }} />\n                  <StateTag {...{ type: \"success\", text: \"简历亮点\" }} />\n                  <StateTag {...{ type: \"danger\", text: \"简历风险点\" }} />\n                </div>\n              ),\n            },\n          ],\n        ]}\n      />\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_112\n},{\n    name: \"_Descriptions\",\n    packageName: \"@components/Descriptions\",\n    component: component_113\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_114\n}]\n},{\n    title: `基本示例`,\n    description: `技能标签`,\n    code: `const { default: StateTag } = _StateTag;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <StateTag\n        text={\"技能标签\"}\n        type={\"skill\"}\n        showBorder\n        showBackground={false}\n      />\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_112\n}]\n},{\n    title: `基本示例`,\n    description: `下拉菜单、弹窗中已选结果标签`,\n    code: `const { default: StateTag } = _StateTag;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <StateTag\n        text={\"技能标签\"}\n        type={\"result\"}\n        showBackground={false}\n        closable\n        onClose={() => console.log(\"close\")}\n      />\n      <StateTag\n        text={\"技能标签\"}\n        type={\"result\"}\n        closable\n        onClose={() => console.log(\"close\")}\n      />\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_112\n}]\n},{\n    title: `基本示例`,\n    description: `筛选组件中筛选结果标签`,\n    code: `const { default: StateTag } = _StateTag;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <StateTag\n        filterName={\"BD\"}\n        text={\"陈枫林，王晓晨\"}\n        type={\"filterResult\"}\n        closable\n        onClose={() => console.log(\"close\")}\n      />\n      <br />\n      <StateTag\n        filterName={\"添加人\"}\n        text={\"陈枫林，王晓晨，陈路，张力\"}\n        type={\"filterResult\"}\n        closable\n        onClose={() => console.log(\"close\")}\n      />\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_112\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_107 from '@components/Table';\nimport * as component_108 from '@components/Global';\nimport * as component_109 from '@kne/react-fetch';\nimport * as component_110 from 'lodash';\nimport * as component_111 from 'antd';\nconst readmeConfig = {\n    name: `Table`,\n    summary: `<p>可以从后端获取数据，然后展示为一个表格</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Table_51c45`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Table } = _Table;\nconst { PureGlobal } = _Global;\nconst { preset } = reactFetch;\n\nconst ajax = (config) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      if (config.url === \"/api/v1/user/user/user_key_get\") {\n        resolve({\n          data: {\n            code: 0,\n            data: \\`{\"date\":{\"visible\":false},\"serialNumber\":{\"width\":400}}\\`,\n          },\n        });\n      } else if (config.url === \"/api/v1/user/user/user_key_set\") {\n        console.log(config.data);\n        resolve({\n          data: {\n            code: 0,\n            data: \"\",\n          },\n        });\n      }\n    }, 100);\n  });\n};\n\npreset({\n  ajax,\n});\n\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax,\n        tableServerApis: {\n          getDataApi: (name) => {\n            return {\n              url: \"/api/v1/user/user/user_key_get\",\n              method: \"GET\",\n              params: {\n                key: \\`table_config_v2_\\${name}\\`,\n              },\n              transformResponse: (response) => {\n                const { data } = response;\n                response.data = Object.assign({}, data, {\n                  data: (() => {\n                    try {\n                      return JSON.parse(data.data);\n                    } catch (e) {\n                      return [];\n                    }\n                  })(),\n                });\n\n                response.data = {\n                  code: response.data.code === 0 ? 200 : data.code,\n                  msg: response.data.msg,\n                  results: response.data.data,\n                };\n\n                return response;\n              },\n              cache: \"TABLE_PAGE_CONFIG\",\n            };\n          },\n          setDataFunc: (name, data) => {\n            return ajax({\n              url: \"/api/v1/user/user/user_key_set\",\n              data: {\n                map: {\n                  [\\`table_config_v2_\\${name}\\`]: JSON.stringify(data),\n                },\n              },\n            });\n          },\n        },\n      }}\n    >\n      <Table\n        name=\"test-table\"\n        onTablePropsReady={({ columns, dataSource }) => {\n          console.log({ columns, dataSource });\n        }}\n        dataSource={[\n          {\n            id: 0,\n            date: \"2021-07-21\",\n            datetime: \"2023-07-22 09:00:00\",\n            serialNumber: \"SX00192932323434\",\n            serialNumberShort: \"SH0023\",\n            userName: \"林珊珊\",\n            title: \"我是主要字段\",\n            tagEnum: null,\n            enUserName: \"Lin Shanshan\",\n            phoneNumber: \"+86 18792877372\",\n            email: \"a@a.com\",\n            count: 4,\n            description:\n              \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n            description2:\n              \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n            other: \"其他信息\",\n          },\n          {\n            id: 1,\n            date: \"\",\n            datetime: \"2023-07-22 09:00:00\",\n            serialNumber: \"SX00192932323434\",\n            serialNumberShort: \"SH0023\",\n            userName: \"林珊珊1\",\n            title: \"我是主要字段\",\n            tagEnum: \"Y\",\n            enUserName: \"Lin Shanshan\",\n            phoneNumber: null,\n            email: \"a@a.com\",\n            count: 5,\n            description: \"我是一段描述\",\n            description2: \"我是一段描述\",\n            other: \"其他信息\",\n          },\n        ]}\n        columns={[\n          {\n            name: \"date\",\n            title: \"日期\",\n            type: \"date\",\n            hover: true,\n          },\n          {\n            name: \"datetime\",\n            title: \"日期时间\",\n            type: \"datetime\",\n            hideSecond: true,\n          },\n          {\n            name: \"serialNumber\",\n            title: \"编号\",\n            type: \"serialNumber\",\n            primary: true,\n            onClick: async (item) => {\n              console.log(item);\n              return new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve(true);\n                }, 10000);\n              });\n            },\n          },\n          {\n            name: \"serialNumberShort\",\n            title: \"短编号\",\n            type: \"serialNumberShort\",\n          },\n          {\n            name: \"title\",\n            title: \"主要信息\",\n            type: \"mainInfo\",\n          },\n          {\n            name: \"tag\",\n            title: \"状态标签\",\n            type: \"tag\",\n            valueOf: () => ({ type: \"success\", text: \"审核通过\" }),\n          },\n          {\n            name: \"tagEnum\",\n            title: \"标签枚举\",\n            type: \"tag\",\n            valueOf: (item) =>\n              item.tagEnum && {\n                type: \"success\",\n                isEnum: true,\n                moduleName: \"marital\",\n                name: item.tagEnum,\n              },\n          },\n          {\n            name: \"avatar\",\n            title: \"头像\",\n            type: \"avatar\",\n            valueOf: () => ({ gender: \"F\" }),\n          },\n          {\n            name: \"user\",\n            title: \"用户\",\n            type: \"user\",\n            valueOf: (item) => \\`\\${item.enUserName} \\${item.userName}\\`,\n          },\n          {\n            name: \"hideInfo\",\n            title: \"隐藏字段\",\n            type: \"hideInfo\",\n            valueOf: (item) =>\n              item[\"phoneNumber\"] && {\n                loader: () => {\n                  return item[\"phoneNumber\"] + \"-\" + item[\"id\"];\n                },\n              },\n          },\n          {\n            name: \"userName\",\n            title: \"用户名\",\n            type: \"userName\",\n          },\n          {\n            name: \"contacts\",\n            title: \"联系人\",\n            type: \"contacts\",\n            valueOf: (item) => \\`\\${item.userName} \\${item.phoneNumber}\\`,\n          },\n          {\n            name: \"count\",\n            title: \"数量\",\n            type: \"singleRow\",\n            render: ({ target }) => {\n              return target.count === 5 ? { hover: true } : { hover: false };\n            },\n          },\n          {\n            name: \"description\",\n            title: \"描述\",\n            type: \"description\",\n          },\n          {\n            name: \"description2\",\n            title: \"描述(省略)\",\n            type: \"description\",\n            ellipsis: true,\n          },\n          {\n            name: \"other\",\n            title: \"其他\",\n            type: \"other\",\n            hover: true,\n          },\n          {\n            name: \"options\",\n            title: \"操作\",\n            type: \"options\",\n            valueOf: (item) => [\n              {\n                onClick: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                },\n                children: \"分配Program及教练\",\n              } /*,\n              {\n                children: \"审核\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"淘汰\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"一键约面\",\n              },\n              {\n                children: \"删除\",\n              },*/,\n            ],\n          },\n        ]}\n      />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Table\",\n    packageName: \"@components/Table\",\n    component: component_107\n},{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_108\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_109\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { PureGlobal } = _Global;\nconst { TablePage } = _Table;\nconst { range } = lodash;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        features: {\n          debug: true,\n          profile: {\n            id: \"erc\",\n            type: \"system\",\n            name: \"业务系统\",\n            children: [\n              {\n                id: \"test\",\n                type: \"feature\",\n                name: \"测试功能\",\n                options: {\n                  hiddenColumns: [\"date\", \"datetime\"],\n                },\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <TablePage\n        featureId=\"test\"\n        sticky={false}\n        loader={() => {\n          return {\n            addUserName: \"我是大魔王\",\n            pageData: range(0, 50).map((index) => ({\n              id: index,\n              date: \"2021-07-21\",\n              datetime: \"2023-07-22 09:00:00\",\n              serialNumber: \"SX00192932323434\",\n              serialNumberShort: \"SH0023\",\n              userName: \"林珊珊\" + index,\n              title: \"我是主要字段\",\n              enUserName: \"Lin Shanshan\",\n              phoneNumber: \"+86 18792877372\",\n              email: \"a@a.com\",\n              count: 5,\n              description:\n                \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n              other: \"其他信息\",\n            })),\n            totalCount: 50,\n          };\n        }}\n        columns={[\n          {\n            name: \"date\",\n            title: \"日期\",\n            type: \"date\",\n            hover: true,\n          },\n          {\n            name: \"datetime\",\n            title: \"日期时间\",\n            type: \"datetime\",\n          },\n          {\n            name: \"dateRange\",\n            title: \"日期范围\",\n            type: \"dateRange\",\n            valueOf: ({ date, datetime }) => [date, datetime],\n          },\n          {\n            name: \"serialNumber\",\n            title: \"编号\",\n            type: \"serialNumber\",\n            primary: true,\n          },\n          {\n            name: \"serialNumberShort\",\n            title: \"短编号\",\n            type: \"serialNumberShort\",\n          },\n          {\n            name: \"title\",\n            title: \"主要信息\",\n            type: \"mainInfo\",\n          },\n          {\n            name: \"phone\",\n            title: \"手机号\",\n            type: \"hideInfo\",\n            primary: true,\n            valueOf: (item) => ({\n              loader: () => {\n                return item[\"phoneNumber\"] + \"-\" + item[\"id\"];\n              },\n            }),\n          },\n          {\n            name: \"email\",\n            title: \"邮箱\",\n            type: \"hideInfo\",\n            valueOf: (item) => ({\n              loader: () => {\n                return item[\"email\"] + \"-\" + item[\"id\"];\n              },\n              children: (data) => {\n                return \\`\\${data},\\${item[\"userName\"]}\\`;\n              },\n            }),\n          },\n          {\n            name: \"tag\",\n            title: \"状态标签\",\n            type: \"tag\",\n            valueOf: () => ({ type: \"success\", text: \"审核通过\" }),\n          },\n          {\n            name: \"avatar\",\n            title: \"头像\",\n            type: \"avatar\",\n            valueOf: () => ({ gender: \"F\" }),\n          },\n          {\n            name: \"user\",\n            title: \"用户\",\n            type: \"user\",\n            valueOf: (item) => \\`\\${item.enUserName} \\${item.userName}\\`,\n          },\n          {\n            name: \"userName\",\n            title: \"用户名\",\n            type: \"userName\",\n          },\n          {\n            name: \"contacts\",\n            title: \"联系人\",\n            type: \"contacts\",\n            valueOf: (item) => \\`\\${item.userName} \\${item.phoneNumber}\\`,\n          },\n          {\n            name: \"count\",\n            title: \"数量\",\n            type: \"singleRow\",\n          },\n          {\n            name: \"description\",\n            title: \"描述(省略)\",\n            type: \"description\",\n            ellipsis: true,\n          },\n          {\n            name: \"other\",\n            title: \"其他\",\n            type: \"other\",\n            hover: true,\n          },\n          {\n            name: \"addUser\",\n            title: \"添加人\",\n            type: \"user\",\n            render: ({ data }) => ({ valueOf: () => data.addUserName }),\n          },\n          {\n            name: \"options\",\n            title: \"操作\",\n            type: \"options\",\n            fixed: \"right\",\n            valueOf: (item) => [\n              {\n                onClick: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                },\n                children: \"编辑\",\n                disabled: true,\n              },\n              {\n                children: \"审核\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"淘汰\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"一键约面\",\n              },\n              {\n                children: \"删除\",\n              },\n            ],\n          },\n        ]}\n      />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Table\",\n    packageName: \"@components/Table\",\n    component: component_107\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_110\n},{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_108\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Table } = _Table;\nconst { PureGlobal } = _Global;\nconst { preset } = reactFetch;\nconst { useState } = React;\nconst { Input } = antd;\nconst ajax = (config) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      if (config.url === \"/api/v1/user/user/user_key_get\") {\n        resolve({\n          data: {\n            code: 0,\n            data: \\`{\"date\":{},\"serialNumber\":{\"width\":400}}\\`,\n          },\n        });\n      } else if (config.url === \"/api/v1/user/user/user_key_set\") {\n        console.log(config.data);\n        resolve({\n          data: {\n            code: 0,\n            data: \"\",\n          },\n        });\n      }\n    }, 100);\n  });\n};\n\npreset({\n  ajax,\n});\n\nconst ValueEdit = ({ value, targetRender }) => {\n  const [isEdit, setIsEdit] = useState(false);\n  return (\n    <span\n      onClick={() => {\n        setIsEdit(true);\n      }}\n    >\n      {isEdit ? (\n        <Input\n          type=\"text\"\n          size=\"small\"\n          defaultValue={value}\n          onBlur={() => {\n            setIsEdit(false);\n          }}\n        />\n      ) : (\n        targetRender(value)\n      )}\n    </span>\n  );\n};\n\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax,\n        tableServerApis: {\n          getDataApi: (name) => {\n            return {\n              url: \"/api/v1/user/user/user_key_get\",\n              method: \"GET\",\n              params: {\n                key: \\`table_config_v2_\\${name}\\`,\n              },\n              transformResponse: (response) => {\n                const { data } = response;\n                response.data = Object.assign({}, data, {\n                  data: (() => {\n                    try {\n                      return JSON.parse(data.data);\n                    } catch (e) {\n                      return [];\n                    }\n                  })(),\n                });\n\n                response.data = {\n                  code: response.data.code === 0 ? 200 : data.code,\n                  msg: response.data.msg,\n                  results: response.data.data,\n                };\n\n                return response;\n              },\n              cache: \"TABLE_PAGE_CONFIG\",\n            };\n          },\n          setDataFunc: (name, data) => {\n            return ajax({\n              url: \"/api/v1/user/user/user_key_set\",\n              data: {\n                map: {\n                  [\\`table_config_v2_\\${name}\\`]: JSON.stringify(data),\n                },\n              },\n            });\n          },\n        },\n      }}\n    >\n      <Table\n        name=\"test-table\"\n        dataSource={[\n          {\n            id: 0,\n            date: \"2021-07-21\",\n            datetime: \"2023-07-22 09:00:00\",\n            serialNumber: \"SX00192932323434\",\n            serialNumberShort: \"SH0023\",\n            userName: \"林珊珊\",\n            title: \"我是主要字段\",\n            tagEnum: \"Y\",\n            enUserName: \"Lin Shanshan\",\n            phoneNumber: \"+86 18792877372\",\n            email: \"a@a.com\",\n            count: 4,\n            description:\n              \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n            description2:\n              \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n            other: \"其他信息\",\n          },\n          {\n            id: 1,\n            date: \"\",\n            datetime: \"2023-07-22 09:00:00\",\n            serialNumber: \"SX00192932323434\",\n            serialNumberShort: \"SH0023\",\n            userName: \"林珊珊1\",\n            title: \"我是主要字段\",\n            tagEnum: \"Y\",\n            enUserName: \"Lin Shanshan\",\n            phoneNumber: \"+86 18792877372\",\n            email: \"a@a.com\",\n            count: 5,\n            description: \"我是一段描述\",\n            description2: \"我是一段描述\",\n            other: \"其他信息\",\n          },\n        ]}\n        columns={[\n          {\n            name: \"date\",\n            title: \"日期\",\n            sort: true,\n            groupHeader: [\n              {\n                name: \"group1\",\n                title: \"分组1\",\n              },\n              {\n                name: \"group1-1\",\n                title: \"分组1-1\",\n              },\n            ],\n            type: \"date\",\n            hover: true,\n          },\n          {\n            name: \"datetime\",\n            title: \"日期时间\",\n            sort: true,\n            groupHeader: [\n              {\n                name: \"group1\",\n                title: \"分组1\",\n              },\n              {\n                name: \"group1-2\",\n                title: \"分组1-2\",\n              },\n            ],\n            type: \"datetime\",\n          },\n          {\n            name: \"serialNumber\",\n            title: \"编号\",\n            sort: true,\n            groupHeader: [\n              {\n                name: \"group1\",\n                title: \"分组1\",\n              },\n              {\n                name: \"group1-1\",\n                title: \"分组1-1\",\n              },\n            ],\n            type: \"serialNumber\",\n            primary: true,\n          },\n          {\n            name: \"serialNumberShort\",\n            title: \"短编号\",\n            type: \"serialNumberShort\",\n          },\n          {\n            name: \"title\",\n            title: \"主要信息\",\n            type: \"mainInfo\",\n            disableColItem: true,\n            valueOf: (item, { targetRender }) => (\n              <ValueEdit value={item[\"title\"]} targetRender={targetRender} />\n            ),\n          },\n          {\n            name: \"tag\",\n            title: \"状态标签\",\n            type: \"tag\",\n            valueOf: () => ({ type: \"success\", text: \"审核通过\" }),\n          },\n          {\n            name: \"tagEnum\",\n            title: \"标签枚举\",\n            type: \"tag\",\n            valueOf: (item) => ({\n              type: \"success\",\n              isEnum: true,\n              moduleName: \"marital\",\n              name: item.tagEnum,\n            }),\n          },\n          {\n            name: \"avatar\",\n            title: \"头像\",\n            type: \"avatar\",\n            valueOf: () => ({ gender: \"F\" }),\n          },\n          {\n            name: \"user\",\n            title: \"用户\",\n            type: \"user\",\n            valueOf: (item) => \\`\\${item.enUserName} \\${item.userName}\\`,\n          },\n          {\n            name: \"hideInfo\",\n            title: \"隐藏字段\",\n            type: \"hideInfo\",\n            valueOf: (item) => ({\n              loader: () => {\n                return item[\"phoneNumber\"] + \"-\" + item[\"id\"];\n              },\n            }),\n          },\n          {\n            name: \"userName\",\n            title: \"用户名\",\n            type: \"userName\",\n          },\n          {\n            name: \"contacts\",\n            title: \"联系人\",\n            type: \"contacts\",\n            valueOf: (item) => \\`\\${item.userName} \\${item.phoneNumber}\\`,\n          },\n          {\n            name: \"count\",\n            title: \"数量\",\n            type: \"singleRow\",\n            render: ({ target }) => {\n              return target.count === 5 ? { hover: true } : { hover: false };\n            },\n          },\n          {\n            name: \"description\",\n            title: \"描述\",\n            type: \"description\",\n          },\n          {\n            name: \"description2\",\n            title: \"描述(省略)\",\n            type: \"description\",\n            ellipsis: true,\n          },\n          {\n            name: \"other\",\n            title: \"其他\",\n            type: \"other\",\n            hover: true,\n            sort: true,\n          },\n          {\n            name: \"options\",\n            title: \"操作\",\n            type: \"options\",\n            fixed: \"right\",\n            sort: true,\n            valueOf: (item) => [\n              {\n                onClick: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                },\n                children: \"分配Program及教练\",\n              },\n              {\n                children: \"审核\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"淘汰\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"一键约面\",\n              },\n              {\n                children: \"删除\",\n              },\n            ],\n          },\n        ]}\n        onSortChange={(sort) => {\n          console.log(\">>>>>>\", sort);\n        }}\n      />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Table\",\n    packageName: \"@components/Table\",\n    component: component_107\n},{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_108\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_109\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_111\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_121 from '@components/TablePage';\nimport * as component_122 from 'lodash';\nimport * as component_123 from '@components/Global';\nimport * as component_124 from '@kne/react-fetch';\nimport * as component_125 from 'dayjs';\nconst readmeConfig = {\n    name: `TablePage`,\n    summary: `<p>可以从后端获取数据，然后展示为一个表格</p>\n<p><em><strong>（已废弃，不建议使用，请用Table的TablePage组件代替）</strong></em></p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dataFormat</td>\n<td>用于处理后端返回的数据，作为表格数据</td>\n<td>function</td>\n<td>(data) =&gt; {return {list: data.data.pageData,total: data.data.totalCount};}</td>\n</tr>\n<tr>\n<td>pagination</td>\n<td>控制分页参数</td>\n<td>object</td>\n<td>{showSizeChanger: true,showQuickJumper: true,open: true,paramsType: 'data',requestType: 'reload',current: 'currentPage',pageSize: 'perPage',defaultPageSize: 20,size: 'default'}</td>\n</tr>\n<tr>\n<td>getColumns</td>\n<td>获取colums参数的函数,该函数的参数可以拿到请求结果数据,如果不传该函数则默认取colums属性 getColumns({data,formatData}),可以返回Promise</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>stickyOffset</td>\n<td>sticky模式，table header距离顶部位置，默认会取 --nav-height，注意：该组件会覆盖调sticky中设置的值，导致其设置不生效，需要配置该参数来实现功能</td>\n<td>string</td>\n<td>var(--nav-height)</td>\n</tr>\n<tr>\n<td>controllerOpen</td>\n<td>是否开启列控制，调整列宽和列显示</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数参考</p>\n<p>表格参数:</p>\n<p><a href=\"https://ant.design/components/table-cn/\">antd Table</a></p>\n<p>请求数据参数:</p>\n<p><a href=\"/lib/react-fetch\">react-fetch</a></p>`,\n    example: {\n        isFull: true,\n        className: `TablePage_b85cd`,\n        style: `.TablePage_b85cd .table-Limit-height {\n  height: 600px;\n  overflow: auto;\n  max-width: 1000px;\n  margin: 0 auto; }\n`,\n        list: [{\n    title: `普通表格`,\n    description: `展示一个普通的表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { PureGlobal } = global;\nconst { range } = _;\nconst { preset } = reactFetch;\n\nconst ajax = (config) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      if (config.url === \"/api/v1/user/user/user_key_get\") {\n        resolve({\n          data: {\n            code: 0,\n            data: \\`[{\\\"id\\\":\\\"clientName\\\",\\\"name\\\":\\\"客户名称\\\",\\\"width\\\":341,\\\"chosen\\\":false,\\\"selected\\\":false},{\\\"id\\\":\\\"city\\\",\\\"name\\\":\\\"工作地点\\\",\\\"width\\\":341,\\\"chosen\\\":false,\\\"selected\\\":false},{\\\"id\\\":\\\"startTime\\\",\\\"name\\\":\\\"职位开始时间\\\",\\\"hidden\\\":false,\\\"width\\\":200,\\\"chosen\\\":false,\\\"selected\\\":false},{\\\"id\\\":\\\"options\\\",\\\"name\\\":\\\"操作\\\",\\\"fixed\\\":\\\"right\\\",\\\"width\\\":341}]\\`,\n          },\n        });\n      } else if (config.url === \"/api/v1/user/user/user_key_set\") {\n        console.log(config.data);\n        resolve({\n          data: {\n            code: 0,\n            data: \"\",\n          },\n        });\n      }\n    }, 100);\n  });\n};\n\npreset({\n  ajax,\n});\n\nconst Example = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax,\n        tablePageServerApis: {\n          getDataApi: (name) => {\n            return {\n              url: \"/api/v1/user/user/user_key_get\",\n              method: \"GET\",\n              params: {\n                key: \\`table_config_\\${name}\\`,\n              },\n              transformResponse: (response) => {\n                const { data } = response;\n                response.data = Object.assign({}, data, {\n                  data: (() => {\n                    try {\n                      return JSON.parse(data.data);\n                    } catch (e) {\n                      return [];\n                    }\n                  })(),\n                });\n\n                response.data = {\n                  code: response.data.code === 0 ? 200 : data.code,\n                  msg: response.data.msg,\n                  results: response.data.data,\n                };\n\n                return response;\n              },\n              cache: \"TABLE_PAGE_CONFIG\",\n            };\n          },\n          setDataFunc: (name, data) => {\n            return ajax({\n              url: \"/api/v1/user/user/user_key_set\",\n              data: {\n                map: {\n                  [\\`table_config_\\${name}\\`]: JSON.stringify(data),\n                },\n              },\n            });\n          },\n        },\n      }}\n    >\n      <TablePage\n        name=\"test1\"\n        rowSelection={{\n          type: \"checkbox\",\n        }}\n        columns={[\n          {\n            title: (\n              <div>\n                职位名称<i>~</i>\n              </div>\n            ),\n            titleText: \"职位名称\",\n            key: \"positionName\",\n            fixed: \"left\",\n            dataIndex: \"positionName\",\n          },\n          {\n            title: \"客户名称\",\n            key: \"clientName\",\n            dataIndex: \"clientName\",\n          },\n          {\n            title: \"工作地点\",\n            key: \"city\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点1\",\n            key: \"city1\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点2\",\n            key: \"city2\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点3\",\n            key: \"city3\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点4\",\n            key: \"city4\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点5\",\n            key: \"city5\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点6\",\n            key: \"city6\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点7\",\n            key: \"city7\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点8\",\n            key: \"city8\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点9\",\n            key: \"city9\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"职位开始时间\",\n            key: \"startTime\",\n            dataIndex: \"startTime\",\n            hidden: true,\n          },\n          {\n            title: \"操作\",\n            key: \"options\",\n            fixed: \"right\",\n            width: 300,\n            render: () => {\n              return \"操作\";\n            },\n          },\n        ]}\n        sticky={false}\n        data={{ currentPage: 1, perPage: 20 }}\n        loader={({ data }) => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                pageData: range(data.perPage).map((index) => ({\n                  id: index + (data.currentPage - 1) * data.perPage + 1,\n                  positionName:\n                    \"市场运营总监\" +\n                    (index + (data.currentPage - 1) * data.perPage + 1),\n                  clientName: \"大众\",\n                  city: \"北京\",\n                  startTime: \"2020-01-10\",\n                })),\n                totalCount: 100,\n              });\n            }, 100);\n          });\n        }}\n      />\n    </PureGlobal>\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_121\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_122\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_123\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_124\n}]\n},{\n    title: `树形数据`,\n    description: `展示一个树形数据的表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { range } = _;\n\nconst Example = () => {\n  return (\n    <TablePage\n      name=\"test1\"\n      columns={[\n        {\n          title: \"职位名称\",\n          key: \"positionName\",\n          fixed: \"left\",\n          dataIndex: \"positionName\",\n        },\n        {\n          title: \"客户名称\",\n          key: \"clientName\",\n          dataIndex: \"clientName\",\n        },\n        {\n          title: \"工作地点\",\n          key: \"city\",\n          dataIndex: \"city\",\n        },\n        {\n          title: \"职位开始时间\",\n          key: \"startTime\",\n          dataIndex: \"startTime\",\n          hidden: true,\n        },\n        {\n          title: \"操作\",\n          key: \"options\",\n          fixed: \"right\",\n          width: 300,\n          render: () => {\n            return \"操作\";\n          },\n        },\n      ]}\n      sticky={false}\n      data={{ currentPage: 1, perPage: 20 }}\n      loader={({ data }) => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve({\n              pageData: range(data.perPage).map((index) => ({\n                id: index + (data.currentPage - 1) * data.perPage + 1,\n                positionName:\n                  \"市场运营总监\" +\n                  (index + (data.currentPage - 1) * data.perPage + 1),\n                clientName: \"大众\",\n                city: \"北京\",\n                startTime: \"2020-01-10\",\n                children: range(10).map((i) => {\n                  return {\n                    id:\n                      index +\n                      (data.currentPage - 1) * data.perPage +\n                      1 +\n                      \"-\" +\n                      i,\n                    positionName:\n                      \"市场运营总监\" +\n                      (index + (data.currentPage - 1) * data.perPage + 1) +\n                      \"-\" +\n                      i,\n                    clientName: \"大众\",\n                    city: \"北京\",\n                    startTime: \"2020-01-10\",\n                    children:\n                      index === 0\n                        ? [\n                            {\n                              id:\n                                index +\n                                (data.currentPage - 1) * data.perPage +\n                                1 +\n                                \"-\" +\n                                i +\n                                \"-last\",\n                              positionName: \"最后一层\",\n                              clientName: \"最后一层\",\n                              city: \"最后一层\",\n                              startTime: \"2020-01-10\",\n                            },\n                          ]\n                        : null,\n                  };\n                }),\n              })),\n              totalCount: 100,\n            });\n          }, 100);\n        });\n      }}\n    />\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_121\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_122\n}]\n},{\n    title: `固定表头表格`,\n    description: `展示一个固定表头的表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { range } = _;\nconst { useRef } = React;\n\nconst Example = () => {\n  const ref = useRef();\n  return (\n    <div className=\"table-Limit-height\" ref={ref}>\n      <div\n        style={{\n          height: 700,\n        }}\n      >\n        请往下拉\n      </div>\n      <TablePage\n        stickyOffset=\"0px\"\n        scroller={{\n          getContainer: () => ref.current,\n        }}\n        data={{ currentPage: 1, perPage: 20 }}\n        columns={[\n          {\n            title: \"职位名称\",\n            key: \"positionName\",\n            fixed: \"left\",\n            dataIndex: \"positionName\",\n          },\n          {\n            title: \"客户名称\",\n            key: \"clientName\",\n            dataIndex: \"clientName\",\n          },\n          {\n            title: \"工作地点\",\n            key: \"city\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"职位开始时间\",\n            key: \"startTime\",\n            dataIndex: \"startTime\",\n          },\n        ]}\n        loader={({ data }) => {\n          return {\n            pageData: range(data.perPage).map((index) => ({\n              id: index + (data.currentPage - 1) * data.perPage + 1,\n              positionName:\n                \"市场运营总监\" +\n                (index + (data.currentPage - 1) * data.perPage + 1),\n              clientName: \"大众\",\n              city: \"北京\",\n              startTime: \"2020-01-10\",\n            })),\n            totalCount: 100,\n          };\n        }}\n      />\n    </div>\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_121\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_122\n}]\n},{\n    title: `日期格式化表格`,\n    description: `展示一个日期格式化表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { range } = _;\nconst dayjs = dayjs;\n\nconst dateFormat = (target) => {\n  return dayjs(target).format(\"YYYY-MM-DD HH:mm:ss\");\n};\n\nconst Example = () => {\n  return (\n    <TablePage\n      sticky={false}\n      columns={[\n        {\n          title: \"职位名称\",\n          key: \"positionName\",\n          fixed: \"left\",\n          dataIndex: \"positionName\",\n        },\n        {\n          title: \"客户名称\",\n          key: \"clientName\",\n          dataIndex: \"clientName\",\n        },\n        {\n          title: \"工作地点\",\n          key: \"city\",\n          dataIndex: \"city\",\n        },\n        {\n          title: \"职位开始时间\",\n          key: \"startTime\",\n          dataIndex: \"startTime\",\n          render: dateFormat,\n        },\n        {\n          title: \"职位结束时间\",\n          key: \"endTime\",\n          dataIndex: \"endTime\",\n          render: dateFormat,\n        },\n      ]}\n      data={{ currentPage: 1, perPage: 10 }}\n      loader={({ data }) => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve({\n              pageData: range(data.perPage).map((index) => ({\n                id: index + (data.currentPage - 1) * data.perPage + 1,\n                positionName:\n                  \"市场运营总监\" +\n                  (index + (data.currentPage - 1) * data.perPage + 1),\n                clientName: \"大众\",\n                city: \"北京\",\n                startTime: \"2020-01-10\",\n                endTime: \"2020-02-10\",\n              })),\n              totalCount: 48,\n            });\n          }, 1000);\n        });\n      }}\n    />\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_121\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_122\n},{\n    name: \"dayjs\",\n    packageName: \"dayjs\",\n    component: component_125\n}]\n},{\n    title: `动态column获取`,\n    description: `展示动态column获取的表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { range } = _;\n\nconst Example = () => {\n  return (\n    <TablePage\n      sticky={false}\n      getColumns={({ data, formatData }) => {\n        console.log(data, formatData);\n        return Promise.resolve([\n          {\n            title: \"职位名称\",\n            key: \"positionName\",\n            fixed: \"left\",\n            dataIndex: \"positionName\",\n          },\n          {\n            title: \"客户名称\",\n            key: \"clientName\",\n            dataIndex: \"clientName\",\n          },\n          {\n            title: \"工作地点\",\n            key: \"city\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"职位开始时间\",\n            key: \"startTime\",\n            dataIndex: \"startTime\",\n          },\n        ]);\n      }}\n      data={{ currentPage: 1, perPage: 20 }}\n      loader={({ data }) => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve({\n              pageData: range(data.perPage).map((index) => ({\n                id: index + (data.currentPage - 1) * data.perPage + 1,\n                positionName:\n                  \"市场运营总监\" +\n                  (index + (data.currentPage - 1) * data.perPage + 1),\n                clientName: \"大众\",\n                city: \"北京\",\n                startTime: \"2020-01-10\",\n              })),\n              totalCount: 100,\n            });\n          }, 1000);\n        });\n      }}\n    />\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_121\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_122\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_115 from '@components/Tooltip';\nimport * as component_116 from 'antd/lib/space';\nimport * as component_117 from '@components/FormInfo';\nimport * as component_118 from '@kne/react-fetch';\nimport * as component_119 from '@components/Descriptions';\nimport * as component_120 from '@components/StateTag';\nconst readmeConfig = {\n    name: `Tooltip`,\n    summary: `<p>简单的文字提示气泡框</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>size</td>\n<td>默认宽度 360，small 宽度 240</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题内容</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>showInfo</td>\n<td>展示标题旁的提示按钮</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>importantInfo</td>\n<td>重要内容</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>subtitle</td>\n<td>副标题</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>content</td>\n<td>内容</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>importantInfoType</td>\n<td>重要内容类型，success,error,warning</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>moreInfo</td>\n<td>其他内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>TooltipFetch</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>获取数据的接口，参考@kne/react-fetch</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>fetchContent</td>\n<td>当api接口返回值的时候调用，可以获取到接口参数，返回值会更新到Tootip的参数中</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Tooltip_c9830`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Tooltip, TooltipInfoLabel } = _Tooltip;\nconst { default: Space } = space;\nconst {\n  default: FormInfo,\n  Form,\n  Input,\n  TypeDateRangePicker,\n  SubmitButton,\n  CancelButton,\n} = formInfo;\n\nconst MoreInfo = () => {\n  return (\n    <Form>\n      <FormInfo\n        column={1}\n        list={[\n          <Input label=\"姓名\" name=\"name\" rule=\"REQ\" />,\n          <TypeDateRangePicker\n            name=\"type_date\"\n            label=\"日期时间段\"\n            rule=\"REQ\"\n          />,\n          <Space\n            style={{\n              width: \"100%\",\n              justifyContent: \"end\",\n            }}\n          >\n            <CancelButton>取消</CancelButton>\n            <SubmitButton>确定</SubmitButton>\n          </Space>,\n        ]}\n      />\n    </Form>\n  );\n};\n\nconst BaseExample = () => {\n  return (\n    <Space>\n      <Tooltip content=\"这里显示完整的信息\">小段信息</Tooltip>\n      <Tooltip\n        size=\"small\"\n        content=\"这里显示完整的信息完整的信息，这里显示完整的信息完整的信息这里显示完整的信息完整的信息这里显示完整的信息完整的信息，这里显示完整的信息。\"\n      >\n        大段信息\n      </Tooltip>\n      <Tooltip title=\"标题\" content=\"内容描述内容描述内容。\">\n        带有标题的小段信息\n      </Tooltip>\n      <Tooltip\n        title=\"标题\"\n        content=\"内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述\"\n      >\n        带有标题的大段信息\n      </Tooltip>\n      <Tooltip\n        importantInfo=\"筛选日期范围内，职位上安排顾问面试的候选人总数。根据所填写的顾问【面试面试】时间来进行统计，而非在系统的操作时间。\"\n        subtitle=\"示例:\"\n        content=\"2022.10.21在系统操作顾问面试，但填写的顾问面试时间为2022.10.20，则数据会统计在2022.10.20，而非2022.10.21 。\"\n      >\n        带有重要信息\n      </Tooltip>\n      <TooltipInfoLabel\n        title=\"带有Info信息\"\n        tooltipTitle={{\n          importantInfo:\n            \"筛选日期范围内，职位上安排顾问面试的候选人总数。根据所填写的顾问【面试面试】时间来进行统计，而非在系统的操作时间。\",\n          subtitle: \"示例:\",\n          content:\n            \"2022.10.21在系统操作顾问面试，但填写的顾问面试时间为2022.10.20，则数据会统计在2022.10.20，而非2022.10.21 。\",\n        }}\n      />\n      <Tooltip\n        trigger=\"click\"\n        title=\"标题\"\n        content=\"辅助信息描述内容辅助信息描述内容辅助信息描述内容辅助信息描述内容辅助信息描述内容\"\n        moreInfo={<MoreInfo />}\n      >\n        带有表单信息\n      </Tooltip>\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Tooltip\",\n    packageName: \"@components/Tooltip\",\n    component: component_115\n},{\n    name: \"space\",\n    packageName: \"antd/lib/space\",\n    component: component_116\n},{\n    name: \"formInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_117\n}]\n},{\n    title: `带有远程数据加载的提示`,\n    description: `展示带有远程数据加载的提示`,\n    code: `const { TooltipFetch } = _Tooltip;\nconst { preset } = reactFetch;\nconst { default: Descriptions } = _Descriptions;\nconst { default: StateTag } = _StateTag;\n\npreset({\n  ajax: () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({\n          data: {\n            code: 0,\n            data: {\n              clientName: \"腾讯\",\n              title: \"腾讯科技公司\",\n              type: \"增值税专用发票\",\n              date: \"2022-08-15\",\n            },\n          },\n        });\n      }, 1000);\n    });\n  },\n});\n\nconst BaseExample = () => {\n  return (\n    <TooltipFetch\n      api={{\n        url: \"/api/data\",\n      }}\n      size=\"large\"\n      fetchContent={(data) => {\n        return {\n          content: (\n            <Descriptions\n              dataSource={[\n                [\n                  { label: \"客户名称\", content: data.clientName },\n                  { label: \"发票抬头\", content: data.title },\n                ],\n                [\n                  { label: \"发票类型\", content: data.type },\n                  { label: \"发票日期\", content: data.date },\n                ],\n              ]}\n            />\n          ),\n        };\n      }}\n    >\n      <StateTag text=\"哈哈哈\" />\n    </TooltipFetch>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Tooltip\",\n    packageName: \"@components/Tooltip\",\n    component: component_115\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_118\n},{\n    name: \"_Descriptions\",\n    packageName: \"@components/Descriptions\",\n    component: component_119\n},{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_120\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","const localStorage = {\n  getItem: (key) => {\n    const target = window.localStorage.getItem(key);\n    try {\n      const { dataType, value } = JSON.parse(target);\n      if (dataType === \"object\" && value === \"null\") {\n        return null;\n      }\n      if (dataType === \"undefined\") {\n        return void 0;\n      }\n      if (dataType === \"number\") {\n        return Number(value);\n      }\n      if (dataType === \"boolean\") {\n        return Boolean(value);\n      }\n      return value;\n    } catch (e) {\n      return null;\n    }\n  },\n  setItem: (key, value) => {\n    const dataType = typeof value;\n    window.localStorage.setItem(key, JSON.stringify({ dataType, value }));\n  },\n};\n\nexport default localStorage;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"style_content__KHqQn__6hOBk\",\"size-small\":\"style_size-small__RwAEB__6hOBk\",\"label\":\"style_label__EG-qx__6hOBk\",\"content-content\":\"style_content-content__AkJj-__6hOBk\",\"item\":\"style_item__WV0-i__6hOBk\"};","import { useLayoutEffect, useRef, useState } from \"react\";\nimport { Col, Row, Space } from \"antd\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\n\nexport const Label = ({ className, children, setWidth }) => {\n  const ref = useRef(null);\n  const setWidthRef = useRef(setWidth);\n  setWidthRef.current = setWidth;\n  useLayoutEffect(() => {\n    const computed = () => {\n      if (!ref.current) {\n        return;\n      }\n      const { width } = ref.current.getBoundingClientRect();\n      setWidth(width);\n    };\n    const resizeObserver = new ResizeObserver(computed);\n    resizeObserver.observe(ref.current);\n    computed();\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [setWidth]);\n  return (\n    <div ref={ref} className={className}>\n      {children}：\n    </div>\n  );\n};\n\nconst Content = ({ list, labelAlign, col, gutter, className, size }) => {\n  const labelWidthListRef = useRef([]);\n  const [maxLabelWidth, setMaxLabelWidth] = useState(0);\n  return (\n    <Row\n      data-testid=\"components-core-content\"\n      className={classnames(style[\"content\"], className, {\n        [style[\"size-small\"]]: size === \"small\",\n      })}\n      gutter={gutter}\n    >\n      {list\n        .filter((item) => {\n          if (typeof item.display === \"function\") {\n            return item.display();\n          }\n          return item.display !== false;\n        })\n        .map(({ label, content, block }, index) => {\n          return (\n            <Col\n              span={block === true ? 24 : 24 / col}\n              key={index}\n              className={style[\"item\"]}\n            >\n              <Space key={index} className={style[\"item\"]}>\n                {label ? (\n                  <div\n                    style={\n                      maxLabelWidth && labelAlign !== \"auto\"\n                        ? {\n                            minWidth: maxLabelWidth,\n                            textAlign: labelAlign,\n                          }\n                        : null\n                    }\n                  >\n                    <Label\n                      className={classnames(style[\"label\"], \"content-label\")}\n                      setWidth={(width) => {\n                        labelWidthListRef.current[index] = width;\n                        setMaxLabelWidth(\n                          Math.max(...labelWidthListRef.current)\n                        );\n                      }}\n                    >\n                      {label}\n                    </Label>\n                  </div>\n                ) : null}\n                <div\n                  className={classnames(\n                    style[\"content-content\"],\n                    \"content-content\"\n                  )}\n                >\n                  {content}\n                </div>\n              </Space>\n            </Col>\n          );\n        })}\n    </Row>\n  );\n};\n\nContent.defaultProps = {\n  labelAlign: \"left\",\n  col: 1,\n  gutter: 0,\n  list: [],\n};\n\nexport default Content;\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptions\":\"style_descriptions__HozsO__6hOBk\",\"descriptions-item\":\"style_descriptions-item__vV+UK__6hOBk\",\"col-label\":\"style_col-label__ZFEwt__6hOBk\",\"col-content\":\"style_col-content__wtZ9I__6hOBk\"};","import { Col, Row } from \"antd\";\nimport classnames from \"classnames\";\nimport Features from \"@components/Features\";\nimport style from \"./style.module.scss\";\n\nconst Descriptions = ({ dataSource, isFull, className, ...props }) => {\n  return (\n    <Row {...props} className={classnames(style[\"descriptions\"], className)}>\n      {dataSource.map((colItem, colIndex) => {\n        const _colItem = colItem.slice(0, 2).filter((item) => {\n          if (typeof item.display === \"function\") {\n            return item.display(item, dataSource);\n          }\n          return item.display !== false;\n        });\n        return _colItem\n          .slice(0, 2)\n          .map(({ label, content, featureId }, itemIndex) => {\n            const render = (\n              <Col\n                span={24 / _colItem.length}\n                className={classnames(\n                  style[\"col-item\"],\n                  \"descriptions-col-item\"\n                )}\n                key={`${colIndex}-${itemIndex}`}\n              >\n                <Row\n                  wrap={false}\n                  className={classnames(\n                    style[\"descriptions-item\"],\n                    \"descriptions-item\"\n                  )}\n                >\n                  <Col\n                    span={isFull ? 8 : 4 * _colItem.length}\n                    className={classnames(\n                      style[\"col-label\"],\n                      \"descriptions-col-label\"\n                    )}\n                  >\n                    {label}\n                  </Col>\n                  <Col\n                    span={isFull ? 16 : 24 - 4 * _colItem.length}\n                    className={classnames(\n                      style[\"col-content\"],\n                      \"descriptions-col-content\"\n                    )}\n                  >\n                    {content}\n                  </Col>\n                </Row>\n              </Col>\n            );\n            return featureId ? (\n              <Features id={featureId} key={`${colIndex}-${itemIndex}`}>\n                {render}\n              </Features>\n            ) : (\n              render\n            );\n          });\n      })}\n    </Row>\n  );\n};\n\nexport default Descriptions;\n","const importMessages = (locale) => {\n  return {\n    \"en-US\": () => import(\"./en-US\"),\n    \"zh-CN\": () => import(\"./zh-CN\"),\n  }[locale]();\n};\n\nexport default importMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"right-options-modal\":\"style_right-options-modal__0FYSr__6hOBk\",\"left-options-col\":\"style_left-options-col__dZs-a__6hOBk\",\"right-options-col\":\"style_right-options-col__-bGqN__6hOBk\",\"move-icon\":\"style_move-icon__Kd4U2__6hOBk\",\"close-icon\":\"style_close-icon__HG1G5__6hOBk\",\"columns-control-content-item\":\"style_columns-control-content-item__SK820__6hOBk\",\"is-drag\":\"style_is-drag__7dzHq__6hOBk\",\"sortable-drag\":\"style_sortable-drag__Btml4__6hOBk\",\"sortable-ghost\":\"style_sortable-ghost__L0Tis__6hOBk\",\"right-header\":\"style_right-header__pPtqi__6hOBk\",\"right-title\":\"style_right-title__VutTR__6hOBk\",\"right-desc\":\"style_right-desc__dUwAi__6hOBk\",\"divider\":\"style_divider__GpvGk__6hOBk\",\"modal-footer-tip\":\"style_modal-footer-tip__GMxOE__6hOBk\"};","import importMessages from \"./locale\";\nimport { IntlProvider, FormattedMessage } from \"@components/Intl\";\nimport style from \"./style.module.scss\";\nimport {\n  useMemo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { groupBy, pick, union } from \"lodash\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Checkbox,\n  Col,\n  Divider,\n  List,\n  Row,\n  Space,\n  message,\n} from \"antd\";\nimport { useModal } from \"@components/Modal\";\nimport Icon from \"@components/Icon\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport omit from \"lodash/omit\";\nimport { downloadBlobFile } from \"@components/File\";\nimport { getCache, withFetch } from \"@kne/react-fetch\";\nimport { usePreset } from \"@components/Global\";\nimport Features from \"@components/Features\";\nimport get from \"lodash/get\";\n\nconst GroupItem = ({ groupName, list, selected, onChange }) => {\n  const isCheckedAll = useMemo(() => {\n    return list.every((x) => selected.some((it) => it === x.name));\n  }, [list, selected]);\n  return (\n    <>\n      <Row gutter={[24, 12]} justify=\"space-between\">\n        <Col className={style[\"right-title\"]}>{groupName}</Col>\n        <Col>\n          <Checkbox\n            checked={isCheckedAll}\n            onChange={(e) => {\n              const newSelected = e.target.checked\n                ? union(\n                    selected.slice(0),\n                    list.map((item) => item.name)\n                  )\n                : selected\n                    .slice(0)\n                    .filter((x) => !list.some((it) => it.name === x));\n              onChange(newSelected);\n            }}\n          >\n            <FormattedMessage\n              id=\"selectedAll\"\n              moduleName=\"ExportTable\"\n              defaultMessage=\"全选\"\n            />\n          </Checkbox>\n        </Col>\n        <Col span={24}>\n          <Space\n            className={classnames(\"full-space\")}\n            wrap={true}\n            size={[24, 12]}\n          >\n            {(list || []).map((item) => {\n              return (\n                <Checkbox\n                  key={item.name}\n                  checked={selected.some((x) => x === item.name)}\n                  onChange={(e) => {\n                    let newSelected = selected.slice(0);\n                    if (e.target.checked) {\n                      newSelected.push(item.name);\n                    } else {\n                      newSelected = newSelected.filter((x) => x !== item.name);\n                    }\n                    onChange(newSelected);\n                  }}\n                >\n                  {item.titleText || item.title || \"未命名列\"}\n                </Checkbox>\n              );\n            })}\n          </Space>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RightOptions = ({ options, children }) => {\n  if (!options) {\n    return children;\n  }\n  return (\n    <Row wrap={false}>\n      <Col flex={1} className={style[\"left-options-col\"]}>\n        {children}\n      </Col>\n      <Col className={style[\"right-options-col\"]}>{options}</Col>\n    </Row>\n  );\n};\n\nconst ExportTableInner = forwardRef(({ columns, data }, ref) => {\n  const [selectedColumns, setSelectColumns] = useState(() => {\n    const columnsData = Array.isArray(data) ? data : JSON.parse(data) || [];\n    return Array.isArray(columnsData) &&\n      (columnsData || []).filter((x) => !!x).length > 0\n      ? columnsData.filter((x) => !!x)\n      : columns\n          .filter(\n            (x) =>\n              (x.hasOwnProperty(\"exportHidden\") && x.exportHidden !== true) ||\n              x.hidden !== true\n          )\n          .map((x) => x.name);\n  });\n  const allColumns = useMemo(() => {\n    const all = groupBy(columns, (item) => item.groupName);\n    return all;\n  }, [columns]);\n  const visibleColumns = useMemo(() => {\n    const columnsMap = new Map(columns.map((item) => [item.name, item]));\n    return (selectedColumns || [])\n      .filter((name) => columns.some((x) => x.name === name))\n      .map((name) => {\n        const item = columnsMap.get(name);\n        return item;\n      });\n  }, [columns, selectedColumns]);\n  useImperativeHandle(\n    ref,\n    () => {\n      return { data: selectedColumns };\n    },\n    [selectedColumns]\n  );\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"ExportTable\">\n      <RightOptions\n        options={\n          <div>\n            <div className={style[\"right-header\"]}>\n              <div className={style[\"right-title\"]}>\n                <FormattedMessage\n                  id=\"rightTitle\"\n                  moduleName=\"ExportTable\"\n                  defaultMessage=\"已选的字段\"\n                />\n                ：\n              </div>\n              <div className={style[\"right-desc\"]}>\n                <FormattedMessage\n                  id=\"rightDesc\"\n                  moduleName=\"ExportTable\"\n                  defaultMessage=\"按住拖拽可进行排序\"\n                />\n              </div>\n            </div>\n            <ReactSortable\n              selectedColumns={selectedColumns}\n              list={visibleColumns}\n              filter=\".ignore-elements\"\n              dragClass={style[\"sortable-drag\"]}\n              ghostClass={style[\"sortable-ghost\"]}\n              forceFallback\n              setList={(columns) => {\n                const list = columns.map((item) => item.name);\n                setTimeout(() => {\n                  setSelectColumns([...list]);\n                }, 50);\n              }}\n              animation={300}\n              delayOnTouchStart\n              delay={2}\n            >\n              {visibleColumns.map((item, index) => (\n                <List.Item\n                  className={classnames(\n                    style[\"columns-control-content-item\"],\n                    style[\"is-drag\"]\n                  )}\n                  key={item.name + index}\n                >\n                  <Row\n                    justify=\"space-between\"\n                    align=\"middle\"\n                    style={{ flex: 1 }}\n                  >\n                    <Col>\n                      <Space size={2}>\n                        <Icon\n                          type=\"icon-paixu\"\n                          className={classnames(\n                            style[\"move-icon\"],\n                            \"move-icon\"\n                          )}\n                        />\n                        <span>\n                          {item.titleText || item.title || \"未命名列\"}\n                        </span>\n                      </Space>\n                    </Col>\n                    <Col\n                      onClick={(event) => {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        let newSelected = selectedColumns.slice(0);\n                        newSelected = newSelected.filter(\n                          (x) => x !== item.name\n                        );\n                        setTimeout(() => {\n                          setSelectColumns([...newSelected]);\n                        }, 50);\n                      }}\n                    >\n                      <Icon\n                        type=\"icon-close-thin\"\n                        className={classnames(\n                          style[\"close-icon\"],\n                          \"close-icon\"\n                        )}\n                      />\n                    </Col>\n                  </Row>\n                </List.Item>\n              ))}\n            </ReactSortable>\n          </div>\n        }\n      >\n        <Space\n          className={classnames(\"full-space\")}\n          direction=\"vertical\"\n          split={<Divider className={style[\"divider\"]} />}\n        >\n          {Object.keys(allColumns).map((groupName, index) => {\n            return (\n              <GroupItem\n                key={groupName + index}\n                selected={selectedColumns}\n                groupName={groupName}\n                list={allColumns[groupName]}\n                onChange={(list) => {\n                  setSelectColumns(list);\n                }}\n              />\n            );\n          })}\n        </Space>\n      </RightOptions>\n    </IntlProvider>\n  );\n});\n\nExportTableInner.defaultProps = {\n  columns: [],\n};\n\nconst withExportTableColumnsData = (WrappedComponent) => {\n  const FetchWrappedComponent = withFetch(WrappedComponent);\n  return (props) => {\n    const { name, getDataApi } = props;\n    const { exportTableServerApis } = usePreset();\n    const _getDataApi =\n      getDataApi || (exportTableServerApis && exportTableServerApis.getDataApi);\n    if (name && exportTableServerApis && exportTableServerApis.getDataApi) {\n      // isLocal cache={`EXPORT_TABLE_CONFIG_${name}`} ttl={24 * 60 * 60 * 1000}\n      return (\n        <FetchWrappedComponent\n          {...props}\n          {..._getDataApi(name)}\n          error={<WrappedComponent {...props} />}\n        />\n      );\n    }\n    return <WrappedComponent {...props} />;\n  };\n};\n\nexport const withExportTable = (WrappedComponent) => {\n  return (props) => {\n    const tableProps = omit(props, [\"onClick\"]);\n    const tableRef = useRef(null);\n    const { name, saveDataApi, featureId } = props;\n    const { exportTableServerApis } = usePreset();\n    const _saveDataApi =\n      saveDataApi ||\n      (exportTableServerApis && exportTableServerApis.saveDataApi);\n    const modal = useModal();\n    return (\n      <WrappedComponent\n        onClick={async () => {\n          props.onClick && props.onClick();\n          let columns =\n            typeof props.columns === \"function\"\n              ? await props.columns()\n              : props.columns;\n          columns = columns.filter((x) => x.exportHidden !== true);\n          const renderFeatureConfig = ({ children }) => {\n            return featureId ? (\n              <Features id={featureId}>{children}</Features>\n            ) : (\n              children({})\n            );\n          };\n          const Component = withExportTableColumnsData((props) => {\n            return renderFeatureConfig({\n              children: ({ options }) => {\n                columns = columns.filter((item) => {\n                  if (!Array.isArray(get(options, \"hiddenColumns\"))) {\n                    return true;\n                  }\n                  return options.hiddenColumns.indexOf(item.name) === -1;\n                });\n                return (\n                  <ExportTableInner\n                    {...props}\n                    {...tableProps}\n                    columns={columns}\n                    ref={tableRef}\n                  />\n                );\n              },\n            });\n          });\n          modal({\n            title: props.title || \"导出数据\",\n            ...tableProps,\n            className: style[\"right-options-modal\"],\n            footer: () => {\n              return (\n                <Space size={4} className={style[\"modal-footer-tip\"]}>\n                  <Icon type={\"icon-xinxi-miaobian\"} />\n                  <span>导出后，系统会自动保存您本次选择的字段及排序</span>\n                </Space>\n              );\n            },\n            footerButtons: [\n              {\n                children: \"取消\",\n              },\n              {\n                type: \"primary\",\n                children: \"导出\",\n                onClick: async () => {\n                  if (tableRef.current?.data.length === 0) {\n                    message.error(props.selectedTip || \"请选择要导出的字段\");\n                    return false;\n                  }\n                  const saveResult = _saveDataApi\n                    ? await _saveDataApi({\n                        name,\n                        data: tableRef.current.data,\n                      })\n                    : true;\n                  if (saveResult !== false) {\n                    const cache = getCache();\n                    cache.delByCacheName(`EXPORT_TABLE_CONFIG_${name}`);\n                    const result = props.onExport\n                      ? await props.onExport({\n                          data: tableRef.current.data,\n                          downloadBlobFile,\n                        })\n                      : true;\n                    return result !== false;\n                  }\n                  return saveResult !== false;\n                },\n              },\n            ],\n            children: <Component {...pick(props, [\"name\", \"getDataApi\"])} />,\n          });\n        }}\n      />\n    );\n  };\n};\n\nconst ExportButton = (props) => {\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"ExportTable\">\n      <Button {...props} size=\"small\">\n        {props.actionText || (\n          <FormattedMessage\n            id=\"actionText\"\n            moduleName=\"ExportTable\"\n            defaultMessage=\"导出数据\"\n          />\n        )}\n      </Button>\n    </IntlProvider>\n  );\n};\n\nconst ExportTable = withExportTable(ExportButton);\n\nexport default ExportTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"style_filter__Xml45__6hOBk\",\"filter-item-icon\":\"style_filter-item-icon__kVCRK__6hOBk\",\"filter-item-option-icon\":\"style_filter-item-option-icon__q1fz3__6hOBk\",\"filter-title\":\"style_filter-title__PlIpS__6hOBk\",\"filter-title-hidden\":\"style_filter-title-hidden__NJ1ZB__6hOBk\",\"ad-filter-title\":\"style_ad-filter-title__5-OzD__6hOBk\",\"ad-filter-line\":\"style_ad-filter-line__ga6UH__6hOBk\",\"filter-line\":\"style_filter-line__E+cRh__6hOBk\",\"clean-btn\":\"style_clean-btn__oSEvm__6hOBk\",\"filter-item\":\"style_filter-item__Q2ncE__6hOBk\",\"un-expand\":\"style_un-expand__4PFY8__6hOBk\",\"ad-filter-selected\":\"style_ad-filter-selected__KbLfG__6hOBk\",\"filter-label\":\"style_filter-label__qu26i__6hOBk\",\"filter-item-wrap\":\"style_filter-item-wrap__rOq7H__6hOBk\",\"option\":\"style_option__rd5Qo__6hOBk\",\"is-active\":\"style_is-active__OArQI__6hOBk\",\"is-visited\":\"style_is-visited__gZ5ni__6hOBk\",\"un-expand-shadow\":\"style_un-expand-shadow__fj92e__6hOBk\",\"filter-item-label\":\"style_filter-item-label__C781J__6hOBk\",\"filter-item-field\":\"style_filter-item-field__Ltfr8__6hOBk\",\"filter-drop-tag\":\"style_filter-drop-tag__DD-2P__6hOBk\",\"filter-list-tag\":\"style_filter-list-tag__Qt5hA__6hOBk\",\"filter-tag\":\"style_filter-tag__dUGfu__6hOBk\",\"filter-tag-value\":\"style_filter-tag-value__p-SFv__6hOBk\",\"pop-util-content\":\"style_pop-util-content__bx5zP__6hOBk\",\"pop-util-overlay\":\"style_pop-util-overlay__LEASt__6hOBk\",\"pop-util-footer\":\"style_pop-util-footer__Xat1s__6hOBk\",\"pop-util-text\":\"style_pop-util-text__pzeUy__6hOBk\",\"filter-item-inner\":\"style_filter-item-inner__LVXgh__6hOBk\",\"filter-item-text\":\"style_filter-item-text__MA8tU__6hOBk\",\"filter-item-custom\":\"style_filter-item-custom__UusRa__6hOBk\",\"filter-item-custom-active\":\"style_filter-item-custom-active__uFtny__6hOBk\",\"filter-item-number-range-split\":\"style_filter-item-number-range-split__fVt8E__6hOBk\",\"filter-item-number-input\":\"style_filter-item-number-input__YPO6K__6hOBk\",\"range-picker\":\"style_range-picker__c6ngq__6hOBk\",\"cascader-select-wrap\":\"style_cascader-select-wrap__z5hu7__6hOBk\",\"cascader-dropdown-menu\":\"style_cascader-dropdown-menu__nhAH5__6hOBk\"};","const importMessages = (locale) => {\n  return {\n    \"en-US\": () => import(\"./en-US\"),\n    \"zh-CN\": () => import(\"./zh-CN\"),\n  }[locale]();\n};\n\nexport default importMessages;\n","import { Button, Space } from \"antd\";\nimport StateTag from \"@components/StateTag\";\nimport { FormattedMessage, IntlProvider } from \"@components/Intl\";\nimport style from \"@components/Filter/style.module.scss\";\nimport classnames from \"classnames\";\nimport importMessages from \"@components/Filter/locale\";\n\nconst FilterValueDisplay = ({ value: filterValue, extraExpand, onChange }) => {\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"Filter\">\n      <Space className={style[\"filter-title\"]} align=\"top\" size={16}>\n        <span className={style[\"filter-label\"]}>\n          <FormattedMessage\n            id=\"selectedText\"\n            moduleName=\"Filter\"\n            defaultMessage=\"您已选择\"\n          />\n        </span>\n        {/*<div className={style[\"filter-list\"]}>*/}\n          <div className={style[\"filter-line\"]}>\n            {filterValue.map(({ name, label, value }, index) => {\n              return (\n                <StateTag\n                  key={name}\n                  type=\"filterResult\"\n                  filterName={label}\n                  text={\n                    Array.isArray(value)\n                      ? value\n                          .map((item) => {\n                            return item.label;\n                          })\n                          .join(\"，\")\n                      : value.label\n                  }\n                  closable\n                  onClose={() => {\n                    const newValue = filterValue.slice(0);\n                    newValue.splice(index, 1);\n                    onChange(newValue);\n                  }}\n                />\n              );\n            })}\n            <Space size={4} className={classnames(style[\"un-expand-shadow\"])}>\n              {extraExpand}\n              <Button size=\"small\">\n                <FormattedMessage\n                  id=\"clearAllText\"\n                  moduleName=\"Filter\"\n                  defaultMessage=\"清空全部\"\n                />\n              </Button>\n            </Space>\n            <Space size={4} className={classnames(style[\"un-expand\"])}>\n              {extraExpand}\n              <Button\n                size=\"small\"\n                onClick={() => {\n                  onChange([]);\n                }}\n              >\n                <FormattedMessage\n                  id=\"clearAllText\"\n                  moduleName=\"Filter\"\n                  defaultMessage=\"清空全部\"\n                />\n              </Button>\n            </Space>\n\n        </div>\n        {/*</div>*/}\n      </Space>\n    </IntlProvider>\n  );\n};\n\nexport default FilterValueDisplay;\n","import classnames from \"classnames\";\nimport { Space } from \"antd\";\nimport Icon from \"@components/Icon\";\nimport style from \"./style.module.scss\";\n\nconst FilterItem = ({ open, active, label, children }) => {\n  return (\n    <Space className={style[\"filter-item-wrap\"]}>\n      <div\n        className={classnames(style[\"filter-item\"], {\n          [style[\"is-active\"]]: active,\n          [style[\"is-visited\"]]: open,\n        })}\n      >\n        <Space className={style[\"filter-item-label\"]} size={4}>\n          <div>{label}</div>\n          <Icon\n            className={style[\"filter-item-icon\"]}\n            type=\"icon-triangle-down\"\n          />\n        </Space>\n        <div className={style[\"filter-item-field\"]}>{children}</div>\n      </div>\n    </Space>\n  );\n};\n\nexport default FilterItem;\n","import { createContext, useContext as useReactContext } from \"react\";\n\nexport const context = createContext({});\n\nexport const { Provider } = context;\n\nexport const useContext = () => useReactContext(context);\n","import classnames from \"classnames\";\nimport { useState } from \"react\";\nimport Icon from \"@components/Icon\";\nimport style from \"./style.module.scss\";\nimport { Col, Row, Space } from \"antd\";\nimport { FormattedMessage, IntlProvider } from \"@components/Intl\";\nimport importMessages from \"./locale\";\nimport { useContext } from \"./context\";\nimport get from \"lodash/get\";\n\nconst Line = ({ list, children }) => {\n  const { value, onChange } = useContext();\n  return (\n    <div className={style[\"filter-line\"]}>\n      {list.map((item, index) => {\n        const ComponentItem = item.type;\n        return (\n          <ComponentItem\n            {...item.props}\n            key={item.key || item.props.name || index}\n            value={\n              value\n                ? get(value.get(item.props.name), \"value\")\n                : item.props.value\n            }\n            onChange={\n              onChange\n                ? (value) =>\n                    onChange({\n                      name: item.props.name,\n                      label: item.props.label,\n                      value,\n                    })\n                : item.props.onChange\n            }\n          />\n        );\n      })}\n      {children}\n    </div>\n  );\n};\n\nconst FilterLines = ({ list, displayLine, label, extra, children }) => {\n  const hasMore = list.length > displayLine;\n  const [isExpand, setIsExpand] = useState(false);\n\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"Filter\">\n      <Space\n        className={classnames(style[\"filter-title\"])}\n        align=\"top\"\n        size={16}\n      >\n        <span className={style[\"filter-label\"]}>\n          {label || (\n            <FormattedMessage\n              id=\"filterText\"\n              moduleName=\"Filter\"\n              defaultMessage=\"筛选\"\n            />\n          )}\n        </span>\n        <Row justify=\"space-between\" wrap={false} align=\"middle\">\n          <Col className={style[\"filter-list\"]} flex={1}>\n            {list.slice(0, displayLine).map((item, index) => (\n              <Line key={index} list={item}>\n                {hasMore && isExpand === false && index === displayLine - 1 ? (\n                  <Space\n                    size={4}\n                    className={classnames(\n                      style[\"filter-item\"],\n                      style[\"option\"]\n                    )}\n                    onClick={() => {\n                      setIsExpand((value) => !value);\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"moreText\"\n                      moduleName=\"Filter\"\n                      defaultMessage=\"更多\"\n                    />\n                    <Icon\n                      className={style[\"filter-item-option-icon\"]}\n                      type=\"icon-arrow-thin-down\"\n                    />\n                  </Space>\n                ) : null}\n              </Line>\n            ))}\n          </Col>\n          <Col>{extra}</Col>\n        </Row>\n      </Space>\n      <Space\n        className={classnames(style[\"filter-title\"], \"filter-title-wrap\")}\n        align=\"center\"\n        size={16}\n      >\n        {children}\n      </Space>\n      <Space\n        className={classnames(style[\"filter-title\"], \"filter-title-wrap\", {\n          [style[\"filter-title-hidden\"]]: !(hasMore && isExpand),\n        })}\n        align=\"top\"\n        size={16}\n      >\n        <span className={style[\"filter-label\"]}>\n          <FormattedMessage\n            id=\"moreText\"\n            moduleName=\"Filter\"\n            defaultMessage=\"更多\"\n          />\n        </span>\n        <div className={style[\"filter-list\"]}>\n          {list.slice(displayLine).map((item, index) => (\n            <Line key={index} list={item}>\n              {index === list.length - displayLine - 1 && (\n                <>\n                  <Space\n                    size={4}\n                    className={classnames(style[\"un-expand-shadow\"])}\n                  >\n                    <Space\n                      size={4}\n                      className={classnames(\n                        style[\"option\"],\n                        style[\"filter-item\"]\n                      )}\n                    >\n                      <FormattedMessage\n                        id=\"toggleUpText\"\n                        moduleName=\"Filter\"\n                        defaultMessage=\"收起\"\n                      />\n                      <Icon\n                        className={style[\"filter-item-option-icon\"]}\n                        type=\"icon-arrow-thin-up\"\n                      />\n                    </Space>\n                  </Space>\n                  <Space\n                    size={4}\n                    className={classnames(style[\"un-expand\"])}\n                    onClick={() => {\n                      setIsExpand((value) => !value);\n                    }}\n                  >\n                    <Space\n                      size={4}\n                      className={classnames(\n                        style[\"option\"],\n                        style[\"filter-item\"]\n                      )}\n                    >\n                      <FormattedMessage\n                        id=\"toggleUpText\"\n                        moduleName=\"Filter\"\n                        defaultMessage=\"收起\"\n                      />\n                      <Icon\n                        className={style[\"filter-item-option-icon\"]}\n                        type=\"icon-arrow-thin-up\"\n                      />\n                    </Space>\n                  </Space>\n                </>\n              )}\n            </Line>\n          ))}\n        </div>\n      </Space>\n    </IntlProvider>\n  );\n};\n\nFilterLines.defaultProps = {\n  displayLine: 1,\n};\n\nexport default FilterLines;\n","import { useState, useMemo } from \"react\";\nimport { Button, Col, Popover, Row } from \"antd\";\nimport FilterItem from \"./FilterItem\";\nimport isNotEmpty from \"@common/utils/isNotEmpty\";\nimport classnames from \"classnames\";\nimport { FormattedMessage } from \"@components/Intl\";\nimport style from \"./style.module.scss\";\n\nconst PopoverItem = ({\n  value,\n  label,\n  onValidate,\n  overlayClassName,\n  placement,\n  onOpenChange,\n  onChange,\n  children,\n}) => {\n  const [state, setState] = useState(value);\n  const [open, setOpen] = useState(false);\n  const disabled = useMemo(() => {\n    return onValidate && !onValidate(state);\n  }, [onValidate, state]);\n  return (\n    <Popover\n      open={open}\n      trigger=\"click\"\n      placement={placement}\n      overlayClassName={classnames(style[\"pop-util-overlay\"], overlayClassName)}\n      onOpenChange={(open) => {\n        setOpen(open);\n        setState(value);\n        onOpenChange && onOpenChange(open);\n      }}\n      content={\n        <span\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <div className={style[\"pop-util-content\"]}>\n            {children({ value: state, onChange: setState })}\n          </div>\n          <Row className={style[\"pop-util-footer\"]} justify=\"end\" gutter={8}>\n            <Col>\n              <Button\n                size=\"small\"\n                onClick={() => {\n                  setOpen(false);\n                  onOpenChange && onOpenChange(false);\n                }}\n              >\n                <FormattedMessage\n                  id=\"cancelText\"\n                  moduleName=\"Filter\"\n                  defaultMessage=\"取消\"\n                />\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                size=\"small\"\n                type=\"primary\"\n                disabled={disabled}\n                onClick={() => {\n                  setOpen(false);\n                  onOpenChange && onOpenChange(false);\n                  onChange && onChange(state);\n                }}\n              >\n                <FormattedMessage\n                  id=\"determineText\"\n                  moduleName=\"Filter\"\n                  defaultMessage=\"确定\"\n                />\n              </Button>\n            </Col>\n          </Row>\n        </span>\n      }\n    >\n      <span>\n        <FilterItem open={open} active={isNotEmpty(value)} label={label} />\n      </span>\n    </Popover>\n  );\n};\n\nPopoverItem.defaultProps = {\n  placeholder: \"请选择\",\n  placement: \"bottomLeft\",\n};\n\nexport default PopoverItem;\n","import { useState } from \"react\";\nimport isNotEmpty from \"@common/utils/isNotEmpty\";\nimport FilterItem from \"./FilterItem\";\nimport style from \"./style.module.scss\";\n\nconst withFieldItem =\n  (WrappedComponent) =>\n  ({ value, onChange, label, ...props }) => {\n    const [open, setOpen] = useState(false);\n    return (\n      <FilterItem label={label} open={open} active={isNotEmpty(value)}>\n        <WrappedComponent\n          {...props}\n          className={style[\"filter-item-inner\"]}\n          value={value}\n          onChange={onChange}\n          valueType=\"all\"\n          onOpenChange={setOpen}\n        />\n      </FilterItem>\n    );\n  };\n\nexport default withFieldItem;\n","import transform from \"lodash/transform\";\n\nconst getFilterValue = (filterValue) => {\n  return transform(\n    filterValue,\n    (result, { name, value }) => {\n      result[name] = Array.isArray(value)\n        ? value.map(({ value }) => value)\n        : value.value;\n    },\n    {}\n  );\n};\n\nexport default getFilterValue;\n","const FilterItemContainer = ({ children, ...props }) => {\n  return children(props);\n};\n\nexport default FilterItemContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"scroll-loader\":\"style_scroll-loader__Rcuti__6hOBk\",\"is-popup\":\"style_is-popup__pCRv2__6hOBk\"};","import SelectInnerInput from \"@common/components/SelectInnerInput\";\nimport { useMemo, useRef } from \"react\";\nimport useRefCallback from \"@kne/use-ref-callback\";\nimport style from \"./style.module.scss\";\nimport classnames from \"classnames\";\nimport { Space, Tree } from \"antd\";\nimport SimpleBar from \"@common/components/SimpleBar\";\nimport get from \"lodash/get\";\nimport omit from \"lodash/omit\";\nimport memoize from \"lodash/memoize\";\n\nconst useSelectInnerContext = SelectInnerInput.useContext;\n\nconst TreeFieldInner = ({ value: selected, setValue: setSelect, size }) => {\n  const { fetchApi, props } = useSelectInnerContext();\n  const dataFormat = useRefCallback(props.dataFormat);\n  const { single, isPopup, searchPlaceholder, ...others } = props;\n  const fieldNamesRef = useRef(props.fieldNames);\n  fieldNamesRef.current = props.fieldNames;\n  const fetchData = fetchApi.data;\n  const { treeData } = useMemo(\n    () =>\n      dataFormat(fetchData, {\n        fieldNames: fieldNamesRef.current,\n      }),\n    [dataFormat, fetchData]\n  );\n\n  return (\n    <Space direction=\"vertical\" size={16}>\n      <SimpleBar\n        className={classnames(style[\"scroll-loader\"], {\n          [style[\"is-popup\"]]: props.isPopup,\n        })}\n      >\n        <Tree\n          {...omit(others, [\"value\", \"valueType\", \"children\", \"dataFormat\"])}\n          size={size}\n          checkable={!single}\n          treeData={treeData}\n          onCheck={setSelect}\n          checkedKeys={selected}\n          onSelect={\n            single\n              ? setSelect\n              : (selectKeys) => {\n                  const selectKey = selectKeys[0];\n                  if (selectKey === void 0) {\n                    return;\n                  }\n                  setSelect((current) => {\n                    const newCurrent = current.slice(0);\n                    const index = newCurrent.indexOf(selectKey);\n                    if (index > -1) {\n                      newCurrent.splice(index, 1);\n                    } else {\n                      newCurrent.push(selectKey);\n                    }\n                    return newCurrent;\n                  });\n                }\n          }\n          selectedKeys={single ? selected : undefined}\n        />\n      </SimpleBar>\n    </Space>\n  );\n};\n\nconst TreeField = ({ maxLength, dataFormat, ...props }) => {\n  return (\n    <SelectInnerInput\n      {...props}\n      dataFormat={(data) => {\n        return dataFormat(data, { fieldNames: props.fieldNames });\n      }}\n    >\n      {({ value, setValue }) => {\n        return (\n          <TreeFieldInner size={maxLength} value={value} setValue={setValue} />\n        );\n      }}\n    </SelectInnerInput>\n  );\n};\n\nTreeField.defaultProps = {\n  searchPlaceholder: \"搜索\",\n  maxLength: Number.MAX_VALUE,\n  size: \"middle\",\n  isPopup: true,\n  checkStrictly: false,\n  dataFormat: (data, { fieldNames }) => {\n    const treeToList = memoize((nodeList, { fieldNames }) => {\n      const list = [];\n      const core = (nodeList) => {\n        if (!(Array.isArray(nodeList) && nodeList.length > 0)) {\n          return;\n        }\n        nodeList.forEach((node) => {\n          const value = node[get(fieldNames, \"key\", \"key\")],\n            label = node[get(fieldNames, \"title\", \"title\")],\n            children = node[get(fieldNames, \"children\", \"children\")];\n          list.push({ id: value, value, label });\n          core(children);\n        });\n      };\n      core(nodeList);\n      return list;\n    });\n\n    return {\n      treeData: data,\n      list: treeToList(data, { fieldNames }),\n    };\n  },\n};\n\nexport default TreeField;\n","import PopoverItem from \"../PopoverItem\";\nimport { Input } from \"antd\";\nimport get from \"lodash/get\";\nimport style from \"../style.module.scss\";\n\nconst InputFilterItem = ({\n  label,\n  value,\n  onChange,\n  placeholder,\n  onValidate,\n  overlayClassName,\n  placement,\n  onOpenChange,\n  ...props\n}) => {\n  return (\n    <PopoverItem\n      label={label}\n      value={value}\n      onChange={onChange}\n      {...{ onValidate, overlayClassName, placement, onOpenChange }}\n    >\n      {({ value, onChange }) => (\n        <Input\n          {...props}\n          placeholder={placeholder || `请输入${label}`}\n          className={style[\"filter-item-text\"]}\n          value={get(value, \"value\", \"\")}\n          onChange={(e) =>\n            onChange(\n              e.target.value\n                ? { label: e.target.value, value: e.target.value }\n                : null\n            )\n          }\n        />\n      )}\n    </PopoverItem>\n  );\n};\n\nexport default InputFilterItem;\n","import { DatePicker } from \"antd\";\nimport withFieldItem from \"../withFieldItem\";\nimport dayjs from \"dayjs\";\n\nconst DatePickerFilterItem = withFieldItem(\n  ({ value, onChange, picker, ...props }) => {\n    return (\n      <DatePicker\n        {...props}\n        picker={picker}\n        value={value && dayjs(value.value)}\n        onChange={(value) => {\n          const { format } = Object.assign({ format: \"YYYY-MM-DD\" }, props);\n          value &&\n            onChange({\n              label:\n                picker !== \"date\"\n                  ? `${value.startOf(picker).format(format)}~${value\n                      .endOf(picker)\n                      .format(format)}`\n                  : value.format(format),\n              value: new Date(value.startOf(picker).valueOf()),\n            });\n        }}\n      />\n    );\n  }\n);\n\nDatePickerFilterItem.defaultProps = \"date\";\n\nexport default DatePickerFilterItem;\n","import { DatePicker } from \"antd\";\nimport withFieldItem from \"../withFieldItem\";\nimport dayjs from \"dayjs\";\n\nconst DateRangePickerFilterItem = withFieldItem(\n  ({ value, onChange, ...props }) => {\n    return (\n      <DatePicker.RangePicker\n        {...props}\n        allowEmpty={[false, false]}\n        value={\n          value &&\n          Array.isArray(value.value) &&\n          value.value.length === 2 &&\n          value.value.map((item) => dayjs(item))\n        }\n        onChange={(value) => {\n          const { format } = Object.assign({ format: \"YYYY-MM-DD\" }, props);\n          onChange({\n            label: value.map((item) => item.format(format)).join(\"~\"),\n            value: value.map((item) => new Date(item.valueOf())),\n          });\n        }}\n      />\n    );\n  }\n);\n\nexport default DateRangePickerFilterItem;\n","import PopoverItem from \"../PopoverItem\";\nimport TypeDateRangePickerField from \"@common/components/TypeDateRangePickerField\";\nimport get from \"lodash/get\";\nimport style from \"../style.module.scss\";\nimport dayjs from \"dayjs\";\n\nconst TypeDateRangePickerFilterItem = ({\n  label,\n  value,\n  onChange,\n  ...props\n}) => {\n  return (\n    <PopoverItem\n      label={label}\n      value={value}\n      onChange={onChange}\n      onValidate={(item) => {\n        const value = item?.value;\n        return (\n          value?.type && Array.isArray(value?.value) && value.value.length === 2\n        );\n      }}\n    >\n      {({ value, onChange }) => (\n        <TypeDateRangePickerField\n          {...props}\n          className={style[\"filter-item-text\"]}\n          value={get(value, \"value\")}\n          onChange={(pickerValue) => {\n            const { format } = Object.assign({ format: \"YYYY-MM-DD\" }, props);\n            const value = pickerValue?.value || [];\n            onChange({\n              label: (() => {\n                if (value[0] && !value[1]) {\n                  return `${dayjs(value[0]).format(format)}以后`;\n                }\n                if (!value[0] && value[1]) {\n                  return `${dayjs(value[1]).format(format)}以前`;\n                }\n                if (value[0] && value[1]) {\n                  return `${dayjs(value[0]).format(format)}~${dayjs(\n                    value[1]\n                  ).format(format)}`;\n                }\n                return \"\";\n              })(),\n              value: pickerValue,\n            });\n          }}\n        />\n      )}\n    </PopoverItem>\n  );\n};\n\nexport default TypeDateRangePickerFilterItem;\n","import { FormattedMessage } from \"@components/Intl\";\nimport withFieldItem from \"../withFieldItem\";\nimport AdvancedSelectField, {\n  UserField,\n} from \"@common/components/AdvancedSelectField\";\nimport FunctionSelectField from \"@common/components/FunctionSelectField\";\nimport AddressSelectField from \"@common/components/AddressSelectField\";\nimport IndustrySelectField from \"@common/components/IndustrySelectField\";\nimport CascaderField from \"@common/components/CascaderField\";\nimport TreeField from \"@common/components/TreeField\";\nimport InputFilterItemField from \"./InputFilterItem\";\n\nconst withInputDefaultPlaceholder =\n  (WrappedComponent) =>\n  ({ placeholder, label, ...props }) =>\n    (\n      <FormattedMessage\n        id=\"defaultInputPlaceholder\"\n        moduleName=\"Filter\"\n        values={{ label }}\n      >\n        {(text) => {\n          return (\n            <WrappedComponent\n              {...props}\n              label={label}\n              placeholder={placeholder || text}\n            />\n          );\n        }}\n      </FormattedMessage>\n    );\n\nexport const AdvancedSelectFilterItem = withFieldItem(AdvancedSelectField);\nexport const UserFilterItem = withFieldItem(UserField);\nexport const FunctionSelectFilterItem = withFieldItem(FunctionSelectField);\nexport const IndustrySelectFilterItem = withFieldItem(IndustrySelectField);\n\nexport const CityFilterItem = withFieldItem(AddressSelectField);\n\nexport const CascaderFilterItem = withFieldItem(CascaderField);\n\nexport const TreeFilterItem = withFieldItem(TreeField);\nexport const InputFilterItem =\n  withInputDefaultPlaceholder(InputFilterItemField);\n\nexport { default as DatePickerFilterItem } from \"./DatePickerFilterItem\";\nexport { default as DateRangePickerFilterItem } from \"./DateRangePickerFilterItem\";\nexport { default as TypeDateRangePickerFilterItem } from \"./TypeDateRangePickerFilterItem\";\n","import { Provider } from \"./context\";\nimport useControlValue from \"@kne/use-control-value\";\nimport FilterLines from \"./FilterLines\";\nimport FilterValueDisplay from \"./FilterValueDisplay\";\nimport clone from \"lodash/clone\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\nimport { useMemo } from \"react\";\nimport { isNotEmpty } from \"@components/Common\";\nimport importMessages from \"@components/FormInfo/locale\";\nimport { IntlProvider } from \"@components/Intl\";\n\nconst Filter = (props) => {\n  const { extraExpand, className, ...others } = props;\n  const [valueBase, onChange] = useControlValue(props);\n\n  const value = useMemo(() => {\n    return valueBase.filter((item) => isNotEmpty(item.value));\n  }, [valueBase]);\n\n  const filterValue = useMemo(() => {\n    return new Map(value.map((item) => [item.name, item]));\n  }, [value]);\n\n  return (\n    <IntlProvider moduleName=\"Filter\" importMessages={importMessages}>\n      <Provider\n        value={{\n          value: filterValue,\n          onChange: (item) => {\n            const newFilterValue = clone(filterValue);\n            item.value\n              ? newFilterValue.set(item.name, item)\n              : newFilterValue.delete(item.name);\n            onChange?.(Array.from(newFilterValue.values()));\n          },\n        }}\n      >\n        <div className={classnames(style[\"filter\"], className)}>\n          <FilterLines {...others} />\n          {value && value.length > 0 && (\n            <FilterValueDisplay\n              value={value}\n              onChange={onChange}\n              extraExpand={extraExpand}\n            />\n          )}\n        </div>\n      </Provider>\n    </IntlProvider>\n  );\n};\n\nFilter.defaultProps = {\n  defaultValue: [],\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"select-date-box\":\"style_select-date-box__dAZdQ__6hOBk\",\"dot\":\"style_dot__-kCbf__6hOBk\",\"row\":\"style_row__jF4Ep__6hOBk\",\"time\":\"style_time__ZqsGI__6hOBk\",\"title\":\"style_title__UfoFQ__6hOBk\",\"selected\":\"style_selected__ZAhNv__6hOBk\",\"not-selected\":\"style_not-selected__1ZL01__6hOBk\",\"other\":\"style_other__wj9bp__6hOBk\",\"other-tooltip\":\"style_other-tooltip__8Wd+S__6hOBk\",\"calendar-tooltip\":\"style_calendar-tooltip__oW3wo__6hOBk\",\"tooltip-header\":\"style_tooltip-header__lvQv7__6hOBk\",\"tooltip-body\":\"style_tooltip-body__ZIZC6__6hOBk\",\"tooltip-box\":\"style_tooltip-box__ymQFN__6hOBk\"};","import style from \"./style.module.scss\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport scrollGridPlugin from \"@fullcalendar/scrollgrid\";\nimport Tooltip from \"@components/Tooltip\";\nimport { Divider } from \"antd\";\nimport classnames from \"classnames\";\nimport get from \"lodash/get\";\nimport orderBy from \"lodash/orderBy\";\nimport groupBy from \"lodash/groupBy\";\nimport dayjs from \"dayjs\";\nimport merge from \"lodash/merge\";\nimport flatten from \"lodash/flatten\";\n\nconst Calendar = (props) => {\n  return <FullCalendar {...props} />;\n};\n\nconst showStrLength = 6;\n\nconst getByteLen = function (str) {\n  let len = 0;\n  for (let i = 0; i < str.length; i++) {\n    str.charCodeAt(i) < 256 ? (len += 1) : (len += 2);\n  }\n  return len;\n};\n\nconst ContentComponent = ({ main, title }) => {\n  const { disabled, date, candidateName, start, end, onClick } = main || {};\n  const _start = dayjs(start).format(\"HH:mm\");\n  const _end = dayjs(end).format(\"HH:mm\");\n  const _end_tooltip =\n    dayjs(start).format(\"YYYY-MM-DD\") === dayjs(end).format(\"YYYY-MM-DD\")\n      ? dayjs(end).format(\"HH:mm\")\n      : dayjs(end).format(\"YYYY-MM-DD HH:mm\");\n  const timeText = `${_start}-${_end}`;\n  const _timeTextTooltip = `${_start} - ${_end_tooltip}`;\n\n  const contentHtml = (\n    <div\n      className={style[\"row\"]}\n      onClick={() => {\n        if (disabled) return;\n        onClick && onClick(main);\n      }}\n    >\n      <span className={classnames(\"select-dot\", style[\"dot\"])}></span>\n      <span className={classnames(\"select-time\", style[\"time\"])}>\n        {timeText}\n      </span>\n      <span className={classnames(\"select-title\", style[\"title\"])}>\n        {getByteLen(title) > showStrLength\n          ? title.slice(0, showStrLength - 3) + \"...\"\n          : title}\n      </span>\n    </div>\n  );\n\n  return (\n    <div\n      className={classnames(\n        style[\"select-date-box\"],\n        disabled ? style[\"selected\"] : style[\"not-selected\"]\n      )}\n    >\n      {disabled ? (\n        <Tooltip\n          overlayClassName={style[\"calendar-tooltip\"]}\n          content={\n            <div className={style[\"tooltip\"]}>\n              <div className={style[\"tooltip-header\"]}>客户面试</div>\n              <Divider />\n              <div className={style[\"tooltip-body\"]}>\n                <div className={style[\"tooltip-box\"]}>\n                  <label>候选人：</label>\n                  <div>{candidateName}</div>\n                </div>\n                <div className={style[\"tooltip-box\"]}>\n                  <label>面试时间：</label>\n                  <div>\n                    {date} {_timeTextTooltip}\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n          placement={\"rightTop\"}\n        >\n          {contentHtml}\n        </Tooltip>\n      ) : (\n        <Tooltip\n          overlayClassName={style[\"calendar-tooltip\"]}\n          content={\n            <div className={style[\"tooltip\"]}>\n              <div className={style[\"tooltip-header\"]}>日程</div>\n              <Divider />\n              <div className={style[\"tooltip-body\"]}>\n                <div className={style[\"tooltip-box\"]}>\n                  <label>日程标题：</label>\n                  <div>{title || \"-\"}</div>\n                </div>\n                <div className={style[\"tooltip-box\"]}>\n                  <label>日程时间：</label>\n                  <div>\n                    {date} {_timeTextTooltip}\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n          placement={\"rightTop\"}\n        >\n          {contentHtml}\n        </Tooltip>\n      )}\n    </div>\n  );\n};\n\nconst renderEventContent = (eventInfo = {}) => {\n  const { event } = eventInfo || {};\n  const title = event._def.title || \"\";\n  const main = get(event, \"_def.extendedProps.main\") || {};\n  const { showOther } = main;\n  const { num, content } = showOther || {};\n\n  return (\n    <>\n      <ContentComponent title={title} main={main} />\n      {showOther && (\n        <div\n          className={style[\"other\"]}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <Tooltip\n            overlayClassName={style[\"calendar-tooltip\"]}\n            content={\n              <div className={style[\"other-tooltip\"]}>\n                {(content || []).map((item) => {\n                  return (\n                    <ContentComponent\n                      key={item.id}\n                      main={item.main}\n                      title={item.title}\n                    />\n                  );\n                })}\n              </div>\n            }\n            placement={\"rightTop\"}\n          >\n            <div>还有{num}项…</div>\n          </Tooltip>\n        </div>\n      )}\n    </>\n  );\n};\n\nCalendar.defaultProps = {\n  timezone: \"UTC\",\n  plugins: [dayGridPlugin, interactionPlugin, timeGridPlugin, scrollGridPlugin],\n  initialView: \"dayGridMonth\",\n  aspectRatio: 1.6,\n  weekends: true,\n  slotEventOverlap: false,\n  displayEventEnd: true,\n  editable: false,\n  firstDay: 1,\n  buttonText: {\n    today: \"今天\",\n    month: \"月\",\n  },\n  dayMinWidth: 100,\n  locale: \"zh-cn\",\n  headerToolbar: {\n    center: \"\",\n    left: \"prev title next\",\n    right: \"today\",\n  },\n  height: \"auto\",\n  handleWindowResize: false,\n  eventContent: renderEventContent,\n  dateClick: () => {},\n  eventClick: () => {},\n  initialDate: dayjs().format(\"YYYY-MM-DD\"),\n};\n\nexport const transformEvents = (events, onClickOtherItem) => {\n  if (events.length === 0) return [];\n\n  const arr = events.map((item, index) => ({\n    ...item,\n    title: Boolean(item?.bookable === 0) ? \"已预约\" : item.title,\n    main: {\n      id: index,\n      title: Boolean(item?.bookable === 0) ? \"已预约\" : item.title,\n      candidateName: item.title || \"-\",\n      disabled: Boolean(item?.bookable === 0),\n      date: dayjs(item.start).format(\"YYYY-MM-DD\"),\n      start: dayjs(item.start).format(\"YYYY-MM-DD HH:mm\"),\n      end: dayjs(item.end).format(\"YYYY-MM-DD HH:mm\"),\n    },\n  }));\n  const groupList = groupBy(arr, (item) => {\n    return dayjs(item.start).startOf(\"day\").format(\"YYYY-MM-DD\");\n  });\n\n  let newEvents = [];\n  Object.keys(groupList).forEach((key) => {\n    let _newEvents = [];\n    const orderTimeArr = orderBy(\n      groupList[key],\n      [\"start\", \"end\"],\n      [\"asc\", \"desc\"]\n    );\n\n    if (orderTimeArr.length > 4) {\n      _newEvents = orderTimeArr.slice(0, 3);\n      _newEvents[2] = merge({}, orderTimeArr[2], {\n        main: {\n          showOther: {\n            num: orderTimeArr.length - 3,\n            disabled: true,\n            content: orderTimeArr.slice(3, orderTimeArr.length).map((item) => ({\n              ...item,\n              main: {\n                ...item.main,\n                onClick: onClickOtherItem || (() => {}),\n              },\n            })),\n          },\n        },\n      });\n    } else {\n      _newEvents = orderTimeArr.slice(0, orderTimeArr.length);\n    }\n    newEvents.push(_newEvents);\n  });\n  console.log(\">>>>> newEvents\", flatten(newEvents));\n  return flatten(newEvents);\n};\n\nexport default Calendar;\n","// extracted by mini-css-extract-plugin\nexport default {\"high-color\":\"style_high-color__-DN7m__6hOBk\"};","import { createContext, createElement, useContext, useMemo } from \"react\";\nimport style from \"./style.module.scss\";\n\nconst context = createContext({});\nconst { Provider } = context;\n\nconst escapeSpecialCharacter = (str) => {\n  const pattern =\n    /[`+~!@#_$%^*()=|{}':;,\\\\[\\].<>/?！￥…&（）—【】‘；：”“。，、？\\s]/g;\n  return str.replace(pattern, (match) => \"\\\\\" + match);\n};\n\nexport const HighlightProvider = ({ list, children, highlightClassName }) => {\n  return (\n    <Provider value={{ list, highlightClassName }}>\n      <span data-testid=\"components-core-highlight\">{children}</span>\n    </Provider>\n  );\n};\nHighlightProvider.defaultProps = {\n  caseSensitive: false,\n  list: [],\n  highlightClassName: \"\",\n};\nconst Highlight = ({ tagName, children }) => {\n  const { list, caseSensitive, highlightClassName } = useContext(context);\n  const renderStr = useMemo(() => {\n    if (!children) return;\n    let target = children?.toString();\n    if (!list || list.length === 0) {\n      return target;\n    }\n    const allWordsRe = list\n      .map(function (word) {\n        return \"(\" + escapeSpecialCharacter(word) + \")\";\n      })\n      .join(\"|\");\n\n    const regExp = new RegExp(allWordsRe, caseSensitive ? \"gm\" : \"gim\");\n\n    return target.replace(regExp, (innerMatch) => {\n      return `<font class=\"${style[\"high-color\"]} ${highlightClassName}\">${innerMatch}</font>`;\n    });\n  }, [list, caseSensitive, children, highlightClassName]);\n\n  return createElement(tagName, {\n    dangerouslySetInnerHTML: { __html: renderStr },\n  });\n};\nHighlight.defaultProps = {\n  tagName: \"span\",\n  children: \"\",\n};\n\n// Highlight.propTypes={\n//     children:PropTypes.string\n// }\nexport default Highlight;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"style_overlay__ZS5Wz__6hOBk\",\"overlay-content\":\"style_overlay-content__IVFmc__6hOBk\",\"state-tag\":\"style_state-tag__+59RJ__6hOBk\"};","import style from \"./style.module.scss\";\nimport {\n  useState,\n  useCallback,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n} from \"react\";\nimport localStorage from \"@common/utils/localStorage\";\nimport StateTag from \"@components/StateTag\";\nimport { Popover, Space } from \"antd\";\nimport dropWhile from \"lodash/dropWhile\";\nimport uniqBy from \"lodash/uniqBy\";\nimport useClickOutside from \"@kne/use-click-outside\";\nimport classnames from \"classnames\";\n\nconst HistoryStore = ({\n  className,\n  overlayClassName,\n  storeName,\n  maxLength,\n  label,\n  children,\n  onSelect,\n  zIndex,\n  getPopupContainer,\n}) => {\n  const [list, setList] = useState(() => {\n    return localStorage.getItem(storeName) || [];\n  });\n  const [open, setOpen] = useState(false);\n  const openHistory = useCallback(() => {\n    if (list.length === 0) {\n      return;\n    }\n    setOpen(true);\n  }, [list]);\n  const storeNameRef = useRef(storeName);\n  storeNameRef.current = storeName;\n  useEffect(() => {\n    localStorage.setItem(storeNameRef.current, list);\n  }, [list]);\n\n  const appendHistory = useCallback(\n    (item) => {\n      if (item.value && item.label) {\n        setList((list) => {\n          const newList = dropWhile(list, { value: item.value });\n          newList.splice(0, 0, item);\n          return maxLength\n            ? uniqBy(newList, \"value\").slice(0, maxLength)\n            : newList;\n        });\n      }\n      setOpen(false);\n    },\n    [maxLength]\n  );\n\n  const close = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const outerRef = useClickOutside(close);\n\n  const popoverChildrenRef = useRef(null),\n    popoverContentRef = useRef(null);\n  outerRef.current = {\n    contains: (target) => {\n      return (\n        popoverChildrenRef.current.contains(target) ||\n        (open && popoverContentRef.current.contains(target))\n      );\n    },\n  };\n\n  const onSelectRef = useRef(null);\n  const setOnSelect = (callback) => {\n    onSelectRef.current = callback;\n  };\n\n  const [width, setWidth] = useState(0);\n\n  useLayoutEffect(() => {\n    const callback = () => {\n      setWidth(popoverChildrenRef.current.clientWidth);\n    };\n    callback();\n    const resizeObserver = new ResizeObserver(callback);\n    resizeObserver.observe(popoverChildrenRef.current);\n    const mutationObserver = new MutationObserver(callback);\n    mutationObserver.observe(popoverChildrenRef.current, {\n      subtree: true,\n      childList: true,\n    });\n    return () => {\n      mutationObserver.disconnect();\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  return (\n    <Popover\n      zIndex={zIndex}\n      placement=\"bottom\"\n      transitionName={\"ant-slide-up\"}\n      arrow={false}\n      open={open}\n      getPopupContainer={getPopupContainer}\n      overlayClassName={classnames(overlayClassName, style[\"overlay\"])}\n      content={\n        <div\n          className={style[\"overlay-content\"]}\n          style={{ width }}\n          ref={popoverContentRef}\n        >\n          <Space direction=\"vertical\">\n            <div>{label}</div>\n            <Space wrap>\n              {list.map((item) => (\n                <StateTag\n                  className={style[\"state-tag\"]}\n                  text={item.label}\n                  type={\"result\"}\n                  onClick={() => {\n                    onSelect && onSelect(item.value, item);\n                    onSelectRef.current &&\n                      onSelectRef.current(item.value, item);\n                    close();\n                    appendHistory(item);\n                  }}\n                />\n              ))}\n            </Space>\n          </Space>\n        </div>\n      }\n    >\n      <div ref={popoverChildrenRef} className={classnames(className)}>\n        {children({\n          open,\n          openHistory,\n          appendHistory,\n          setOnSelect,\n          close,\n        })}\n      </div>\n    </Popover>\n  );\n};\n\nHistoryStore.defaultProps = {\n  maxLength: 5,\n  label: \"最近搜索\",\n  storeName: \"HISTORY_STORE_KEY\",\n};\n\nexport default HistoryStore;\n","import { createContext, useContext as useReactContext } from \"react\";\n\nexport const defaultProps = {\n  menu: null,\n  filter: null,\n  menuOpen: true,\n  menuWidth: \"240px\",\n  menuFixed: true,\n  menuCloseButton: true,\n  backgroundColor: null,\n  header: null,\n  headerHeight: 0,\n  headerFixed: true,\n  headerInfo: null,\n  backUrl: null,\n  title: null,\n  titleExtra: null,\n  titleLeftExtra: null,\n  noMargin: false,\n  noPadding: false,\n  optionFooterHeight: 0,\n  option: null,\n  optionWidth: \"400px\",\n  optionNoPadding: false,\n  optionFixed: true,\n  optionFooter: null,\n};\n\nexport const context = createContext({});\n\nexport const { Provider, Consumer } = context;\n\nexport const useContext = () => {\n  return useReactContext(context);\n};\n\nexport default context;\n","// extracted by mini-css-extract-plugin\nexport default {\"layout\":\"style_layout__k+lxR__6hOBk\",\"page-content\":\"style_page-content__4XeN8__6hOBk\",\"page-main\":\"style_page-main__P0yEF__6hOBk\",\"page-main-content\":\"style_page-main-content__1OVPN__6hOBk\",\"table-page\":\"style_table-page__JkbLf__6hOBk\",\"helper-guide\":\"style_helper-guide__vzw4z__6hOBk\",\"page-outer\":\"style_page-outer__2a6iH__6hOBk\",\"no-margin\":\"style_no-margin__S6caT__6hOBk\",\"page-menu\":\"style_page-menu__CZSa9__6hOBk\",\"closed\":\"style_closed__hmnft__6hOBk\",\"page-menu-inner\":\"style_page-menu-inner__rmKpu__6hOBk\",\"page-menu-main\":\"style_page-menu-main__OXg2M__6hOBk\",\"page-option-main\":\"style_page-option-main__LyfT3__6hOBk\",\"page-menu-main-outer\":\"style_page-menu-main-outer__yY+-Q__6hOBk\",\"page-option\":\"style_page-option__diS2S__6hOBk\",\"page-option-inner\":\"style_page-option-inner__Fj1JH__6hOBk\",\"page-option-footer\":\"style_page-option-footer__d7xE0__6hOBk\",\"fixed-container\":\"style_fixed-container__1VZwY__6hOBk\",\"is-fixed\":\"style_is-fixed__1aQhp__6hOBk\",\"page-menu-btn-outer\":\"style_page-menu-btn-outer__iVJiW__6hOBk\",\"page-menu-btn\":\"style_page-menu-btn__BiTy8__6hOBk\",\"page-title\":\"style_page-title__zw-Fd__6hOBk\",\"page-title-text\":\"style_page-title-text__Rj4RC__6hOBk\",\"no-padding\":\"style_no-padding__V7Dwy__6hOBk\",\"page-header\":\"style_page-header__a813p__6hOBk\",\"page-header-info\":\"style_page-header-info__cMrZR__6hOBk\",\"layout-menu\":\"style_layout-menu__yiab0__6hOBk\",\"sub-menu\":\"style_sub-menu__dyqK7__6hOBk\",\"no-collapsed\":\"style_no-collapsed__76h8W__6hOBk\",\"has-not-children\":\"style_has-not-children__fnjRK__6hOBk\",\"table-page-top\":\"style_table-page-top__bt1l9__6hOBk\",\"error-component\":\"style_error-component__HvghB__6hOBk\",\"state-bar-page\":\"style_state-bar-page__+aUM4__6hOBk\",\"back-icon\":\"style_back-icon__79v2G__6hOBk\"};","import style from \"../style.module.scss\";\nimport classnames from \"classnames\";\n\nconst FixedContainer = ({ className, isFixed, children }) => {\n  if (isFixed) {\n    return (\n      <div\n        className={classnames(\n          className,\n          \"fixed-container\",\n          style[\"fixed-container\"],\n          {\n            [style[\"is-fixed\"]]: isFixed,\n          }\n        )}\n      >\n        {children}\n      </div>\n    );\n  }\n  return (\n    <div\n      className={classnames(\n        className,\n        \"fixed-container\",\n        style[\"fixed-container\"]\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default FixedContainer;\n","import { Button, Col } from \"antd\";\nimport classnames from \"classnames\";\nimport style from \"../style.module.scss\";\nimport FixedContainer from \"./FixedContainer\";\nimport { useContext } from \"../context\";\nimport Icon from \"@components/Icon\";\nimport SimpleBar from \"@common/components/SimpleBar\";\nimport { useLocation } from \"react-router-dom\";\nimport get from \"lodash/get\";\nimport isNotEmpty from \"@utils/isNotEmpty\";\nimport localStorage from \"@utils/localStorage\";\nimport { useMemo } from \"react\";\n\nconst pageMenuOpenKey = \"CORE_PAGE_MENU_OPEN_KEY\";\n\nexport const useMenuOpen = () => {\n  const location = useLocation();\n  const pathModuleName = location.pathname.split(\"/\")[1];\n  return useMemo(() => {\n    const pageResult = localStorage.getItem(pageMenuOpenKey) || {};\n    return isNotEmpty(get(pageResult, pathModuleName))\n      ? get(pageResult, pathModuleName)\n      : true;\n  }, [pathModuleName]);\n};\n\nconst Menu = () => {\n  const { pageProps, setPageProps } = useContext();\n  const { menu, menuOpen, menuWidth, menuFixed, menuCloseButton } = pageProps;\n\n  const location = useLocation();\n  const pathModuleName = location.pathname.split(\"/\")[1];\n\n  return menu ? (\n    <Col\n      className={classnames(style[\"page-menu\"], {\n        [style[\"closed\"]]: !menuOpen,\n      })}\n      style={{ \"--width\": menuWidth }}\n    >\n      <FixedContainer className={style[\"page-menu-inner\"]} isFixed={menuFixed}>\n        <div className={style[\"page-menu-main-outer\"]}>\n          <SimpleBar className={style[\"page-menu-main\"]}>{menu}</SimpleBar>\n        </div>\n      </FixedContainer>\n      {menuCloseButton ? (\n        <FixedContainer\n          className={classnames(\n            style[\"page-menu-btn-outer\"],\n            style[\"page-menu-btn-outer\"]\n          )}\n          isFixed={menuFixed}\n        >\n          <Button\n            className={classnames(style[\"page-menu-btn\"], {\n              [style[\"closed\"]]: !menuOpen,\n            })}\n            icon={\n              menuOpen ? (\n                <Icon type=\"icon-arrow-bold-left\" />\n              ) : (\n                <Icon type=\"icon-arrow-bold-right\" />\n              )\n            }\n            onClick={() => {\n              setPageProps({ menuOpen: !pageProps.menuOpen });\n              const pageResult = localStorage.getItem(pageMenuOpenKey) || {};\n              pageResult[pathModuleName] = !pageProps.menuOpen;\n              localStorage.setItem(pageMenuOpenKey, pageResult);\n              setPageProps({ menuOpen: !pageProps.menuOpen });\n            }}\n          />\n        </FixedContainer>\n      ) : null}\n    </Col>\n  ) : null;\n};\n\nexport default Menu;\n","import { defaultProps, useContext } from \"../context\";\nimport isEqual from \"lodash/isEqual\";\nimport { useEffect, useRef } from \"react\";\nimport { Result } from \"antd\";\nimport Features from \"@components/Features\";\nimport { useMenuOpen } from \"./Menu\";\n\nconst PageInner = ({ children, isPass, ...props }) => {\n  const { setPageProps } = useContext();\n  const propsRef = useRef(null);\n  const localMenuOpen = useMenuOpen();\n  const localMenuOpenRef = useRef(localMenuOpen);\n  localMenuOpenRef.current = localMenuOpen;\n  useEffect(() => {\n    if (!isEqual(propsRef.current, props)) {\n      propsRef.current = props;\n      /**\n       * 解决两个页面都用header时，menuButton产生的跳动问题：如果下一个页面有header，\n       * headerHeight由其header组件自己更新，不再统一重置为0。\n       * optionFooter同理\n       * */\n      const targetProps = Object.assign(\n        {},\n        props,\n        typeof localMenuOpenRef.current === \"boolean\"\n          ? { menuOpen: localMenuOpenRef.current }\n          : {}\n      );\n      if (targetProps.header && targetProps.headerHeight === 0) {\n        delete targetProps[\"headerHeight\"];\n      }\n      if (targetProps.optionFooter && targetProps.optionFooterHeight === 0) {\n        delete targetProps[\"optionFooter\"];\n      }\n      setPageProps(targetProps);\n    }\n  }, [props, setPageProps]);\n\n  if (isPass === false) {\n    return <Result status=\"403\" subTitle=\"暂未开放此功能\" />;\n  }\n\n  return children;\n};\n\nconst Page = ({ featureId, name, openFeatures, ...props }) => {\n  if (openFeatures === true) {\n    return (\n      <Features id={name}>\n        {({ isPass }) => <PageInner {...props} key={name} isPass={isPass} />}\n      </Features>\n    );\n  }\n  return <PageInner {...props} key={name} />;\n};\n\nPage.defaultProps = defaultProps;\n\nexport default Page;\n","import { Affix as AntdAffix } from \"antd\";\n\nconst Affix = ({ isFixed, offsetTop, offsetBottom, onChange, ...props }) => {\n  if (!isFixed) {\n    return <div {...props} />;\n  }\n  return (\n    <AntdAffix\n      {...props}\n      offsetTop={Number.isInteger(offsetTop) ? offsetTop - 0.1 : offsetTop}\n      offsetBottom={offsetBottom}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Affix;\n","import { useContext } from \"@components/Layout/context\";\nimport { useLayoutEffect, useRef } from \"react\";\n\nconst useContainerHeight = ({ targetKey }) => {\n  const { setPageProps } = useContext();\n  const ref = useRef(null);\n  useLayoutEffect(() => {\n    const callback = () => {\n      setPageProps({\n        [targetKey]: ref.current.offsetHeight,\n      });\n    };\n\n    callback();\n    const resizeObserver = new MutationObserver(callback);\n    resizeObserver.observe(ref.current, { subtree: true, childList: true });\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [setPageProps, targetKey]);\n\n  return ref;\n};\n\nconst ContainerHeight = ({ targetKey, ...props }) => {\n  const ref = useContainerHeight({ targetKey });\n  return <div {...props} ref={ref} />;\n};\n\nexport default ContainerHeight;\n","import { useContext } from \"../context\";\nimport Affix from \"../Affix\";\nimport { navigationHeight } from \"@components/Navigation\";\nimport ContainerHeight from \"./ContainerHeight\";\nimport style from \"../style.module.scss\";\n\nconst Header = () => {\n  const { pageProps } = useContext();\n  const { header, headerFixed } = pageProps;\n  return header ? (\n    <Affix\n      isFixed={headerFixed}\n      className={style[\"page-header\"]}\n      offsetTop={navigationHeight}\n    >\n      <ContainerHeight targetKey=\"headerHeight\">{header}</ContainerHeight>\n    </Affix>\n  ) : null;\n};\n\nexport default Header;\n","import { useContext } from \"../context\";\nimport { useRef } from \"react\";\nimport style from \"../style.module.scss\";\nimport classnames from \"classnames\";\n\nconst HeaderInfo = () => {\n  const { pageProps } = useContext();\n  const { headerInfo } = pageProps;\n  const headerInfoRef = useRef(null);\n  return headerInfo ? (\n    <div\n      ref={headerInfoRef}\n      className={classnames(style[\"page-header-info\"], \"page-header-info\")}\n    >\n      {headerInfo}\n    </div>\n  ) : null;\n};\n\nexport default HeaderInfo;\n","import { Col, Row, Space } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport Filter from \"@components/Filter\";\nimport Icon from \"@components/Icon\";\nimport style from \"../style.module.scss\";\n\nconst PageTitle = ({ title, filter, titleExtra, titleLeftExtra, backUrl }) => {\n  const navigator = useNavigate();\n  if (filter) {\n    return (\n      <Filter className={style[\"page-title\"]} {...filter} extra={titleExtra} />\n    );\n  }\n  if (!(title || titleLeftExtra || titleExtra)) {\n    return null;\n  }\n  return (\n    <Row justify=\"space-between\" align=\"middle\" className={style[\"page-title\"]}>\n      <Col>\n        <Space>\n          {title ? (\n            <div className={style[\"page-title-text\"]}>\n              {backUrl ? (\n                <Space>\n                  <span\n                    className={style[\"back-icon\"]}\n                    onClick={() => {\n                      navigator(backUrl);\n                    }}\n                  >\n                    <Icon type=\"icon-arrow-thin-left\" />\n                  </span>\n                  <span>{title}</span>\n                </Space>\n              ) : (\n                title\n              )}\n            </div>\n          ) : null}\n          {titleLeftExtra ? titleLeftExtra : null}\n        </Space>\n      </Col>\n      <Col>{titleExtra}</Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import { Col, Space } from \"antd\";\nimport FixedContainer from \"./FixedContainer\";\nimport { useContext } from \"../context\";\nimport classnames from \"classnames\";\nimport SimpleBar from \"@common/components/SimpleBar\";\nimport ContainerHeight from \"./ContainerHeight\";\nimport style from \"../style.module.scss\";\n\nconst Option = () => {\n  const { pageProps } = useContext();\n  const {\n    option,\n    optionWidth,\n    optionFixed,\n    optionFooter,\n    optionFooterHeight,\n    optionNoPadding,\n  } = pageProps;\n  return option ? (\n    <Col\n      className={classnames(style[\"page-option\"], \"page-option\")}\n      style={{\n        \"--width\": optionWidth,\n        \"--foot-height\": optionFooterHeight + \"px\",\n      }}\n    >\n      <FixedContainer\n        className={style[\"page-option-inner\"]}\n        isFixed={optionFixed}\n      >\n        <SimpleBar\n          className={classnames(style[\"page-option-main\"], \"page-option-main\")}\n          style={{ padding: optionNoPadding ? \"0px\" : \"var(--padding-width)\" }}\n        >\n          {option}\n        </SimpleBar>\n        {optionFooter ? (\n          <ContainerHeight\n            className={style[\"page-option-footer\"]}\n            targetKey=\"optionFooterHeight\"\n          >\n            <Space align=\"center\">{optionFooter}</Space>\n          </ContainerHeight>\n        ) : null}\n      </FixedContainer>\n    </Col>\n  ) : null;\n};\n\nexport default Option;\n","import { Alert, Button, Col, Layout as AntdLayout, Row } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { defaultProps, Provider } from \"./context\";\nimport Navigation, { navigationHeight } from \"@components/Navigation\";\nimport { getScrollEl } from \"@common/utils/importantContainer\";\nimport ReactErrorBoundary from \"@kne/react-error-boundary\";\nimport { Header, HeaderInfo, Menu, Option, PageTitle } from \"./Page\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\nimport HelperGuide from \"@components/HelperGuide\";\n\nconst { Content } = AntdLayout;\n\nconst ErrorComponent = () => {\n  return (\n    <Alert\n      message=\"系统出了点小问题，可刷新页面进行解决\"\n      showIcon\n      type=\"error\"\n      action={\n        <Button size=\"small\" danger onClick={() => window.location.reload()}>\n          刷新\n        </Button>\n      }\n    />\n  );\n};\n\nconst ErrorBoundary = (props) => {\n  return <ReactErrorBoundary {...props} errorComponent={ErrorComponent} />;\n};\n\nconst Layout = ({ children, theme, navigation }) => {\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const [pageProps, _setPageProps] = useState(Object.assign({}, defaultProps));\n  const setPageProps = useCallback((value) => {\n    return _setPageProps((pageProps) => {\n      return Object.assign({}, pageProps, value);\n    });\n  }, []);\n  useEffect(() => {\n    const scrollEl = getScrollEl();\n    const handlerScroll = () => {\n      setScrollLeft(scrollEl.scrollLeft);\n    };\n    scrollEl.addEventListener(\"scroll\", handlerScroll);\n    return () => {\n      scrollEl.removeEventListener(\"scroll\", handlerScroll);\n    };\n  }, []);\n\n  return (\n    <AntdLayout\n      className={style[\"layout\"]}\n      style={Object.assign(\n        {},\n        {\n          \"--nav-height\": navigationHeight + \"px\",\n          \"--nav-height-base\": \"var(--nav-height)\",\n          \"--scroll-left\": -scrollLeft + \"px\",\n        },\n        theme\n      )}\n    >\n      {navigation && (\n        <ErrorBoundary>\n          <Navigation\n            {...navigation}\n            onChange={(path) => {\n              navigation?.onChange && navigation.onChange(path);\n            }}\n          />\n        </ErrorBoundary>\n      )}\n      <ErrorBoundary>\n        <Content className={style[\"layout-content-wrap\"]}>\n          <Provider value={{ pageProps, setPageProps }}>\n            <ErrorBoundary>\n              <Header />\n            </ErrorBoundary>\n            <ErrorBoundary>\n              <HeaderInfo />\n            </ErrorBoundary>\n            <ErrorBoundary>\n              <Row\n                className={classnames(pageProps.className, style[\"page-outer\"])}\n                wrap={false}\n                style={{\n                  \"--nav-height\": `calc(${pageProps.headerHeight}px + var(--nav-height-base))`,\n                  \"--nav-only-height\": `var(--nav-height-base)`,\n                }}\n              >\n                <ErrorBoundary>\n                  <Menu />\n                </ErrorBoundary>\n                <Col\n                  className={classnames(style[\"page-content\"], {\n                    [style[\"no-margin\"]]: pageProps.noMargin,\n                  })}\n                  flex={1}\n                  style={{ \"--background-color\": pageProps.backgroundColor }}\n                >\n                  <div className={style[\"page-main\"]}>\n                    <ErrorBoundary>\n                      <PageTitle\n                        title={pageProps.title}\n                        backUrl={pageProps.backUrl}\n                        filter={pageProps.filter}\n                        titleExtra={pageProps.titleExtra}\n                        titleLeftExtra={pageProps.titleLeftExtra}\n                      />\n                    </ErrorBoundary>\n                    <div\n                      className={classnames(style[\"page-main-content\"], {\n                        [style[\"no-padding\"]]: pageProps.noPadding,\n                      })}\n                    >\n                      <ErrorBoundary>\n                        {pageProps.helperGuideName && (\n                          <HelperGuide\n                            className={style[\"helper-guide-page\"]}\n                            name={pageProps.helperGuideName}\n                          />\n                        )}\n                        {children}\n                      </ErrorBoundary>\n                    </div>\n                  </div>\n                </Col>\n                <ErrorBoundary>\n                  <Option />\n                </ErrorBoundary>\n              </Row>\n            </ErrorBoundary>\n          </Provider>\n        </Content>\n      </ErrorBoundary>\n    </AntdLayout>\n  );\n};\n\nLayout.defaultProps = {\n  navigation: {},\n};\n\nexport default Layout;\n","import Page from \"./Page\";\nimport Permissions from \"@components/Permissions\";\n\nconst PermissionsPage = ({ permissions, ...props }) => {\n  return (\n    <Permissions {...Object.assign({}, permissions, { type: \"error\" })}>\n      <Page {...props} />\n    </Permissions>\n  );\n};\n\nexport default PermissionsPage;\n","import { TablePage as Table } from \"@components/Table\";\nimport PermissionsPage from \"./PermissionsPage\";\nimport { forwardRef, useState } from \"react\";\nimport style from \"./style.module.scss\";\nimport HelperGuide from \"@components/HelperGuide\";\nimport classnames from \"classnames\";\n\nconst TablePage = forwardRef(\n  (\n    {\n      helperGuideName,\n      permissions,\n      page,\n      openFeatures,\n      name,\n      topArea,\n      ...props\n    },\n    ref\n  ) => {\n    const [tableData, setTableData] = useState(null);\n    return (\n      <PermissionsPage\n        name={name}\n        openFeatures={openFeatures}\n        permissions={permissions}\n        {...page}\n      >\n        {topArea ? (\n          <div className={style[\"table-page-top\"]}>\n            {typeof topArea === \"function\" ? topArea(tableData) : topArea}\n          </div>\n        ) : null}\n        <div className={style[\"table-page\"]}>\n          {helperGuideName && (\n            <HelperGuide\n              className={classnames(\"helper-guide\", style[\"helper-guide\"])}\n              name={helperGuideName}\n            />\n          )}\n          <Table\n            {...props}\n            ref={ref}\n            name={name}\n            onRequestSuccess={(data) => {\n              setTableData(data);\n            }}\n          />\n        </div>\n      </PermissionsPage>\n    );\n  }\n);\n\nexport default TablePage;\n","import StateBar from \"@components/StateBar\";\nimport PermissionsPage from \"./PermissionsPage\";\nimport style from \"./style.module.scss\";\nimport HelperGuide from \"@components/HelperGuide\";\n\nconst StateBarPage = ({\n  helperGuideName,\n  permissions,\n  page,\n  stateBar,\n  children,\n  ...props\n}) => {\n  return (\n    <PermissionsPage {...page} permissions={permissions} {...props}>\n      <div className={style[\"state-bar-page\"]}>\n        <StateBar {...stateBar} />\n      </div>\n      {helperGuideName && (\n        <HelperGuide className={style[\"helper-guide\"]} name={helperGuideName} />\n      )}\n      {children}\n    </PermissionsPage>\n  );\n};\n\nexport default StateBarPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"style_menu__gvIvn__6hOBk\",\"all-no-start-icon\":\"style_all-no-start-icon__CA+zR__6hOBk\",\"no-start-icon\":\"style_no-start-icon__LnC1S__6hOBk\",\"has-children\":\"style_has-children__m9tce__6hOBk\",\"has-children-node\":\"style_has-children-node__2bhEB__6hOBk\",\"is-root\":\"style_is-root__4hhOc__6hOBk\",\"title\":\"style_title__+Hcar__6hOBk\",\"active\":\"style_active__WU49K__6hOBk\",\"no-collapse\":\"style_no-collapse__aIZBM__6hOBk\",\"title-content\":\"style_title-content__cQXpK__6hOBk\",\"loading\":\"style_loading__1pU4P__6hOBk\"};","import style from \"./style.module.scss\";\nimport classnames from \"classnames\";\nimport { Spin } from \"antd\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Permissions from \"@components/Permissions\";\nimport useControlValue from \"@kne/use-control-value\";\nimport Icon from \"@components/Icon\";\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport ensureSlash from \"@kne/ensure-slash\";\nimport { useFetch } from \"@kne/react-fetch\";\n\nconst treeEnhance = (items) => {\n  const childrenKeys = {},\n    nodeMapping = [];\n  const traversal = (children, options) => {\n    const { parentKey, depth } = Object.assign(\n      {\n        parentKey: \"root\",\n        depth: 0,\n        paths: [],\n      },\n      options\n    );\n    if (!(Array.isArray(children) && children.length > 0)) {\n      return null;\n    }\n    return children.map((item, index) => {\n      const currentKey = `${\n        item.key ||\n        `${parentKey !== \"root\" ? `${parentKey}-` : \"\"}node-${index}`\n      }`;\n      if (!childrenKeys[parentKey]) {\n        childrenKeys[parentKey] = [];\n      }\n      childrenKeys[parentKey].push(currentKey);\n      const children = traversal(item.children, {\n        parentKey: currentKey,\n        depth: depth + 1,\n      });\n      childrenKeys[currentKey] &&\n        childrenKeys[parentKey].push(...childrenKeys[currentKey]);\n      const targetItem = Object.assign({}, item, {\n        key: currentKey,\n        parentKey,\n        depth,\n        children: children,\n        originItem: item,\n      });\n      nodeMapping[currentKey] = targetItem;\n      return targetItem;\n    });\n  };\n\n  return { items: traversal(items), childrenKeys, nodeMapping };\n};\n\nconst MenuItem = (props) => {\n  const navigation = useNavigate();\n  const {\n    id,\n    className,\n    label,\n    iconType,\n    path,\n    request,\n    onClick,\n    isOpen,\n    isSelected,\n    onOpenChange,\n    children,\n    fetchOptions,\n    depth,\n    onLoad,\n    allowCollapsed,\n  } = props;\n\n  const hasChildren =\n    (Array.isArray(children) && children.length > 0) || fetchOptions;\n  const { refresh, isLoading } = useFetch(\n    Object.assign({}, fetchOptions, {\n      auto: !allowCollapsed && fetchOptions,\n      onRequestSuccess: (data) => {\n        onLoad(data);\n      },\n    })\n  );\n\n  const renderChildren = () => {\n    if (!hasChildren) {\n      return null;\n    }\n    if (!allowCollapsed || (isOpen && children)) {\n      return <div className={style[\"children-list\"]}>{children}</div>;\n    }\n\n    if (!allowCollapsed || (isOpen && isLoading)) {\n      return (\n        <div className={style[\"children-list\"]}>\n          <Spin className={style[\"loading\"]} size=\"small\" />\n        </div>\n      );\n    }\n  };\n  return (\n    <Permissions request={request}>\n      <div className={classnames(className, style[\"menu-item\"])}>\n        <div\n          className={classnames(style[\"title\"], {\n            [style[\"active\"]]: isSelected,\n            [style[\"has-children\"]]: hasChildren,\n            [style[\"no-collapse\"]]: hasChildren && !allowCollapsed,\n            [style[\"no-start-icon\"]]: !iconType,\n            [style[\"is-root\"]]: depth === 0,\n          })}\n          onClick={(e) => {\n            e.stopPropagation();\n            if (!hasChildren && path) {\n              navigation(path);\n              return;\n            }\n            if (!hasChildren && !fetchOptions) {\n              onClick?.(id, props);\n              return;\n            }\n            if (!allowCollapsed) {\n              return;\n            }\n            fetchOptions && refresh({});\n            onOpenChange(!isOpen);\n          }}\n        >\n          {iconType && <Icon type={iconType} />}\n          <span className={style[\"title-content\"]}>{label}</span>\n          {hasChildren && allowCollapsed && (\n            <Icon\n              type={isOpen ? \"icon-arrow-bold-down\" : \"icon-arrow-bold-right\"}\n            />\n          )}\n        </div>\n        {renderChildren()}\n      </div>\n    </Permissions>\n  );\n};\n\nconst Menu = ({ className, allowCollapsed, ...props }) => {\n  const { pathname, search } = useLocation();\n  const [selectedKey, setSelectKeyChange] = useControlValue(props, {\n    value: \"currentKey\",\n    defaultValue: \"defaultCurrentKey\",\n  });\n\n  const [items, setItems] = useControlValue(props, {\n    defaultValue: \"defaultItems\",\n    value: \"items\",\n    onChange: \"onItemsChange\",\n  });\n\n  const {\n    items: targetItems,\n    defaultOpenKeys,\n    links,\n    childrenKeys,\n    hasStartIcon,\n    hasChildren,\n  } = useMemo(() => {\n    const {\n      items: targetItems,\n      childrenKeys,\n      nodeMapping,\n    } = treeEnhance(items);\n    let hasStartIcon = false,\n      hasChildren = false;\n    const links = [],\n      defaultOpenKeys = [];\n    childrenKeys?.[\"root\"]?.forEach((key) => {\n      const node = nodeMapping[key];\n      if (node.iconType) {\n        hasStartIcon = true;\n      }\n      node.path && links.push({ path: node.path, key });\n      if (Array.isArray(node.children) && node.children.length > 0) {\n        hasChildren = true;\n        defaultOpenKeys.push(node.key);\n      }\n    });\n    return {\n      defaultOpenKeys,\n      links,\n      items: targetItems,\n      childrenKeys,\n      hasStartIcon,\n      hasChildren,\n    };\n  }, [items]);\n  useEffect(() => {\n    const matchedPath = links.find(({ path }) => {\n      return (\n        ensureSlash(pathname.replace(/[#,?].*/, \"\")) === ensureSlash(path) ||\n        ensureSlash(pathname + search, \"\") === ensureSlash(path)\n      );\n    });\n    if (matchedPath) {\n      setSelectKeyChange(matchedPath.key);\n    }\n  }, [links, pathname, search, setSelectKeyChange]);\n\n  const [openKeys, setOpenKeys] = useControlValue(\n    Object.assign({}, props, {\n      defaultOpenKeys: props.defaultOpenKeys || defaultOpenKeys,\n    }),\n    {\n      value: \"openKeys\",\n      defaultValue: \"defaultOpenKeys\",\n      onChange: \"onOpenChange\",\n    }\n  );\n\n  const renderChildren = useCallback(\n    (children, options) => {\n      const { parentKey, depth, selectedKey, openKeys, paths } = Object.assign(\n        {\n          parentKey: null,\n          depth: 0,\n          paths: [],\n        },\n        options\n      );\n      if (Array.isArray(children) && children.length > 0) {\n        return children.map(\n          ({ children, key: currentKey, originItem, ...item }) => {\n            return (\n              <MenuItem\n                {...Object.assign({}, item)}\n                id={currentKey}\n                parentId={parentKey}\n                depth={depth}\n                allowCollapsed={allowCollapsed}\n                isSelected={\n                  currentKey === selectedKey ||\n                  (childrenKeys[currentKey] &&\n                    childrenKeys[currentKey].indexOf(selectedKey) > -1)\n                }\n                onClick={setSelectKeyChange}\n                onLoad={(data) => {\n                  setItems((items) => {\n                    const core = (children) => {\n                      if (Array.isArray(children) && children.length > 0) {\n                        return children.map((item) => {\n                          return Object.assign({}, item, {\n                            children:\n                              originItem === item ? data : core(item.children),\n                          });\n                        });\n                      }\n                      return null;\n                    };\n\n                    return core(items);\n                  });\n                }}\n                isOpen={(openKeys || []).indexOf(currentKey) > -1}\n                key={currentKey}\n                onOpenChange={() => {\n                  setOpenKeys((openKeys) => {\n                    const newOpenKeys = openKeys.slice(0);\n                    if (openKeys.indexOf(currentKey) > -1) {\n                      newOpenKeys.splice(openKeys.indexOf(currentKey), 1);\n                    } else {\n                      newOpenKeys.push(currentKey);\n                    }\n                    return newOpenKeys;\n                  });\n                }}\n              >\n                {renderChildren(children, {\n                  parentKey,\n                  depth: depth + 1,\n                  selectedKey,\n                  openKeys,\n                  paths: [...paths, currentKey],\n                })}\n              </MenuItem>\n            );\n          }\n        );\n      }\n      return null;\n    },\n    [setItems, setOpenKeys, setSelectKeyChange, childrenKeys, allowCollapsed]\n  );\n\n  return (\n    <div\n      className={classnames(className, style[\"menu\"], {\n        [style[\"all-no-start-icon\"]]: !hasStartIcon,\n        [style[\"has-children-node\"]]: hasChildren,\n      })}\n    >\n      {renderChildren(targetItems, { selectedKey, openKeys })}\n    </div>\n  );\n};\n\nMenu.defaultProps = {\n  defaultItems: [],\n  allowCollapsed: true,\n};\n\nexport default Menu;\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFavicon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1679367216639,\n    className: \"icon\",\n    viewBox: \"0 0 1030 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 1696,\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 201.171875,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M252.479711 385.587015v293.958522l258.791705 146.528403 258.791704-146.528403V385.587015l-251.127142-145.62669L252.479711 385.587015z\",\n    fill: \"#FFFFFF\",\n    opacity: 0.1,\n    \"p-id\": 1697\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M778.629396 405.875564A20.739405 20.739405 0 0 1 766.456267 405.875564l-39.675383-21.641119a22.091975 22.091975 0 0 1 21.190261-39.224526l39.675383 21.190261a22.542831 22.542831 0 0 1-10.820559 42.380523z m-518.485122-6.76285a22.542831 22.542831 0 0 1-19.837691-12.173129 22.091975 22.091975 0 0 1 9.918845-30.207394l40.12624-20.739405a22.993688 22.993688 0 0 1 30.207394 9.918846 22.542831 22.542831 0 0 1-9.918846 30.207394L270.513977 396.858431a20.739405 20.739405 0 0 1-10.369703 2.254283z m399.909829-57.258792a22.542831 22.542831 0 0 1-10.820559-2.705139l-39.675383-21.190262a22.993688 22.993688 0 0 1-9.017133-30.65825 22.091975 22.091975 0 0 1 30.207394-9.017133l39.675383 21.190261a22.542831 22.542831 0 0 1-10.369702 42.380523z m-279.531109-4.057709a22.542831 22.542831 0 0 1-9.918846-45.085663l40.12624-20.288548a22.542831 22.542831 0 0 1 30.207394 9.467989 22.993688 22.993688 0 0 1-9.918846 33.814247l-40.12624 20.288548a20.739405 20.739405 0 0 1-10.369702 1.803427zM541.027953 277.381425a19.386835 19.386835 0 0 1-10.820559-2.70514L519.837692 270.618575l-8.566276 4.508567a22.542831 22.542831 0 0 1-20.288549-40.577097l18.935979-9.017132a23.895401 23.895401 0 0 1 20.739405 0l21.190261 11.722272a22.091975 22.091975 0 0 1 9.017133 30.207394 22.091975 22.091975 0 0 1-19.837692 9.918846z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 1698\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1002.70514 289.554554a24.346258 24.346258 0 0 1-9.918846 0L513.074842 47.895401 33.814247 287.300271a22.542831 22.542831 0 0 1-30.207394-10.369703 22.993688 22.993688 0 0 1 9.918846-30.207394L503.155996 2.358882a22.993688 22.993688 0 0 1 20.288549 0l489.179441 244.364292a22.542831 22.542831 0 0 1-9.918846 45.085663z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 1699\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.085663 762.052299a22.542831 22.542831 0 0 1-9.918846-40.577096l81.154193-39.675383A22.542831 22.542831 0 0 1 135.256988 721.475203l-81.154193 39.675383a24.346258 24.346258 0 0 1-9.017132 0.901713z m889.540126-14.427412a24.346258 24.346258 0 0 1-9.918846 0l-80.703336-40.577096a22.542831 22.542831 0 0 1-10.369703-30.207394 22.091975 22.091975 0 0 1 30.207394-9.918846l80.703337 40.12624a22.542831 22.542831 0 0 1-9.918846 42.831379zM206.943192 683.15239a23.444545 23.444545 0 0 1-20.288548-12.623986 22.993688 22.993688 0 0 1 10.369702-30.207394l81.154193-39.675383a22.993688 22.993688 0 0 1 30.207394 10.369702 22.542831 22.542831 0 0 1-10.369702 30.207394l-81.154193 39.675383a24.346258 24.346258 0 0 1-9.918846 2.254284z m566.275924-16.230839a26.600541 26.600541 0 0 1-9.918845 0l-80.703337-40.577097a22.091975 22.091975 0 0 1-9.918846-30.207394 22.542831 22.542831 0 0 1 30.207394-9.918845l80.703337 40.126239a22.993688 22.993688 0 0 1 9.918846 30.207395 22.542831 22.542831 0 0 1-20.288549 10.369702z m-405.770965-62.669071a22.091975 22.091975 0 0 1-20.288548-12.623986 22.542831 22.542831 0 0 1 13.525699-30.207394l81.154193-39.224527a22.542831 22.542831 0 0 1 30.207394 10.369703 22.091975 22.091975 0 0 1-10.369702 29.756537l-81.154193 39.675384a26.600541 26.600541 0 0 1-11.271416 2.254283z m242.560866-18.034265a19.837692 19.837692 0 0 1-9.918846-2.254284l-80.703336-40.577096a22.091975 22.091975 0 0 1-9.918846-30.207394 22.542831 22.542831 0 0 1 30.207394-9.918846l80.703337 40.12624a23.444545 23.444545 0 0 1 9.918845 30.658251 22.542831 22.542831 0 0 1-18.485121 12.173129z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 1700\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M512.173129 1024a24.346258 24.346258 0 0 1-9.918846-2.254283L12.623986 783.242561a22.993688 22.993688 0 0 1-12.623986-20.288548V273.774572a23.444545 23.444545 0 0 1 10.820559-19.386835 21.641118 21.641118 0 0 1 21.641118 0l479.711452 238.954012L991.884581 253.486023a21.641118 21.641118 0 0 1 21.641118 0 23.444545 23.444545 0 0 1 10.820559 19.386835v490.081155a22.993688 22.993688 0 0 1-12.623986 20.288548l-490.081154 238.503156a22.542831 22.542831 0 0 1-9.467989 2.254283zM45.085663 748.526601l467.087466 225.428313 467.087466-225.428313V310.293959l-454.914337 225.428313a22.542831 22.542831 0 0 1-22.091975 0L45.085663 310.293959z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 1701\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M511.722272 1020.393147a22.542831 22.542831 0 0 1-22.542831-22.542831V526.254283a22.542831 22.542831 0 0 1 45.085663 0v471.596033a22.542831 22.542831 0 0 1-22.542832 22.542831z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 1702\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M512.623986 841.853922a18.935978 18.935978 0 0 1-9.918846-2.254283l-266.005411-128.043282a22.091975 22.091975 0 0 1-11.271415-20.288548V383.783589a22.542831 22.542831 0 0 1 22.542831-22.542832 22.542831 22.542831 0 0 1 22.542832 22.542832V676.38954l243.913435 117.222723 243.462579-117.222723V383.783589a22.542831 22.542831 0 0 1 22.542831-22.542832 22.542831 22.542831 0 0 1 22.542832 22.542832v307.48422a22.542831 22.542831 0 0 1-12.623986 20.288548l-266.00541 128.043282a19.837692 19.837692 0 0 1-11.722272 2.254283z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 1703\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFavicon);\nexport default __webpack_public_path__ + \"static/media/favicon.477a5bb996fd5b367fe0dddc29f67824.svg\";\nexport { ForwardRef as ReactComponent };","const importMessages = (locale) => {\n    return ({\n        'en-US': () => import('./en-US'), 'zh-CN': () => import('./zh-CN')\n    })[locale]();\n};\n\nexport default importMessages;","// extracted by mini-css-extract-plugin\nexport default {\"navigation-wrap\":\"style_navigation-wrap__VF8x2__6hOBk\",\"navigation\":\"style_navigation__60RrS__6hOBk\",\"is-fixed\":\"style_is-fixed__kHFWj__6hOBk\",\"navigation-logo\":\"style_navigation-logo__q9qHu__6hOBk\",\"logo\":\"style_logo__lB9RC__6hOBk\",\"navigation-list\":\"style_navigation-list__EYtkg__6hOBk\",\"navigation-options\":\"style_navigation-options__0BdJU__6hOBk\",\"menu-overlay\":\"style_menu-overlay__zU-vZ__6hOBk\",\"more-icon\":\"style_more-icon__gNMnt__6hOBk\"};","import { Col, Layout, Menu, Row, Space } from \"antd\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport get from \"lodash/get\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport classnames from \"classnames\";\nimport logo from \"./favicon.svg\";\nimport Image from \"@components/Image\";\nimport importMessages from \"./locale\";\nimport { FormattedMessage, IntlProvider } from \"@components/Intl\";\nimport Icon from \"@components/Icon\";\nimport style from \"./style.module.scss\";\n\nconst { Header } = Layout;\n\nexport const navigationHeight = 48;\n\nconst SetTitle = ({ name, mapping, defaultTitle }) => {\n  const propsRef = useRef({\n    mapping,\n    defaultTitle,\n  });\n  useEffect(() => {\n    const title = get(propsRef.current.mapping.get(name), \"title\");\n    document.title = (title ? title + \"-\" : \"\") + propsRef.current.defaultTitle;\n  }, [name]);\n  return null;\n};\n\nconst Navigation = ({\n  permissions,\n  list,\n  headerLogo,\n  rightOptions,\n  isFixed,\n  showIndex,\n  indexLabel,\n  defaultTitle,\n  overflowedIndicator,\n  base,\n  onChange,\n  className,\n}) => {\n  const mapping = useMemo(() => {\n    return new Map(list.map(({ key, ...others }) => [key, others]));\n  }, [list]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const navigationRef = useRef();\n  const resizeObserverRef = useRef(null);\n  const [nameLabel, setNameLabel] = useState(\"更多\");\n  const pathModuleName = location.pathname\n    .replace(new RegExp(`^${base}`), \"\")\n    .split(\"/\")[1];\n  const name = pathModuleName\n    ? get(\n        Array.from(mapping.entries()).find(([name, { path, permission }]) => {\n          const _path =\n            typeof path === \"function\" ? path(permission, permissions) : path;\n          return _path.indexOf(\"/\" + pathModuleName) !== -1;\n        }),\n        \"[0]\"\n      )\n    : \"home\";\n  useEffect(() => {\n    const callback = () => {\n      if (navigationRef.current) {\n        const menuDom =\n          navigationRef.current.querySelectorAll(`li[data-menu-id]`);\n        let exist = false;\n        for (let i = 0; i < menuDom.length; i++) {\n          const dom = menuDom[i];\n          const menuId = dom.getAttribute(\"data-menu-id\");\n          if (menuId.indexOf(name) !== -1) {\n            exist = true;\n            break;\n          }\n        }\n        let _nameLabel =\n          mapping.get(name) && !exist ? get(mapping.get(name), \"title\") : \"\";\n        setNameLabel(_nameLabel);\n      }\n    };\n    const mutationObserverInitConfig = {\n      attributes: true,\n      childList: true,\n      subtree: true,\n    };\n    if (navigationRef && navigationRef.current) {\n      callback();\n      if (resizeObserverRef.current) {\n        resizeObserverRef.current.disconnect();\n      }\n      resizeObserverRef.current = new MutationObserver(callback);\n      resizeObserverRef.current.observe(\n        navigationRef.current,\n        mutationObserverInitConfig\n      );\n    }\n\n    return () => {\n      resizeObserverRef.current && resizeObserverRef.current.disconnect();\n    };\n  }, [name, mapping]);\n  const indexNav = showIndex\n    ? {\n        label: indexLabel || (\n          <FormattedMessage id=\"indexLabel\" moduleName=\"Navigation\" />\n        ),\n        key: \"home\",\n        onClick: () => {\n          onChange && onChange(\"/\");\n          setTimeout(() => {\n            navigate(\"/\");\n          }, 0);\n        },\n      }\n    : false;\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"Navigation\">\n      <FormattedMessage id=\"defaultTitle\" moduleName=\"Navigation\">\n        {(text) => (\n          <SetTitle\n            defaultTitle={defaultTitle || text}\n            mapping={mapping}\n            name={name}\n          />\n        )}\n      </FormattedMessage>\n      <div className={classnames(style[\"navigation-wrap\"], className)}>\n        <Header\n          className={classnames(\"navigation\", style[\"navigation\"], {\n            [style[\"is-fixed\"]]: isFixed,\n          })}\n        >\n          <Row justify=\"space-around\" wrap={false}>\n            <Col\n              className={classnames(\n                \"navigation-logo\",\n                style[\"navigation-logo\"]\n              )}\n            >\n              <Image\n                className={classnames(style[\"logo\"])}\n                src={logo}\n                alt=\"logo\"\n                {...headerLogo}\n              />\n            </Col>\n            <Col\n              ref={navigationRef}\n              flex={1}\n              className={classnames(\n                \"navigation-list\",\n                style[\"navigation-list\"]\n              )}\n            >\n              <Menu\n                selectedKeys={[name]}\n                mode=\"horizontal\"\n                overflowedIndicator={\n                  overflowedIndicator || (\n                    <Space size={4}>\n                      <span>\n                        {nameLabel || (\n                          <FormattedMessage\n                            id=\"overflowedIndicator\"\n                            moduleName=\"Navigation\"\n                          />\n                        )}\n                      </span>\n                      <span className={style[\"more-icon\"]}>\n                        <Icon type=\"icon-arrow-thin-down\" />\n                      </span>\n                    </Space>\n                  )\n                }\n                items={[\n                  indexNav,\n                  ...Array.from(mapping.entries())\n                    .filter(([name, { permission }]) => {\n                      if (typeof permission === \"string\") {\n                        return permissions.indexOf(permission) > -1;\n                      }\n                      if (typeof permission === \"function\") {\n                        return permission(permissions);\n                      }\n                      if (Array.isArray(permission)) {\n                        for (let item of permission) {\n                          if (permissions.indexOf(item) > -1) {\n                            return true;\n                          }\n                        }\n                        return false;\n                      }\n                      return true;\n                    })\n                    .map(([name, { title, path, permission }]) => {\n                      const _path =\n                        typeof path === \"function\"\n                          ? path(permission, permissions)\n                          : path;\n                      return {\n                        label: title,\n                        key: name,\n                        onClick: () => {\n                          onChange && onChange(_path);\n                          setTimeout(() => {\n                            navigate(_path);\n                          }, 0);\n                        },\n                      };\n                    }),\n                ]}\n              />\n            </Col>\n            <Col className={style[\"navigation-options\"]}>{rightOptions}</Col>\n          </Row>\n        </Header>\n      </div>\n    </IntlProvider>\n  );\n};\n\nNavigation.defaultProps = {\n  isFixed: true,\n  permissions: [],\n  list: [],\n  showIndex: true,\n  base: \"\",\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"style_notification__Vv-MM__6hOBk\",\"list\":\"style_list__l8KOo__6hOBk\",\"header\":\"style_header__3dcv8__6hOBk\",\"item\":\"style_item__d92RS__6hOBk\",\"item-box\":\"style_item-box__dd-Lk__6hOBk\",\"index-1\":\"style_index-1__f97L0__6hOBk\",\"index-2\":\"style_index-2__04vAw__6hOBk\",\"item-box-main\":\"style_item-box-main__lnSak__6hOBk\",\"item-title\":\"style_item-title__mArMd__6hOBk\",\"level-high\":\"style_level-high__Uys7Y__6hOBk\",\"level-middle\":\"style_level-middle__EewyC__6hOBk\",\"level-low\":\"style_level-low__8kVyL__6hOBk\",\"title-icon\":\"style_title-icon__1EoAG__6hOBk\",\"item-subtitle\":\"style_item-subtitle__xeFJs__6hOBk\",\"close-btn\":\"style_close-btn__7qpG3__6hOBk\",\"is-loading\":\"style_is-loading__upVL+__6hOBk\",\"item-content\":\"style_item-content__8MlsG__6hOBk\",\"link-outer\":\"style_link-outer__kegyZ__6hOBk\",\"link\":\"style_link__F2CO-__6hOBk\",\"is-last-item\":\"style_is-last-item__MytRl__6hOBk\"};","import { Row, Col, Button, Typography } from \"antd\";\nimport QueueAnim from \"rc-queue-anim\";\nimport classnames from \"classnames\";\nimport SimpleBar from \"@common/components/SimpleBar\";\nimport { useGlobalContext, usePreset } from \"@components/Global\";\nimport Icon from \"@components/Icon\";\nimport Content from \"@components/Content\";\nimport style from \"./style.module.scss\";\nimport { useMemo, useRef, useState, useEffect } from \"react\";\nimport groupBy from \"lodash/groupBy\";\nimport first from \"lodash/first\";\nimport range from \"lodash/range\";\nimport LoadingButton, { useLoading } from \"@components/LoadingButton\";\nimport findIndex from \"lodash/findIndex\";\n\nconst LEVEL = [\"high\", \"middle\", \"low\"];\n\nconst NotificationItem = ({\n  level,\n  title,\n  groupLength,\n  subtitle,\n  content,\n  link,\n  id,\n  children,\n  className,\n}) => {\n  const { setGlobal } = useGlobalContext(\"notification\");\n  const { apis, ajax } = usePreset();\n  const { isLoading, callback } = useLoading(async () => {\n    const { data: resData } = apis?.notification?.read\n      ? await ajax(\n          Object.assign({}, apis.notification.read, {\n            data: { ids: [id] },\n          })\n        )\n      : { data: { code: 0 } };\n\n    if (resData.code === 0) {\n      setGlobal((notification) => {\n        const newList = (notification?.list || []).slice(0);\n        const index = findIndex(newList, (item) => id === item.id);\n        if (index > -1) {\n          newList.splice(index, 1);\n        }\n        return Object.assign({}, notification, { list: newList });\n      });\n    }\n  });\n  return (\n    <div\n      className={classnames(style[\"item\"], className)}\n      style={{ \"--group-length\": Math.min(groupLength, 3) || 1 }}\n    >\n      {groupLength &&\n        groupLength > 1 &&\n        range(1, Math.min(groupLength, 3))\n          .reverse()\n          .map((number) => (\n            <div\n              className={classnames(\n                style[\"item-box\"],\n                style[`index-${number}`]\n              )}\n              key={number}\n            />\n          ))}\n      <div className={classnames(style[\"item-box\"], style[\"item-box-main\"])}>\n        <div\n          className={classnames(style[\"item-title\"], style[`level-${level}`])}\n        >\n          <Icon\n            className={style[\"title-icon\"]}\n            type={level === \"high\" ? \"icon-tishi\" : \"icon-daiwochuli\"}\n          />\n          <Typography.Text ellipsis>{title}</Typography.Text>\n        </div>\n        <div className={style[\"item-content\"]}>\n          <div className={style[\"item-subtitle\"]}>\n            <Typography.Text ellipsis>{subtitle || \"\"}</Typography.Text>\n            <Icon\n              className={classnames(style[\"close-btn\"], {\n                [style[\"is-loading\"]]: isLoading,\n              })}\n              type=\"icon-close-thin\"\n              onClick={() => {\n                if (isLoading) {\n                  return;\n                }\n\n                if (!id) {\n                  return;\n                }\n\n                callback();\n              }}\n            />\n          </div>\n          {Array.isArray(content) ? (\n            <Content list={content} labelAlign=\"auto\" size=\"small\" />\n          ) : (\n            children\n          )}\n        </div>\n        {link && (\n          <div className={style[\"link-outer\"]}>\n            <LoadingButton\n              className={style[\"link\"]}\n              size=\"small\"\n              onClick={async () => {\n                const { data: resData } = apis?.notification?.read\n                  ? await ajax(\n                      Object.assign({}, apis.notification.read, {\n                        data: { ids: [id] },\n                      })\n                    )\n                  : { data: { code: 0 } };\n                if (resData.code === 0) {\n                  window.open(link);\n                }\n              }}\n            >\n              查看详情\n            </LoadingButton>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nNotificationItem.defaultProps = {\n  level: \"low\",\n};\n\nconst Notification = () => {\n  const { global: notification, setGlobal } = useGlobalContext(\"notification\");\n  const headOptionRef = useRef();\n  const { apis, ajax } = usePreset();\n  const [headOptionHeight, setHeadOptionHeight] = useState(32);\n\n  useEffect(() => {\n    headOptionRef.current &&\n      setHeadOptionHeight(headOptionRef.current?.clientHeight);\n  }, []);\n\n  const { list, expand } = Object.assign(\n    {},\n    {\n      expand: false,\n      list: [],\n    },\n    notification\n  );\n\n  const groupList = useMemo(() => {\n    const group = groupBy(list, (item) => item.level || \"low\");\n    return LEVEL.map((name) => group[name] || []);\n  }, [list]);\n\n  if (list.length === 0) {\n    return null;\n  }\n\n  return (\n    <div\n      className={style[\"notification\"]}\n      style={{\n        \"--head-option-height\": `${headOptionHeight}px`,\n      }}\n    >\n      <div ref={headOptionRef}>\n        <Row justify=\"end\" wrap={false} className={style[\"header\"]} gutter={8}>\n          {groupList.some((item) => item.length > 1) && (\n            <Col>\n              <Button\n                size=\"small\"\n                onClick={() => {\n                  setGlobal(\n                    Object.assign({}, notification, { expand: !expand })\n                  );\n                }}\n              >\n                {expand ? \"全部折叠\" : \"全部展开\"}\n              </Button>\n            </Col>\n          )}\n          <Col>\n            <LoadingButton\n              type=\"primary\"\n              size=\"small\"\n              onClick={async () => {\n                const { data: resData } = apis?.notification?.read\n                  ? await ajax(\n                      Object.assign({}, apis.notification.read, {\n                        data: {\n                          ids: list.map((item) => item.id).filter((id) => !!id),\n                        },\n                      })\n                    )\n                  : { data: { code: 0 } };\n                if (resData.code === 0) {\n                  setGlobal(Object.assign({}, notification, { list: [] }));\n                }\n              }}\n            >\n              全部清除\n            </LoadingButton>\n          </Col>\n        </Row>\n      </div>\n      <SimpleBar className={style[\"list\"]}>\n        <QueueAnim leaveReverse duration={200} interval={20}>\n          {groupList\n            .filter((item) => item && item.length > 0)\n            .map((item, groupKey) => {\n              if (expand) {\n                return item.map(\n                  (notification, index) =>\n                    notification && (\n                      <div key={`group-${groupKey}-${index}`}>\n                        <NotificationItem\n                          {...Object.assign({}, notification)}\n                        />\n                      </div>\n                    )\n                );\n              }\n              const firstItem = first(item);\n              return (\n                <div key={`group-${groupKey}-0`}>\n                  <NotificationItem\n                    {...Object.assign({}, firstItem)}\n                    groupLength={item.length}\n                    className={classnames({\n                      [style[\"is-last-item\"]]:\n                        groupList?.length &&\n                        +groupKey + 1 ===\n                          Math.min(\n                            groupList.filter((item) => item && item.length)\n                              ?.length,\n                            3\n                          ),\n                    })}\n                  />\n                </div>\n              );\n            })}\n        </QueueAnim>\n      </SimpleBar>\n    </div>\n  );\n};\n\nexport default Notification;\n","// extracted by mini-css-extract-plugin\nexport default {\"outer\":\"style_outer__vbHB9__6hOBk\"};","import { createElement } from \"react\";\nimport { Result, Tooltip } from \"antd\";\nimport get from \"lodash/get\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\nimport { useGlobalContext as useContext } from \"@kne/global-context\";\n\nexport const computedIsPass = ({ permissions, request }) => {\n  return Array.isArray(request) && request.length > 0\n    ? request.some((currentKey) => (permissions || []).indexOf(currentKey) > -1)\n    : true;\n};\n\nexport const usePermissions = () => {\n  const preset = useContext();\n  return {\n    permissions: get(preset, \"global.accountInfo.permissions\", []),\n  };\n};\n\nexport const usePermissionsPass = ({ request }) => {\n  const { permissions } = usePermissions();\n  return computedIsPass({ permissions, request });\n};\n\nconst Permissions = ({\n  type,\n  className,\n  tagName,\n  message,\n  request,\n  children,\n  ...props\n}) => {\n  const isPass = usePermissionsPass({ request });\n  if (typeof children === \"function\") {\n    return children({ isPass, type, request });\n  }\n\n  if (isPass === true) {\n    return children;\n  }\n\n  if (type === \"error\") {\n    return <Result status=\"403\" subTitle={message} />;\n  }\n\n  if (type === \"tooltip\") {\n    return (\n      <Tooltip title={message}>\n        {createElement(\n          tagName,\n          { ...props, className: classnames(style[\"outer\"], className) },\n          children\n        )}\n      </Tooltip>\n    );\n  }\n\n  return null;\n};\n\nPermissions.defaultProps = {\n  type: \"hidden\",\n  tagName: \"span\",\n  message: \"您暂无权限，请联系管理员\",\n};\n\nexport default Permissions;\n","// extracted by mini-css-extract-plugin\nexport default {\"state-bar\":\"style_state-bar__3jfis__6hOBk\",\"has-children\":\"style_has-children__oQDqU__6hOBk\",\"tab-tab-control\":\"style_tab-tab-control__SopeO__6hOBk\",\"tab-radio-control\":\"style_tab-radio-control__R8X6-__6hOBk\",\"tab-step-control\":\"style_tab-step-control__EQaCl__6hOBk\",\"inner-state-bar\":\"style_inner-state-bar__lWmOz__6hOBk\"};","import { Tabs } from \"antd\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\n\n/**\n *\n * @param className\n * @param type 'tab' | 'radio' | 'step'\n * @param stateOption\n * @param isInner\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst StateBar = ({\n  className,\n  type = \"tab\",\n  stateOption = [],\n  isInner,\n  ...props\n}) => {\n  return (\n    <Tabs\n      {...props}\n      data-testid={\"components-core-state-bar\"}\n      className={classnames(\n        style[\"state-bar\"],\n        style[`tab-${type}-control`],\n        className,\n        {\n          [style[\"inner-state-bar\"]]: isInner,\n          [style[\"has-children\"]]: stateOption.some((item) => !!item.children),\n        }\n      )}\n      style={{ \"--total-count\": stateOption.length }}\n      animated={false}\n      items={stateOption.map(({ tab, label, key, ...props }) => {\n        return { label: tab || label, key, ...props };\n      })}\n    />\n  );\n};\n\nexport default StateBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"state-tag\":\"style_state-tag__Kx27z__6hOBk\",\"state-result-tag\":\"style_state-result-tag__CssDz__6hOBk\",\"state-skill-tag\":\"style_state-skill-tag__k0bQE__6hOBk\",\"state-tag-filter-result-wrapper\":\"style_state-tag-filter-result-wrapper__QYS5z__6hOBk\",\"state-tag-filter-name\":\"style_state-tag-filter-name__iJaJd__6hOBk\",\"state-tag-filterResult\":\"style_state-tag-filterResult__KTkot__6hOBk\",\"show-bg\":\"style_show-bg__OcL+R__6hOBk\",\"tag-text\":\"style_tag-text__JHCt+__6hOBk\",\"state-tag-wrapper\":\"style_state-tag-wrapper__A-gTE__6hOBk\"};","import React, { useMemo } from \"react\";\nimport classnames from \"classnames\";\n\nimport style from \"./style.module.scss\";\nimport { Space, Tag } from \"antd\";\n\nconst tagTypeEnum = {\n  default: \"#666666\",\n  skill: {\n    color: \"#666666\",\n    borderColor: \"#EEEEEE\",\n  },\n  result: \"#666666\",\n  filterResult: \"#5CB8B2\",\n  success: \"#027A48\",\n  progress: \"#F09700\",\n  danger: \"#D14343\",\n  info: \"#155ACF\",\n  other: \"#6740C3\",\n};\n\nconst StateTag = ({\n  showBorder,\n  text,\n  type,\n  showBackground,\n  className,\n  filterName,\n  ...props\n}) => {\n  const tagColor = useMemo(\n    () => ({\n      color: tagTypeEnum?.[type]?.color || tagTypeEnum[type],\n      borderColor: tagTypeEnum?.[type]?.borderColor || tagTypeEnum[type],\n    }),\n    [type]\n  );\n\n  return (\n    <Space\n      data-testid={\"components-core-state-tag\"}\n      className={classnames(\n        style[\"state-tag-wrapper\"],\n        type === \"filterResult\" ? style[\"state-tag-filter-result-wrapper\"] : \"\"\n      )}\n      align=\"center\"\n      size={4}\n    >\n      {filterName ? (\n        <span className={style[\"state-tag-filter-name\"]}>{filterName}:</span>\n      ) : null}\n      <Tag\n        color={tagColor.color}\n        {...props}\n        style={{\n          background: showBackground ? tagColor.color + \"0F\" : \"none\",\n          color: tagColor.color,\n          border: showBorder ? `1px solid ${tagColor.borderColor}` : \"none\",\n        }}\n        className={classnames(\n          style[\"state-tag\"],\n          className,\n          type === \"result\" ? style[\"state-result-tag\"] : \"\",\n          type === \"skill\" ? style[\"state-skill-tag\"] : \"\",\n          style[`state-tag-${type}`],\n          showBackground ? style[\"show-bg\"] : \"\",\n          showBorder ? style[\"show-border\"] : \"\"\n        )}\n      >\n        <span className={style[\"tag-text\"]}>{text}</span>\n      </Tag>\n    </Space>\n  );\n};\n\nStateTag.defaultProps = {\n  color: \"#666666\",\n  type: \"default\",\n  showBorder: false,\n  showBackground: true,\n  text: \"\",\n  className: \"\",\n};\n\nexport default StateTag;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"style_table__z7kfz__6hOBk\",\"is-resize\":\"style_is-resize__ut6RW__6hOBk\",\"is-moving\":\"style_is-moving__BJ9wR__6hOBk\",\"cell-resize-bar\":\"style_cell-resize-bar__-mlUF__6hOBk\",\"is-computed\":\"style_is-computed__B9rIF__6hOBk\",\"options-btn\":\"style_options-btn__U3uoy__6hOBk\",\"tooltip\":\"style_tooltip__vJlkv__6hOBk\",\"table-changer-setting\":\"style_table-changer-setting__HcrwR__6hOBk\",\"width-changer-sign\":\"style_width-changer-sign__Aflyl__6hOBk\",\"columns-control\":\"style_columns-control__5-5ZF__6hOBk\",\"columns-control-content\":\"style_columns-control-content__MoeUI__6hOBk\",\"columns-control-content-title\":\"style_columns-control-content-title__P5sXV__6hOBk\",\"columns-control-content-scroller\":\"style_columns-control-content-scroller__CeYRV__6hOBk\",\"columns-control-content-footer\":\"style_columns-control-content-footer__0bQWm__6hOBk\",\"columns-control-content-input\":\"style_columns-control-content-input__G6yKq__6hOBk\",\"columns-control-content-list\":\"style_columns-control-content-list__aXvTs__6hOBk\",\"columns-control-content-item\":\"style_columns-control-content-item__jbyyE__6hOBk\",\"is-drag\":\"style_is-drag__U68aw__6hOBk\",\"columns-control-content-item-icon\":\"style_columns-control-content-item-icon__yJqZf__6hOBk\",\"sortable-drag\":\"style_sortable-drag__K5hWd__6hOBk\",\"sortable-ghost\":\"style_sortable-ghost__lKTd2__6hOBk\",\"columns-control-overlay\":\"style_columns-control-overlay__OxCIz__6hOBk\",\"sort-btn\":\"style_sort-btn__KvNLr__6hOBk\",\"sort-active-desc\":\"style_sort-active-desc__TIhMC__6hOBk\",\"sort-icon\":\"style_sort-icon__dB85I__6hOBk\",\"sort-active-asc\":\"style_sort-active-asc__RUBup__6hOBk\"};","// extracted by mini-css-extract-plugin\nexport default {\"col-item\":\"columns_col-item__Ym1Ec__6hOBk\",\"tag\":\"columns_tag__bQZLG__6hOBk\",\"avatar\":\"columns_avatar__SLPI+__6hOBk\",\"hover\":\"columns_hover__oAwHg__6hOBk\",\"primary\":\"columns_primary__6KtaA__6hOBk\",\"loading\":\"columns_loading__gtBay__6hOBk\",\"options\":\"columns_options__WvDZD__6hOBk\"};","import { Button, Dropdown, Space } from \"antd\";\nimport classnames from \"classnames\";\nimport { startTransition, useState } from \"react\";\nimport Icon from \"@components/Icon\";\nimport LoadingButton from \"@components/LoadingButton\";\nimport useResize from \"@common/hooks/useResize\";\nimport style from \"./style.module.scss\";\n\nconst OptionsList = ({ className, list, width }) => {\n  const [showLength, setShowLength] = useState(list.length);\n  const computedLength = () => {\n    const el = targetRef.current;\n    const buttonEls = el.querySelectorAll(\".option-item\"),\n      buttonElLength = buttonEls.length;\n    const amountWidth = ref.current.clientWidth,\n      moreBtnWidth = 32,\n      spaceWidth = 8;\n    let targetLength = 0,\n      targetWidth = 0,\n      buttonWidthList = [].map.call(buttonEls, (el) => el.offsetWidth);\n    // 采取先加后减策略\n    while (\n      amountWidth >=\n        targetWidth +\n          buttonWidthList[targetLength] +\n          targetLength * spaceWidth &&\n      targetLength < buttonElLength\n    ) {\n      targetWidth += buttonWidthList[targetLength];\n      targetLength += 1;\n    }\n\n    while (\n      amountWidth <\n        targetWidth +\n          (targetLength - 1) * spaceWidth +\n          (targetLength < buttonElLength ? moreBtnWidth + spaceWidth : 0) &&\n      targetLength > 0\n    ) {\n      targetWidth -= buttonWidthList[targetLength - 1];\n      targetLength -= 1;\n    }\n    startTransition(() => {\n      setShowLength(targetLength);\n    });\n  };\n\n  const ref = useResize(computedLength);\n  const targetRef = useResize(computedLength);\n\n  const otherList = list.slice(showLength);\n\n  return (\n    <div\n      className={classnames(className)}\n      style={{\n        \"--max-width\": width + \"px\",\n      }}\n    >\n      <div ref={ref}>\n        <div\n          style={{\n            width: 0,\n            height: 0,\n            overflow: \"hidden\",\n            position: \"relative\",\n          }}\n        >\n          <div style={{ position: \"absolute\" }} ref={targetRef}>\n            <Space>\n              {list.map(({ className, ...props }, index) => (\n                <LoadingButton\n                  {...props}\n                  key={index}\n                  className={classnames(\n                    \"option-item\",\n                    \"btn-no-padding\",\n                    style[\"options-btn\"],\n                    className\n                  )}\n                  type=\"link\"\n                />\n              ))}\n            </Space>\n          </div>\n        </div>\n        <Space>\n          {list.slice(0, showLength).map(({ className, ...props }, index) => (\n            <LoadingButton\n              {...props}\n              key={index}\n              className={classnames(\n                \"btn-no-padding\",\n                style[\"options-btn\"],\n                className\n              )}\n              type=\"link\"\n            />\n          ))}\n          {otherList.length > 0 && (\n            <Dropdown\n              menu={{\n                items: otherList.map(({ children, ...props }, key) => ({\n                  ...props,\n                  key,\n                  label: children,\n                })),\n              }}\n            >\n              <Button\n                icon={<Icon type=\"icon-gengduo2\" />}\n                className=\"btn-no-padding\"\n                type=\"link\"\n              />\n            </Dropdown>\n          )}\n        </Space>\n      </div>\n    </div>\n  );\n};\n\nexport default OptionsList;\n","import { Typography } from \"antd\";\nimport style from \"./style.module.scss\";\n\nconst Ellipsis = ({ children, ellipsis }) => {\n  return (\n    <Typography.Text\n      ellipsis={\n        ellipsis &&\n        Object.assign(\n          {},\n          {\n            tooltip: {\n              overlayClassName: style[\"tooltip\"],\n              children: children,\n            },\n          }\n        )\n      }\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n\nexport default Ellipsis;\n","import { useState } from \"react\";\nimport classnames from \"classnames\";\nimport columnsStyle from \"./columns.module.scss\";\n\nconst ColItem = ({\n  type,\n  item,\n  isEmpty,\n  emptyRender,\n  hover,\n  primary,\n  children,\n  width,\n  style,\n  onClick,\n  colValue,\n}) => {\n  const [loading, setLoading] = useState(false);\n  return (\n    <div\n      style={Object.assign({}, style, { \"--max-width\": width + \"px\" })}\n      className={classnames(\n        columnsStyle[\"col-item\"],\n        columnsStyle[type],\n        isEmpty\n          ? null\n          : {\n              [columnsStyle[\"hover\"]]: hover,\n              [columnsStyle[\"primary\"]]: primary,\n              [columnsStyle[\"loading\"]]: loading,\n            }\n      )}\n      onClick={(e) => {\n        if (typeof onClick === \"function\" && !isEmpty && !loading) {\n          setLoading(true);\n          Promise.resolve(\n            onClick({ item, colItem: colValue, event: e })\n          ).finally(() => {\n            setLoading(false);\n          });\n        }\n      }}\n    >\n      {isEmpty\n        ? emptyRender({ type, item, hover, primary, children })\n        : children}\n    </div>\n  );\n};\n\nColItem.defaultProps = {\n  emptyRender: () => \"-\",\n};\n\nexport default ColItem;\n","import { createWithFetch } from \"@kne/react-fetch\";\nimport Ellipsis from \"./Ellipsis\";\nimport { Button } from \"antd\";\nimport ColItem from \"./ColItem\";\n\nconst DisplayInfo = createWithFetch({\n  loading: null,\n})(({ data, children }) => {\n  return children(data);\n});\n\nconst HideInfoComponent = ({\n  api,\n  expand,\n  onExpand,\n  ellipsis,\n  hover,\n  primary,\n  emptyRender,\n  isEmpty,\n}) => {\n  if (expand) {\n    return (\n      <DisplayInfo {...api}>\n        {(data) => {\n          return (\n            <ColItem\n              type=\"hide-info-expand\"\n              item={data}\n              hover={hover}\n              primary={primary}\n              emptyRender={emptyRender}\n              isEmpty={isEmpty}\n            >\n              <Ellipsis ellipsis={ellipsis}>\n                {typeof api.children === \"function\" ? api.children(data) : data}\n              </Ellipsis>\n            </ColItem>\n          );\n        }}\n      </DisplayInfo>\n    );\n  }\n  return (\n    <ColItem\n      type=\"hide-info\"\n      primary\n      isEmpty={isEmpty}\n      emptyRender={emptyRender}\n    >\n      <Button className=\"btn-no-padding\" type=\"link\" onClick={onExpand}>\n        查看\n      </Button>\n    </ColItem>\n  );\n};\n\nexport default HideInfoComponent;\n","import columnsStyle from \"./columns.module.scss\";\nimport dayjs from \"dayjs\";\nimport OptionsList from \"./OptionsList\";\nimport classnames from \"classnames\";\nimport StateTag from \"@components/StateTag\";\nimport Image from \"@components/Image\";\nimport Enum from \"@components/Enum\";\nimport HideInfoComponent from \"./HideInfoComponent\";\nimport Ellipsis from \"./Ellipsis\";\nimport ColItem from \"./ColItem\";\nimport omit from \"lodash/omit\";\n\n// init:160px min:120px max:400px\nconst date = (item, { hover, primary, isEmpty, emptyRender, ...props }) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"date\"\n      item={item}\n      primary={primary}\n      hover={hover}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty || !dayjs(item).isValid()}\n    >\n      {dayjs(item).format(\"YYYY-MM-DD\")}\n    </ColItem>\n  );\n};\n\nconst dateShort = (\n  item,\n  { hover, primary, isEmpty, emptyRender, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"date-short\"\n      item={item}\n      primary={primary}\n      hover={hover}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty || !dayjs(item).isValid()}\n    >\n      {dayjs(item).format(\"YYYY-MM\")}\n    </ColItem>\n  );\n};\n\n// init:240px min:120px max:400px\nconst dateRange = (\n  item,\n  { hover, primary, isEmpty, emptyRender, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"date-range\"\n      item={item}\n      primary={primary}\n      hover={hover}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      {dayjs(item?.[0]).format(\"YYYY-MM-DD HH:mm\") +\n        \"-\" +\n        dayjs(item?.[1]).format(\"HH:mm\")}\n    </ColItem>\n  );\n};\n// init:190px min:190px max:400px\nconst datetime = (\n  item,\n  { hover, primary, emptyRender, isEmpty, hideSecond, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      item={item}\n      primary={primary}\n      hover={hover}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty || !dayjs(item).isValid()}\n    >\n      {dayjs(item).format(\n        hideSecond ? \"YYYY-MM-DD HH:mm\" : \"YYYY-MM-DD HH:mm:ss\"\n      )}\n    </ColItem>\n  );\n};\n// init:190px min:100px max:400px\nconst serialNumber = (\n  item,\n  { hover, primary, emptyRender, isEmpty, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"serial-number\"\n      item={item}\n      primary={primary}\n      hover={hover}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      {item}\n    </ColItem>\n  );\n};\n// init:120px min:100px max:400px\nconst serialNumberShort = (\n  item,\n  { hover, primary, emptyRender, isEmpty, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"serial-number-short\"\n      item={item}\n      primary={primary}\n      hover={hover}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      {item}\n    </ColItem>\n  );\n};\n// init:200px min:120px max:400px\nconst user = (\n  item,\n  { hover, primary, ellipsis, emptyRender, isEmpty, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"user\"\n      item={item}\n      primary={primary}\n      hover={hover}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      <Ellipsis ellipsis={ellipsis}>{item}</Ellipsis>\n    </ColItem>\n  );\n};\n// init:100px 100px 400px\nconst userName = (\n  item,\n  { hover, primary, ellipsis, emptyRender, isEmpty, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"user-name\"\n      item={item}\n      primary={primary}\n      hover={hover}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      <Ellipsis ellipsis={ellipsis}>{item}</Ellipsis>\n    </ColItem>\n  );\n};\n// init:240px 160px 400px\nconst contacts = (\n  item,\n  { hover, primary, ellipsis, emptyRender, isEmpty, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"contacts\"\n      item={item}\n      primary={primary}\n      hover={hover}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      <Ellipsis ellipsis={ellipsis}>{item}</Ellipsis>\n    </ColItem>\n  );\n};\n// init:140px min:100px max:400px\nconst tag = (item, { emptyRender, isEmpty, ...props }) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"tag\"\n      item={item}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      {item &&\n        (item.isEnum ? (\n          <Enum\n            name={item.name}\n            moduleName={item.moduleName}\n            force={item.force}\n          >\n            {({ type, description }) => (\n              <StateTag\n                type={type}\n                {...Object.assign(\n                  {},\n                  omit(item, [\"name\", \"isEnum\", \"moduleName\", \"force\"])\n                )}\n                text={description}\n              />\n            )}\n          </Enum>\n        ) : (\n          <StateTag {...Object.assign({}, item)} />\n        ))}\n    </ColItem>\n  );\n};\n// init:80px min:64px max:200px\nconst avatar = (item, { emptyRender, isEmpty, ...props }) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"avatar\"\n      item={item}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      <Image.Avatar {...Object.assign({}, item)} size={32} />\n    </ColItem>\n  );\n};\n// init:70px min:70px max:400px\nconst singleRow = (\n  item,\n  { hover, primary, ellipsis, emptyRender, isEmpty, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"single-row\"\n      item={item}\n      hover={hover}\n      primary={primary}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      <Ellipsis ellipsis={ellipsis}>{item}</Ellipsis>\n    </ColItem>\n  );\n};\n// init:80px min:80px max:400px\nconst hideInfo = (item, props) => {\n  return <HideInfoComponent api={item} {...props} />;\n};\n// init:300px min:160px max:500px\nconst mainInfo = (\n  item,\n  { ellipsis, hover = true, primary = true, emptyRender, isEmpty, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"main-info\"\n      item={item}\n      hover={hover}\n      primary={primary}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      <Ellipsis ellipsis={ellipsis}>{item}</Ellipsis>\n    </ColItem>\n  );\n};\n// init:400px 160px 600px\nconst description = (\n  item,\n  { hover, primary, ellipsis, emptyRender, isEmpty, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"description\"\n      item={item}\n      hover={hover}\n      primary={primary}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      <Ellipsis ellipsis={ellipsis}>{item}</Ellipsis>\n    </ColItem>\n  );\n};\n\n// init:180px min:120px max:400px\nconst options = (item, { width }) => {\n  return (\n    <OptionsList\n      className={classnames(columnsStyle[\"col-item\"], columnsStyle[\"options\"])}\n      list={item}\n      width={width}\n    />\n  );\n};\n\nconst other = (\n  item,\n  { hover, primary, ellipsis, emptyRender, isEmpty, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"other\"\n      item={item}\n      hover={hover}\n      primary={primary}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      <Ellipsis ellipsis={ellipsis}>{item}</Ellipsis>\n    </ColItem>\n  );\n};\n\nconst sensitiveInfo = (\n  item,\n  { hover, primary, ellipsis, emptyRender, isEmpty, ...props }\n) => {\n  return (\n    <ColItem\n      {...props}\n      type=\"sensitiveInfo\"\n      item={item}\n      hover={hover}\n      primary={primary}\n      emptyRender={emptyRender}\n      isEmpty={isEmpty}\n    >\n      <Ellipsis ellipsis={ellipsis}>{item}</Ellipsis>\n    </ColItem>\n  );\n};\n\nconst columnTypes = {\n  date: {\n    render: date,\n    width: 160,\n    min: 120,\n    max: 400,\n  },\n  dateShort: {\n    render: dateShort,\n    width: 120,\n    min: 100,\n    max: 400,\n  },\n  dateRange: {\n    render: dateRange,\n    width: 240,\n    min: 120,\n    max: 400,\n  },\n  datetime: {\n    render: datetime,\n    width: 190,\n    min: 190,\n    max: 400,\n  },\n  serialNumber: {\n    render: serialNumber,\n    width: 190,\n    min: 100,\n    max: 400,\n  },\n  serialNumberShort: {\n    render: serialNumberShort,\n    width: 120,\n    min: 100,\n    max: 400,\n  },\n  user: {\n    render: user,\n    width: 200,\n    min: 120,\n    max: 400,\n  },\n  userName: {\n    render: userName,\n    width: 100,\n    min: 100,\n    max: 400,\n  },\n  contacts: {\n    render: contacts,\n    width: 240,\n    min: 160,\n    max: 400,\n  },\n  tag: {\n    render: tag,\n    width: 140,\n    min: 100,\n    max: 400,\n  },\n  avatar: {\n    render: avatar,\n    width: 80,\n    min: 64,\n    max: 200,\n  },\n  singleRow: {\n    render: singleRow,\n    width: 70,\n    min: 70,\n    max: 400,\n  },\n  hideInfo: {\n    render: hideInfo,\n    width: 120,\n    min: 80,\n    max: 400,\n  },\n  mainInfo: {\n    render: mainInfo,\n    width: 300,\n    min: 160,\n    max: 500,\n  },\n  description: {\n    render: description,\n    width: 400,\n    min: 160,\n    max: 600,\n  },\n  options: {\n    render: options,\n    width: 180,\n    min: 120,\n    max: 400,\n  },\n  sensitiveInfo: {\n    render: sensitiveInfo,\n    width: 200,\n    min: 100,\n    max: 400,\n  },\n  other: {\n    render: other,\n    width: 200,\n    min: 120,\n    max: 400,\n  },\n};\n\nexport default columnTypes;\n","import { useMemo, useState } from \"react\";\nimport groupBy from \"lodash/groupBy\";\nimport Icon from \"@components/Icon\";\nimport LoadingButton from \"@components/LoadingButton\";\nimport { SearchInput } from \"@components/Common\";\nimport style from \"./style.module.scss\";\nimport { Button, Checkbox, Col, Collapse, List, Row, Tooltip } from \"antd\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport classnames from \"classnames\";\nimport transform from \"lodash/transform\";\nimport get from \"lodash/get\";\nimport set from \"lodash/set\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nconst { Panel } = Collapse;\n\nconst ColumnsControlContent = ({\n  close,\n  onConfirm,\n  columns,\n  config: defaultValue,\n}) => {\n  const [config, onChange] = useState(defaultValue || {});\n\n  const [searchText, setSearchText] = useState(\"\");\n  const { leftFixedColumns, rightFixedColumns, visibleColumns, hiddenColumns } =\n    useMemo(() => {\n      return transform(\n        Object.assign(\n          {\n            leftFixedColumns: [],\n            rightFixedColumns: [],\n            visibleColumns: [],\n            hiddenColumns: [],\n          },\n          groupBy(columns, (item) => {\n            if (item.fixed === \"right\") {\n              return \"rightFixedColumns\";\n            }\n            if (item.fixed === true || item.fixed === \"left\") {\n              return \"leftFixedColumns\";\n            }\n            return (get(config, `${item.name}.visible`) !== true &&\n              item.hidden) ||\n              get(config, `${item.name}.visible`) === false\n              ? \"hiddenColumns\"\n              : \"visibleColumns\";\n          })\n        ),\n        (result, value, key) => {\n          result[key] = value.sort((a, b) => {\n            return (\n              get(config, `${a.name}.rank`, 0) -\n              get(config, `${b.name}.rank`, 0)\n            );\n          });\n        },\n        {}\n      );\n    }, [columns, config]);\n\n  const handlerColumnsChange = (columns) => {\n    const newConfig = cloneDeep(config);\n    const columnsList = [].concat(\n      columns.leftFixedColumns,\n      columns.visibleColumns,\n      columns.rightFixedColumns\n    );\n    (columns.hiddenColumns || []).forEach((col) => {\n      set(newConfig, `${col.name}.visible`, false);\n    });\n    columnsList.forEach((col, index) => {\n      set(newConfig, `${col.name}.rank`, index + 1);\n    });\n    onChange(newConfig);\n  };\n\n  const renderColumn = (item) => {\n    return (\n      <>\n        {item.titleText || item.title || \"未命名列\"}\n        {item.groupHeader && item.groupHeader.length > 0\n          ? `(${item.groupHeader.map(({ title }) => title).join(\"-\")})`\n          : \"\"}\n      </>\n    );\n  };\n\n  return (\n    <div className={style[\"columns-control-content\"]}>\n      <div className={style[\"columns-control-content-title\"]}>\n        <Row align=\"middle\" justify=\"space-between\">\n          <Col>编辑表格</Col>\n          <Col>\n            <Tooltip title=\"恢复默认\">\n              <LoadingButton\n                type=\"text\"\n                icon={<Icon type=\"icon-huifumorenshezhi\" />}\n                onClick={async () => {\n                  onConfirm && (await onConfirm({}));\n                  close();\n                }}\n              />\n            </Tooltip>\n          </Col>\n        </Row>\n      </div>\n      <div className={style[\"columns-control-content-scroller\"]}>\n        <Collapse\n          defaultActiveKey={[\"active\", \"un-active\"]}\n          ghost={true}\n          bordered\n        >\n          <Panel key=\"active\" header=\"显示的信息\">\n            <List className={style[\"columns-control-content-list\"]}>\n              {leftFixedColumns.map((item, index) => (\n                <List.Item\n                  className={style[\"columns-control-content-item\"]}\n                  key={item.name || `left-${index}`}\n                >\n                  <Checkbox checked disabled>\n                    {renderColumn(item)}\n                  </Checkbox>\n                </List.Item>\n              ))}\n              <ReactSortable\n                list={visibleColumns}\n                filter=\".ignore-elements\"\n                dragClass={style[\"sortable-drag\"]}\n                ghostClass={style[\"sortable-ghost\"]}\n                forceFallback\n                setList={(visibleColumns) => {\n                  handlerColumnsChange({\n                    leftFixedColumns,\n                    visibleColumns,\n                    hiddenColumns,\n                    rightFixedColumns,\n                  });\n                }}\n                animation={300}\n                delayOnTouchStart\n                delay={2}\n              >\n                {visibleColumns.map((item, index) => (\n                  <List.Item\n                    className={classnames(\n                      style[\"columns-control-content-item\"],\n                      style[\"is-drag\"]\n                    )}\n                    key={item.name || `visible-${index}`}\n                  >\n                    <Icon\n                      type=\"icon-paixu\"\n                      className={style[\"columns-control-content-item-icon\"]}\n                    />\n                    <Checkbox\n                      checked\n                      disabled={\n                        item.fixed ||\n                        leftFixedColumns.length +\n                          visibleColumns.length +\n                          rightFixedColumns.length <=\n                          1\n                      }\n                      onChange={(e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        const newConfig = Object.assign({}, config);\n                        newConfig[item.name] = Object.assign(\n                          {},\n                          newConfig[item.name],\n                          { visible: false }\n                        );\n                        onChange(newConfig);\n                      }}\n                    >\n                      {renderColumn(item)}\n                    </Checkbox>\n                  </List.Item>\n                ))}\n              </ReactSortable>\n              {rightFixedColumns.map((item, index) => (\n                <List.Item\n                  className={style[\"columns-control-content-item\"]}\n                  key={item.name || `right-${index}`}\n                >\n                  <Checkbox checked disabled>\n                    {item.titleText || item.title || \"未命名列\"}\n                  </Checkbox>\n                </List.Item>\n              ))}\n            </List>\n          </Panel>\n          <Panel\n            key=\"un-active\"\n            header={\n              <Row wrap={false} justify=\"space-between\">\n                <Col>隐藏的信息</Col>\n                <Col\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                  }}\n                >\n                  <SearchInput\n                    prefix={<Icon type=\"icon-sousuo\" size={12} />}\n                    placeholder=\"搜索\"\n                    onSearch={(value) => {\n                      setSearchText(value);\n                    }}\n                    className={style[\"columns-control-content-input\"]}\n                    size=\"small\"\n                  />\n                </Col>\n              </Row>\n            }\n          >\n            <List\n              dataSource={hiddenColumns.filter(\n                (item) =>\n                  typeof (item.titleText || item.title) === \"string\" &&\n                  (item.titleText || item.title).indexOf(searchText) > -1\n              )}\n              renderItem={(item) => {\n                return (\n                  <List.Item\n                    className={style[\"columns-control-content-item\"]}\n                    key={item.key}\n                  >\n                    <Checkbox\n                      checked={false}\n                      onChange={(e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        const newConfig = Object.assign({}, config);\n                        newConfig[item.name] = Object.assign(\n                          {},\n                          newConfig[item.name],\n                          { visible: true }\n                        );\n                        onChange(newConfig);\n                      }}\n                    >\n                      {item.titleText || item.title || \"未命名列\"}\n                    </Checkbox>\n                  </List.Item>\n                );\n              }}\n            />\n          </Panel>\n        </Collapse>\n      </div>\n      <Row\n        className={style[\"columns-control-content-footer\"]}\n        justify=\"end\"\n        gutter={10}\n      >\n        <Col>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              onChange(defaultValue || {});\n              close();\n            }}\n          >\n            取消\n          </Button>\n        </Col>\n        <Col>\n          <LoadingButton\n            type=\"primary\"\n            size=\"small\"\n            onClick={async () => {\n              onConfirm && (await onConfirm(config));\n              close();\n            }}\n          >\n            确定\n          </LoadingButton>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default ColumnsControlContent;\n","import { startTransition, useEffect, useMemo, useRef, useState } from \"react\";\nimport useRefCallback from \"@kne/use-ref-callback\";\nimport classnames from \"classnames\";\nimport columnTypes from \"./columnTypes\";\nimport get from \"lodash/get\";\nimport sumBy from \"lodash/sumBy\";\nimport transform from \"lodash/transform\";\nimport pick from \"lodash/pick\";\nimport { Col, Popover, Row } from \"antd\";\nimport Icon from \"@components/Icon\";\nimport { usePreset } from \"@components/Global\";\nimport { useFetch } from \"@kne/react-fetch\";\nimport ColumnsControlContent from \"./ColumnsControlContent\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport style from \"./style.module.scss\";\nimport isEqual from \"lodash/isEqual\";\nimport findLastIndex from \"lodash/findLastIndex\";\n\nconst TableConfig = ({ title, columns, config, setConfig }) => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Row wrap={false}>\n      <Col flex={1}>{title}</Col>\n      <Col>\n        <Popover\n          open={open}\n          onOpenChange={setOpen}\n          trigger=\"click\"\n          placement=\"bottomLeft\"\n          overlayClassName={style[\"columns-control-overlay\"]}\n          content={\n            <ColumnsControlContent\n              columns={columns}\n              config={config}\n              close={() => {\n                setOpen(false);\n              }}\n              onConfirm={(newConfig) => {\n                setConfig((config) => {\n                  return transform(\n                    newConfig,\n                    (result, value, key) => {\n                      result[key] = Object.assign(\n                        {},\n                        config[key],\n                        pick(value, [\"visible\", \"rank\"])\n                      );\n                    },\n                    {}\n                  );\n                });\n              }}\n            />\n          }\n        >\n          <span className={style[\"table-changer-setting\"]}>\n            <Icon type=\"icon-shezhi\" />\n          </span>\n        </Popover>\n      </Col>\n    </Row>\n  );\n};\n\nconst useTableConfig = ({ columns, name, controllerOpen, tableWidth }) => {\n  const [currentMoveColumnIndex, setCurrentMoveColumnIndex] = useState(null);\n  const currentMoveColumnIndexRef = useRef(currentMoveColumnIndex);\n  currentMoveColumnIndexRef.current = currentMoveColumnIndex;\n  const currentMoveColumnRef = useRef(null);\n  const startPointRef = useRef(null);\n  const [config, setConfigBase] = useState({});\n  const { tableServerApis } = usePreset();\n  const tablePageServerParams = tableServerApis?.getDataApi(name);\n\n  const saveConfig = useDebouncedCallback((name, target) => {\n    tableServerApis?.setDataFunc(name, target);\n  }, 500);\n\n  const setConfig = useRefCallback((newConfig) => {\n    startTransition(() => {\n      setConfigBase((config) => {\n        const target =\n          typeof newConfig === \"function\" ? newConfig(config) : newConfig;\n        name && controllerOpen && saveConfig(name, target);\n        return target;\n      });\n    });\n  });\n\n  const { send } = useFetch(\n    Object.assign({\n      ...Object.assign({}, tablePageServerParams),\n      auto: false,\n      cache: `TABLE_CONFIG_${name}`,\n      isLocal: true,\n      onRequestSuccess: (data) => {\n        setConfigBase(Object.assign({}, data));\n      },\n    })\n  );\n\n  const getTableConfig = useRefCallback(() => {\n    if (name && controllerOpen && tablePageServerParams) {\n      send({ force: false });\n    }\n  });\n\n  useEffect(() => {\n    getTableConfig();\n  }, [getTableConfig]);\n\n  const visibleColumns = useMemo(() => {\n    return columns\n      .filter((col) => {\n        return !(\n          get(config, `${col.name}.visible`) === false ||\n          (get(config, `${col.name}.visible`) !== true && col.hidden === true)\n        );\n      })\n      .sort((a, b) => {\n        const computedIndex = (item) => {\n          return (\n            get(config, `${item.name}.rank`, 0) +\n            (item.fixed === \"left\" ? -10000 : 0) +\n            (item.fixed === \"right\" ? 10000 : 0)\n          );\n        };\n        return computedIndex(a) - computedIndex(b);\n      });\n  }, [columns, config]);\n\n  const lastNotOptionsColumnIndex = useMemo(() => {\n    return findLastIndex(visibleColumns, ({ type }) => type !== \"options\");\n  }, [visibleColumns]);\n\n  const totalWidth = useMemo(() => {\n    return sumBy(\n      visibleColumns,\n      ({ type, name }) =>\n        get(config, `${name}.width`) || columnTypes[type].width\n    );\n  }, [visibleColumns, config]);\n\n  const computedRealWidth = ({ width, index }) => {\n    return lastNotOptionsColumnIndex === index\n      ? width + Math.max(tableWidth - totalWidth - 2, 0)\n      : width;\n  };\n\n  const resizeBarRender = useRefCallback((column, index) => {\n    return (\n      <span\n        className={classnames(style[\"cell-resize-bar\"])}\n        onMouseDown={(e) => {\n          currentMoveColumnRef.current = Object.assign({}, column, { index });\n          startPointRef.current = e.clientX;\n          setCurrentMoveColumnIndex(index);\n        }}\n      >\n        <Icon type=\"icon-paixu\" />\n      </span>\n    );\n  });\n\n  const resize = useRefCallback((delta) => {\n    if (currentMoveColumnIndex === null) {\n      return;\n    }\n    if (!currentMoveColumnRef.current) {\n      return;\n    }\n    const { name, width, min, max, index } = currentMoveColumnRef.current;\n    const currentWidth = Math.min(Math.max(width + delta, min), max);\n    if (currentWidth < computedRealWidth({ width: min, index })) {\n      return;\n    }\n    setConfig((config) => {\n      return Object.assign({}, config, {\n        [name]: Object.assign({}, config[name], {\n          width: currentWidth,\n        }),\n      });\n    });\n  });\n\n  const computedColumnProps = useRefCallback((column, index) => {\n    const { name, width, min, max } = column;\n    let targetColumn = column;\n    if (index === visibleColumns.length - 1) {\n      targetColumn = Object.assign({}, column, {\n        className: \"has-config-btn\",\n        title: (\n          <TableConfig\n            title={column?.title}\n            columns={columns}\n            config={config}\n            setConfig={setConfig}\n          />\n        ),\n      });\n    }\n\n    const movingClass = () => {\n      return {\n        className: classnames({\n          [style[\"is-moving\"]]: currentMoveColumnIndexRef.current === index,\n        }),\n      };\n    };\n    const currentWidth = Math.min(\n      Math.max(get(config, `${name}.width`) || width, min),\n      max\n    );\n\n    const realWidth = computedRealWidth({ width: currentWidth, index });\n\n    return Object.assign({}, targetColumn, {\n      onHeaderCell: movingClass,\n      onCell: movingClass,\n      width: realWidth,\n      shouldCellUpdate: (record, prevRecord) => {\n        return (\n          currentMoveColumnIndexRef.current === null ||\n          currentMoveColumnIndexRef.current === index ||\n          column.type === \"hideInfo\" ||\n          !isEqual(record[column.name], prevRecord[column.name])\n        );\n      },\n      title: (\n        <>\n          {targetColumn.title}\n          {!(realWidth > currentWidth && realWidth > max) &&\n            resizeBarRender(\n              Object.assign({}, targetColumn, { width: realWidth }),\n              index\n            )}\n        </>\n      ),\n    });\n  });\n\n  useEffect(() => {\n    const handlerCancelResize = () => {\n      setCurrentMoveColumnIndex(null);\n      startPointRef.current = null;\n      currentMoveColumnRef.current = null;\n    };\n\n    const handlerResize = (e) => {\n      if (\n        currentMoveColumnIndexRef.current === null ||\n        currentMoveColumnRef.current === null\n      ) {\n        return;\n      }\n      if (startPointRef.current === null) {\n        startPointRef.current = e.clientX;\n        return;\n      }\n      resize(e.clientX - startPointRef.current);\n    };\n    document.documentElement.addEventListener(\n      \"mouseup\",\n      handlerCancelResize,\n      true\n    );\n    document.documentElement.addEventListener(\"mousemove\", handlerResize, true);\n    return () => {\n      document.documentElement.removeEventListener(\n        \"mouseup\",\n        handlerCancelResize,\n        true\n      );\n      document.documentElement.removeEventListener(\n        \"mousemove\",\n        handlerResize,\n        true\n      );\n    };\n  }, [resize]);\n\n  return {\n    visibleColumns,\n    currentMoveColumnIndex,\n    resizeBarRender,\n    columnsConfig: config,\n    totalWidth,\n    computedColumnProps,\n  };\n};\n\nexport default useTableConfig;\n","import { useRef, useState } from \"react\";\nimport columnTypes from \"@components/Table/columnTypes\";\nimport isNil from \"lodash/isNil\";\nimport pick from \"lodash/pick\";\nimport memoize from \"lodash/memoize\";\nimport get from \"lodash/get\";\nimport useRefCallback from \"@kne/use-ref-callback\";\n\nconst useColumnTypeProps = ({ rowKey, renderProps }) => {\n  const [expandInfo, setExpandInfo] = useState(null);\n  const columnRenderPropsRef = useRef(renderProps);\n  columnRenderPropsRef.current = renderProps;\n\n  const computedColumnProps = useRefCallback(\n    (col, index, { columnsConfig }) => {\n      const {\n        name,\n        type,\n        expandType,\n        title,\n        titleRender,\n        fixed,\n        emptyOf,\n        emptyRender,\n        groupHeader,\n        sort,\n        disableColItem,\n        ...otherColProps\n      } = col;\n      const { render, width, min, max } = Object.assign(\n        {},\n        columnTypes[type],\n        type === \"hideInfo\" &&\n          !isNil(expandInfo) &&\n          pick(columnTypes[expandType || \"other\"], [\"width\", \"min\", \"max\"])\n      );\n      const targetRender = memoize(render);\n\n      return {\n        name,\n        title: typeof titleRender === \"function\" ? titleRender(title) : title,\n        min,\n        max,\n        width,\n        fixed,\n        groupHeader,\n        sort,\n        type,\n        render: (item) => {\n          const itemKey =\n            typeof rowKey === \"function\" ? rowKey(item) : item[rowKey];\n          const colProps = Object.assign(\n            {},\n            col,\n            typeof col.render === \"function\"\n              ? col.render({\n                  ...columnRenderPropsRef.current,\n                  name,\n                  target: item,\n                })\n              : {}\n          );\n\n          const targetRenderWithProps = (colValue) => {\n            const isEmpty = (\n              emptyOf ||\n              ((value) => value === \"\" || value === void 0 || value === null)\n            )(colValue);\n            return targetRender(colValue, {\n              ...otherColProps,\n              name,\n              width: get(columnsConfig, `${name}.width`) || width,\n              min,\n              max,\n              isEmpty,\n              emptyRender,\n              hover: colProps.hover,\n              colValue: item,\n              renderProps: columnRenderPropsRef.current,\n              primary: colProps.primary,\n              ellipsis: colProps.ellipsis,\n              expand: expandInfo === itemKey,\n              onExpand: () => setExpandInfo(itemKey),\n            });\n          };\n\n          const colValue =\n            colProps.hasOwnProperty(\"valueOf\") &&\n            typeof colProps.valueOf === \"function\"\n              ? colProps.valueOf(\n                  item,\n                  Object.assign(\n                    {},\n                    columnRenderPropsRef.current,\n                    {\n                      name,\n                    },\n                    disableColItem\n                      ? { targetRender: targetRenderWithProps }\n                      : {}\n                  )\n                )\n              : get(item, name);\n          return disableColItem ? colValue : targetRenderWithProps(colValue);\n        },\n      };\n    }\n  );\n\n  return {\n    expandInfo,\n    computedColumnProps,\n  };\n};\n\nexport default useColumnTypeProps;\n","import { useMemo } from \"react\";\n\nconst useGroupHeader = (columns) => {\n  return useMemo(() => {\n    const groupHeaderColumns = columns.filter(\n      (item) => item.groupHeader && item.groupHeader.length > 0\n    );\n    if (groupHeaderColumns.length > 0) {\n      const newColumns = columns.slice(0);\n      const group = [];\n      const appendGroupHeader = (column) => {\n        const { groupHeader } = column;\n        if (!(groupHeader && groupHeader.length > 0)) {\n          return;\n        }\n        const columnIndex = newColumns.indexOf(column);\n        const core = (groupHeader, group) => {\n          const [targetHeader, ...otherHeader] = groupHeader;\n          let currentGroup = group.find(\n            (item) => item.name === targetHeader.name\n          );\n          if (!currentGroup) {\n            currentGroup = Object.assign(\n              { startIndex: columnIndex },\n              targetHeader,\n              { children: [] }\n            );\n            group.push(currentGroup);\n          }\n          if (otherHeader.length > 0) {\n            core(otherHeader, currentGroup.children);\n          } else {\n            currentGroup.children.push(column);\n          }\n        };\n        core(groupHeader, group);\n        newColumns.splice(columnIndex, 1);\n      };\n      groupHeaderColumns.forEach(appendGroupHeader);\n      group.forEach((groupColumn, index) => {\n        newColumns.splice(groupColumn.startIndex + index, 0, groupColumn);\n      });\n\n      return { columns: newColumns, hasGroupHeader: true };\n    }\n    return { columns, hasGroupHeader: false };\n  }, [columns]);\n};\n\nexport default useGroupHeader;\n","import useControlValue from \"@kne/use-control-value\";\nimport Icon from \"@components/Icon\";\nimport classnames from \"classnames\";\nimport clone from \"lodash/clone\";\nimport { useCallback, useMemo } from \"react\";\nimport style from \"./style.module.scss\";\n\nconst sortArrayToMap = (sort) =>\n  new Map(\n    (sort || []).map(({ name, sort }) => {\n      return [name, sort];\n    })\n  );\n\nconst useSort = (props) => {\n  const [sort, setSort] = useControlValue(props, {\n    value: \"sort\",\n    defaultValue: \"defaultSort\",\n    onChange: \"onSortChange\",\n  });\n\n  const mapSort = useMemo(() => {\n    return sortArrayToMap(sort);\n  }, [sort]);\n\n  const setMapSort = useCallback(\n    (callback) => {\n      return setSort((sort) => {\n        const newSort = callback(sortArrayToMap(sort));\n        return Array.from(newSort).map(([name, sort]) => ({ name, sort }));\n      });\n    },\n    [setSort]\n  );\n\n  return useCallback(\n    ({ single, name }) => (\n      <div\n        className={classnames(style[\"sort-btn\"], {\n          [style[\"sort-active-desc\"]]: mapSort.get(name) === \"DESC\",\n          [style[\"sort-active-asc\"]]: mapSort.get(name) === \"ASC\",\n        })}\n        onClick={() => {\n          setMapSort((sort) => {\n            const current = sort.get(name);\n            const targetValue = (() => {\n              if (current === \"DESC\") {\n                return \"ASC\";\n              }\n              if (current === \"ASC\") {\n                return null;\n              }\n              return \"DESC\";\n            })();\n            if (single) {\n              return new Map(targetValue ? [[name, targetValue]] : []);\n            }\n            const newSort = clone(sort);\n            targetValue ? newSort.set(name, targetValue) : newSort.delete(name);\n            return newSort;\n          });\n        }}\n      >\n        <Icon type=\"icon-triangle-up\" className={style[\"sort-icon\"]} />\n        <Icon type=\"icon-triangle-down\" className={style[\"sort-icon\"]} />\n      </div>\n    ),\n    [mapSort, setMapSort]\n  );\n};\n\nexport default useSort;\n","import style from \"./style.module.scss\";\nimport { Table as AntdTable } from \"antd\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport classnames from \"classnames\";\nimport Scroller from \"@common/components/Scroller\";\nimport { getScrollEl } from \"@common/utils/importantContainer\";\nimport useResize from \"@common/hooks/useResize\";\nimport useTableConfig from \"./useTableConfig\";\nimport useColumnTypeProps from \"@components/Table/useColumnTypeProps\";\nimport useGroupHeader from \"./useGroupHeader\";\nimport useSort from \"./useSort\";\nimport useRefCallback from \"@kne/use-ref-callback\";\n\nconst Table = ({\n  columns,\n  className,\n  getScrollEl,\n  sticky,\n  stickyOffset,\n  pagination,\n  columnRenderProps,\n  rowKey,\n  dataSource,\n  controllerOpen,\n  name,\n  summary,\n  scroll,\n  onTablePropsReady,\n  ...props\n}) => {\n  const [tableWidth, setTableWidth] = useState(0);\n  const [isLayout, setIsLayout] = useState(true);\n\n  useEffect(() => {\n    if (tableWidth) {\n      setTimeout(() => {\n        setIsLayout(false);\n      }, 0);\n    }\n  }, [tableWidth]);\n  const columnRenderPropsRef = useRef(columnRenderProps);\n  columnRenderPropsRef.current = columnRenderProps;\n  const ref = useResize(\n    (el) => {\n      setTableWidth(el.clientWidth);\n    },\n    { isDebounce: true }\n  );\n  const { expandInfo, computedColumnProps } = useColumnTypeProps({\n    rowKey,\n    renderProps: columnRenderProps,\n  });\n\n  const {\n    columnsConfig,\n    visibleColumns,\n    computedColumnProps: computedColumnConfigProps,\n    currentMoveColumnIndex,\n    totalWidth,\n  } = useTableConfig({\n    columns,\n    controllerOpen,\n    name,\n    computedColumnProps,\n    tableWidth,\n  });\n\n  const sortRender = useSort(props);\n\n  const targetColumns = useMemo(() => {\n    return visibleColumns.map((col, index) => {\n      let target = computedColumnProps(col, index, {\n        rowKey,\n        expandInfo,\n        columnsConfig,\n      });\n\n      if (target.sort && col.type !== \"options\") {\n        target = Object.assign({}, target, {\n          title: (\n            <>\n              {target.title}\n              {sortRender({\n                name: col.name,\n                single:\n                  typeof target.sort === \"object\" ? target.sort.single : true,\n              })}\n            </>\n          ),\n        });\n      }\n\n      if (controllerOpen) {\n        target = computedColumnConfigProps(target, index, {\n          tableWidth,\n          columnsConfig,\n        });\n      }\n\n      return target;\n    });\n  }, [\n    visibleColumns,\n    tableWidth,\n    columnsConfig,\n    expandInfo,\n    rowKey,\n    controllerOpen,\n    computedColumnProps,\n    computedColumnConfigProps,\n    sortRender,\n  ]);\n\n  const { columns: groupColumns, hasGroupHeader } =\n    useGroupHeader(targetColumns);\n\n  const onTablePropsReadyCallback = useRefCallback(onTablePropsReady);\n\n  useEffect(() => {\n    onTablePropsReadyCallback &&\n      onTablePropsReadyCallback({\n        columns,\n        groupColumns,\n        dataSource,\n        visibleColumns,\n      });\n  }, [\n    onTablePropsReadyCallback,\n    groupColumns,\n    dataSource,\n    columns,\n    visibleColumns,\n  ]);\n\n  return (\n    <div\n      className={classnames(className, style[\"table\"], {\n        [style[\"is-resize\"]]: currentMoveColumnIndex !== null,\n        [style[\"is-computed\"]]: isLayout,\n        [style[\"has-group-header\"]]: hasGroupHeader,\n      })}\n      ref={ref}\n      style={{\n        \"--sticky-offset\": stickyOffset,\n      }}\n    >\n      {!isLayout && (\n        <Scroller\n          className=\"table-page-scroller\"\n          scroller={{ getContainer: getScrollEl }}\n          getScrollTarget={(el) => {\n            return (\n              el.querySelector(\".ant-table-body\") ||\n              el.querySelector(\".ant-table-content\")\n            );\n          }}\n        >\n          <AntdTable\n            {...props}\n            sticky={\n              sticky\n                ? {\n                    getContainer: getScrollEl,\n                  }\n                : false\n            }\n            dataSource={dataSource}\n            rowKey={rowKey}\n            columns={groupColumns}\n            scroll={Object.assign(\n              {},\n              { x: Math.max(tableWidth, totalWidth) },\n              scroll\n            )}\n            pagination={pagination}\n            summary={\n              typeof summary === \"function\"\n                ? (current, ...args) => {\n                    return summary(\n                      Object.assign(\n                        {},\n                        { pageData: current },\n                        { columns: groupColumns }\n                      ),\n                      ...args\n                    );\n                  }\n                : null\n            }\n          />\n        </Scroller>\n      )}\n    </div>\n  );\n};\n\nTable.defaultProps = {\n  controllerOpen: true,\n  rowKey: \"id\",\n  getScrollEl,\n  columnRenderProps: {},\n  sticky: false,\n  stickyOffset: \"var(--nav-height)\",\n  pagination: false,\n};\n\nexport default Table;\n","const importMessages = (locale) => {\n  return {\n    \"en-US\": () => import(\"./en-US\"),\n    \"zh-CN\": () => import(\"./zh-CN\"),\n  }[locale]();\n};\n\nexport default importMessages;\n","import { withFetch } from \"@kne/react-fetch\";\nimport Table from \"./Table\";\nimport classnames from \"classnames\";\nimport Features from \"@components/Features\";\nimport get from \"lodash/get\";\nimport useRefCallback from \"@kne/use-ref-callback\";\nimport { forwardRef, useMemo, useState } from \"react\";\nimport style from \"./style.module.scss\";\nimport importMessages from \"./locale\";\nimport { FormattedMessage, IntlProvider } from \"@components/Intl\";\nimport localStorage from \"@common/utils/localStorage\";\nimport { getScrollEl } from \"@common/utils/importantContainer\";\n\nconst FeaturesColumnsConfig = ({ id, columns, children }) => {\n  if (id) {\n    return (\n      <Features id={id}>\n        {({ options }) =>\n          children({\n            columns: columns.filter((item) => {\n              if (!item.name) {\n                return true;\n              }\n              if (!Array.isArray(get(options, \"hiddenColumns\"))) {\n                return true;\n              }\n              return options.hiddenColumns.indexOf(item.name) === -1;\n            }),\n          })\n        }\n      </Features>\n    );\n  }\n  return children({ columns });\n};\n\nconst TablePageInner = withFetch(\n  ({\n    data,\n    refresh,\n    reload,\n    requestParams,\n    fetchProps,\n    isComplete,\n    setData,\n    loadMore,\n    send,\n    dataFormat,\n    className,\n    featureId,\n    columns,\n    getColumns,\n    pagination,\n    columnRenderProps,\n    summary,\n    ...props\n  }) => {\n    const handlerDataFormat = useRefCallback(dataFormat);\n    const formatData = useMemo(() => {\n      return handlerDataFormat(data);\n    }, [data, handlerDataFormat]);\n\n    const tableProps = {\n      dataSource: formatData.list,\n      pagination: pagination.open\n        ? {\n            total: formatData.total,\n            showTotal: (total) => (\n              <>\n                <FormattedMessage\n                  id=\"Page_Total\"\n                  moduleName=\"Table\"\n                  defaultMessage=\"共\"\n                />\n                <span className={style[\"total_text\"]}>{total}</span>\n                <FormattedMessage\n                  id=\"Page_TotalCount\"\n                  moduleName=\"Table\"\n                  defaultMessage=\"条\"\n                />\n              </>\n            ),\n            current: get(\n              requestParams,\n              [pagination.paramsType, pagination.currentName],\n              1\n            ),\n            pageSize: pagination.pageSize,\n            onChange: pagination.onChange\n              ? pagination.onChange\n              : (page, size) => {\n                  if (\n                    page !==\n                    get(\n                      requestParams,\n                      [pagination.paramsType, pagination.currentName],\n                      1\n                    )\n                  ) {\n                    (pagination.requestType === \"refresh\" ? refresh : reload)({\n                      [pagination.paramsType]: {\n                        [pagination.currentName]: page,\n                        [pagination.pageSizeName]: size,\n                      },\n                    });\n                  } else {\n                    pagination.onShowSizeChange &&\n                      pagination.onShowSizeChange(page, size);\n                  }\n                  getScrollEl().scrollTop = 0;\n                },\n            size: pagination.size,\n            showSizeChanger: pagination.showSizeChanger,\n            showQuickJumper: pagination.showQuickJumper,\n          }\n        : false,\n    };\n\n    return (\n      <IntlProvider importMessages={importMessages} moduleName=\"Table\">\n        <FeaturesColumnsConfig id={featureId} columns={columns}>\n          {({ columns }) => (\n            <Table\n              {...Object.assign({}, props, tableProps)}\n              className={classnames(className, \"loading-container\", {\n                \"is-loading\": !isComplete,\n              })}\n              columns={columns}\n              columnRenderProps={{\n                ...columnRenderProps,\n                requestParams,\n                fetchProps,\n                data,\n              }}\n              summary={\n                typeof summary === \"function\"\n                  ? (...args) => {\n                      return summary(\n                        Object.assign(\n                          {},\n                          {\n                            data,\n                            fetchProps,\n                            requestParams,\n                            refresh,\n                            reload,\n                            loadMore,\n                            send,\n                            dataFormat,\n                            pagination,\n                          },\n                          ...args\n                        )\n                      );\n                    }\n                  : null\n              }\n            />\n          )}\n        </FeaturesColumnsConfig>\n      </IntlProvider>\n    );\n  }\n);\n\nTablePageInner.defaultProps = {\n  pagination: {},\n  columnRenderProps: {},\n  sticky: true,\n  dataFormat: (data) => {\n    return {\n      list: data.pageData,\n      total: data.totalCount,\n    };\n  },\n};\n\nconst TablePage = forwardRef(({ pagination, ...props }, ref) => {\n  pagination = Object.assign(\n    {},\n    {\n      showSizeChanger: true,\n      showQuickJumper: true,\n      open: true,\n      paramsType: \"data\",\n      requestType: \"reload\",\n      currentName: \"currentPage\",\n      pageSizeName: \"perPage\",\n      pageSize: 20,\n      //size: \"small\",\n    },\n    pagination\n  );\n  const pageSizeKey = `${(\n    props.name || \"common\"\n  ).toUpperCase()}_TABLE_PAGE_SIZE`;\n  const [pageSize, setPageSize] = useState(\n    localStorage.getItem(pageSizeKey) || pagination.pageSize\n  );\n  const fetchParams = useMemo(() => {\n    const fetchParams = {};\n    if (props.params && Object.keys(props.params).length > 0) {\n      fetchParams[\"params\"] = {\n        ...props.params,\n        [pagination.pageSizeName]: pageSize,\n      };\n    }\n    if (props.data && Object.keys(props.data).length > 0) {\n      fetchParams[\"data\"] = {\n        ...props.data,\n        [pagination.pageSizeName]: pageSize,\n      };\n    }\n    return fetchParams;\n  }, [props.params, props.data, pagination.pageSizeName, pageSize]);\n  return (\n    <TablePageInner\n      {...props}\n      {...fetchParams}\n      pagination={Object.assign({}, pagination, {\n        pageSize,\n        onShowSizeChange: (current, size) => {\n          localStorage.setItem(pageSizeKey, size);\n          setPageSize(size);\n        },\n      })}\n      ref={ref}\n    />\n  );\n});\n\nexport default TablePage;\n"],"names":["name","summary","api","example","isFull","className","style","list","title","description","code","scope","packageName","component","ButtonText","getItem","key","target","window","localStorage","dataType","value","JSON","parse","Number","Boolean","e","setItem","stringify","Label","_ref","children","setWidth","ref","useRef","current","useLayoutEffect","computed","width","getBoundingClientRect","resizeObserver","ResizeObserver","observe","disconnect","_jsxs","Content","_ref2","labelAlign","col","gutter","size","labelWidthListRef","maxLabelWidth","setMaxLabelWidth","useState","_jsx","Row","classnames","filter","item","display","map","_ref3","index","label","content","block","Col","span","Space","minWidth","textAlign","Math","max","defaultProps","dataSource","props","colItem","colIndex","_colItem","slice","itemIndex","featureId","render","length","wrap","concat","Features","id","locale","en-US","zh-CN","GroupItem","groupName","selected","onChange","isCheckedAll","useMemo","every","x","some","it","_Fragment","justify","Checkbox","checked","newSelected","union","FormattedMessage","moduleName","defaultMessage","push","titleText","RightOptions","options","flex","ExportTableInner","forwardRef","columns","data","selectedColumns","setSelectColumns","columnsData","Array","isArray","hasOwnProperty","exportHidden","hidden","allColumns","groupBy","visibleColumns","columnsMap","Map","get","useImperativeHandle","IntlProvider","importMessages","ReactSortable","dragClass","ghostClass","forceFallback","setList","setTimeout","animation","delayOnTouchStart","delay","List","Item","align","Icon","type","onClick","event","preventDefault","stopPropagation","direction","split","Divider","Object","keys","withExportTable","WrappedComponent","tableProps","omit","tableRef","saveDataApi","exportTableServerApis","usePreset","_saveDataApi","modal","useModal","async","Component","FetchWrappedComponent","withFetch","getDataApi","_getDataApi","error","withExportTableColumnsData","_ref4","renderFeatureConfig","_ref5","hiddenColumns","indexOf","footer","footerButtons","_tableRef$current","message","selectedTip","saveResult","getCache","delByCacheName","onExport","downloadBlobFile","pick","Button","actionText","filterValue","extraExpand","StateTag","filterName","text","join","closable","onClose","newValue","splice","open","active","context","createContext","Provider","Line","useReactContext","ComponentItem","_createElement","FilterLines","displayLine","extra","hasMore","isExpand","setIsExpand","PopoverItem","onValidate","overlayClassName","placement","onOpenChange","state","setState","setOpen","disabled","Popover","trigger","FilterItem","isNotEmpty","placeholder","valueType","transform","result","useSelectInnerContext","SelectInnerInput","useContext","TreeFieldInner","setValue","setSelect","fetchApi","dataFormat","useRefCallback","single","isPopup","searchPlaceholder","others","fieldNamesRef","fieldNames","fetchData","treeData","SimpleBar","Tree","checkable","onCheck","checkedKeys","onSelect","selectKeys","selectKey","newCurrent","selectedKeys","undefined","TreeField","maxLength","MAX_VALUE","checkStrictly","treeToList","memoize","nodeList","core","forEach","node","Input","DatePickerFilterItem","withFieldItem","picker","DatePicker","dayjs","format","assign","startOf","endOf","Date","valueOf","RangePicker","allowEmpty","TypeDateRangePickerField","pickerValue","AdvancedSelectFilterItem","AdvancedSelectField","UserFilterItem","UserField","FunctionSelectFilterItem","FunctionSelectField","IndustrySelectFilterItem","IndustrySelectField","CityFilterItem","AddressSelectField","CascaderFilterItem","CascaderField","TreeFilterItem","InputFilterItem","InputFilterItemField","values","Filter","valueBase","useControlValue","newFilterValue","clone","set","delete","from","FilterValueDisplay","defaultValue","Calendar","FullCalendar","getByteLen","str","len","i","charCodeAt","ContentComponent","main","date","candidateName","start","end","_start","_end","_end_tooltip","timeText","_timeTextTooltip","contentHtml","showStrLength","Tooltip","timezone","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","scrollGridPlugin","initialView","aspectRatio","weekends","slotEventOverlap","displayEventEnd","editable","firstDay","buttonText","today","month","dayMinWidth","headerToolbar","center","left","right","height","handleWindowResize","eventContent","eventInfo","arguments","_def","showOther","num","dateClick","eventClick","initialDate","transformEvents","events","onClickOtherItem","arr","bookable","groupList","newEvents","_newEvents","orderTimeArr","orderBy","merge","console","log","flatten","HighlightProvider","highlightClassName","caseSensitive","Highlight","tagName","renderStr","toString","allWordsRe","word","replace","match","regExp","RegExp","innerMatch","createElement","dangerouslySetInnerHTML","__html","HistoryStore","storeName","zIndex","getPopupContainer","openHistory","useCallback","storeNameRef","useEffect","appendHistory","newList","dropWhile","uniqBy","close","outerRef","useClickOutside","popoverChildrenRef","popoverContentRef","contains","onSelectRef","callback","clientWidth","mutationObserver","MutationObserver","subtree","childList","transitionName","arrow","setOnSelect","menu","menuOpen","menuWidth","menuFixed","menuCloseButton","backgroundColor","header","headerHeight","headerFixed","headerInfo","backUrl","titleExtra","titleLeftExtra","noMargin","noPadding","optionFooterHeight","option","optionWidth","optionNoPadding","optionFixed","optionFooter","Consumer","isFixed","pageMenuOpenKey","Menu","pageProps","setPageProps","pathModuleName","useLocation","pathname","FixedContainer","icon","pageResult","PageInner","isPass","propsRef","localMenuOpen","useMenuOpen","localMenuOpenRef","isEqual","targetProps","Result","status","subTitle","Page","openFeatures","offsetTop","offsetBottom","AntdAffix","isInteger","targetKey","offsetHeight","useContainerHeight","Header","Affix","navigationHeight","ContainerHeight","HeaderInfo","headerInfoRef","navigator","useNavigate","Option","padding","AntdLayout","ErrorComponent","Alert","showIcon","action","danger","location","reload","ErrorBoundary","ReactErrorBoundary","errorComponent","Layout","theme","navigation","scrollLeft","setScrollLeft","_setPageProps","scrollEl","getScrollEl","handlerScroll","addEventListener","removeEventListener","Navigation","path","PageTitle","helperGuideName","HelperGuide","permissions","Permissions","page","topArea","tableData","setTableData","PermissionsPage","Table","onRequestSuccess","stateBar","StateBar","MenuItem","iconType","request","isOpen","isSelected","fetchOptions","depth","onLoad","allowCollapsed","hasChildren","refresh","isLoading","useFetch","auto","Spin","search","selectedKey","setSelectKeyChange","items","setItems","targetItems","defaultOpenKeys","links","childrenKeys","hasStartIcon","_childrenKeys$root","nodeMapping","traversal","parentKey","paths","currentKey","targetItem","originItem","treeEnhance","matchedPath","find","ensureSlash","openKeys","setOpenKeys","renderChildren","parentId","newOpenKeys","defaultItems","SetTitle","mapping","defaultTitle","document","headerLogo","rightOptions","showIndex","indexLabel","overflowedIndicator","base","navigate","navigationRef","resizeObserverRef","nameLabel","setNameLabel","entries","permission","menuDom","querySelectorAll","exist","getAttribute","_nameLabel","mutationObserverInitConfig","attributes","indexNav","Image","src","logo","alt","mode","_ref6","_path","LEVEL","NotificationItem","level","groupLength","subtitle","link","setGlobal","useGlobalContext","apis","ajax","useLoading","_apis$notification","resData","notification","read","ids","findIndex","min","range","reverse","number","Typography","Text","ellipsis","LoadingButton","_apis$notification2","Notification","global","headOptionRef","headOptionHeight","setHeadOptionHeight","_headOptionRef$curren","clientHeight","expand","group","_apis$notification3","QueueAnim","leaveReverse","duration","interval","groupKey","_groupList$filter","firstItem","first","computedIsPass","usePermissions","preset","usePermissionsPass","stateOption","isInner","Tabs","animated","tab","tagTypeEnum","default","skill","color","borderColor","filterResult","success","progress","info","other","showBorder","showBackground","tagColor","_tagTypeEnum$type","_tagTypeEnum$type2","Tag","background","border","showLength","setShowLength","computedLength","buttonEls","targetRef","buttonElLength","amountWidth","targetLength","targetWidth","buttonWidthList","call","el","offsetWidth","moreBtnWidth","startTransition","useResize","otherList","overflow","position","Dropdown","tooltip","ColItem","isEmpty","emptyRender","hover","primary","colValue","loading","setLoading","columnsStyle","Promise","resolve","finally","DisplayInfo","createWithFetch","onExpand","Ellipsis","columnTypes","isValid","dateShort","dateRange","datetime","hideSecond","serialNumber","serialNumberShort","user","_ref7","userName","_ref8","contacts","_ref9","tag","_ref10","isEnum","Enum","force","_ref11","avatar","_ref12","Avatar","singleRow","_ref13","hideInfo","HideInfoComponent","mainInfo","_ref14","_ref15","_ref16","OptionsList","sensitiveInfo","_ref18","_ref17","Panel","Collapse","onConfirm","config","searchText","setSearchText","leftFixedColumns","rightFixedColumns","fixed","sort","a","b","renderColumn","groupHeader","defaultActiveKey","ghost","bordered","newConfig","cloneDeep","columnsList","handlerColumnsChange","visible","SearchInput","prefix","onSearch","renderItem","TableConfig","setConfig","ColumnsControlContent","controllerOpen","tableWidth","currentMoveColumnIndex","setCurrentMoveColumnIndex","currentMoveColumnIndexRef","currentMoveColumnRef","startPointRef","setConfigBase","tableServerApis","tablePageServerParams","saveConfig","useDebouncedCallback","setDataFunc","send","cache","isLocal","getTableConfig","computedIndex","lastNotOptionsColumnIndex","findLastIndex","totalWidth","sumBy","computedRealWidth","resizeBarRender","column","onMouseDown","clientX","resize","delta","currentWidth","computedColumnProps","targetColumn","movingClass","realWidth","onHeaderCell","onCell","shouldCellUpdate","record","prevRecord","handlerCancelResize","handlerResize","documentElement","columnsConfig","rowKey","renderProps","expandInfo","setExpandInfo","columnRenderPropsRef","expandType","titleRender","emptyOf","disableColItem","otherColProps","isNil","targetRender","itemKey","colProps","targetRenderWithProps","groupHeaderColumns","newColumns","appendGroupHeader","columnIndex","targetHeader","otherHeader","currentGroup","startIndex","groupColumn","hasGroupHeader","sortArrayToMap","setSort","mapSort","setMapSort","newSort","targetValue","sticky","stickyOffset","pagination","columnRenderProps","scroll","onTablePropsReady","setTableWidth","isLayout","setIsLayout","isDebounce","useColumnTypeProps","computedColumnConfigProps","useTableConfig","sortRender","useSort","targetColumns","groupColumns","useGroupHeader","onTablePropsReadyCallback","Scroller","scroller","getContainer","getScrollTarget","querySelector","AntdTable","_len","args","_key","pageData","FeaturesColumnsConfig","TablePageInner","requestParams","fetchProps","isComplete","setData","loadMore","getColumns","handlerDataFormat","formatData","total","showTotal","paramsType","currentName","pageSize","requestType","pageSizeName","onShowSizeChange","scrollTop","showSizeChanger","showQuickJumper","totalCount","pageSizeKey","toUpperCase","setPageSize","fetchParams","params"],"sourceRoot":""}