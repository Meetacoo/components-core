{"version":3,"file":"static/js/6000.541d8827.chunk.js","mappings":"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","sources":["components/Common/README.md","components/ConfirmButton/README.md","components/Content/README.md","components/Descriptions/README.md","components/Drawer/README.md","components/Enum/README.md","components/ExportTable/locale/index.js","webpack://@kne/components-core/./src/components/ExportTable/style.module.scss?7343","components/ExportTable/index.js","components/ExportTable/README.md","components/Features/README.md","components/File/README.md","components/FilePreview/README.md","components/Filter/README.md","components/FlexBox/README.md","components/FormInfo/README.md","webpack://@kne/components-core/./src/components/FullCalendar/style.module.scss?012e","components/FullCalendar/FullCalendar.js","components/FullCalendar/README.md","components/Global/README.md","components/HelperGuide/README.md","webpack://@kne/components-core/./src/components/Highlight/style.module.scss?a31a","components/Highlight/index.js","components/Highlight/README.md","webpack://@kne/components-core/./src/components/HistoryStore/style.module.scss?1856","components/HistoryStore/index.js","components/HistoryStore/README.md","components/Icon/README.md","components/Image/README.md","components/InfoPage/README.md","components/Intl/doc/locale/en-US.js","components/Intl/doc/locale/zh-CN.js","components/Intl/README.md","components/Layout/README.md","components/LoadingButton/README.md","components/Menu/README.md","components/Modal/README.md","components/Navigation/README.md","webpack://@kne/components-core/./src/components/Notification/style.module.scss?659e","components/Notification/index.js","components/Notification/README.md","components/Permissions/README.md","webpack://@kne/components-core/./src/components/RichEditor/style.module.scss?912b","common/utils/base64ToFile.js","common/utils/isHref.js","components/RichEditor/ReactRichEditor.js","components/RichEditor/index.js","components/RichEditor/README.md","components/StateBar/README.md","components/StateTag/README.md","components/Table/README.md","components/TablePage/README.md","components/Tooltip/README.md","preset.js","App.js","bootstrap.js","components/ConfirmButton/locale/index.js","webpack://@kne/components-core/./src/components/ConfirmButton/style.module.scss?9447","components/ConfirmButton/index.js","webpack://@kne/components-core/./src/components/Content/style.module.scss?6a0e","components/Content/index.js","webpack://@kne/components-core/./src/components/Descriptions/style.module.scss?d348","components/Descriptions/index.js","components/File/Download.js","webpack://@kne/components-core/./src/components/File/style.module.scss?4020","components/File/useFileModal.js","components/File/List/OptionButtons.js","webpack://@kne/components-core/./src/components/File/List/style.module.scss?58ad","components/File/locale/index.js","components/File/List/index.js","components/File/File.js","components/File/FileLink.js","webpack://@kne/components-core/./src/components/FilePreview/style.module.scss?a805","components/FilePreview/HtmlPreview.js","components/FilePreview/OfficePreview.js","components/FilePreview/PdfPreview.js","components/FilePreview/TextPreview.js","components/FilePreview/UnknownPreview.js","components/FilePreview/ImagePreview.js","components/FilePreview/typeFormat.js","components/FilePreview/OSSFilePreview.js","components/FilePreview/FilePreview.js","components/FlexBox/index.js","components/FormInfo/ErrorTip.js","components/FormInfo/FieldList.js","components/FormInfo/Form.js","components/FormInfo/FormApiButton.js","components/FormInfo/FormDrawer.js","components/FormInfo/FormInfo.js","components/FormInfo/FormItem.js","components/FormInfo/FormLangProvider.js","components/FormInfo/FormModal.js","components/FormInfo/FormStepModal.js","components/FormInfo/HelperGuideLabel.js","components/FormInfo/List.js","webpack://@kne/components-core/./src/components/FormInfo/SelectInnerInput/style.module.scss?b967","components/FormInfo/SelectInnerInput/context.js","components/FormInfo/SelectInnerInput/index.js","components/FormInfo/TableList.js","components/FormInfo/fields/AddressSelect.js","components/FormInfo/fields/AdvancedSelect.js","webpack://@kne/components-core/./src/components/FormInfo/fields/Avatar/style.module.scss?d6b0","components/FormInfo/fields/Avatar/index.js","components/FormInfo/fields/Cascader.js","components/FormInfo/fields/FunctionSelect.js","components/FormInfo/fields/IndustrySelect.js","components/FormInfo/fields/InputUpperCase/index.js","webpack://@kne/components-core/./src/components/FormInfo/fields/MoneyInput/style.module.scss?25be","components/FormInfo/fields/MoneyInput/index.js","webpack://@kne/components-core/./src/components/FormInfo/fields/PhoneNumber/style.module.scss?c00f","components/FormInfo/fields/PhoneNumber/index.js","components/FormInfo/fields/Rate/index.js","webpack://@kne/components-core/./src/components/FormInfo/fields/SalaryInput/style.module.scss?6af8","components/FormInfo/fields/SalaryInput/index.js","webpack://@kne/components-core/./src/components/FormInfo/fields/TableInput/style.module.scss?72b7","components/FormInfo/fields/TableInput/index.js","components/FormInfo/fields/TypeDateRangePicker.js","webpack://@kne/components-core/./src/components/FormInfo/fields/Upload/style.module.scss?391a","components/FormInfo/fields/Upload/index.js","components/FormInfo/fields/index.js","components/FormInfo/fields/Text/index.js","components/FormInfo/formModule.js","components/FormInfo/index.js","components/FormInfo/preset.js","webpack://@kne/components-core/./src/components/InfoPage/style.module.scss?d163","components/InfoPage/Collapse.js","components/InfoPage/index.js","webpack://@kne/components-core/./src/components/Tooltip/style.module.scss?c30c","components/Tooltip/tooltip.js","components/Tooltip/tooltipInfoLabel.js","components/Tooltip/tooltipFetch.js","webpack://@kne/components-core/./src/components/FormInfo/style.module.scss?d1ff","../node_modules/regenerate-unicode-properties|/home/runner/work/components-core/components-core/node_modules/regenerate-unicode-properties|sync|/^/.//.*/.js$"],"sourcesContent":["import * as component_52 from '@components/Common';\nimport * as component_53 from '@kne/react-fetch';\nimport * as component_54 from 'lodash';\nconst readmeConfig = {\n    name: `Common`,\n    summary: `<p>为组件库提供通用的组件、方法、hooks</p>\n<h3>组件</h3>\n<ol>\n<li>FetchButton Button触发加载数据</li>\n<li>ScrollLoader 下拉滚动加载组件</li>\n<li>SearchInput 提供防抖的查询输入框</li>\n<li>SimpleBarBox</li>\n</ol>\n<h3>方法</h3>\n<ol>\n<li>changeMoneyToChinese 将金额转化为大写的人民币金额</li>\n<li>getPopupContainer</li>\n<li>getScrollEl</li>\n<li>getContainerBody</li>\n</ol>\n<h3>hooks</h3>\n<ol>\n<li>withOSSFile</li>\n</ol>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Common_d13bc`,\n        style: `.Common_d13bc .scroll-list {\n  max-height: 300px; }\n`,\n        list: [{\n    title: `FetchButton`,\n    description: `这里填写示例说明`,\n    code: `const Common = _Common;\n\nconst { FetchButton } = Common;\n\nconst BaseExample = () => {\n  return (\n    <FetchButton\n      api={{\n        loader: () => {\n          return [\n            { label: \"1\", content: \"11\" },\n            { label: \"2\", content: \"22\" },\n          ];\n        },\n      }}\n      modalProps={({ data }) => {\n        console.log(data);\n        alert(JSON.stringify(data));\n        return {\n          children: (\n            <div>\n              <div>我是一个弹窗</div>\n              <div>{data[0].label}</div>\n              <div>{data[0].content}</div>\n              <div>{data[1].label}</div>\n              <div>{data[1].content}</div>\n            </div>\n          ),\n        };\n      }}\n      modalFunc={() => {}}\n    >\n      FetchButton\n    </FetchButton>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Common\",\n    packageName: \"@components/Common\",\n    component: component_52\n}]\n},{\n    title: `ScrollLoader`,\n    description: `这里填写示例说明`,\n    code: `const { get, merge, range } = lodash;\nconst Common = _Common;\nconst { default: Fetch } = _reactFetch;\n\nconst { ScrollLoader } = Common;\n\nconst BaseExample = () => {\n  console.log(Fetch, _reactFetch);\n  return (\n    <Fetch\n      loader={({ data }) => {\n        const params = Object.assign(\n          {\n            perPage: 20,\n            currentPage: 1,\n          },\n          data\n        );\n        return new Promise((resolve) => {\n          const start = (params.currentPage - 1) * params.perPage;\n          setTimeout(() => {\n            resolve({\n              totalCount: 100,\n              pageData: range(start, start + params.perPage).map((key) => {\n                return {\n                  label: \\`第\\${key + 1}项\\`,\n                  value: key + 1,\n                };\n              }),\n            });\n          }, 500);\n        });\n      }}\n      render={(fetchApi) => {\n        const pagination = {\n          paramsType: \"data\",\n          current: \"currentPage\",\n          pageSize: \"perPage\",\n          defaultPageSize: 20,\n        };\n        const current = get(\n            fetchApi.requestParams,\n            [pagination.paramsType, pagination.current],\n            1\n          ),\n          pageSize =\n            get(fetchApi.requestParams, [\n              pagination.paramsType,\n              pagination.pageSize,\n            ]) || pagination.defaultPageSize;\n\n        const formatData = {\n          list: fetchApi.data.pageData,\n          total: fetchApi.data.totalCount,\n        };\n        return (\n          <ScrollLoader\n            completeTips=\"\"\n            className=\"scroll-list\"\n            isLoading={!fetchApi.isComplete}\n            noMore={!formatData.total || current * pageSize >= formatData.total}\n            onLoader={async () => {\n              await fetchApi.loadMore(\n                merge({\n                  data: {\n                    [pagination.pageSize]: pageSize,\n                    [pagination.current]: current + 1,\n                  },\n                }),\n                (data, newData) => {\n                  return Object.assign({}, newData, {\n                    pageData: data.pageData.concat(newData.pageData),\n                  });\n                }\n              );\n            }}\n          >\n            {formatData.list.map((item) => {\n              return <div>{item.label}</div>;\n            })}\n          </ScrollLoader>\n        );\n      }}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Common\",\n    packageName: \"@components/Common\",\n    component: component_52\n},{\n    name: \"_reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_53\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_54\n}]\n},{\n    title: `SearchInput`,\n    description: `搜索框`,\n    code: `const Common = _Common;\n\nconst { SearchInput } = Common;\nconst { useState } = React;\n\nconst BaseExample = () => {\n  const [value, setValue] = useState(\"\");\n  return (\n    <SearchInput\n      value={value}\n      onSearch={(value) => {\n        setValue(value);\n        console.log(value);\n      }}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Common\",\n    packageName: \"@components/Common\",\n    component: component_52\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_1 from '@components/ConfirmButton';\nimport * as component_2 from 'antd';\nimport * as component_3 from '@components/Global';\nconst readmeConfig = {\n    name: `ConfirmButton`,\n    summary: `<h3>何时使用</h3>\n<p>执行操作前确认后再执行</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>message</td>\n<td>删除提示</td>\n<td>jsx</td>\n<td>确定要删除吗？</td>\n</tr>\n<tr>\n<td>title</td>\n<td>删除提示标题</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>isDelete</td>\n<td>是否为删除操作</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>onClick</td>\n<td>点击确认后执行的事件</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>点击取消后执行的事件</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>按钮是否禁用</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>showCancel</td>\n<td>是否显示取消按钮</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancelText</td>\n<td>取消按钮文案</td>\n<td>string</td>\n<td>取消</td>\n</tr>\n<tr>\n<td>okText</td>\n<td>确认按钮文案</td>\n<td>string</td>\n<td>确认</td>\n</tr>\n<tr>\n<td>isModal</td>\n<td>是否以弹窗方式展示，默认为Popconfirm</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>placement</td>\n<td>当isModal为false时生效，指定Popconfirm的弹出方向</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getContainer</td>\n<td>指定Popconfirm或Modal弹出位置，一般不需要指定</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>ConfirmLink</h3>\n<p>另外的一种按钮形式参数同ConfirmButton</p>\n<h3>withConfirm</h3>\n<p>高阶组件可以自定义按钮</p>`,\n    example: {\n        isFull: false,\n        className: `ConfirmButton_5f815`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: ConfirmButton, ConfirmLink } = _ConfirmButton;\nconst { Space } = antd;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <Space>\n      <ConfirmButton\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        删除\n      </ConfirmButton>\n      <ConfirmButton\n        isModal\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        Modal确认删除\n      </ConfirmButton>\n      <ConfirmLink\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        Link删除\n      </ConfirmLink>\n      <ConfirmButton\n        title=\"确定要删除吗？\"\n        message=\"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\"\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        有title的删除\n      </ConfirmButton>\n      <ConfirmButton\n        isModal\n        title=\"确定要删除吗？\"\n        message=\"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\"\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        有title的Modal确认删除\n      </ConfirmButton>\n\n      <ConfirmButton\n        title=\"确定要删除吗？\"\n        isDelete={false}\n        message=\"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\"\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        非警告有title的删除\n      </ConfirmButton>\n      <ConfirmButton\n        isModal\n        title=\"确定要删除吗？\"\n        isDelete={false}\n        message=\"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\"\n        onClick={() => {\n          console.log(\"执行删除\");\n        }}\n      >\n        非警告有title的Modal确认删除\n      </ConfirmButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_ConfirmButton\",\n    packageName: \"@components/ConfirmButton\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_2\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_3\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_4 from '@components/Content';\nconst readmeConfig = {\n    name: `Content`,\n    summary: `<h3>何时使用</h3>\n<p>成组展示多个字段，常见于详情页的信息展示</p>\n<h3>特点</h3>\n<p>labelAlign不为auto时会自动计算label的最小宽度使所有label的宽度等于最长的label宽度使视觉上更加整齐有秩序感</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>list</td>\n<td>内容，为一个数组，数组里面每一个值{label,content}</td>\n<td>array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>labelAlign</td>\n<td>label的对齐方式可以传入的值 left,right,center,auto,为auto时label不计算最小宽度</td>\n<td>string</td>\n<td>left</td>\n</tr>\n<tr>\n<td>col</td>\n<td>显示列数</td>\n<td>number</td>\n<td>1</td>\n</tr>\n<tr>\n<td>gutter</td>\n<td>栅格间隔，可以写成像素值或支持响应式的对象写法来设置水平间隔 { xs: 8, sm: 16, md: 24}。或者使用数组形式同时设置 [水平间距, 垂直间距]</td>\n<td>number</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Content_f15c1`,\n        style: ``,\n        list: [{\n    title: `基本示例`,\n    description: `展示了一个基本内容`,\n    code: `const {default:Content} = _Content;\nconst BaseExample = ()=>{\n    return <Content list={[\n        {label:'标题',content:'内容'},\n        {label:'标题标题',content:'内容内容'},\n        {label:'标题标',content:'内容内容内容内容内容内容内容内容内容内容'},\n        {label:'标题标题标题',content:'内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容'}\n    ]}/>;\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_4\n}]\n},{\n    title: `labelAlign auto`,\n    description: `展示了设置labelAlign为auto的情况`,\n    code: `const {default: Content} = _Content;\nconst BaseExample = () => {\n    return <Content labelAlign=\"auto\" list={[\n        {label: '标题', content: '内容'},\n        {label: '标题标题', content: '内容内容'},\n        {label: '标题标', content: '内容内容内容内容内容内容内容内容内容内容'},\n        {\n            label: '标题标题标题',\n            content: '内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容'\n        }\n    ]}/>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_4\n}]\n},{\n    title: `多列`,\n    description: `展示了两列的情况`,\n    code: `const {default: Content} = _Content;\nconst BaseExample = () => {\n    return <Content col={2} labelAlign=\"auto\" list={[\n        {label: '标题', content: '内容'},\n        {label: '标题标题', content: '内容内容'},\n        {label: '标题标', content: '内容内容内容内容内容内容内容内容内容内容'},\n        {\n            label: '标题标题标题',\n            content: '内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容'\n        }\n    ]}/>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_4\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_5 from '@components/Descriptions';\nconst readmeConfig = {\n    name: `Descriptions`,\n    summary: `<h3>何时使用</h3>\n<p>常见于详情页的信息展示</p>\n<h3>特点</h3>\n<ul>\n<li>最多支持两列数据展示，多余的列将不展示</li>\n<li>支持Features控制列内容开启和关闭</li>\n</ul>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dataSource</td>\n<td>详情数据源，内部每个数组为一行数据，每行数据中每个对象为一列数据，每行最多包含2列内容，多余的会被丢弃</td>\n<td>array[[{display,label,content,featureId}]]</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[[{display}]]</td>\n<td>数据是否展示,当为function时可以接收到(item,dataSource)参数，item为当前项配置，dataSource为整个组件的dataSource配置</td>\n<td>boolean,function</td>\n<td>true</td>\n</tr>\n<tr>\n<td>dataSource[[{label}]]</td>\n<td>数据展示的label</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[[{content}]]</td>\n<td>数据展示的内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dataSource[[{featureId}]]</td>\n<td>Features控制的id，参考Features组件的id参数</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Descriptions_8bc84`,\n        style: ``,\n        list: [{\n    title: `展示一个信息详情`,\n    description: `展示一个信息详情`,\n    code: `const { default: Descriptions } = _Descriptions;\nconst BaseExample = () => {\n  return (\n    <Descriptions\n      dataSource={[\n        [\n          { label: \"客户名称\", content: \"腾讯\" },\n          {\n            label: \"发票抬头\",\n            content: \"腾讯科技公司\",\n          },\n        ],\n        [\n          { label: \"发票类型\", content: \"增值税专用发票\" },\n          {\n            label: \"发票开具日期\",\n            content: \"2022-08-15\",\n          },\n        ],\n        [{ label: \"退票金额\", content: \"22000.00元\" }],\n        [\n          {\n            label: \"发票号\",\n            content: (\n              <div>\n                <div>00384895992774</div>\n                <div>00384895992774</div>\n                <div>00384895992774</div>\n                <div>00384895992774</div>\n              </div>\n            ),\n          },\n        ],\n        [\n          { label: \"是否需要重开发票\", content: \"否\" },\n          {\n            label: \"是否涉及金融变动\",\n            content: \"否\",\n          },\n        ],\n        [\n          { label: \"是否造成实质损失\", content: \"否\" },\n          { label: \"责任归属\", content: \"客户原因\" },\n        ],\n        [\n          {\n            label: \"退票原因\",\n            content: \"退票原因的描述退票原因的描述退票原因的描\",\n          },\n        ],\n        [{ label: \"附件\", content: \"附件名称\" }],\n        [\n          { label: \"操作时间\", content: \"2022-08-01 16:32\" },\n          {\n            label: \"操作人\",\n            content: \"西西歪\",\n          },\n        ],\n        [\n          {\n            label: \"超长内容\",\n            content:\n              \"超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容\",\n          },\n          {\n            label: \"超长英文\",\n            content:\n              \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n          },\n        ],\n      ]}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Descriptions\",\n    packageName: \"@components/Descriptions\",\n    component: component_5\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_6 from '@components/Drawer';\nimport * as component_7 from '@components/Global';\nimport * as component_8 from '@components/Content';\nimport * as component_9 from 'antd';\nimport * as component_10 from 'lodash';\nconst readmeConfig = {\n    name: `Drawer`,\n    summary: `<p>屏幕边缘滑出的浮层面板</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>footer</td>\n<td>弹窗的footer，当其被显式设置成null且footerButtons没有设置过时弹窗不显示footer。当它类型为function时可以得到close方法和withDecorator设置的props</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>footerButtons</td>\n<td>弹窗footer的按钮区，默认为确认和取消按钮，默认按钮分别响应onConfirm和onCancel方法，如果自定义设置footerButtons则需要自行传入onClick参数，onConfirm和onCancel方法将不生效</td>\n<td>array</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>弹窗关闭时调用，弹窗受控时由该方法将外部open状态修改</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onConfirm</td>\n<td>当footerButtons未自定义设置时点击确认按钮触发执行该方法，当其返回Promise点击后Promise，resolve之前确认按钮显示为loading状态，返回值为false或者Promise的resolve值为false时弹窗不会被关闭，其他情况弹窗默认关闭</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>和onConfirm类似，其为点击取消按钮触发</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>弹窗内容，可以为jsx或者function，为function时可以接收到close和withDecorator设置的props</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>withDecorator</td>\n<td>弹窗修饰器，会接收到弹窗children的render方法，可以在其外部添加修饰内容后执行render方法，给render方法传入的值可以在children,footer,rightOptions类型为function时接收到对应的参数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>maskClosable</td>\n<td>点击蒙层是否允许关闭</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数参考antd Drawer组件</p>\n<h3>AppDrawer</h3>\n<p>全局抽屉包裹组件，提供消费上下文的默认环境，提供可消费 React context 的 drawer 的静态方法，可以简化 useDrawer 等方法需要手动植入 contextHolder 的问题。</p>\n<h3>useDrawer</h3>\n<p>获取一个执行后可以弹出一个Drawer组件的方法,前置条件是需要再全局注入AppDrawer包裹组件</p>\n<h4>return:drawer</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>drawer</td>\n<td>执行后可以弹出一个Drawer弹窗，参数同Drawer组件参数</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>\n<h3>DrawerButton</h3>\n<p>点击以后可以执行获取数据，在数据未返回时按钮展示为loading状态，数据返回后弹出Drawer弹窗</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>@kne/react-fetch 所需参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>drawerProps</td>\n<td>同Drawer参数,当它为function时，执行function后返回的值作为drawerProps</td>\n<td>object,function({data,fetchApi,close})</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数同antd Button 组件</p>`,\n    example: {\n        isFull: false,\n        className: `Drawer_9b1ed`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Drawer, useDrawer, DrawerButton } = _Drawer;\nconst { Button, Space } = antd;\nconst { range } = lodash;\nconst { useRef, useState } = React;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst api = {\n  loader: () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve([\n          {\n            label: \"内容1\",\n            content:\n              \"内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1内容1\",\n          },\n          {\n            label: \"内容2\",\n            content:\n              \"内容2内容2内内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2内容2容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n        ]);\n      }, 1000);\n    });\n  },\n};\n\nconst BaseExample = () => {\n  const drawer = useDrawer();\n  const [open, setOpen] = useState(false);\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        open 组件打开\n      </Button>\n      <Button\n        onClick={() => {\n          drawer({\n            title: \"标题\",\n            children: \"打开了一个抽屉\",\n          });\n        }}\n      >\n        hook 打开\n      </Button>\n      <DrawerButton\n        api={api}\n        modalProps={({ data }) => {\n          return {\n            title: \"加载数据的弹窗\",\n            children: <Content list={data} col={1} />,\n          };\n        }}\n      >\n        按钮点击加载数据\n      </DrawerButton>\n      <Drawer title=\"Basic Drawer\" onClose={() => setOpen(false)} open={open}>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n      </Drawer>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Drawer\",\n    packageName: \"@components/Drawer\",\n    component: component_6\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_7\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_8\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_9\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_10\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_55 from '@components/Enum';\nimport * as component_56 from 'antd';\nimport * as component_57 from '@components/Global';\nconst readmeConfig = {\n    name: `Enum`,\n    summary: ``,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Enum_cf204`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Enum } = _Enum;\nconst { PureGlobal } = global;\nconst { Space, Select } = antd;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        locale: \"zh-CN\",\n        enums: {\n          testEnums: async ({ locale }) => {\n            console.log(locale);\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve([\n                  { value: \"1\", description: \"第一项\" },\n                  { value: \"2\", description: \"第二项\" },\n                  {\n                    value: \"3\",\n                    description: \"第三项\",\n                  },\n                ]);\n              }, 1000);\n            });\n          },\n        },\n      }}\n    >\n      <Space>\n        <Enum moduleName=\"gender\" name=\"M\">\n          {(data) => data.description}\n        </Enum>\n        <Enum moduleName=\"testEnums\" name=\"1\">\n          {(data) => data.description}\n        </Enum>\n        <Enum moduleName=\"testEnums\" name=\"2\">\n          {(data) => data.description}\n        </Enum>\n        <Enum moduleName=\"testEnums\">\n          {(list) => {\n            return (\n              <Select\n                placeholder=\"请选择\"\n                options={list.map((item) => ({\n                  value: item.value,\n                  label: item.description,\n                }))}\n              />\n            );\n          }}\n        </Enum>\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Enum\",\n    packageName: \"@components/Enum\",\n    component: component_55\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_56\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_57\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","const importMessages = (locale) => {\n  return {\n    \"en-US\": () => import(\"./en-US\"),\n    \"zh-CN\": () => import(\"./zh-CN\"),\n  }[locale]();\n};\n\nexport default importMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"right-options-modal\":\"style_right-options-modal__0FYSr__EG6bw\",\"left-options-col\":\"style_left-options-col__dZs-a__EG6bw\",\"right-options-col\":\"style_right-options-col__-bGqN__EG6bw\",\"move-icon\":\"style_move-icon__Kd4U2__EG6bw\",\"close-icon\":\"style_close-icon__HG1G5__EG6bw\",\"columns-control-content-item\":\"style_columns-control-content-item__SK820__EG6bw\",\"is-drag\":\"style_is-drag__7dzHq__EG6bw\",\"sortable-drag\":\"style_sortable-drag__Btml4__EG6bw\",\"sortable-ghost\":\"style_sortable-ghost__L0Tis__EG6bw\",\"right-header\":\"style_right-header__pPtqi__EG6bw\",\"right-title\":\"style_right-title__VutTR__EG6bw\",\"right-desc\":\"style_right-desc__dUwAi__EG6bw\",\"divider\":\"style_divider__GpvGk__EG6bw\",\"modal-footer-tip\":\"style_modal-footer-tip__GMxOE__EG6bw\"};","import importMessages from \"./locale\";\nimport { IntlProvider, FormattedMessage } from \"@components/Intl\";\nimport style from \"./style.module.scss\";\nimport {\n  useMemo,\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { groupBy, pick, union } from \"lodash\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Checkbox,\n  Col,\n  Divider,\n  List,\n  Row,\n  Space,\n  message,\n} from \"antd\";\nimport { useModal } from \"@components/Modal\";\nimport Icon from \"@components/Icon\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport omit from \"lodash/omit\";\nimport { downloadBlobFile } from \"@components/File\";\nimport { getCache, withFetch } from \"@kne/react-fetch\";\nimport { usePreset } from \"@components/Global\";\nimport Features from \"@components/Features\";\nimport get from \"lodash/get\";\n\nconst GroupItem = ({ groupName, list, selected, onChange }) => {\n  const isCheckedAll = useMemo(() => {\n    return list.every((x) => selected.some((it) => it === x.name));\n  }, [list, selected]);\n  return (\n    <>\n      <Row gutter={[24, 12]} justify=\"space-between\">\n        <Col className={style[\"right-title\"]}>{groupName}</Col>\n        <Col>\n          <Checkbox\n            checked={isCheckedAll}\n            onChange={(e) => {\n              const newSelected = e.target.checked\n                ? union(\n                    selected.slice(0),\n                    list.map((item) => item.name)\n                  )\n                : selected\n                    .slice(0)\n                    .filter((x) => !list.some((it) => it.name === x));\n              onChange(newSelected);\n            }}\n          >\n            <FormattedMessage\n              id=\"selectedAll\"\n              moduleName=\"ExportTable\"\n              defaultMessage=\"全选\"\n            />\n          </Checkbox>\n        </Col>\n        <Col span={24}>\n          <Space\n            className={classnames(\"full-space\")}\n            wrap={true}\n            size={[24, 12]}\n          >\n            {(list || []).map((item) => {\n              return (\n                <Checkbox\n                  key={item.name}\n                  checked={selected.some((x) => x === item.name)}\n                  onChange={(e) => {\n                    let newSelected = selected.slice(0);\n                    if (e.target.checked) {\n                      newSelected.push(item.name);\n                    } else {\n                      newSelected = newSelected.filter((x) => x !== item.name);\n                    }\n                    onChange(newSelected);\n                  }}\n                >\n                  {item.titleText || item.title || \"未命名列\"}\n                </Checkbox>\n              );\n            })}\n          </Space>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RightOptions = ({ options, children }) => {\n  if (!options) {\n    return children;\n  }\n  return (\n    <Row wrap={false}>\n      <Col flex={1} className={style[\"left-options-col\"]}>\n        {children}\n      </Col>\n      <Col className={style[\"right-options-col\"]}>{options}</Col>\n    </Row>\n  );\n};\n\nconst ExportTableInner = forwardRef(({ columns, data }, ref) => {\n  const [selectedColumns, setSelectColumns] = useState(() => {\n    const columnsData = Array.isArray(data) ? data : JSON.parse(data) || [];\n    return Array.isArray(columnsData) &&\n      (columnsData || []).filter((x) => !!x).length > 0\n      ? columnsData.filter((x) => !!x)\n      : columns\n          .filter(\n            (x) =>\n              (x.hasOwnProperty(\"exportHidden\") && x.exportHidden !== true) ||\n              x.hidden !== true\n          )\n          .map((x) => x.name);\n  });\n  const allColumns = useMemo(() => {\n    const all = groupBy(columns, (item) => item.groupName);\n    return all;\n  }, [columns]);\n  const visibleColumns = useMemo(() => {\n    const columnsMap = new Map(columns.map((item) => [item.name, item]));\n    return (selectedColumns || [])\n      .filter((name) => columns.some((x) => x.name === name))\n      .map((name) => {\n        const item = columnsMap.get(name);\n        return item;\n      });\n  }, [columns, selectedColumns]);\n  useImperativeHandle(\n    ref,\n    () => {\n      return { data: selectedColumns };\n    },\n    [selectedColumns]\n  );\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"ExportTable\">\n      <RightOptions\n        options={\n          <div>\n            <div className={style[\"right-header\"]}>\n              <div className={style[\"right-title\"]}>\n                <FormattedMessage\n                  id=\"rightTitle\"\n                  moduleName=\"ExportTable\"\n                  defaultMessage=\"已选的字段\"\n                />\n                ：\n              </div>\n              <div className={style[\"right-desc\"]}>\n                <FormattedMessage\n                  id=\"rightDesc\"\n                  moduleName=\"ExportTable\"\n                  defaultMessage=\"按住拖拽可进行排序\"\n                />\n              </div>\n            </div>\n            <ReactSortable\n              selectedColumns={selectedColumns}\n              list={visibleColumns}\n              filter=\".ignore-elements\"\n              dragClass={style[\"sortable-drag\"]}\n              ghostClass={style[\"sortable-ghost\"]}\n              forceFallback\n              setList={(columns) => {\n                const list = columns.map((item) => item.name);\n                setTimeout(() => {\n                  setSelectColumns([...list]);\n                }, 50);\n              }}\n              animation={300}\n              delayOnTouchStart\n              delay={2}\n            >\n              {visibleColumns.map((item, index) => (\n                <List.Item\n                  className={classnames(\n                    style[\"columns-control-content-item\"],\n                    style[\"is-drag\"]\n                  )}\n                  key={item.name + index}\n                >\n                  <Row\n                    justify=\"space-between\"\n                    align=\"middle\"\n                    style={{ flex: 1 }}\n                  >\n                    <Col>\n                      <Space size={2}>\n                        <Icon\n                          type=\"icon-paixu\"\n                          className={classnames(\n                            style[\"move-icon\"],\n                            \"move-icon\"\n                          )}\n                        />\n                        <span>\n                          {item.titleText || item.title || \"未命名列\"}\n                        </span>\n                      </Space>\n                    </Col>\n                    <Col\n                      onClick={(event) => {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        let newSelected = selectedColumns.slice(0);\n                        newSelected = newSelected.filter(\n                          (x) => x !== item.name\n                        );\n                        setTimeout(() => {\n                          setSelectColumns([...newSelected]);\n                        }, 50);\n                      }}\n                    >\n                      <Icon\n                        type=\"icon-close-thin\"\n                        className={classnames(\n                          style[\"close-icon\"],\n                          \"close-icon\"\n                        )}\n                      />\n                    </Col>\n                  </Row>\n                </List.Item>\n              ))}\n            </ReactSortable>\n          </div>\n        }\n      >\n        <Space\n          className={classnames(\"full-space\")}\n          direction=\"vertical\"\n          split={<Divider className={style[\"divider\"]} />}\n        >\n          {Object.keys(allColumns).map((groupName, index) => {\n            return (\n              <GroupItem\n                key={groupName + index}\n                selected={selectedColumns}\n                groupName={groupName}\n                list={allColumns[groupName]}\n                onChange={(list) => {\n                  setSelectColumns(list);\n                }}\n              />\n            );\n          })}\n        </Space>\n      </RightOptions>\n    </IntlProvider>\n  );\n});\n\nExportTableInner.defaultProps = {\n  columns: [],\n};\n\nconst withExportTableColumnsData = (WrappedComponent) => {\n  const FetchWrappedComponent = withFetch(WrappedComponent);\n  return (props) => {\n    const { name, getDataApi } = props;\n    const { exportTableServerApis } = usePreset();\n    const _getDataApi =\n      getDataApi || (exportTableServerApis && exportTableServerApis.getDataApi);\n    if (name && exportTableServerApis && exportTableServerApis.getDataApi) {\n      // isLocal cache={`EXPORT_TABLE_CONFIG_${name}`} ttl={24 * 60 * 60 * 1000}\n      return (\n        <FetchWrappedComponent\n          {...props}\n          {..._getDataApi(name)}\n          error={<WrappedComponent {...props} />}\n        />\n      );\n    }\n    return <WrappedComponent {...props} />;\n  };\n};\n\nexport const withExportTable = (WrappedComponent) => {\n  return (props) => {\n    const tableProps = omit(props, [\"onClick\"]);\n    const tableRef = useRef(null);\n    const { name, saveDataApi, featureId } = props;\n    const { exportTableServerApis } = usePreset();\n    const _saveDataApi =\n      saveDataApi ||\n      (exportTableServerApis && exportTableServerApis.saveDataApi);\n    const modal = useModal();\n    return (\n      <WrappedComponent\n        onClick={async () => {\n          props.onClick && props.onClick();\n          let columns =\n            typeof props.columns === \"function\"\n              ? await props.columns()\n              : props.columns;\n          columns = columns.filter((x) => x.exportHidden !== true);\n          const renderFeatureConfig = ({ children }) => {\n            return featureId ? (\n              <Features id={featureId}>{children}</Features>\n            ) : (\n              children({})\n            );\n          };\n          const Component = withExportTableColumnsData((props) => {\n            return renderFeatureConfig({\n              children: ({ options }) => {\n                columns = columns.filter((item) => {\n                  if (!Array.isArray(get(options, \"hiddenColumns\"))) {\n                    return true;\n                  }\n                  return options.hiddenColumns.indexOf(item.name) === -1;\n                });\n                return (\n                  <ExportTableInner\n                    {...props}\n                    {...tableProps}\n                    columns={columns}\n                    ref={tableRef}\n                  />\n                );\n              },\n            });\n          });\n          modal({\n            title: props.title || \"导出数据\",\n            ...tableProps,\n            className: style[\"right-options-modal\"],\n            footer: () => {\n              return (\n                <Space size={4} className={style[\"modal-footer-tip\"]}>\n                  <Icon type={\"icon-xinxi-miaobian\"} />\n                  <span>导出后，系统会自动保存您本次选择的字段及排序</span>\n                </Space>\n              );\n            },\n            footerButtons: [\n              {\n                children: \"取消\",\n              },\n              {\n                type: \"primary\",\n                children: \"导出\",\n                onClick: async () => {\n                  if (tableRef.current?.data.length === 0) {\n                    message.error(props.selectedTip || \"请选择要导出的字段\");\n                    return false;\n                  }\n                  const saveResult = _saveDataApi\n                    ? await _saveDataApi({\n                        name,\n                        data: tableRef.current.data,\n                      })\n                    : true;\n                  if (saveResult !== false) {\n                    const cache = getCache();\n                    cache.delByCacheName(`EXPORT_TABLE_CONFIG_${name}`);\n                    const result = props.onExport\n                      ? await props.onExport({\n                          data: tableRef.current.data,\n                          downloadBlobFile,\n                        })\n                      : true;\n                    return result !== false;\n                  }\n                  return saveResult !== false;\n                },\n              },\n            ],\n            children: <Component {...pick(props, [\"name\", \"getDataApi\"])} />,\n          });\n        }}\n      />\n    );\n  };\n};\n\nconst ExportButton = (props) => {\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"ExportTable\">\n      <Button {...props} size=\"small\">\n        {props.actionText || (\n          <FormattedMessage\n            id=\"actionText\"\n            moduleName=\"ExportTable\"\n            defaultMessage=\"导出数据\"\n          />\n        )}\n      </Button>\n    </IntlProvider>\n  );\n};\n\nconst ExportTable = withExportTable(ExportButton);\n\nexport default ExportTable;\n","import * as component_16 from '@components/ExportTable';\nimport * as component_17 from '@components/Global';\nimport * as component_18 from '@kne/react-fetch';\nconst readmeConfig = {\n    name: `ExportTable`,\n    summary: `<p>自定义表格导出列 <em><strong>（已废弃请勿使用）</strong></em></p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>columns</td>\n<td>配置同TablePage列,属性key对应后端导出的字段名，不需要参与导出的列可以配置属性exportHidden:true</td>\n<td>function, array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>name</td>\n<td>缓存的名称key（导出接口的key）</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>onExport</td>\n<td>导出事件</td>\n<td>function({name,downloadBlobFile})</td>\n<td></td>\n</tr>\n<tr>\n<td>saveDataApi</td>\n<td>保存接口APi,如果配置优先取当前值，否则取全局中的配置</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>getDataApi</td>\n<td>获取上一次保存的列名数据，如果配置优先取当前值，否则取全局中的配置</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `ExportTable_487be`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: ExportTable } = _ExportTable;\nconst { default: Global } = global;\nconst { preset } = reactFetch;\n\nconst ajax = (config) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        data: {\n          code: 0,\n          data: [\"remark1\", \"remark3\"],\n        },\n      });\n    }, 100);\n  });\n};\n\npreset({\n  ajax,\n});\nconst BaseExample = () => {\n  return (\n    <Global\n      preset={{\n        ajax,\n        exportTableServerApis: {\n          getDataApi: (name) => {\n            return {\n              url: \"/api/v1/client/client/get_client_export_column\",\n              method: \"POST\",\n              data: {\n                key: name,\n              },\n              transformResponse: (response) => {\n                const { data } = response;\n                response.data = Object.assign({}, data, {\n                  data: (() => {\n                    try {\n                      return data.data ? JSON.parse(data.data) : [];\n                    } catch (e) {\n                      return [];\n                    }\n                  })(),\n                });\n                response.data = {\n                  code: response.data.code === 0 ? 200 : data.code,\n                  msg: response.data.msg,\n                  results: response.data.data,\n                };\n                return response;\n              },\n            };\n          },\n          saveDataApi: ({ name, data }) => {\n            return ajax({\n              url: \"/api/v1/client/client/save_client_export_column\",\n              method: \"POST\",\n              data: {\n                exportColumn: data,\n                key: name,\n              },\n            });\n          },\n        },\n      }}\n    >\n      <ExportTable\n        name=\"ExportTableInvoice\"\n        columns={[\n          {\n            title: \"发票备注1\",\n            groupName: \"开票信息\",\n            hidden: true,\n            name: \"remark1\",\n            key: \"remark1\",\n            width: 150,\n          },\n          {\n            title: \"发票备注2\",\n            groupName: \"开票信息\",\n            hidden: true,\n            name: \"remark2\",\n            key: \"remark2\",\n            width: 150,\n          },\n          {\n            title: \"发票备注3\",\n            groupName: \"开票信息1\",\n            hidden: true,\n            name: \"remark3\",\n            key: \"remark3\",\n            width: 150,\n          },\n          {\n            title: \"发票备注4\",\n            groupName: \"开票信息1\",\n            hidden: true,\n            name: \"remark4\",\n            key: \"remark4\",\n            width: 150,\n          },\n          {\n            title: \"发票备注5\",\n            groupName: \"开票信息3\",\n            hidden: true,\n            name: \"remark5\",\n            key: \"remark5\",\n            width: 150,\n          },\n          {\n            title: \"发票备注6\",\n            groupName: \"开票信息3\",\n            hidden: true,\n            name: \"remark6\",\n            key: \"remark6\",\n            width: 150,\n          },\n          {\n            title: \"发票备注7\",\n            groupName: \"开票信息4\",\n            hidden: true,\n            name: \"remark7\",\n            key: \"remark7\",\n            width: 150,\n          },\n          {\n            title: \"发票备注8\",\n            groupName: \"开票信息4\",\n            hidden: true,\n            name: \"remark8\",\n            key: \"remark8\",\n            width: 150,\n          },\n        ]}\n      />\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ExportTable\",\n    packageName: \"@components/ExportTable\",\n    component: component_16\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_17\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_18\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_58 from '@components/Features';\nimport * as component_59 from '@components/Global';\nimport * as component_60 from '@components/Layout';\nimport * as component_61 from 'react-router-dom';\nimport * as component_62 from 'antd';\nconst readmeConfig = {\n    name: `Features`,\n    summary: `<h3>何时使用</h3>\n<p>在系统中需要通过一些条件，系统性地让整个系统的某些功能屏蔽或者有另外的一些展现方式，可以用该组件来实现</p>\n<h3>特点</h3>\n<ul>\n<li>全局性配置，一次性声明，避免将各种判断语句散落在项目各处造成难以维护</li>\n<li>具有特征判断和依赖性判断，即当系统描述性文件中含有某个模块且含有所有依赖项模块则判断该组件为正常状态，其他情况为关闭状态</li>\n<li>可以通过配置文件给正常状态和关闭状态的组件传递不同的props来控制两种状态下组件的不同逻辑</li>\n<li>在配置文件中，组件的id是简写，只需要保证同一层级的组件id不重复就可以了，它的真实id会通过其所在的上下级关系，通过冒号将每一层的组件id链接起来组成其真实的id，你可以打开调试模式查看每一个组件实际运行时的id和判断状态</li>\n<li>组件的type可以设置为三种：system,module,feature。system为配置文件最顶级组件，module为功能模块，默认Layout的Page组件openFeatures为true时它的name会被设置成module，feature为具体的功能项</li>\n</ul>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>模块或功能id，通过Global里面的preset的features配置确定该模块开启或者关闭</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>features 参数设置</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>debug</td>\n<td>是否开启调试模式，开启后控制台会打印所有模块的id和判断结果</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>profile</td>\n<td>模块配置列表，具体参考下面profile参数说明</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>profile参数说明</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>模块的唯一标识符，需要保证在当前一级中不重复，实际id为所有父级的id用’:‘链接的字符串</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>type</td>\n<td>可能取值为system,module,feature，注意最外层的type必须为system</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>name</td>\n<td>模块的中文名称，不参与判断，只标识模块名帮助开发者识别</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>close</td>\n<td>模块是否关闭，可以缺省该值，缺省时profile里面存在某id的模块即为模块开启，不存在即为关闭。在特殊情况下，在profile存在该模块配置但是希望其关闭时可以显示指定该参数为true来关闭模块</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>dependencies</td>\n<td>依赖模块列表，每一项为一个模块id（该id必须为完整的id串，即带有所有父级id的用’:‘链接起来的字符串）,当所有id的指代模块都被判断开启时，该模块被判断为开启</td>\n<td>array[string]</td>\n<td>-</td>\n</tr>\n<tr>\n<td>options</td>\n<td>模块开启时获取的参数</td>\n<td>any</td>\n<td>-</td>\n</tr>\n<tr>\n<td>rejectedOptions</td>\n<td>模块关闭时获取的参数</td>\n<td>any</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>被控制的模块，为function时可以接收到({isPass,options})参数 isPass为模块是否开启，options在模块开启时为options参数，在模块关闭时为rejectedOptions参数，其不为function类型时当模块关闭则不显示children，模块开启时正常显示children</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Features_98f77`,\n        style: ``,\n        list: [{\n    title: `展示了一个系统中功能一开启功能二关闭的情况`,\n    description: `展示了一个系统中功能一开启功能二关闭的情况`,\n    code: `const { default: Features } = _Features;\nconst { default: Layout, PermissionsPage } = layout;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        features: {\n          debug: true,\n          profile: {\n            id: \"erc\",\n            type: \"system\",\n            name: \"业务系统\",\n            children: [\n              {\n                id: \"home\",\n                type: \"module\",\n                name: \"首页\",\n                children: [\n                  {\n                    id: \"test\",\n                    type: \"feature\",\n                    name: \"测试功能\",\n                    dependencies: [\"erc:client\"],\n                  },\n                ],\n              },\n              {\n                id: \"position\",\n                type: \"module\",\n                name: \"职位\",\n                children: [\n                  {\n                    id: \"position-list\",\n                    type: \"feature\",\n                    options: [],\n                    rejectedOptions: [],\n                  },\n                ],\n              },\n              {\n                id: \"client\",\n                type: \"module\",\n                name: \"客户\",\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <Layout navigation={{ isFixed: false }}>\n        <PermissionsPage name=\"home\" openFeatures>\n          <Features id=\"test\">功能模块一</Features>\n          <Features id=\"test2\">功能模块二</Features>\n        </PermissionsPage>\n      </Layout>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Features\",\n    packageName: \"@components/Features\",\n    component: component_58\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_59\n},{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_60\n}]\n},{\n    title: `展示了打开页面特性配置开启和关闭的情况`,\n    description: `展示了打开页面特性配置开启和关闭的情况`,\n    code: `const { default: Features } = _Features;\nconst { default: Layout, PermissionsPage } = layout;\nconst { PureGlobal } = global;\nconst { Route, Routes } = Router;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        features: {\n          debug: true,\n          profile: {\n            id: \"erc\",\n            type: \"system\",\n            name: \"业务系统\",\n            children: [\n              {\n                id: \"home\",\n                type: \"module\",\n                name: \"首页\",\n                children: [\n                  {\n                    id: \"test\",\n                    type: \"feature\",\n                    name: \"测试功能\",\n                  },\n                  {\n                    id: \"test2\",\n                    type: \"feature\",\n                    name: \"测试功能2\",\n                    dependencies: [\"erc:client\"],\n                  },\n                ],\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <Layout\n        navigation={{\n          isFixed: false,\n          list: [\n            {\n              key: \"position\",\n              title: \"职位\",\n              path: \"/position\",\n            },\n            {\n              key: \"client\",\n              title: \"客户\",\n              path: \"/client\",\n            },\n          ],\n        }}\n      >\n        <Routes>\n          <Route\n            index\n            element={\n              <PermissionsPage name=\"home\" openFeatures>\n                home页面模块\n                <div>\n                  <Features id=\"test\">开启模块</Features>\n                  <Features id=\"test2\">关闭模块</Features>\n                </div>\n              </PermissionsPage>\n            }\n          />\n          <Route\n            path=\"/position\"\n            element={\n              <PermissionsPage name=\"position\" openFeatures>\n                position页面模块\n              </PermissionsPage>\n            }\n          />\n          <Route\n            path=\"/client\"\n            element={\n              <PermissionsPage name=\"client\">\n                client页面模块,未打开features\n              </PermissionsPage>\n            }\n          />\n        </Routes>\n      </Layout>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Features\",\n    packageName: \"@components/Features\",\n    component: component_58\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_59\n},{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_60\n},{\n    name: \"Router\",\n    packageName: \"react-router-dom\",\n    component: component_61\n}]\n},{\n    title: `展示了一个系统中功能开启和关闭参数获取`,\n    description: `展示了一个系统中功能开启和关闭参数获取`,\n    code: `const { default: Features } = _Features;\nconst { default: Layout, PermissionsPage } = layout;\nconst { PureGlobal } = global;\nconst { useState } = React;\nconst { Button, Space } = antd;\nconst BaseExample = () => {\n  const [close, setClose] = useState(false);\n  return (\n    <PureGlobal\n      preset={{\n        features: {\n          debug: true,\n          profile: {\n            id: \"erc\",\n            type: \"system\",\n            name: \"业务系统\",\n            children: [\n              {\n                id: \"home\",\n                type: \"module\",\n                name: \"首页\",\n                children: [\n                  {\n                    id: \"test\",\n                    type: \"feature\",\n                    name: \"测试功能\",\n                    options: {\n                      state: \"开启\",\n                    },\n                    rejectedOptions: {\n                      state: \"关闭\",\n                    },\n                    close: close,\n                  },\n                ],\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <Space direction=\"vertical\">\n        <Button\n          onClick={() => {\n            setClose((value) => !value);\n          }}\n        >\n          切换\n        </Button>\n        <Layout navigation={{ isFixed: false }}>\n          <PermissionsPage name=\"home\" openFeatures>\n            <Features id=\"test\">\n              {({ isPass, options }) => {\n                return isPass\n                  ? \"模块开启,options:\" + JSON.stringify(options)\n                  : \"模块关闭,options:\" + JSON.stringify(options);\n              }}\n            </Features>\n          </PermissionsPage>\n        </Layout>\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Features\",\n    packageName: \"@components/Features\",\n    component: component_58\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_59\n},{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_60\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_62\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_11 from '@components/File';\nimport * as component_12 from '@components/Global';\nimport * as component_13 from 'lodash';\nimport * as component_14 from 'antd';\nimport * as component_15 from '@kne/remote-loader';\nconst readmeConfig = {\n    name: `File`,\n    summary: `<p>提供文件展示，下载等操作</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `File_0b279`,\n        style: ``,\n        list: [{\n    title: `获取文件地址`,\n    description: `通过一个ossId获取文件地址`,\n    code: `const { default: File } = _File;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return <File id=\"qqq\">{({ url }) => url}</File>;\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      apis: {\n        oss: {\n          loader: async ({ params }) => {\n            console.log(params);\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve(window.PUBLIC_URL + \"/avatar.png\");\n              }, 1000);\n            });\n          },\n        },\n      },\n    }}\n  >\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_File\",\n    packageName: \"@components/File\",\n    component: component_11\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_12\n}]\n},{\n    title: `文件下载`,\n    description: `展示文件下载`,\n    code: `const { Download } = _File;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <Download\n      id=\"123\"\n      filename=\"下载的文件\"\n      onSuccess={() => {\n        console.log(\"下载成功\");\n      }}\n    >\n      文件下载\n    </Download>\n  );\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      apis: {\n        oss: {\n          loader: async ({ params }) => {\n            console.log(params);\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve(window.PUBLIC_URL + \"/avatar.png\");\n              }, 1000);\n            });\n          },\n        },\n      },\n    }}\n  >\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_File\",\n    packageName: \"@components/File\",\n    component: component_11\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_12\n}]\n},{\n    title: `文件列表`,\n    description: `展示文件列表`,\n    code: `const { List } = _FileList;\nconst { Space } = antd;\nconst { PureGlobal } = global;\n\nconst BaseExample = () => {\n  return (\n    <Space direction=\"vertical\">\n      <List\n        dataSource={[\n          {\n            uuid: \"121233\",\n            type: \"uploading\",\n            filename: \"张三的简历.doc\",\n          },\n          {\n            id: \"xxxxx\",\n            filename: \"我是一份简历.pdf\",\n            date: \"2022-07-15T11:09:15.000+08:00\",\n            userName: \"用户名\",\n          },\n        ]}\n      />\n      <List dataSource={[]} />\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      apis: {\n        oss: {\n          loader: async ({ params }) => {\n            console.log(params);\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve(window.PUBLIC_URL + \"/mock/demo.pdf\");\n              }, 1000);\n            });\n          },\n        },\n      },\n    }}\n  >\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FileList\",\n    packageName: \"@components/File\",\n    component: component_11\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_13\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_12\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_14\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { FileLink } = _File;\nconst { getPublicPath } = remoteLoader;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        apis: {\n          oss: {\n            loader: async ({ params }) => {\n              const mapping = {\n                \"01\": \"/avatar.png\",\n                \"02\": \"/mock/demo.html\",\n                \"03\": \"/mock/1_王晶简历-2023_06_2.pdf\",\n              };\n              return new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve(\n                    getPublicPath(\"components-core\") + mapping[params.id]\n                  );\n                }, 1000);\n              });\n            },\n          },\n        },\n      }}\n    >\n      <FileLink id=\"01\" originName=\"我是一个图片.jpg\" />\n      <FileLink id=\"02\" originName=\"我是一个网页.html\" />\n      <FileLink id=\"03\" originName=\"我是一个pdf.pdf\" />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_File\",\n    packageName: \"@components/File\",\n    component: component_11\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_15\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_12\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_19 from '@components/FilePreview';\nconst readmeConfig = {\n    name: `FilePreview`,\n    summary: `<p>文件预览</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `FilePreview_143ff`,\n        style: ``,\n        list: [{\n    title: `HtmlPreview`,\n    description: `这里填写示例说明`,\n    code: `const { default: FilePreview, HtmlPreview } = _FilePreview;\nconst BaseExample = () => {\n  return (\n    <HtmlPreview\n      maxWidth={900}\n      url=\"/ui_components/components-core/1.0.0/mock/demo2.html\"\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_19\n}]\n},{\n    title: `PdfPreview`,\n    description: `这里填写示例说明`,\n    code: `const { PdfPreview } = _FilePreview;\nconst BaseExample = () => {\n  return (\n    <PdfPreview\n      maxWidth={900}\n      url={\\`/ui_components/components-core/1.0.0/mock/1_王晶简历-2023_06_2.pdf\\`}\n      renderTextLayer={true}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_19\n}]\n},{\n    title: `TextPreview`,\n    description: `这里填写示例说明`,\n    code: `const { TextPreview } = _FilePreview;\nconst BaseExample = () => {\n  return (\n    <TextPreview\n      maxWidth={900}\n      url=\"/ui_components/components-core/1.0.0/mock/demo.txt\"\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_19\n}]\n},{\n    title: `ImagePreview`,\n    description: `这里填写示例说明`,\n    code: `const { ImagePreview } = _FilePreview;\nconst BaseExample = () => {\n  return (\n    <ImagePreview\n      url={\\`/ui_components/components-core/1.0.0/mock/demo2.jpg\\`}\n      renderTextLayer={true}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_19\n}]\n},{\n    title: `unknown`,\n    description: `这里填写示例说明`,\n    code: `const { UnknownPreview } = _FilePreview;\nconst BaseExample = () => {\n  return (\n    <UnknownPreview url=\"/ui_components/components-core/1.0.0/mock/demo.des\" />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FilePreview\",\n    packageName: \"@components/FilePreview\",\n    component: component_19\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_20 from '@components/Filter';\nimport * as component_21 from 'antd';\nimport * as component_22 from '@components/Filter/doc/mock/tree-data.json';\nconst readmeConfig = {\n    name: `Filter`,\n    summary: ``,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Filter_d7778`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {\n  FilterValueDisplay,\n  FilterItem,\n  FilterLines,\n  PopoverItem,\n  InputFilterItem,\n  CityFilterItem,\n  AdvancedSelectFilterItem,\n  UserFilterItem,\n  FunctionSelectFilterItem,\n  IndustrySelectFilterItem,\n} = _Filter;\nconst { Space, Input } = antd;\nconst { useState } = React;\nconst BaseExample = () => {\n  const [value, setValue] = useState([\n    {\n      label: \"城市\",\n      name: \"city\",\n      value: [\n        { label: \"上海\", value: \"010\" },\n        { label: \"北京\", value: \"020\" },\n      ],\n    },\n    {\n      label: \"职能\",\n      name: \"function\",\n      value: [\n        { label: \"产品经理\", value: \"010\" },\n        { label: \"销售\", value: \"020\" },\n        {\n          label: \"客户经理\",\n          value: \"030\",\n        },\n      ],\n    },\n  ]);\n  return (\n    <Space direction=\"vertical\">\n      <FilterValueDisplay value={value} onChange={setValue} />\n      <Space>\n        <FilterItem label=\"客户\" />\n        <FilterItem label=\"客户\" active />\n        <FilterItem label=\"客户\" open />\n        <FilterItem label=\"超长超长超长超长超长超长超长超长\" active open />\n      </Space>\n      <FilterLines\n        list={[\n          [\n            <FilterItem label=\"客户\" />,\n            <FilterItem label=\"职位\" />,\n            <FilterItem label=\"职位负责人\" />,\n          ],\n          [\n            <FilterItem label=\"开始时间\" />,\n            <FilterItem label=\"结束时间\" />,\n            <FilterItem label=\"职位BD人\" />,\n          ],\n          [\n            <FilterItem label=\"开始时间\" />,\n            <FilterItem label=\"结束时间\" />,\n            <FilterItem label=\"职位BD人\" />,\n          ],\n          [\n            <FilterItem label=\"开始时间\" />,\n            <FilterItem label=\"结束时间\" />,\n            <FilterItem label=\"职位BD人\" />,\n          ],\n        ]}\n      />\n      <PopoverItem label=\"客户\">\n        {({ value, onChange }) => (\n          <Input value={value} onChange={(e) => onChange(e.target.value)} />\n        )}\n      </PopoverItem>\n      <FilterLines\n        list={[\n          [\n            <InputFilterItem label=\"文字\" />,\n            <CityFilterItem label=\"城市\" />,\n            <AdvancedSelectFilterItem\n              label=\"高级选择\"\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1 },\n                      { label: \"第二项\", value: 2, disabled: true },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n            />,\n            <UserFilterItem\n              label=\"用户选择\"\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        value: 1,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户二\",\n                        value: 2,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户三\",\n                        value: 3,\n                        description: \"我是用户描述\",\n                      },\n                    ],\n                  };\n                },\n              }}\n            />,\n            <FunctionSelectFilterItem label=\"职能选择\" />,\n            <IndustrySelectFilterItem label=\"行业选择\" />,\n          ],\n        ]}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Filter\",\n    packageName: \"@components/Filter\",\n    component: component_20\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_21\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {\n  default: Filter,\n  InputFilterItem,\n  DatePickerFilterItem,\n  DateRangePickerFilterItem,\n  TypeDateRangePickerFilterItem,\n  CityFilterItem,\n  AdvancedSelectFilterItem,\n  UserFilterItem,\n  FunctionSelectFilterItem,\n  IndustrySelectFilterItem,\n  getFilterValue,\n  FilterItemContainer,\n} = _Filter;\nconst { useState } = React;\nconst BaseExample = () => {\n  const [value, onChange] = useState([]);\n  return (\n    <Filter\n      value={value}\n      onChange={(value) => {\n        console.log(getFilterValue(value));\n        onChange(value);\n      }}\n      list={[\n        [\n          <InputFilterItem label=\"文字\" name=\"text\" />,\n          <CityFilterItem label=\"城市\" name=\"city\" />,\n          <FilterItemContainer name=\"select\" label=\"高级选择\">\n            {(props) => (\n              <div>\n                <AdvancedSelectFilterItem\n                  {...props}\n                  api={{\n                    loader: () => {\n                      return {\n                        pageData: [\n                          { label: \"第一项\", value: 1 },\n                          {\n                            label: \"第二项\",\n                            value: 2,\n                            disabled: true,\n                          },\n                          {\n                            label: \"第三项\",\n                            value: 3,\n                          },\n                        ],\n                      };\n                    },\n                  }}\n                />\n              </div>\n            )}\n          </FilterItemContainer>,\n          <DatePickerFilterItem label=\"日期\" name=\"date\" picker=\"week\" />,\n          <TypeDateRangePickerFilterItem\n            label=\"复杂日期范围\"\n            name=\"type-data-range\"\n            allowEmpty={[true, true]}\n          />,\n          <DateRangePickerFilterItem label=\"日期范围\" name=\"date-range\" />,\n          <UserFilterItem\n            label=\"用户选择\"\n            name=\"user\"\n            api={{\n              loader: () => {\n                return {\n                  pageData: [\n                    {\n                      label: \"用户一\",\n                      value: 1,\n                      description: \"我是用户描述\",\n                    },\n                    {\n                      label: \"用户二\",\n                      value: 2,\n                      description: \"我是用户描述\",\n                    },\n                    {\n                      label: \"用户三\",\n                      value: 3,\n                      description: \"我是用户描述\",\n                    },\n                  ],\n                };\n              },\n            }}\n          />,\n          <FunctionSelectFilterItem\n            label=\"职能选择\"\n            name=\"function\"\n            onlyAllowLastLevel\n            single\n          />,\n          <IndustrySelectFilterItem\n            label=\"行业选择\"\n            name=\"industry\"\n            onlyAllowLastLevel\n          />,\n        ],\n      ]}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Filter\",\n    packageName: \"@components/Filter\",\n    component: component_20\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Filter, TreeFilterItem } = _Filter;\nconst { default: treeData } = _data;\nconst { useState } = React;\nconst { Space } = antd;\n\nconst BaseExample = () => {\n  const [filter, setFilter] = useState([]);\n  const [filter2, setFilter2] = useState([]);\n\n  return (\n    <Space direction=\"vertical\">\n      <Filter\n        value={filter}\n        onChange={setFilter}\n        list={[\n          [\n            <TreeFilterItem\n              name=\"tree\"\n              single\n              label=\"树组件\"\n              fieldNames={{\n                title: \"name\",\n                key: \"id\",\n                children: \"children\",\n              }}\n              api={{\n                loader: () => {\n                  return treeData.children;\n                },\n              }}\n            />,\n          ],\n        ]}\n      />\n      <Filter\n        value={filter2}\n        onChange={setFilter2}\n        list={[\n          [\n            <TreeFilterItem\n              name=\"tree\"\n              label=\"树组件\"\n              fieldNames={{\n                title: \"name\",\n                key: \"id\",\n                children: \"children\",\n              }}\n              api={{\n                loader: () => {\n                  return treeData.children;\n                },\n              }}\n            />,\n          ],\n        ]}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Filter\",\n    packageName: \"@components/Filter\",\n    component: component_20\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_21\n},{\n    name: \"_data\",\n    packageName: \"@components/Filter/doc/mock/tree-data.json\",\n    component: component_22\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_63 from '@components/FlexBox';\nimport * as component_64 from 'antd';\nimport * as component_65 from 'lodash';\nconst readmeConfig = {\n    name: `FlexBox`,\n    summary: `<p>用于根据盒子大小响应式展示不同列</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `FlexBox_51df0`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: FlexBox } = _FlexBox;\nconst { Card } = antd;\nconst BaseExample = () => {\n  return (\n    <FlexBox\n      dataSource={[\n        {\n          title: \"Title 1\",\n        },\n        {\n          title: \"Title 2\",\n        },\n        {\n          title: \"Title 3\",\n        },\n        {\n          title: \"Title 4\",\n        },\n        {\n          title: \"Title 5\",\n        },\n        {\n          title: \"Title 6\",\n        },\n      ]}\n      renderItem={(item) => (\n        <FlexBox.Item>\n          <Card title={item.title}>Card content</Card>\n        </FlexBox.Item>\n      )}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FlexBox\",\n    packageName: \"@components/FlexBox\",\n    component: component_63\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_64\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: FlexBox } = _FlexBox;\nconst { Card, Button } = antd;\nconst { range } = lodash;\nconst { useRef } = React;\nconst BaseExample = () => {\n  const ref = useRef();\n  return (\n    <div>\n      <FlexBox.Fetch\n        ref={ref}\n        getFetchApi={({ size }) => {\n          return {\n            data: {\n              pageSize: size,\n            },\n            loader: ({ data }) => {\n              return new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve({\n                    pageData: range(0, data.pageSize).map((index) => {\n                      return {\n                        key: index,\n                        title: \\`第\\${index}项\\`,\n                      };\n                    }),\n                  });\n                }, 1000);\n              });\n            },\n          };\n        }}\n        renderItem={(item) => (\n          <FlexBox.Item>\n            <Card title={item.title}>Card content</Card>\n          </FlexBox.Item>\n        )}\n      />\n      <Button\n        onClick={() => {\n          console.log(ref.current);\n        }}\n      >\n        获取FetchApi\n      </Button>\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FlexBox\",\n    packageName: \"@components/FlexBox\",\n    component: component_63\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_64\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_65\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_23 from '@components/FormInfo';\nimport * as component_24 from '@components/Global';\nimport * as component_25 from '@components/Modal';\nimport * as component_26 from 'lodash';\nimport * as component_27 from 'antd';\nimport * as component_28 from '@kne/react-fetch';\nimport * as component_29 from '@components/Content';\nimport * as component_30 from '@components/Icon';\nimport * as component_31 from 'dayjs';\nconst readmeConfig = {\n    name: `FormInfo`,\n    summary: `<p>表单控件，自带数据域管理。包含数据录入、校验以及对应样式</p>\n<h3>何时使用</h3>\n<ul>\n<li>用于创建或编辑一个实体或收集信息</li>\n<li>需要对输入的数据类型进行校验时</li>\n</ul>\n<h3>概念</h3>\n<ul>\n<li>Form Data：\nForm提交时获取到的输出值通常用来提交给后端，不包含Form的校验信息，只包含Form组件可以向外部提供的数据输出信息。</li>\n<li>Form State：\nForm中用来存储一切状态的值，包含Field信息，校验信息，Form的值（需要一定的转换从才能变成Form Data），表单是否验证通过，表单错误信息等值。</li>\n<li>字段或称Field：\nForm中的一个项，必须拥有参数name,label,可选参数rule。name作为Form提交时获取到data的key值。\nlabel为字段展示给用户的名字以及字段报错时提示用户错误的语句中指代该字段的名字。\nrule为下方介绍的RULE。\n一个Field的取值可以是简单的Number，Boolean，String也可以是复杂的Array，Object等，所以在考虑一些值需要分成多个Field还是集中在一个Field时非常重要的。\n一个通用的规则是：<em><strong>对于Form来说，它的最小校验单元是一个Field</strong></em>。</li>\n<li>Field组件：\nField组件是Field的一部分，可以由用户自己实现也可以由组件库提供，通过Form提供的Field hooks将其变成Field。\nfield hooks主要接管Field组件的value，onChange参数，用来把Field组件的值获取到Form管理。Field组件必须为<em><strong>受控组件</strong></em>。\nfield hooks还会接管triggerValidate，用来获取Field的校验时机。field hooks会向Field组件提供Field的校验状态和校验错误信息。</li>\n<li>RULE：\n用于字段的校验。RULE可以为一个function或者正则表达式，不过推荐以大写字符串调用。\n字符串形式的RULE以空格为间隔可以传入多条规则，如：\"REQ TEL\"，\n执行校验时会从左至右依次校验，如果左侧的规则校验失败则不再执行其右侧规则，返回校验失败状态及该规则失败原因提示作为字段校验失败原因。\n字符串RULE允许传入参数，参数以中划线隔开，可传入多个参数，如：\"LEN-3-10\"。\n字符串RULE使用前必须在Form组件中有所声明，Form的RULE声明有3个级别：\n默认级，包含于Form内部，提供了一些基本的校验规则。preset级：在项目的preset中声明，应该把项目中常用的或者是比较复杂的RULE声明集中维护于此。\nForm级：以rules参数传入Form组件，主要是某Form单独使用的RULE。\n如果声明字符相同，会以 Form级&gt;preset级&gt;默认级 进行覆盖。\nRULE声明为一个对象，key和去掉参数的字符串RULE相同，value为一个function称为校验函数。此function接收到的参数有三部分(\nvalue,[...args]\n,{data,{field}}),第一个参数value为当前字段的值，最后一个参数为form的状态，data是form的当前值，field是form里面当前字段的信息，\n中间参数args为字符串参数如：\"LEN-3-10\"会接收到3和20两个参数。校验函数返回{result,errMsg}，\n或者一个Promise.resolve({result,errMsg})的Promise对象。result为校验是否通过，errMsg为失败提示，失败提示可以用%s占位，展示时会替换成字段的label。</li>\n<li>校验或称Validate：\nForm会在Field组件执行triggerValidate时执行当前Field的Validate，表单提交时执行所有Field的Validate。\nValidate会串行执行RULE里面的所有规则的校验函数，校验函数返回Promise时也会等待左边的校验函数的Promise完成再执行右边的规则校验函数。\n表单提交时，正在执行异步的校验函数的Field将不会重复执行Validate。表单提交时所有Field的校验状态为通过时才会执行onSubmit方法，否则会执行onError方法，\nonPrevSubmit方法在用户点击提交按钮时就会触发，不管Validate结果是否为通过。</li>\n<li>Event：\nForm采用了事件驱动的方式来设计，用以满足多种异步校验，和给Form提供强大的可扩展性。\nForm的API里面可以获取到的emitter就是Form内部的事件发射器，可以触发Form内部定义的事件，也可以自定义一些事件。同时可以通过emitter.addListener监听事件。\nForm内部定义的事件有：\nform-field-add：Field被添加进Form时触发，\nform-field-edit：Field的参数发生改变时触发，\norm-field-remove：Field被卸载时触发，\nform-field-validate：Field执行Validate时触发，\nform-field-data-change：Field的值发生修改时触发，\nform-data-reset：Form组件重置data时触发，\nform-data-set-field：Form组件给data赋值时触发，\nform-data-set-field-validate：Field被赋值时触发，\nform-validate-all：Form执行全部Field的Validate时触发，一般为表单提交时，\nform-submit：表单提交时触发。</li>\n<li>拦截器或称Interceptor：\n没有Field可以接收一个interceptor参数，字符串类型，和RULE类似可以再preset或者Form的interceptors props中声明以后使用，可以配置多个用空格连接。\n拦截器的作用是，在Field接收到一个新的值时，会串行执行拦截器的output部分，把其返回值输出到Form Data。\n在执行Form Data的赋值操作时把赋值作为输入串行执行拦截器的input部分，把其结果作为Form Data的输入。\n现在有个Field是日期选择，输出Date类型值，但是Form Data输出希望将其格式化为日期字符串，在表单编辑时Form\nData输入格式化后的日期字符串，但是Field只接收Date类型的值，\n以下例子可以来解决此问题：<pre><code class=\"language-jsx\">interceptors.input.use(\"date-string\", (value) =&gt; {\n  return value ? new Date(value) : null;\n});\n\ninterceptors.output.use(\"date-string\", (value) =&gt; {\n  return value ? dayjs(value).format(\"YYYY-MM-DD\") : \"\";\n});\n\n&lt;Field name=\"date\" label=\"日期\" interceptor=\"date-string\"/&gt;\n</code></pre>\n</li>\n<li>Group：\n当Form的data需要接收到一个复杂值的时候，可以使用Group来实现，如：<pre><code class=\"language-jsx\">&lt;Group name=\"baseInfo\"&gt;\n  &lt;Field name=\"name\" label=\"名称\"/&gt;\n  &lt;Field name=\"des\" label=\"说明\"/&gt;\n&lt;/Group&gt;\n</code></pre>\nForm的data可以接收到 {baseInfo:{name:\"xxx\",des:\"xxx\"}}，Group的name和Field的name一致时也可以用来表示数组如：<pre><code class=\"language-jsx\">&lt;Group name=\"name\"&gt;\n  &lt;Field name=\"name\" label=\"名称\"/&gt;\n&lt;/Group&gt;\n&lt;Group name=\"des\"&gt;\n  &lt;Field name=\"des\" label=\"说明\"/&gt;\n&lt;/Group&gt;\n</code></pre>\nForm的data可以接收到 {name:[\"name1\",\"name2\"],des:[\"des1\",\"des2\"]}。\nGroup可以嵌套，如<pre><code class=\"language-jsx\">&lt;Group name=\"baseInfo\"&gt;\n  &lt;Group name=\"info\"&gt;\n    &lt;Field name=\"name\" label=\"名称\"/&gt;\n  &lt;/Group&gt;\n  &lt;Field name=\"des\" label=\"说明\"/&gt;\n&lt;/Group&gt;\n</code></pre>\nForm的data可以接收到 {baseInfo:{info:{name:'xxx'},des:'xxx'}}。\n支持点操作，如：<pre><code class=\"language-jsx\">&lt;Group name=\"baseInfo.info\"&gt;\n  &lt;Field name=\"name\" label=\"名称\"/&gt;\n  &lt;Field name=\"des\" label=\"说明\"/&gt;\n&lt;/Group&gt;\n</code></pre>\nForm的data可以接收到 {baseInfo:{info:{name:'xxx',des:'xxx'}}}。</li>\n<li>GroupList：\n使用Group实现的一个特殊的区域用来更方便的实现多段式的表单如：<pre><code class=\"language-jsx\">&lt;Button onClick={()=&gt;ref.current.onAdd()}&gt;添加&lt;/Button&gt;\n&lt;GroupList name=\"edu\" ref={ref}&gt;\n  {(key,{index,length,onAdd,onRemore})=&gt;&lt;&gt;\n    &lt;Button onClick={onRemore}&gt;删除&lt;/Button&gt;\n    &lt;Field name=\"schoolName\" label=\"学校名称\"/&gt;\n    &lt;Field name=\"degree\" label=\"学历\"/&gt;\n    &lt;Field name=\"des\" label=\"说明\"/&gt;\n  &lt;/&gt;}\n&lt;/GroupList&gt;\n</code></pre>\n以上是一个简历的学历列表的实现，可以点击添加按钮添加多段学历Field，可以点击删除按钮删除当前一段学历Field，\nForm的data可以接收到的 {edu:[{schoolName:'xxx',degree:'xxx',des:'xxx'}]}。\n当然你可以不用使用这样底层的API，FormInfo.List 已经帮你处理好一切。</li>\n</ul>\n<h3>特点</h3>\n<ul>\n<li>集中化校验规则管理，分层抽象，调用简便</li>\n<li>支持异步校验规则</li>\n<li>事件驱动式架构设计，便于扩展</li>\n<li>支持Group及GroupList，可轻松实现复杂表单</li>\n<li>UI，校验逻辑分层抽象，一次封装使用简单</li>\n<li>context和ref双重API暴露，在Form内还是Form外都能轻松获取</li>\n<li>form-helper提供基本的表单封装，灵活组合</li>\n<li>支持拦截器，便捷实现FormData和Field的值之间的转换</li>\n</ul>\n<h3>Field实现规范</h3>\n<ul>\n<li>FormInfo里面的Field都会放置在fields文件夹，其中每个文件夹代表一个Field</li>\n<li>一个Field只能默认导出会被引用，其他的方法枚举等需要放置在默认导出的组件的function的静态属性上</li>\n<li>一个Field的默认导出组件只能被放置在Form中作为Field被使用，它的Field组件会被挂载在默认导出的组件的function的Field静态属性上</li>\n<li>一个Field的Field组件必须支持受控和非受控两种形式</li>\n<li>一个Field的导出必须被包含在FormInfo导出的formModule中和FormInfo中，即：以下两种方法都可以获取到该Field<pre><code class=\"language-jsx\">import {SomeField} from \"@component/FormInfo\";\n</code></pre>\n<pre><code class=\"language-jsx\">import {formModule} from \"@component/FormInfo\";\nconst {SomeField} = formModule;\n</code></pre>\n</li>\n</ul>\n<h3>选择器类型Field组件实现规范</h3>\n<ul>\n<li>必须使用SelectInnerInput作为选择器的值显示和触发的输入框</li>\n<li>SelectInnerInput可以通过isPopup提供popup和modal两种展示形态和交互逻辑，Field组件可以通过自身的默认值或者调用SelectInnerInput时显式指定来设置最佳推荐的默认形式，一般情况一种选择器需要良好支持两种形式</li>\n<li>SelectInnerInput可以通过single决定输出值是单项还是多项，单项和多项的交互逻辑也可能不同，SelectInnerInput的内部value state都是使用多项值来处理的，在输入值和在onChange输出时根据参数转化成数组，一般情况一种选择器需要支持两种情况</li>\n<li>选择器可能会在顶部有一个搜索框，通过使用时是否传入getSearchProps来决定搜索框是否显示，在FormInfo/common中提供了默认的SearchInput实现，SelectInnerInput中管理了其searchText和setSearchText状态</li>\n<li>FormInfo/fields/AdvancedSelect/createList.js 实现了一个列表式选择器，实现了包括搜索，下拉加载等逻辑，只需要实现列表渲染逻辑就可以方便的扩展出新的List类型选择器</li>\n<li>通过SelectInnerInput.useContext 可以拿到选择器的用户传入属性（props），值到选项的映射（mapping），搜索框的state（searchText,setSearchText），数据加载器的API（fetchApi）原始value值（valueState），添加映射方法（appendItems）</li>\n</ul>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>debug</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>rules</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>interceptors</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>noFilter</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onError</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onSubmit</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onPrevSubmit</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>SelectInnerInput</h3>\n<h3>formModule</h3>\n<h3>FormInfo</h3>\n<h3>preset</h3>\n<h3>List</h3>\n<h3>Form</h3>\n<p>同default导出组件</p>\n<h3>useField</h3>\n<h3>useReset</h3>\n<h3>useSubmit</h3>\n<h3>Group</h3>\n<h3>GroupList</h3>\n<h3>useFormContext</h3>\n<h3>RULES</h3>\n<h3>interceptors</h3>\n<h3>SubmitButton</h3>\n<h3>CancelButton</h3>\n<h3>ResetButton</h3>\n<h3>Field类型:antd组件</h3>\n<p>以下组件请参考antd具体的组件文档此处不再赘述</p>\n<p>Checkbox,CheckboxGroup,DatePicker,Input,InputNumber,RadioGroup,Select,Switch,TextArea,TimePicker,TreeSelect</p>\n<h3>Field类型:@kne/react-form-antd实现组件</h3>\n<p>DatePickerToday</p>\n<h3>Field类型:components-core实现组件</h3>\n<p>AddressSelect</p>\n<p>AdvancedSelect</p>\n<p>Avatar</p>\n<p>Cascader</p>\n<p>FunctionSelect</p>\n<p>IndustrySelect</p>\n<p>Money</p>\n<p>PartSelect</p>\n<p>PhoneNumber</p>\n<p>TableDataSelect</p>\n<p>Upload</p>\n<h3>FormModal</h3>\n<p>一个Form和Modal组合起来的组件，它预置了Form组件，children传入的内容和footer区域均在Form的context内</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>formProps</td>\n<td>同Form组件参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>useFormModal</h3>\n<p>获取一个执行后可以弹出一个FormModal组件的方法</p>\n<h4>return:formModal</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>formModal</td>\n<td>执行后可以弹出一个FormModal弹窗，参数同FormModal组件参数</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>\n<h3>FormModalButton</h3>\n<p>点击以后可以执行获取数据，在数据未返回时按钮展示为loading状态，数据返回后弹出FormModal弹窗</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>@kne/react-fetch 所需参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modalProps</td>\n<td>同FormModal参数,当它为function时，执行function后返回的值作为modalProps</td>\n<td>object,function({data,fetchApi,close})</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数同antd Button 组件</p>`,\n    example: {\n        isFull: true,\n        className: `FormInfo_f344c`,\n        style: `.FormInfo_f344c .input > .ant-row > .ant-col {\n  padding: 10px 0; }\n\n.FormInfo_f344c .input .ant-space-item:last-child {\n  width: 100%; }\n`,\n        list: [{\n    title: `一个简单表单示例`,\n    description: `展示了一个简单表单示例`,\n    code: `const { default: FormInfo, Form, SubmitButton, ErrorTip, fields } = _FormInfo;\nconst { PureGlobal } = global;\nconst { useModal } = _Modal;\nconst { uniqueId } = lodash;\n\nconst { Input, TextArea, Upload, Avatar, TypeDateRangePicker } = fields;\n\nconst BaseExample = () => {\n  const modal = useModal();\n  return (\n    <Form\n      helperGuideName=\"test-from\"\n      lang={[\n        \"cn\",\n        {\n          name: \"EnUS\",\n          label: \"英文\",\n          options: {\n            //labelTransform: (label) => label + \"(en)\",\n            ignore: [{ name: \"avatar\" }, { name: \"photo\" }],\n            disabled: [{ name: \"file\" }], //fields:[{name:'name'}]\n          },\n        },\n      ]}\n      rules={{\n        REP: (value) => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                result: false,\n                errMsg: \"%s重复\",\n                data: {\n                  user: \"我是一个重复的东西\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n      onSubmit={(data) => {\n        modal({\n          title: \"表单提交数据\",\n          children: <pre>{JSON.stringify(data, null, 2)}</pre>,\n        });\n      }}\n    >\n      <FormInfo\n        title=\"基本信息\"\n        list={[\n          <Avatar name=\"avatar\" label=\"头像\" labelHidden block />,\n          <Avatar\n            name=\"photo\"\n            label=\"证件照\"\n            dropModalSize=\"default\"\n            border={50}\n            width={960}\n            height={540}\n            block\n          />,\n          <ErrorTip\n            name=\"name\"\n            errorRender={({ validateData }) => {\n              console.log(validateData);\n              if (!validateData.REP) {\n                return null;\n              }\n              return <div>哈哈哈{validateData.REP.user}</div>;\n            }}\n          >\n            <Input\n              name=\"name\"\n              label=\"姓名\"\n              rule=\"REQ LEN-3-10 REP\"\n              tips=\"请输入姓名\"\n            />\n          </ErrorTip>,\n          <Input name=\"phone\" label=\"手机\" rule=\"REQ TEL\" />,\n          <Input name=\"email\" label=\"邮箱\" rule=\"EMAIL\" />,\n          <Upload name=\"file\" label=\"文件\" block />,\n          <TypeDateRangePicker\n            name=\"type_date\"\n            label=\"日期时间段\"\n            rule=\"REQ\"\n          />,\n          <TextArea name=\"des\" label=\"备注\" block />,\n          <SubmitButton>提交</SubmitButton>,\n        ]}\n      />\n    </Form>\n  );\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      locale: \"en-US\",\n      enums: {\n        helperGuide: () => [\n          {\n            value: \"test-from-name\",\n            content: \"测试帮助文档\",\n            url: \"/\",\n          },\n        ],\n      },\n      apis: {\n        oss: {\n          loader: () => {\n            return window.PUBLIC_URL + \"/avatar.png\";\n          },\n        },\n        ossUpload: async ({ file }) => {\n          console.log(file);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              const id = uniqueId(\"file-\");\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id,\n                    originalName: id + \"简历.pdf\",\n                  },\n                },\n              });\n            }, 1000);\n          });\n        },\n      },\n    }}\n  >\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_25\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_26\n}]\n},{\n    title: `一个含有多段列表的表单示例`,\n    description: `展示了一个含有多段列表的表单示例，列表的最大长度为5，在添加5段之后添加按钮自动隐藏`,\n    code: `const {\n  default: FormInfo,\n  Form,\n  List,\n  AdvancedSelect,\n  TableList,\n  Input,\n  TextArea,\n  SubmitButton,\n  FormApiButton,\n} = _FormInfo;\nconst { PureGlobal } = global;\nconst { useModal } = _Modal;\nconst { Space } = antd;\n\nconst BaseExample = () => {\n  const modal = useModal();\n  return (\n    <Form\n      onSubmit={(data) => {\n        modal({\n          title: \"表单提交数据\",\n          children: <pre>{JSON.stringify(data, null, 2)}</pre>,\n        });\n      }}\n    >\n      <Space direction=\"vertical\" size={16}>\n        <FormInfo\n          title=\"基本信息\"\n          list={[\n            <Input name=\"name\" label=\"基本名称\" rule=\"REQ\" block />,\n            <TextArea name=\"des\" label=\"基本描述\" block />,\n          ]}\n        />\n        <List\n          name=\"list\"\n          title=\"列表\"\n          itemTitle={({ index }) => \\`经历\\${index + 1}\\`}\n          maxLength={5}\n          list={[\n            <Input name=\"name\" label=\"名称\" rule=\"REQ\" />,\n            <Input name=\"title\" label=\"标题\" rule=\"REQ\" />,\n            <TextArea name=\"des\" label=\"描述\" block rule=\"REQ\" />,\n          ]}\n        />\n        <TableList\n          name=\"tableList\"\n          title=\"表格列表\"\n          maxLength={5}\n          minLength={1}\n          list={[\n            <Input name=\"name\" label=\"名称\" rule=\"REQ\" value=\"xxxxx\" />,\n            <Input name=\"title\" label=\"标题\" rule=\"REQ\" />,\n            <AdvancedSelect\n              name=\"select\"\n              label=\"选项\"\n              rule=\"REQ\"\n              value={[1]}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"第一项\",\n                        value: 1,\n                      },\n                      {\n                        label: \"第二项\",\n                        value: 2,\n                        disabled: true,\n                      },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n            />,\n          ]}\n        />\n        <FormInfo\n          list={[\n            <SubmitButton>提交</SubmitButton>,\n            <FormApiButton\n              onClick={({ openApi }) => {\n                openApi.setFields(\n                  [\n                    {\n                      groupName: \"tableList\",\n                      name: \"name\",\n                      value: \"\",\n                    },\n                    {\n                      groupName: \"tableList\",\n                      name: \"title\",\n                      value: \"ssssssss\",\n                    },\n                  ],\n                  { runValidate: false }\n                );\n              }}\n            >\n              设置表单值\n            </FormApiButton>,\n          ]}\n        />\n      </Space>\n    </Form>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_25\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_27\n}]\n},{\n    title: `Modal Form弹窗`,\n    description: `展示一个form弹窗`,\n    code: `const { Space, Button } = antd;\nconst { PureGlobal } = global;\nconst {\n  default: FormInfo,\n  List,\n  Input,\n  TextArea,\n  FormModal,\n  useFormModal,\n  CancelButton,\n  FormApiButton,\n  SubmitButton,\n  FormModalButton,\n} = _FormInfo;\nconst { useState } = React;\nconst { default: Fetch } = fetch;\n\nconst BaseExample = () => {\n  const [open, setOpen] = useState(false);\n  const formModal = useFormModal();\n  return (\n    <Space wrap>\n      <FormModal\n        open={open}\n        title=\"表单弹窗\"\n        onClose={() => {\n          setOpen(false);\n        }}\n        formProps={{\n          data: {\n            field1: \"field1field1field1field1\",\n          },\n          onSubmit: async (data) => {\n            console.log(data);\n            await new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n              }, 1000);\n            });\n            setOpen(false);\n          },\n        }}\n      >\n        <FormInfo\n          title=\"基本信息\"\n          list={[\n            <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n            <TextArea name=\"field3\" label=\"字段3\" />,\n          ]}\n        />\n        <List\n          title=\"列表\"\n          name=\"list\"\n          maxLength={3}\n          list={[\n            <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n            <TextArea name=\"field3\" label=\"字段3\" />,\n          ]}\n        />\n      </FormModal>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        组件调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            formProps: ({ data }) => {\n              return {\n                data: data,\n                onSubmit: async (data) => {\n                  console.log(data);\n                  await new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                  api.close();\n                },\n              };\n            },\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve({\n                        field1: \"我接口获取的数据\",\n                      });\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks加载form数据调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            footerButtons: [\n              { ButtonComponent: CancelButton, children: \"取消\" },\n              {\n                ButtonComponent: FormApiButton,\n                autoClose: false,\n                onClick: (context) => {\n                  console.log(context);\n                },\n                children: \"FormApiButton\",\n              },\n              {\n                ButtonComponent: SubmitButton,\n                autoClose: false,\n                children: \"提交\",\n              },\n            ],\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        自定义footerButtons\n      </Button>\n      <FormModalButton\n        api={{\n          loader: () => {\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve({\n                  name: \"Lucy\",\n                  desc: \"个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍\",\n                });\n              }, 1000);\n            });\n          },\n        }}\n        modalProps={({ data, close }) => {\n          return {\n            title: \"加载数据的form弹窗\",\n            formProps: {\n              data,\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                close();\n              },\n            },\n            children: (\n              <FormInfo\n                title=\"基本信息\"\n                column={1}\n                list={[\n                  <Input name=\"name\" label=\"姓名\" rule=\"REQ\" />,\n                  <TextArea name=\"desc\" label=\"介绍\" rule=\"REQ\" />,\n                ]}\n              />\n            ),\n          };\n        }}\n      >\n        加载form数据按钮\n      </FormModalButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_27\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_28\n}]\n},{\n    title: `Modal Step Form弹窗`,\n    description: `展示一个step form弹窗`,\n    code: `const { Space, Button } = antd;\nconst { PureGlobal } = global;\nconst {\n  default: FormInfo,\n  List,\n  Input,\n  TextArea,\n  FormModal,\n  FormStepModal,\n  useFormModal,\n  useFormStepModal,\n  CancelButton,\n  FormApiButton,\n  SubmitButton,\n  FormModalButton,\n} = _FormInfo;\nconst { useState } = React;\nconst { default: Fetch } = fetch;\n\nconst BaseExample = () => {\n  const [open, setOpen] = useState(false);\n  const formModal = useFormStepModal();\n  return (\n    <Space wrap>\n      <FormStepModal\n        open={open}\n        title=\"表单弹窗\"\n        onClose={() => {\n          setOpen(false);\n        }}\n        formProps={{\n          data: {\n            field1: \"field1field1field1field1\",\n          },\n          onSubmit: async (data) => {\n            console.log(data);\n            await new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n              }, 1000);\n            });\n            setOpen(false);\n          },\n        }}\n        items={[\n          {\n            name: \"basic\",\n            title: \"基本信息\",\n            children: (\n              <FormInfo\n                title=\"基本信息\"\n                list={[\n                  <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                  <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                  <TextArea name=\"field3\" label=\"字段3\" />,\n                ]}\n              />\n            ),\n          },\n          {\n            name: \"list\",\n            title: \"列表信息\",\n            children: (\n              <List\n                title=\"列表\"\n                name=\"list\"\n                maxLength={3}\n                list={[\n                  <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                  <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                  <TextArea name=\"field3\" label=\"字段3\" />,\n                ]}\n              />\n            ),\n          },\n        ]}\n      ></FormStepModal>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        组件调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            formProps: ({ data }) => {\n              return {\n                data: data,\n                onSubmit: async (data) => {\n                  console.log(data);\n                  await new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                  api.close();\n                },\n              };\n            },\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve({\n                        field1: \"我接口获取的数据\",\n                      });\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks加载form数据调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formModal({\n            title: \"表单弹窗\",\n            footerButtons: [\n              { ButtonComponent: CancelButton, children: \"取消\" },\n              {\n                ButtonComponent: FormApiButton,\n                autoClose: false,\n                onClick: (context) => {\n                  console.log(context);\n                },\n                children: \"FormApiButton\",\n              },\n              {\n                ButtonComponent: SubmitButton,\n                autoClose: false,\n                children: \"提交\",\n              },\n            ],\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        自定义footerButtons\n      </Button>\n      <FormModalButton\n        api={{\n          loader: () => {\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve({\n                  name: \"Lucy\",\n                  desc: \"个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍\",\n                });\n              }, 1000);\n            });\n          },\n        }}\n        modalProps={({ data, close }) => {\n          return {\n            title: \"加载数据的form弹窗\",\n            formProps: {\n              data,\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                close();\n              },\n            },\n            children: (\n              <FormInfo\n                title=\"基本信息\"\n                column={1}\n                list={[\n                  <Input name=\"name\" label=\"姓名\" rule=\"REQ\" />,\n                  <TextArea name=\"desc\" label=\"介绍\" rule=\"REQ\" />,\n                ]}\n              />\n            ),\n          };\n        }}\n      >\n        加载form数据按钮\n      </FormModalButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_27\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_28\n}]\n},{\n    title: `Drawer Form 抽屉弹窗`,\n    description: `展示一个form抽屉弹窗`,\n    code: `const { Space, Button } = antd;\nconst { PureGlobal } = global;\nconst {\n  default: FormInfo,\n  List,\n  Input,\n  TextArea,\n  FormDrawer,\n  useFormDrawer,\n  CancelButton,\n  FormApiButton,\n  SubmitButton,\n  FormDrawerButton,\n} = _FormInfo;\nconst { useState } = React;\nconst { default: Fetch } = fetch;\n\nconst BaseExample = () => {\n  const [open, setOpen] = useState(false);\n  const formDrawer = useFormDrawer();\n  return (\n    <Space wrap>\n      <FormDrawer\n        open={open}\n        title=\"表单弹窗\"\n        onClose={() => {\n          setOpen(false);\n        }}\n        formProps={{\n          data: {\n            field1: \"field1field1field1field1\",\n          },\n          onSubmit: async (data) => {\n            console.log(data);\n            await new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n              }, 1000);\n            });\n            setOpen(false);\n          },\n        }}\n      >\n        <FormInfo\n          title=\"基本信息\"\n          list={[\n            <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n            <TextArea name=\"field3\" label=\"字段3\" />,\n          ]}\n        />\n        <List\n          title=\"列表\"\n          name=\"list\"\n          maxLength={3}\n          list={[\n            <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n            <TextArea name=\"field3\" label=\"字段3\" />,\n          ]}\n        />\n      </FormDrawer>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        组件调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formDrawer({\n            title: \"表单弹窗\",\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formDrawer({\n            title: \"表单弹窗\",\n            formProps: ({ data }) => {\n              return {\n                data: data,\n                onSubmit: async (data) => {\n                  console.log(data);\n                  await new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                  api.close();\n                },\n              };\n            },\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve({\n                        field1: \"我接口获取的数据\",\n                      });\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        hooks加载form数据调用\n      </Button>\n      <Button\n        onClick={() => {\n          const api = formDrawer({\n            title: \"表单弹窗\",\n            footerButtons: [\n              { ButtonComponent: CancelButton, children: \"取消\" },\n              {\n                ButtonComponent: FormApiButton,\n                autoClose: false,\n                onClick: (context) => {\n                  console.log(context);\n                },\n                children: \"FormApiButton\",\n              },\n              {\n                ButtonComponent: SubmitButton,\n                autoClose: false,\n                children: \"提交\",\n              },\n            ],\n            formProps: {\n              data: {\n                field1: \"field1field1field1field1\",\n              },\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                api.close();\n              },\n            },\n            children: (\n              <div>\n                <FormInfo\n                  title=\"基本信息\"\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n                <List\n                  title=\"列表\"\n                  name=\"list\"\n                  maxLength={3}\n                  list={[\n                    <Input name=\"field1\" label=\"字段1\" rule=\"REQ LEN-0-10\" />,\n                    <Input name=\"field2\" label=\"字段2\" rule=\"REQ LEN-0-10\" />,\n                    <TextArea name=\"field3\" label=\"字段3\" />,\n                  ]}\n                />\n              </div>\n            ),\n          });\n        }}\n      >\n        自定义footerButtons\n      </Button>\n      <FormDrawerButton\n        api={{\n          loader: () => {\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve({\n                  name: \"Lucy\",\n                  desc: \"个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍个人介绍\",\n                });\n              }, 1000);\n            });\n          },\n        }}\n        modalProps={({ data, close }) => {\n          return {\n            title: \"加载数据的form弹窗\",\n            formProps: {\n              data,\n              onSubmit: async (data) => {\n                console.log(data);\n                await new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve();\n                  }, 1000);\n                });\n                close();\n              },\n            },\n            children: (\n              <FormInfo\n                title=\"基本信息\"\n                column={1}\n                list={[\n                  <Input name=\"name\" label=\"姓名\" rule=\"REQ\" />,\n                  <TextArea name=\"desc\" label=\"介绍\" rule=\"REQ\" />,\n                ]}\n              />\n            ),\n          };\n        }}\n      >\n        加载form数据按钮\n      </FormDrawerButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_27\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_28\n}]\n},{\n    title: `选择控件的数据展示框`,\n    description: `展示了一个选择控件的数据展示框，它是其他选择器的子组件一般不独立使用，开放该组件是为了方面自定义新的选择控件，但是请谨慎使用`,\n    code: `const { SelectInnerInput } = _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button, List } = antd;\nconst { default: Content } = _Content;\nconst { useState } = React;\n\nconst ControlledSelectInnerInput = (props) => {\n  const [value, setValue] = useState([1, 2, 3]);\n\n  return <SelectInnerInput {...props} value={value} onChange={setValue} />;\n};\n\nconst useSelectInnerContext = SelectInnerInput.useContext;\n\nconst ResetMapping = () => {\n  const { mapping, appendMapping } = useSelectInnerContext();\n  return (\n    <span>\n      <Button\n        onClick={() => {\n          appendMapping([\n            { label: \"修改的项\", value: 1 },\n            { label: \"新增的项\", value: 4 },\n          ]);\n        }}\n      >\n        点击设置mapping值\n      </Button>\n      <List\n        dataSource={mapping.values()}\n        renderItem={(item) => <div>{item.label}</div>}\n      />\n    </span>\n  );\n};\n\nconst BaseExample = () => {\n  const children = \"选区内容\";\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"非受控状态\",\n          content: (\n            <SelectInnerInput\n              defaultValue={[1, 2, 3]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"受控状态\",\n          content: (\n            <ControlledSelectInnerInput>{children}</ControlledSelectInnerInput>\n          ),\n        },\n        {\n          label: \"mapping值显示\",\n          content: (\n            <SelectInnerInput\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        { label: \"第一项\", value: 1 },\n                        { label: \"第二项\", value: 2 },\n                        {\n                          label: \"第三项\",\n                          value: 3,\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"单项值显示\",\n          content: (\n            <SelectInnerInput\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        { label: \"第一项\", value: 1 },\n                        { label: \"第二项\", value: 2 },\n                        {\n                          label: \"第三项\",\n                          value: 3,\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"多项超出情况\",\n          content: (\n            <SelectInnerInput\n              defaultValue={[1, 2, 3, 4, 5, 6, 7, 8, 9]}\n              api={{\n                loader: () => {\n                  return [\n                    {\n                      label:\n                        \"第一项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 1,\n                    },\n                    {\n                      label:\n                        \"第二项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 2,\n                    },\n                    {\n                      label: \"第三项\",\n                      value: 3,\n                    },\n                    {\n                      label:\n                        \"第四项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 4,\n                    },\n                    {\n                      label:\n                        \"第五项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 5,\n                    },\n                    {\n                      label:\n                        \"第六项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 6,\n                    },\n                    {\n                      label:\n                        \"第七项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 7,\n                    },\n                    { label: \"第八项\", value: 8 },\n                    { label: \"第九项\", value: 9 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"单项超出情况\",\n          content: (\n            <SelectInnerInput\n              defaultValue={1}\n              single\n              api={{\n                loader: () => {\n                  return [\n                    {\n                      label:\n                        \"第一项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 1,\n                    },\n                    {\n                      label:\n                        \"第二项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 2,\n                    },\n                    {\n                      label: \"第三项\",\n                      value: 3,\n                    },\n                    {\n                      label:\n                        \"第四项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 4,\n                    },\n                    {\n                      label:\n                        \"第五项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 5,\n                    },\n                    {\n                      label:\n                        \"第六项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 6,\n                    },\n                    {\n                      label:\n                        \"第七项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 7,\n                    },\n                    { label: \"第八项\", value: 8 },\n                    { label: \"第九项\", value: 9 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"popup多项超出情况\",\n          content: (\n            <SelectInnerInput\n              isPopup\n              defaultValue={[1, 2, 3, 4, 5, 6, 7, 8]}\n              api={{\n                loader: () => {\n                  return [\n                    {\n                      label:\n                        \"第一项超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 1,\n                    },\n                    {\n                      label:\n                        \"第二项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 2,\n                    },\n                    {\n                      label: \"第三项\",\n                      value: 3,\n                    },\n                    {\n                      label:\n                        \"第四项超级长超级长超级长超级长超级长超级长超级长超级长\",\n                      value: 4,\n                    },\n                    {\n                      label: \"第五项\",\n                      value: 5,\n                    },\n                    {\n                      label: \"第六项\",\n                      value: 6,\n                    },\n                    { label: \"第七项\", value: 7 },\n                    { label: \"第八项\", value: 8 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"popup选区\",\n          content: (\n            <SelectInnerInput\n              single\n              isPopup\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        { label: \"第一项\", value: 1 },\n                        { label: \"第二项\", value: 2 },\n                        {\n                          label: \"第三项\",\n                          value: 3,\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"更新mapping\",\n          content: (\n            <SelectInnerInput\n              single\n              isPopup\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        { label: \"第一项\", value: 1 },\n                        { label: \"第二项\", value: 2 },\n                        {\n                          label: \"第三项\",\n                          value: 3,\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n            >\n              <ResetMapping />\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"隐藏已选标签\",\n          content: (\n            <SelectInnerInput\n              showSelectedTag={false}\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"popup隐藏已选标签\",\n          content: (\n            <SelectInnerInput\n              isPopup\n              showSelectedTag={false}\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"extra\",\n          content: (\n            <SelectInnerInput\n              extra={<Button>添加</Button>}\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"popup的extra\",\n          content: (\n            <SelectInnerInput\n              isPopup\n              extra={({ close }) => <Button onClick={close}>添加</Button>}\n              defaultValue={[1, 2, 3]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n        {\n          label: \"valueType为all\",\n          content: (\n            <SelectInnerInput\n              isPopup\n              valueType=\"all\"\n              defaultValue={[\n                { label: \"额外的一项\", value: 100 },\n                { label: \"额外的二项\", value: 200 },\n              ]}\n              api={{\n                loader: () => {\n                  return [\n                    { label: \"第一项\", value: 1 },\n                    { label: \"第二项\", value: 2 },\n                    { label: \"第三项\", value: 3 },\n                  ];\n                },\n              }}\n            >\n              {children}\n            </SelectInnerInput>\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_29\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_27\n}]\n},{\n    title: `高级选择组件`,\n    description: `展示了高级选择组件的List形态`,\n    code: `const { AdvancedSelect: _AdvancedSelect, SelectInnerInput } = _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button } = antd;\nconst { default: Content } = _Content;\nconst { range, uniqueId } = lodash;\n\nconst AdvancedSelect = _AdvancedSelect.Field;\n\nconst useSelectInnerContext = SelectInnerInput.useContext;\n\nconst AddExtraButton = () => {\n  const { appendItems, fetchApi } = useSelectInnerContext();\n\n  return (\n    <Button\n      type=\"link\"\n      onClick={() => {\n        const id = uniqueId(\"new_item_\");\n        appendItems({\n          pageData: [\n            {\n              label: \"添加的新项目_\" + id,\n              value: id,\n            },\n            ...fetchApi.data.pageData,\n          ],\n          totalCount: fetchApi.data.totalCount,\n        });\n      }}\n    >\n      添加\n    </Button>\n  );\n};\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"多选\",\n          content: (\n            <AdvancedSelect\n              defaultValue={[1]}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1 },\n                      { label: \"第二项\", value: 2, disabled: true },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选\",\n          content: (\n            <AdvancedSelect\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: range(0, 100).map((key) => {\n                      return {\n                        label: \\`第\\${key + 1}项\\`,\n                        value: key + 1,\n                        disabled: key === 2,\n                      };\n                    }),\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"多选modal\",\n          content: (\n            <AdvancedSelect\n              defaultValue={[1]}\n              isPopup={false}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1 },\n                      { label: \"第二项\", value: 2 },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选modal\",\n          content: (\n            <AdvancedSelect\n              single\n              defaultValue={1}\n              isPopup={false}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1 },\n                      { label: \"第二项\", value: 2 },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"描述信息\",\n          content: (\n            <AdvancedSelect\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      { label: \"第一项\", value: 1, description: \"描述信息\" },\n                      {\n                        label: \"第二项\",\n                        value: 2,\n                        description: \"描述信息\",\n                      },\n                      {\n                        label: \"第三项\",\n                        value: 3,\n                        description: \"描述信息\",\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"分页加载数据\",\n          content: (\n            <AdvancedSelect\n              single\n              defaultValue={90}\n              getSearchProps={(text) => {\n                return {\n                  data: { keyword: text },\n                };\n              }}\n              displayItems={[{ label: \"第九十项\", value: 90 }]}\n              extra={<AddExtraButton />}\n              api={{\n                loader: ({ data }) => {\n                  const params = Object.assign(\n                    {\n                      perPage: 20,\n                      currentPage: 1,\n                    },\n                    data\n                  );\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      const start = (params.currentPage - 1) * params.perPage;\n                      resolve({\n                        totalCount: 100,\n                        pageData: range(start, start + 20)\n                          .map((key) => {\n                            return {\n                              label: \\`第\\${key + 1}项\\`,\n                              value: key + 1,\n                            };\n                          })\n                          .filter(({ label }) => {\n                            return params.keyword\n                              ? label.indexOf(params.keyword) > -1\n                              : true;\n                          }),\n                      });\n                    }, 1000);\n                  });\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal分页加载数据\",\n          content: (\n            <AdvancedSelect\n              defaultValue={[90]}\n              isPopup={false}\n              extra={<AddExtraButton />}\n              getSearchProps={(text) => {\n                return {\n                  data: { keyword: text },\n                };\n              }}\n              displayItems={[{ label: \"第九十项\", value: 90 }]}\n              api={{\n                data: {\n                  perPage: 10,\n                },\n                loader: ({ data }) => {\n                  const params = Object.assign(\n                    {\n                      perPage: 20,\n                      currentPage: 1,\n                    },\n                    data\n                  );\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      const start = (params.currentPage - 1) * params.perPage;\n                      resolve({\n                        totalCount: 100,\n                        pageData: range(start, start + params.perPage)\n                          .map((key) => {\n                            return {\n                              label: \\`第\\${key + 1}项\\`,\n                              value: key + 1,\n                            };\n                          })\n                          .filter(({ label }) => {\n                            return params.keyword\n                              ? label.indexOf(params.keyword) > -1\n                              : true;\n                          }),\n                      });\n                    }, 1000);\n                  });\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_29\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_27\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_26\n}]\n},{\n    title: `用户选择组件`,\n    description: `在List的交互逻辑基础上扩展出的不同列表样式`,\n    code: `const { AdvancedSelect: _AdvancedSelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button } = antd;\nconst { default: Content } = _Content;\nconst { range, uniqueId } = lodash;\n\nconst UserSelect = _AdvancedSelect.User.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"多选\",\n          content: (\n            <UserSelect\n              defaultValue={[1]}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        value: 1,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户二\",\n                        value: 2,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户三\",\n                        value: 3,\n                        description: \"我是用户描述\",\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选\",\n          content: (\n            <UserSelect\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: range(0, 30).map((key) => {\n                      return {\n                        label: \\`用户\\${key + 1}\\`,\n                        description: \"我是用户描述\",\n                        value: key + 1,\n                      };\n                    }),\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"多选modal\",\n          content: (\n            <UserSelect\n              defaultValue={[1]}\n              isPopup={false}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        value: 1,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户二\",\n                        value: 2,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户三\",\n                        value: 3,\n                        description: \"我是用户描述\",\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选modal\",\n          content: (\n            <UserSelect\n              single\n              defaultValue={1}\n              isPopup={false}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        value: 1,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户二\",\n                        value: 2,\n                        description: \"我是用户描述\",\n                      },\n                      {\n                        label: \"用户三\",\n                        value: 3,\n                        description: \"我是用户描述\",\n                      },\n                    ],\n                  };\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_29\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_27\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_26\n}]\n},{\n    title: `表格选择组件`,\n    description: `在List的交互逻辑基础上扩展出的不同列表样式`,\n    code: `const { AdvancedSelect: _AdvancedSelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button } = antd;\nconst { default: Content } = _Content;\nconst { range, uniqueId } = lodash;\n\nconst TableSelect = _AdvancedSelect.Table.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"多选\",\n          content: (\n            <TableSelect\n              defaultValue={[1]}\n              getSearchProps={(text) => {\n                return {\n                  data: { keyword: text },\n                };\n              }}\n              api={{\n                data: {\n                  perPage: 10,\n                },\n                loader: ({ data }) => {\n                  const params = Object.assign(\n                    {\n                      perPage: 20,\n                      currentPage: 1,\n                    },\n                    data\n                  );\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      const start = (params.currentPage - 1) * params.perPage;\n                      resolve({\n                        totalCount: 100,\n                        pageData: range(start, start + params.perPage)\n                          .map((key) => {\n                            return {\n                              label: \\`员工\\${key + 1}\\`,\n                              company: \"北京科技有限公司\",\n                              department: \"技术部\",\n                              value: key + 1,\n                            };\n                          })\n                          .filter(({ label }) => {\n                            return params.keyword\n                              ? label.indexOf(params.keyword) > -1\n                              : true;\n                          }),\n                      });\n                    }, 1000);\n                  });\n                },\n              }}\n              columns={[\n                {\n                  title: \"姓名\",\n                  dataIndex: \"label\",\n                },\n                {\n                  title: \"所属公司\",\n                  dataIndex: \"company\",\n                },\n                {\n                  title: \"所属部门\",\n                  dataIndex: \"department\",\n                },\n              ]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选\",\n          content: (\n            <TableSelect\n              single\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        company: \"北京科技有限公司\",\n                        department: \"财务部\",\n                        value: 1,\n                      },\n                      {\n                        label: \"用户二\",\n                        company: \"北京科技有限公司\",\n                        department: \"技术部\",\n                        value: 2,\n                      },\n                      {\n                        label: \"用户三\",\n                        company: \"北京科技有限公司\",\n                        department: \"商务部\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              columns={[\n                {\n                  title: \"姓名\",\n                  dataIndex: \"label\",\n                },\n                {\n                  title: \"所属公司\",\n                  dataIndex: \"company\",\n                },\n                {\n                  title: \"所属部门\",\n                  dataIndex: \"department\",\n                },\n              ]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"多选modal\",\n          content: (\n            <TableSelect\n              defaultValue={[1]}\n              isPopup={false}\n              getSearchProps={(text) => {\n                return {\n                  data: { keyword: text },\n                };\n              }}\n              api={{\n                data: {\n                  perPage: 10,\n                },\n                loader: ({ data }) => {\n                  const params = Object.assign(\n                    {\n                      perPage: 20,\n                      currentPage: 1,\n                    },\n                    data\n                  );\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      const start = (params.currentPage - 1) * params.perPage;\n                      resolve({\n                        totalCount: 100,\n                        pageData: range(start, start + params.perPage)\n                          .map((key) => {\n                            return {\n                              label: \\`员工\\${key + 1}\\`,\n                              company: \"北京科技有限公司\",\n                              department: \"技术部\",\n                              value: key + 1,\n                            };\n                          })\n                          .filter(({ label }) => {\n                            return params.keyword\n                              ? label.indexOf(params.keyword) > -1\n                              : true;\n                          }),\n                      });\n                    }, 1000);\n                  });\n                },\n              }}\n              columns={[\n                {\n                  title: \"姓名\",\n                  dataIndex: \"label\",\n                },\n                {\n                  title: \"所属公司\",\n                  dataIndex: \"company\",\n                },\n                {\n                  title: \"所属部门\",\n                  dataIndex: \"department\",\n                },\n              ]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选modal\",\n          content: (\n            <TableSelect\n              single\n              isPopup={false}\n              defaultValue={1}\n              api={{\n                loader: () => {\n                  return {\n                    pageData: [\n                      {\n                        label: \"用户一\",\n                        company: \"北京科技有限公司\",\n                        department: \"财务部\",\n                        value: 1,\n                      },\n                      {\n                        label: \"用户二\",\n                        company: \"北京科技有限公司\",\n                        department: \"技术部\",\n                        value: 2,\n                      },\n                      {\n                        label: \"用户三\",\n                        company: \"北京科技有限公司\",\n                        department: \"商务部\",\n                        value: 3,\n                      },\n                    ],\n                  };\n                },\n              }}\n              columns={[\n                {\n                  title: \"姓名\",\n                  dataIndex: \"label\",\n                },\n                {\n                  title: \"所属公司\",\n                  dataIndex: \"company\",\n                },\n                {\n                  title: \"所属部门\",\n                  dataIndex: \"department\",\n                },\n              ]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_29\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_27\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_26\n}]\n},{\n    title: `地址选择组件`,\n    description: `展示地址选择组件`,\n    code: `const { AddressSelect: _AddressSelect, AddressInput: _AddressInput } =\n  _FormInfo;\nconst { PureGlobal } = global;\nconst { Space, Button } = antd;\nconst { default: Content } = _Content;\nconst { range, uniqueId } = lodash;\n\nconst AddressSelect = _AddressSelect.Field;\nconst AddressEnum = _AddressSelect.AddressEnum;\nconst AddressInput = _AddressInput.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"多选\",\n          content: (\n            <AddressSelect\n              maxLength={3}\n              defaultValue={[\"110\"]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"单选\",\n          content: (\n            <AddressSelect\n              single\n              defaultValue={\"110\"}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal多选\",\n          content: (\n            <AddressSelect\n              maxLength={3}\n              isPopup={false}\n              defaultValue={[\"110\"]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal单选\",\n          content: (\n            <AddressSelect\n              isPopup={false}\n              single\n              defaultValue={\"110\"}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"valueType为all\",\n          content: (\n            <AddressSelect\n              valueType=\"all\"\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"地址显示\",\n          content: <AddressEnum name=\"270070\" />,\n        },\n        {\n          label: \"显示父级\",\n          content: <AddressEnum name=\"270070\" displayParent />,\n        },\n        {\n          label: \"地址输入\",\n          content: (\n            <AddressInput\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal preset={{ locale: \"en-US\" }}>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_29\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_27\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_26\n}]\n},{\n    title: `级联选择组件`,\n    description: `展示级联选择组件`,\n    code: `const { Cascader: _Cascader } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst { range, get } = lodash;\n\nconst Cascader = _Cascader.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"一次性获取数据\",\n          content: (\n            <Cascader\n              onlyAllowLastLevel\n              single\n              api={{\n                loader: async () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        {\n                          id: \"client\",\n                          value: \"client\",\n                          type: \"module\",\n                          name: \"客户\",\n                          label: \"客户\",\n                          children: [\n                            {\n                              id: \"client-list\",\n                              value: \"client-list\",\n                              type: \"feature\",\n                              name: \"客户列表页\",\n                              label: \"客户列表页\",\n                            },\n                            {\n                              id: \"client-detail\",\n                              value: \"client-detail\",\n                              type: \"module\",\n                              name: \"客户详情页\",\n                              label: \"客户详情页\",\n                              children: [\n                                {\n                                  id: \"contract\",\n                                  value: \"contract\",\n                                  type: \"module\",\n                                  name: \"合同信息\",\n                                  label: \"合同信息\",\n                                },\n                              ],\n                            },\n                            {\n                              id: \"client-form\",\n                              value: \"client-form\",\n                              type: \"feature\",\n                              name: \"客户表单\",\n                              label: \"客户表单\",\n                              children: [\n                                {\n                                  id: \"taxpayerIdNumber\",\n                                  value: \"taxpayerIdNumber\",\n                                  type: \"feature\",\n                                  name: \"税号\",\n                                  label: \"税号\",\n                                },\n                              ],\n                            },\n                          ],\n                        },\n                        {\n                          id: \"position\",\n                          value: \"position\",\n                          type: \"module\",\n                          name: \"职位\",\n                          label: \"职位\",\n                          children: [\n                            {\n                              id: \"position-list\",\n                              value: \"position-list\",\n                              type: \"feature\",\n                              name: \"职位列表页\",\n                              label: \"职位列表页\",\n                            },\n                            {\n                              id: \"position-detail\",\n                              value: \"position-detail\",\n                              type: \"module\",\n                              name: \"职位详情页\",\n                              label: \"职位详情页\",\n                            },\n                            {\n                              id: \"position-form\",\n                              value: \"position-form\",\n                              type: \"feature\",\n                              name: \"职位表单\",\n                              label: \"职位表单\",\n                              children: [\n                                {\n                                  id: \"industry\",\n                                  value: \"industry\",\n                                  type: \"feature\",\n                                  name: \"行业\",\n                                  label: \"行业\",\n                                },\n                              ],\n                            },\n                          ],\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                },\n              }}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"分层加载数据\",\n          content: (\n            <Cascader\n              openLoadData\n              onSearch={async (searchText) => {\n                return range(0, 20).map((key) => {\n                  const parentId = \"2\";\n                  return {\n                    id: \\`\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${key + 1}\\`,\n                    label: \\`节点-\\${searchText}-\\${\n                      parentId ? \\`\\${parentId}-\\` : \"\"\n                    }\\${key + 1}\\`,\n                    parentId,\n                  };\n                });\n              }}\n              api={{\n                loader: async ({ data }) => {\n                  const parentId = get(data, \"id\", \"\");\n                  const level = parentId.split(\"-\").length;\n                  console.log(\"loadData\", parentId, level);\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve(\n                        range(0, 20).map((key) => {\n                          return Object.assign(\n                            {\n                              id: \\`\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${key + 1}\\`,\n                              label: \\`节点-\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${\n                                key + 1\n                              }\\`,\n                              parentId,\n                            },\n                            level >= 3 ? { children: null } : {}\n                          );\n                        })\n                      );\n                    }, 1000);\n                  });\n                },\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal分层加载数据\",\n          content: (\n            <Cascader\n              openLoadData\n              isPopup={false}\n              api={{\n                loader: async ({ data }) => {\n                  const parentId = get(data, \"id\", \"\");\n                  const level = parentId.split(\"-\").length;\n                  console.log(\"loadData\", parentId, level);\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve(\n                        range(0, 20).map((key) => {\n                          return Object.assign(\n                            {\n                              id: \\`\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${key + 1}\\`,\n                              label: \\`节点-\\${parentId ? \\`\\${parentId}-\\` : \"\"}\\${\n                                key + 1\n                              }\\`,\n                              parentId,\n                            },\n                            level >= 3 ? { children: null } : {}\n                          );\n                        })\n                      );\n                    }, 1000);\n                  });\n                },\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_29\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_26\n}]\n},{\n    title: `职能选择`,\n    description: `展示行业职能选择`,\n    code: `const { FunctionSelect: _FunctionSelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst { range, get } = lodash;\n\nconst FunctionSelect = _FunctionSelect.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"职能选择\",\n          content: (\n            <FunctionSelect\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal职能选择\",\n          content: (\n            <FunctionSelect\n              isPopup={false}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"职能选择无搜索\",\n          content: (\n            <FunctionSelect\n              search={null}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"职能枚举显示\",\n          content: <FunctionSelect.Enum name=\"001\" />,\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal preset={{ locale: \"en-US\" }}>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_29\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_26\n}]\n},{\n    title: `行业选择`,\n    description: `展示行业选择组件`,\n    code: `const { IndustrySelect: _IndustrySelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst { range, get } = lodash;\n\nconst IndustrySelect = _IndustrySelect.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"行业选择\",\n          content: (\n            <IndustrySelect\n              defaultValue={[\"001\"]}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"modal行业选择\",\n          content: (\n            <IndustrySelect\n              isPopup={false}\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n        {\n          label: \"职能枚举显示\",\n          content: <IndustrySelect.Enum name=\"004\" />,\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal preset={{ locale: \"en-US\" }}>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_29\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_26\n}]\n},{\n    title: `金额输入`,\n    description: `展示金额输入组件`,\n    code: `const { MoneyInput: _MoneyInput } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst MoneyInput = _MoneyInput.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"金额输入\",\n          content: <MoneyInput />,\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_29\n}]\n},{\n    title: `电话号码输入`,\n    description: `展示电话号码输入组件`,\n    code: `const { PhoneNumber: _PhoneNumber } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst PhoneNumber = _PhoneNumber.Field;\n\nconst BaseExample = () => {\n  return (\n    <Content\n      col={2}\n      list={[\n        {\n          label: \"电话输入\",\n          content: (\n            <PhoneNumber\n              onChange={(value) => {\n                console.log(value);\n              }}\n            />\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_29\n}]\n},{\n    title: `薪资组件`,\n    description: `展示填写薪资范围输入组件`,\n    code: `const { SalaryInput, Form } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst SalaryInputField = SalaryInput.Field;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <Content\n        col={1}\n        list={[\n          {\n            label: \"薪资范围\",\n            content: (\n              <SalaryInputField\n                onChange={(value) => {\n                  console.log(value);\n                }}\n              />\n            ),\n          },\n        ]}\n      />\n      <Form\n        rules={{\n          SALARYRANGE: ({ min, max, type }) => {\n            if (type !== 1) {\n              if (!min || !max) {\n                return {\n                  result: false,\n                  errMsg: \\`\\${!min ? \"最低薪资\" : \"最高薪资\"}不能为空\\`,\n                };\n              }\n              if (min > max) {\n                return {\n                  result: false,\n                  errMsg: \"最高薪资应大于最低薪资\",\n                };\n              }\n            }\n            return {\n              result: true,\n              errMsg: \"\",\n            };\n          },\n        }}\n        data={{ salaryRange: { type: 5, month: 12 } }}\n      >\n        <SalaryInput\n          name=\"salaryRange\"\n          label=\"薪资范围\"\n          rule=\"REQ SALARYRANGE\"\n          remindUnit\n        />\n      </Form>\n    </div>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_29\n}]\n},{\n    title: `可编辑的表格表单`,\n    description: `可编辑的表格表单`,\n    code: `const { TableInput, Form, Input, SubmitButton } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <Form\n        data={{\n          tableInput: {\n            1: { otherCode: \"111\" },\n            2: { otherCode: \"222\" },\n          },\n        }}\n        onSubmit={(formData) => {\n          console.log(formData);\n        }}\n      >\n        <TableInput\n          controllerOpen={false}\n          name=\"tableInput\"\n          label=\"表格表单\"\n          columns={[\n            {\n              title: \"系统字段\",\n              dataIndex: \"systemCode\",\n              key: \"systemCode\",\n              width: 200,\n            },\n            {\n              title: \"对应的字段\",\n              dataIndex: \"otherCode\",\n              key: \"otherCode\",\n              editable: (text, record, index) => index !== 0,\n              field: {\n                type: Input,\n                rule: \"REQ\",\n                getValue: (e) => e.target.value,\n              },\n            },\n          ]}\n          api={{\n            loader: () => {\n              return {\n                pageData: [\n                  {\n                    id: 1,\n                    systemCode: \"流水号\",\n                  },\n                  {\n                    id: 2,\n                    systemCode: \"流水号2\",\n                  },\n                ],\n              };\n            },\n          }}\n          onChange={(value) => {\n            console.log(value);\n          }}\n        />\n        <SubmitButton>提交</SubmitButton>\n      </Form>\n    </div>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <div className=\"input\">\n      <BaseExample />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_29\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_27\n}]\n},{\n    title: `可扩展的AdvanceSelect`,\n    description: `AdvanceSelect支持左右布局`,\n    code: `const { AdvancedSelect } = _FormInfo;\nconst { PureGlobal } = global;\nconst { default: Icon } = icon;\nconst { useState } = React;\nconst { range, merge, get } = _lodash;\nconst dayjs = _dayjs;\nconst { Col } = _antd;\n\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax: () => {\n          return Promise.resolve({ data: { code: 0, data: [] } });\n        },\n      }}\n    >\n      <AdvancedSelect.Field\n        getSearchProps={(text) => {\n          return {\n            data: { keyword: text },\n          };\n        }}\n        displayItems={[{ label: \"第九十项\", value: 90 }]}\n        api={{\n          loader: ({ data }) => {\n            const params = Object.assign(\n              {\n                perPage: 20,\n                currentPage: 1,\n              },\n              data\n            );\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                const start = (params.currentPage - 1) * params.perPage;\n                resolve({\n                  totalCount: 100,\n                  pageData: range(start, start + 20)\n                    .map((key) => {\n                      return {\n                        label: \\`第\\${key + 1}项\\`,\n                        value: key + 1,\n                      };\n                    })\n                    .filter(({ label }) => {\n                      return params.keyword\n                        ? label.indexOf(params.keyword) > -1\n                        : true;\n                    }),\n                });\n              }, 1000);\n            });\n          },\n        }}\n        onChange={(value) => {\n          console.log(value);\n        }}\n        single\n        isPopup={false}\n        label={\"面试官\"}\n        placeholder={\"选择面试官\"}\n        modalSize={\"large\"}\n        wrapClassName={\"calendar-modal\"}\n        selectIcon={\n          <div>\n            <Icon type={\"icon-gouxuan\"} />\n          </div>\n        }\n        leftSpan={6}\n        right={() => (\n          <Col flex={1}>\n            <div>我是header</div>\n            <div>我是body</div>\n          </Col>\n        )}\n        leftBottom={() => <div>我是leftBottom</div>}\n      />\n    </PureGlobal>\n  );\n};\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_23\n},{\n    name: \"icon\",\n    packageName: \"@components/Icon\",\n    component: component_30\n},{\n    name: \"_antd\",\n    packageName: \"antd\",\n    component: component_27\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_24\n},{\n    name: \"_lodash\",\n    packageName: \"lodash\",\n    component: component_26\n},{\n    name: \"_dayjs\",\n    packageName: \"dayjs\",\n    component: component_31\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","// extracted by mini-css-extract-plugin\nexport default {\"select-date-box\":\"style_select-date-box__dAZdQ__EG6bw\",\"dot\":\"style_dot__-kCbf__EG6bw\",\"row\":\"style_row__jF4Ep__EG6bw\",\"time\":\"style_time__ZqsGI__EG6bw\",\"title\":\"style_title__UfoFQ__EG6bw\",\"selected\":\"style_selected__ZAhNv__EG6bw\",\"not-selected\":\"style_not-selected__1ZL01__EG6bw\",\"other\":\"style_other__wj9bp__EG6bw\",\"other-tooltip\":\"style_other-tooltip__8Wd+S__EG6bw\",\"calendar-tooltip\":\"style_calendar-tooltip__oW3wo__EG6bw\",\"tooltip-header\":\"style_tooltip-header__lvQv7__EG6bw\",\"tooltip-body\":\"style_tooltip-body__ZIZC6__EG6bw\",\"tooltip-box\":\"style_tooltip-box__ymQFN__EG6bw\"};","import style from \"./style.module.scss\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport scrollGridPlugin from \"@fullcalendar/scrollgrid\";\nimport Tooltip from \"@components/Tooltip\";\nimport { Divider } from \"antd\";\nimport classnames from \"classnames\";\nimport get from \"lodash/get\";\nimport orderBy from \"lodash/orderBy\";\nimport groupBy from \"lodash/groupBy\";\nimport dayjs from \"dayjs\";\nimport merge from \"lodash/merge\";\nimport flatten from \"lodash/flatten\";\n\nconst Calendar = (props) => {\n  return <FullCalendar {...props} />;\n};\n\nconst showStrLength = 6;\n\nconst getByteLen = function (str) {\n  let len = 0;\n  for (let i = 0; i < str.length; i++) {\n    str.charCodeAt(i) < 256 ? (len += 1) : (len += 2);\n  }\n  return len;\n};\n\nconst ContentComponent = ({ main, title }) => {\n  const { disabled, date, candidateName, start, end, onClick } = main || {};\n  const _start = dayjs(start).format(\"HH:mm\");\n  const _end = dayjs(end).format(\"HH:mm\");\n  const _end_tooltip =\n    dayjs(start).format(\"YYYY-MM-DD\") === dayjs(end).format(\"YYYY-MM-DD\")\n      ? dayjs(end).format(\"HH:mm\")\n      : dayjs(end).format(\"YYYY-MM-DD HH:mm\");\n  const timeText = `${_start}-${_end}`;\n  const _timeTextTooltip = `${_start} - ${_end_tooltip}`;\n\n  const contentHtml = (\n    <div\n      className={style[\"row\"]}\n      onClick={() => {\n        if (disabled) return;\n        onClick && onClick(main);\n      }}\n    >\n      <span className={classnames(\"select-dot\", style[\"dot\"])}></span>\n      <span className={classnames(\"select-time\", style[\"time\"])}>\n        {timeText}\n      </span>\n      <span className={classnames(\"select-title\", style[\"title\"])}>\n        {getByteLen(title) > showStrLength\n          ? title.slice(0, showStrLength - 3) + \"...\"\n          : title}\n      </span>\n    </div>\n  );\n\n  return (\n    <div\n      className={classnames(\n        style[\"select-date-box\"],\n        disabled ? style[\"selected\"] : style[\"not-selected\"]\n      )}\n    >\n      {disabled ? (\n        <Tooltip\n          overlayClassName={style[\"calendar-tooltip\"]}\n          content={\n            <div className={style[\"tooltip\"]}>\n              <div className={style[\"tooltip-header\"]}>客户面试</div>\n              <Divider />\n              <div className={style[\"tooltip-body\"]}>\n                <div className={style[\"tooltip-box\"]}>\n                  <label>候选人：</label>\n                  <div>{candidateName}</div>\n                </div>\n                <div className={style[\"tooltip-box\"]}>\n                  <label>面试时间：</label>\n                  <div>\n                    {date} {_timeTextTooltip}\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n          placement={\"rightTop\"}\n        >\n          {contentHtml}\n        </Tooltip>\n      ) : (\n        <Tooltip\n          overlayClassName={style[\"calendar-tooltip\"]}\n          content={\n            <div className={style[\"tooltip\"]}>\n              <div className={style[\"tooltip-header\"]}>日程</div>\n              <Divider />\n              <div className={style[\"tooltip-body\"]}>\n                <div className={style[\"tooltip-box\"]}>\n                  <label>日程标题：</label>\n                  <div>{title || \"-\"}</div>\n                </div>\n                <div className={style[\"tooltip-box\"]}>\n                  <label>日程时间：</label>\n                  <div>\n                    {date} {_timeTextTooltip}\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n          placement={\"rightTop\"}\n        >\n          {contentHtml}\n        </Tooltip>\n      )}\n    </div>\n  );\n};\n\nconst renderEventContent = (eventInfo = {}) => {\n  const { event } = eventInfo || {};\n  const title = event._def.title || \"\";\n  const main = get(event, \"_def.extendedProps.main\") || {};\n  const { showOther } = main;\n  const { num, content } = showOther || {};\n\n  return (\n    <>\n      <ContentComponent title={title} main={main} />\n      {showOther && (\n        <div\n          className={style[\"other\"]}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <Tooltip\n            overlayClassName={style[\"calendar-tooltip\"]}\n            content={\n              <div className={style[\"other-tooltip\"]}>\n                {(content || []).map((item) => {\n                  return (\n                    <ContentComponent\n                      key={item.id}\n                      main={item.main}\n                      title={item.title}\n                    />\n                  );\n                })}\n              </div>\n            }\n            placement={\"rightTop\"}\n          >\n            <div>还有{num}项…</div>\n          </Tooltip>\n        </div>\n      )}\n    </>\n  );\n};\n\nCalendar.defaultProps = {\n  timezone: \"UTC\",\n  plugins: [dayGridPlugin, interactionPlugin, timeGridPlugin, scrollGridPlugin],\n  initialView: \"dayGridMonth\",\n  aspectRatio: 1.6,\n  weekends: true,\n  slotEventOverlap: false,\n  displayEventEnd: true,\n  editable: false,\n  firstDay: 1,\n  buttonText: {\n    today: \"今天\",\n    month: \"月\",\n  },\n  dayMinWidth: 100,\n  locale: \"zh-cn\",\n  headerToolbar: {\n    center: \"\",\n    left: \"prev title next\",\n    right: \"today\",\n  },\n  height: \"auto\",\n  handleWindowResize: false,\n  eventContent: renderEventContent,\n  dateClick: () => {},\n  eventClick: () => {},\n  initialDate: dayjs().format(\"YYYY-MM-DD\"),\n};\n\nexport const transformEvents = (events, onClickOtherItem) => {\n  if (events.length === 0) return [];\n\n  const arr = events.map((item, index) => ({\n    ...item,\n    title: Boolean(item?.bookable === 0) ? \"已预约\" : item.title,\n    main: {\n      id: index,\n      title: Boolean(item?.bookable === 0) ? \"已预约\" : item.title,\n      candidateName: item.title || \"-\",\n      disabled: Boolean(item?.bookable === 0),\n      date: dayjs(item.start).format(\"YYYY-MM-DD\"),\n      start: dayjs(item.start).format(\"YYYY-MM-DD HH:mm\"),\n      end: dayjs(item.end).format(\"YYYY-MM-DD HH:mm\"),\n    },\n  }));\n  const groupList = groupBy(arr, (item) => {\n    return dayjs(item.start).startOf(\"day\").format(\"YYYY-MM-DD\");\n  });\n\n  let newEvents = [];\n  Object.keys(groupList).forEach((key) => {\n    let _newEvents = [];\n    const orderTimeArr = orderBy(\n      groupList[key],\n      [\"start\", \"end\"],\n      [\"asc\", \"desc\"]\n    );\n\n    if (orderTimeArr.length > 4) {\n      _newEvents = orderTimeArr.slice(0, 3);\n      _newEvents[2] = merge({}, orderTimeArr[2], {\n        main: {\n          showOther: {\n            num: orderTimeArr.length - 3,\n            disabled: true,\n            content: orderTimeArr.slice(3, orderTimeArr.length).map((item) => ({\n              ...item,\n              main: {\n                ...item.main,\n                onClick: onClickOtherItem || (() => {}),\n              },\n            })),\n          },\n        },\n      });\n    } else {\n      _newEvents = orderTimeArr.slice(0, orderTimeArr.length);\n    }\n    newEvents.push(_newEvents);\n  });\n  console.log(\">>>>> newEvents\", flatten(newEvents));\n  return flatten(newEvents);\n};\n\nexport default Calendar;\n","import * as component_32 from '@components/FullCalendar';\nimport * as component_33 from 'antd';\nimport * as component_34 from '@kne/remote-loader';\nimport * as component_35 from 'lodash';\nimport * as component_36 from 'dayjs';\nconst readmeConfig = {\n    name: `FullCalendar`,\n    summary: `<p>日程组件</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `FullCalendar_850b7`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: FullCalendar, transformEvents } = _FullCalendar;\nconst { createWithRemoteLoader } = _remoteLoader;\nconst { useState } = React;\nconst { cloneDeep, merge, get } = _lodash;\nconst dayjs = _dayjs;\n\nconst defaultEvents = [\n  {\n    id: 1,\n    title: \"我已预约\",\n    start: \"2023-08-22 13:23\",\n    end: \"2023-08-23 14:23\",\n    bookable: 0,\n  },\n  {\n    id: 2,\n    title: \"zhangjian\",\n    bookable: 0,\n    start: \"2023-08-23 13:23\",\n    end: \"2023-08-23 16:23\",\n  },\n  {\n    id: 3,\n    title: \"sssssadsf\",\n    start: \"2023-08-23 12:23\",\n    end: \"2023-08-23 14:23\",\n  },\n  {\n    id: 4,\n    title: \"我已预约\",\n    start: \"2023-08-23 12:23\",\n    end: \"2023-08-23 14:23\",\n  },\n  {\n    id: 5,\n    title: \"我已预约\",\n    start: \"2023-08-22 12:23\",\n    end: \"2023-08-23 14:23\",\n  },\n];\n\nconst Content = ({ remoteModules }) => {\n  const [events, setEvents] = useState(defaultEvents);\n  const [_, useFormModal] = remoteModules;\n  const formModal = useFormModal();\n\n  const onSuccess = ({ start, end, id }) => {\n    const obj = {\n      title: \"已预约\",\n      start,\n      end,\n      id: id ? id : null,\n    };\n    setEvents((events) => {\n      const _events = cloneDeep(events);\n      const index = _events.findIndex((item) => item.id === id);\n\n      if (index === -1) {\n        _events.push(obj);\n      } else {\n        _events.splice(index, 1, obj);\n      }\n\n      return _events;\n    });\n  };\n\n  const deleteDate = (id) => {\n    setEvents((events) => {\n      const _events = cloneDeep(events);\n      const index = _events.findIndex((item) => item.id === id);\n\n      _events.splice(index, 1);\n\n      return _events;\n    });\n  };\n\n  return (\n    <FullCalendar\n      eventSources={[transformEvents(events)]}\n      // events={(eventInfo = {}, successCallback) => {\n      //   let newData = {};\n      //   if (eventInfo.start && eventInfo.end) {\n      //     newData = defaultEvents;\n      //   }\n      //\n      //   return successCallback(newData);\n      // }}\n      dateClick={(eventInfo) => {\n        formModal({\n          title: \"添加\",\n          children: <div>11111</div>,\n        });\n      }}\n      eventClick={(eventInfo) => {\n        const currentData = get(eventInfo, \"event._def.extendedProps.main\");\n        console.log(1111, currentData);\n\n        formModal({\n          title: \"编辑\",\n          children: <div>11111</div>,\n        });\n      }}\n    />\n  );\n};\n\nconst BaseExample = createWithRemoteLoader({\n  modules: [\n    \"components-core:Global@PureGlobal\",\n    \"components-core:FormInfo@useFormModal\",\n  ],\n})(({ remoteModules }) => {\n  const [PureGlobal] = remoteModules;\n\n  return (\n    <PureGlobal>\n      <Content remoteModules={remoteModules} />\n    </PureGlobal>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_FullCalendar\",\n    packageName: \"@components/FullCalendar\",\n    component: component_32\n},{\n    name: \"_antd\",\n    packageName: \"antd\",\n    component: component_33\n},{\n    name: \"_remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_34\n},{\n    name: \"_lodash\",\n    packageName: \"lodash\",\n    component: component_35\n},{\n    name: \"_dayjs\",\n    packageName: \"dayjs\",\n    component: component_36\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_37 from '@components/Global';\nimport * as component_38 from 'antd';\nimport * as component_39 from '@components/Icon';\nconst readmeConfig = {\n    name: `Global`,\n    summary: `<h3>何时使用</h3>\n<p>在使用components-core的任何组件的业务系统，需要将该组件放置于最外层，并且按照要求正确设置preset。</p>\n<p>以下是components-core组件系统中需要设置的preset值，及使用这些值的组件</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>类型</th>\n<th>使用组件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>permissions</td>\n<td>配置功能权限列表，Permissions根据该列表里面是否存在某权限名称判断用户是否具有该功能权限，来控制对应操作行为</td>\n<td>array</td>\n<td>Permissions</td>\n</tr>\n<tr>\n<td>ajax</td>\n<td>用于发送ajax请求的方法，一般情况下其应该是一个axios对象</td>\n<td>object</td>\n<td>Image</td>\n</tr>\n<tr>\n<td>apis</td>\n<td>用于和后端进行一些交互行为的接口集合</td>\n<td>object</td>\n<td>Image</td>\n</tr>\n<tr>\n<td>apis.oss</td>\n<td>用于通过一个ossId向后端oss服务获取一个可以访问到指定文件的url</td>\n<td>object</td>\n<td>Image</td>\n</tr>\n<tr>\n<td>apis.ossUpload</td>\n<td>用于向oss服务上传一个文件</td>\n<td>object</td>\n<td>FormInfo.Upload,FormInfo.Avatar</td>\n</tr>\n<tr>\n<td>features</td>\n<td>用于配置系统的特性参数</td>\n<td>object</td>\n<td>Features</td>\n</tr>\n<tr>\n<td>features.profile</td>\n<td>系统的特性列表参考组件Features</td>\n<td>object</td>\n<td>Features</td>\n</tr>\n<tr>\n<td>features.debug</td>\n<td>特性的调试模式，可以在控制台打印Features的id和状态</td>\n<td>boolean</td>\n<td>Features</td>\n</tr>\n<tr>\n<td>enums</td>\n<td>公共枚举值，详情参看Enum组件</td>\n<td>object</td>\n<td>Enum</td>\n</tr>\n<tr>\n<td>enums.helperGuide</td>\n<td>帮助文档枚举配置</td>\n<td>function</td>\n<td>HelperGuide</td>\n</tr>\n<tr>\n<td>formInfo</td>\n<td>表单配置</td>\n<td>object</td>\n<td>FormInfo.formModule</td>\n</tr>\n<tr>\n<td>formInfo.rules</td>\n<td>表单规则配置</td>\n<td>object</td>\n<td>FormInfo.formModule</td>\n</tr>\n</tbody>\n</table>\n<p>全局context管理设置及默认样式</p>\n<ul>\n<li>请将全局覆盖性的样式放在此组件中</li>\n<li>请将字体文件的引用放在此组件中</li>\n<li>请将antd的覆盖性样式放在此组件中</li>\n<li>该组件需要放置在应用根位置</li>\n</ul>\n<p>更新字体文件:</p>\n<ul>\n<li>将iconfont上下载的字体包解压后放在public文件夹下面</li>\n<li>更新src/common/params.js 中的变量 iconfontBase</li>\n<li>修改后构建该项目发布到对应环境</li>\n</ul>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>preset</td>\n<td>全局预设参数，可以通过usePreset获取，由业务系统设置</td>\n<td>object</td>\n<td>{}</td>\n</tr>\n</tbody>\n</table>\n<h3>PureGlobal</h3>\n<p>api同Global，但是少了页面错误捕获和className:container-body带来的默认最小宽度等样式设置，主要用在组件库的演示环境和弹窗中</p>\n<h3>usePreset</h3>\n<p>获取预设的preset，已经确定为系统需要使用的key值:permissions,apis,formOptions,modalOptions</p>\n<h3>useGlobalContext</h3>\n<p>获取和设置全局状态，该状态保存在Global组件一级，不会随着内部组件本身的销毁而销毁。\n主要给组件内部使用，业务应该避免使用该api设置新的global变量。业务如果有需要应当自行在顶级组件中设置context。</p>\n<h4>params:useGlobalContext(globalKey)</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>globalKey</td>\n<td>全局参数的key，当存在globalKey时，默认获取和设置都是global[key]，当不存在globalKey获取和设置的都是global，除非存在多个获取和设置global的key-value，否则不推荐直接使用不存在globalKey的情况</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>return:{global,setGlobal}</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>global</td>\n<td>当前的global值</td>\n<td>any</td>\n</tr>\n<tr>\n<td>setGlobal</td>\n<td>设置当前的global值</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Global_4cc66`,\n        style: `.Global_4cc66 .label {\n  font-weight: bold; }\n`,\n        list: [{\n    title: `基本示例`,\n    description: `展示了文字大小颜色行高的设置`,\n    code: `const { PureGlobal } = _Global;\nconst { Space, Divider } = antd;\nconst BaseExample = () => {\n    return (\n        <PureGlobal>\n            <Space direction=\"vertical\">\n                <div className=\"label\">文字大小:</div>\n                <div style={{ fontSize: 'var(--font-size-large)' }}>大号文字</div>\n                <div>默认大小文字</div>\n                <div style={{ fontSize: 'var(--font-size-small)' }}>小号文字</div>\n                <Divider />\n                <div className=\"label\">文字颜色:</div>\n                <div style={{ color: 'var(--font-color)' }}>默认颜色</div>\n                <div style={{ color: 'var(--font-color-grey)' }}>灰色</div>\n                <div style={{ color: 'var(--font-color-grey-1)' }}>灰色1</div>\n                <div style={{ color: 'var(--font-color-grey-2)' }}>灰色2</div>\n                <Divider />\n                <div className=\"label\">行高:</div>\n                <div style={{ lineHeight: 'var(--line-height-large)' }}>\n                    宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高宽松行高\n                </div>\n                <div>\n                    默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高默认行高\n                </div>\n                <div style={{ lineHeight: 'var(--line-height-small)' }}>\n                    紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高紧凑行高\n                </div>\n            </Space>\n        </PureGlobal>\n    );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_37\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_38\n}]\n},{\n    title: `警告提示`,\n    description: `展示了警告提示的覆盖样式`,\n    code: `const { PureGlobal } = _Global;\nconst { Alert, Space } = antd;\n\nconst BasicExample = () => {\n  return (\n      <PureGlobal>\n          <Space direction=\"vertical\">\n              <Alert message=\"提示提示提示提示提示提示提示提示提示\" type=\"success\" showIcon />\n              <Alert message=\"提示提示提示提示提示提示提示提示提示\" type=\"info\" showIcon />\n              <Alert message=\"提示提示提示提示提示提示提示提示提示\" type=\"warning\" showIcon />\n              <Alert message=\"提示提示提示提示提示提示提示提示提示\" type=\"error\" showIcon />\n\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"success\" showIcon />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"info\" showIcon />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"warning\" showIcon />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"error\" showIcon />\n\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"success\" showIcon closable />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"info\" showIcon closable />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"warning\" showIcon closable />\n              <Alert message=\"标题标题标题标题\" description=\"提示提示提示提示提示提示提示提示提示\" type=\"error\" showIcon closable />\n          </Space>\n      </PureGlobal>\n  );\n};\n\nrender(<BasicExample />);\n\n`,\n    scope: [{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_37\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_38\n}]\n},{\n    title: `按钮`,\n    description: `展示了按钮的覆盖样式`,\n    code: `const { PureGlobal } = _Global;\nconst { Button, Typography, Space } = antd;\nconst { default: Icon } = icon;\n\nconst BaseExample = () => {\n  return (\n    <PureGlobal>\n      <Space direction=\"vertical\">\n        <Space>\n          <Button size=\"large\">大按钮</Button>\n          <Button>默认按钮</Button>\n          <Button size=\"small\">小按钮</Button>\n        </Space>\n        <Space>\n          <Button type=\"primary\">按钮</Button>\n          <Button type=\"link\">按钮</Button>\n          <Button type=\"text\">按钮</Button>\n        </Space>\n        <Space>\n          <Button danger>危险按钮</Button>\n          <Button type=\"primary\" danger>\n            危险按钮\n          </Button>\n          <Button type=\"link\" danger>\n            危险按钮\n          </Button>\n          <Button type=\"text\" danger>\n            危险按钮\n          </Button>\n        </Space>\n        <Space>\n          <Button disabled>禁用按钮</Button>\n          <Button type=\"primary\" danger disabled>\n            禁用危险按钮\n          </Button>\n          <Button type=\"link\" disabled>\n            禁用Link按钮\n          </Button>\n          <Button type=\"text\" disabled>\n            禁用Text按钮\n          </Button>\n        </Space>\n        <Space>\n          <Button type=\"text\" icon={<Icon type=\"icon-tianjia\" />}>\n            图标按钮\n          </Button>\n          <Button type=\"text\">\n            图标按钮右\n            <Icon type=\"icon-arrow-thin-down\" />\n          </Button>\n        </Space>\n        <Space>\n          <Button type=\"primary\" icon={<Icon type=\"icon-tianjia\" />} />\n          <Button icon={<Icon type=\"icon-tianjia\" />} />\n          <Button danger icon={<Icon type=\"icon-tianjia\" />} />\n          <Button type=\"link\" icon={<Icon type=\"icon-tianjia\" />} />\n          <Button type=\"text\" icon={<Icon type=\"icon-tianjia\" />} />\n        </Space>\n        <Space>\n          <Button type=\"primary\" disabled icon={<Icon type=\"icon-tianjia\" />} />\n          <Button disabled icon={<Icon type=\"icon-tianjia\" />} />\n          <Button disabled danger icon={<Icon type=\"icon-tianjia\" />} />\n          <Button disabled type=\"link\" icon={<Icon type=\"icon-tianjia\" />} />\n          <Button disabled type=\"text\" icon={<Icon type=\"icon-tianjia\" />} />\n        </Space>\n        <Space>\n          <Typography.Link>Link文字</Typography.Link>\n          <Typography.Text className=\"ant-btn\">文字</Typography.Text>\n          <Typography.Link>\n            <Icon type=\"icon-tianjia\" />\n            Link文字\n          </Typography.Link>\n          <Typography.Text className=\"ant-btn\">\n            <Icon type=\"icon-tianjia\" />\n            文字\n          </Typography.Text>\n          <Typography.Link className=\"ant-btn-dangerous\">\n            Link文字\n          </Typography.Link>\n        </Space>\n        <Space>\n          <Button className=\"btn-no-padding\" type=\"link\" size=\"large\">\n            大按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\">\n            默认按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\" size=\"small\">\n            小按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"text\" size=\"large\">\n            大按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"text\">\n            默认按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"text\" size=\"small\">\n            小按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\" size=\"large\" danger>\n            大按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\" danger>\n            默认按钮\n          </Button>\n          <Button className=\"btn-no-padding\" type=\"link\" size=\"small\" danger>\n            小按钮\n          </Button>\n        </Space>\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_37\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_38\n},{\n    name: \"icon\",\n    packageName: \"@components/Icon\",\n    component: component_39\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_40 from '@components/HelperGuide';\nimport * as component_41 from '@components/Global';\nconst readmeConfig = {\n    name: `HelperGuide`,\n    summary: `<p>给用户提供帮助文档</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `HelperGuide_4e237`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: HelperGuide } = _HelperGuide;\nconst { PureGlobal } = Global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        enums: {\n          helperGuide: () => [\n            {\n              value: \"test\",\n              content:\n                \"哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈哈哈哈哈哈哈哈哈啊哈哈哈\",\n              url: \"/xxxx\",\n            },\n          ],\n        },\n      }}\n    >\n      <HelperGuide name=\"test\" />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_HelperGuide\",\n    packageName: \"@components/HelperGuide\",\n    component: component_40\n},{\n    name: \"Global\",\n    packageName: \"@components/Global\",\n    component: component_41\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","// extracted by mini-css-extract-plugin\nexport default {\"high-color\":\"style_high-color__-DN7m__EG6bw\"};","import { createContext, createElement, useContext, useMemo } from \"react\";\nimport style from \"./style.module.scss\";\n\nconst context = createContext({});\nconst { Provider } = context;\n\nconst escapeSpecialCharacter = (str) => {\n  const pattern =\n    /[`+~!@#_$%^*()=|{}':;,\\\\[\\].<>/?！￥…&（）—【】‘；：”“。，、？\\s]/g;\n  return str.replace(pattern, (match) => \"\\\\\" + match);\n};\n\nexport const HighlightProvider = ({ list, children, highlightClassName }) => {\n  return (\n    <Provider value={{ list, highlightClassName }}>\n      <span data-testid=\"components-core-highlight\">{children}</span>\n    </Provider>\n  );\n};\nHighlightProvider.defaultProps = {\n  caseSensitive: false,\n  list: [],\n  highlightClassName: \"\",\n};\nconst Highlight = ({ tagName, children }) => {\n  const { list, caseSensitive, highlightClassName } = useContext(context);\n  const renderStr = useMemo(() => {\n    if (!children) return;\n    let target = children?.toString();\n    if (!list || list.length === 0) {\n      return target;\n    }\n    const allWordsRe = list\n      .map(function (word) {\n        return \"(\" + escapeSpecialCharacter(word) + \")\";\n      })\n      .join(\"|\");\n\n    const regExp = new RegExp(allWordsRe, caseSensitive ? \"gm\" : \"gim\");\n\n    return target.replace(regExp, (innerMatch) => {\n      return `<font class=\"${style[\"high-color\"]} ${highlightClassName}\">${innerMatch}</font>`;\n    });\n  }, [list, caseSensitive, children, highlightClassName]);\n\n  return createElement(tagName, {\n    dangerouslySetInnerHTML: { __html: renderStr },\n  });\n};\nHighlight.defaultProps = {\n  tagName: \"span\",\n  children: \"\",\n};\n\n// Highlight.propTypes={\n//     children:PropTypes.string\n// }\nexport default Highlight;\n","import * as component_42 from '@components/Highlight';\nconst readmeConfig = {\n    name: `Highlight`,\n    summary: `<p>用于显示文本高亮</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Highlight_0b905`,\n        style: ``,\n        list: [{\n    title: `基本文字高亮`,\n    description: `展示基本文字高亮`,\n    code: `const { default: Highlight, HighlightProvider } = _Highlight;\nconst BaseExample = () => {\n  return (\n    <HighlightProvider list={[\"哈\", \"呃呃\"]}>\n      <Highlight>哈哈哈西西西西呃呃呃</Highlight>\n    </HighlightProvider>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Highlight\",\n    packageName: \"@components/Highlight\",\n    component: component_42\n}]\n},{\n    title: `xss测试`,\n    description: `xss测试`,\n    code: `const { default: Highlight, HighlightProvider } = _Highlight;\nconst BaseExample = () => {\n  const str = '<img src=\"/aaaa\"/>';\n  return (\n    <HighlightProvider list={[\"哈\", \"呃呃\"]}>\n      <Highlight>哈哈哈西西西西呃呃呃{str}</Highlight>\n    </HighlightProvider>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Highlight\",\n    packageName: \"@components/Highlight\",\n    component: component_42\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"style_overlay__ZS5Wz__EG6bw\",\"overlay-content\":\"style_overlay-content__IVFmc__EG6bw\",\"state-tag\":\"style_state-tag__+59RJ__EG6bw\"};","import style from \"./style.module.scss\";\nimport {\n  useState,\n  useCallback,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n} from \"react\";\nimport localStorage from \"@common/utils/localStorage\";\nimport StateTag from \"@components/StateTag\";\nimport { Popover, Space } from \"antd\";\nimport dropWhile from \"lodash/dropWhile\";\nimport uniqBy from \"lodash/uniqBy\";\nimport useClickOutside from \"@kne/use-click-outside\";\nimport classnames from \"classnames\";\n\nconst HistoryStore = ({\n  className,\n  overlayClassName,\n  storeName,\n  maxLength,\n  label,\n  children,\n  onSelect,\n  zIndex,\n  getPopupContainer,\n}) => {\n  const [list, setList] = useState(() => {\n    return localStorage.getItem(storeName) || [];\n  });\n  const [open, setOpen] = useState(false);\n  const openHistory = useCallback(() => {\n    if (list.length === 0) {\n      return;\n    }\n    setOpen(true);\n  }, [list]);\n  const storeNameRef = useRef(storeName);\n  storeNameRef.current = storeName;\n  useEffect(() => {\n    localStorage.setItem(storeNameRef.current, list);\n  }, [list]);\n\n  const appendHistory = useCallback(\n    (item) => {\n      if (item.value && item.label) {\n        setList((list) => {\n          const newList = dropWhile(list, { value: item.value });\n          newList.splice(0, 0, item);\n          return maxLength\n            ? uniqBy(newList, \"value\").slice(0, maxLength)\n            : newList;\n        });\n      }\n      setOpen(false);\n    },\n    [maxLength]\n  );\n\n  const close = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const outerRef = useClickOutside(close);\n\n  const popoverChildrenRef = useRef(null),\n    popoverContentRef = useRef(null);\n  outerRef.current = {\n    contains: (target) => {\n      return (\n        popoverChildrenRef.current.contains(target) ||\n        (open && popoverContentRef.current.contains(target))\n      );\n    },\n  };\n\n  const onSelectRef = useRef(null);\n  const setOnSelect = (callback) => {\n    onSelectRef.current = callback;\n  };\n\n  const [width, setWidth] = useState(0);\n\n  useLayoutEffect(() => {\n    const callback = () => {\n      setWidth(popoverChildrenRef.current.clientWidth);\n    };\n    callback();\n    const resizeObserver = new ResizeObserver(callback);\n    resizeObserver.observe(popoverChildrenRef.current);\n    const mutationObserver = new MutationObserver(callback);\n    mutationObserver.observe(popoverChildrenRef.current, {\n      subtree: true,\n      childList: true,\n    });\n    return () => {\n      mutationObserver.disconnect();\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  return (\n    <Popover\n      zIndex={zIndex}\n      placement=\"bottom\"\n      transitionName={\"ant-slide-up\"}\n      arrow={false}\n      open={open}\n      getPopupContainer={getPopupContainer}\n      overlayClassName={classnames(overlayClassName, style[\"overlay\"])}\n      content={\n        <div\n          className={style[\"overlay-content\"]}\n          style={{ width }}\n          ref={popoverContentRef}\n        >\n          <Space direction=\"vertical\">\n            <div>{label}</div>\n            <Space wrap>\n              {list.map((item) => (\n                <StateTag\n                  className={style[\"state-tag\"]}\n                  text={item.label}\n                  type={\"result\"}\n                  onClick={() => {\n                    onSelect && onSelect(item.value, item);\n                    onSelectRef.current &&\n                      onSelectRef.current(item.value, item);\n                    close();\n                    appendHistory(item);\n                  }}\n                />\n              ))}\n            </Space>\n          </Space>\n        </div>\n      }\n    >\n      <div ref={popoverChildrenRef} className={classnames(className)}>\n        {children({\n          open,\n          openHistory,\n          appendHistory,\n          setOnSelect,\n          close,\n        })}\n      </div>\n    </Popover>\n  );\n};\n\nHistoryStore.defaultProps = {\n  maxLength: 5,\n  label: \"最近搜索\",\n  storeName: \"HISTORY_STORE_KEY\",\n};\n\nexport default HistoryStore;\n","import * as component_50 from '@components/HistoryStore';\nimport * as component_51 from 'antd';\nconst readmeConfig = {\n    name: `HistoryStore`,\n    summary: `<p>历史记录提示</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `HistoryStore_a963f`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: HistoryStore } = _HistoryStore;\nconst { Input } = antd;\nconst { useState } = React;\nconst BaseExample = () => {\n  const [value, setValue] = useState(\"\");\n  return (\n    <HistoryStore\n      onSelect={(value) => {\n        setValue(value);\n      }}\n    >\n      {({ appendHistory, openHistory }) => (\n        <Input.Search\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n          onFocus={openHistory}\n          onSearch={(value) => {\n            appendHistory({\n              value,\n              label: value,\n            });\n          }}\n        />\n      )}\n    </HistoryStore>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_HistoryStore\",\n    packageName: \"@components/HistoryStore\",\n    component: component_50\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_51\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_66 from '@components/Icon';\nimport * as component_67 from 'antd';\nimport * as component_68 from '@kne/react-fetch';\nimport * as component_69 from '@components/Global';\nimport * as component_70 from 'axios';\nimport * as component_71 from '@kne/remote-loader';\nconst readmeConfig = {\n    name: `Icon`,\n    summary: `<p>可以显示一个图标，图标必须在字体文件中被定义过</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>图标类型，参考示例下的字符串</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>colorful</td>\n<td>是否是彩色图标</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>图标前缀</td>\n<td>string</td>\n<td>\"\"</td>\n</tr>\n<tr>\n<td>size</td>\n<td>图标大小</td>\n<td>number</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Icon_81743`,\n        style: `.Icon_81743 .item {\n  width: 150px;\n  word-break: break-all; }\n`,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Icon } = _Icon;\nconst { Slider, Space } = antd;\nconst { useState } = React;\nconst { createWithFetch } = ReactFetch;\nconst { loadFont } = Global;\nconst { default: axios } = _axios;\nconst { createWithRemoteLoader } = remoteLoader;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: [\"components-iconfont:Font\"],\n})(({ remoteModules }) => {\n  const [Font] = remoteModules;\n  const [value, setValue] = useState(30);\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <div>调整大小:</div>\n        <Slider\n          style={{ width: 100 }}\n          max={60}\n          min={12}\n          value={value}\n          onChange={setValue}\n        />\n        <div>{value}px</div>\n      </Space>\n      {\n        <Font>\n          {({ list }) => {\n            return (\n              <Space wrap align=\"top\" size=\"large\">\n                {list.map(({ name, font_class }) => {\n                  return (\n                    <Space\n                      className=\"item\"\n                      direction=\"vertical\"\n                      align=\"center\"\n                      key={name}\n                    >\n                      <Icon type={font_class} size={value} />\n                      <div>{name}</div>\n                    </Space>\n                  );\n                })}\n              </Space>\n            );\n          }}\n        </Font>\n      }\n    </Space>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Icon\",\n    packageName: \"@components/Icon\",\n    component: component_66\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_67\n},{\n    name: \"ReactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_68\n},{\n    name: \"Global\",\n    packageName: \"@components/Global\",\n    component: component_69\n},{\n    name: \"_axios\",\n    packageName: \"axios\",\n    component: component_70\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_71\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Icon } = _Icon;\nconst { Space, Slider } = antd;\nconst { useState } = React;\nconst { createWithFetch } = ReactFetch;\nconst { createWithRemoteLoader } = remoteLoader;\nconst { default: axios } = _axios;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: [\"components-iconfont:ColorfulFont\"],\n})(({ remoteModules }) => {\n  const [ColorfulFont] = remoteModules;\n  const [value, setValue] = useState(30);\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <div>调整大小:</div>\n        <Slider\n          style={{ width: 100 }}\n          max={60}\n          min={12}\n          value={value}\n          onChange={setValue}\n        />\n        <div>{value}px</div>\n      </Space>\n      <ColorfulFont>\n        {({ list }) => (\n          <Space wrap align=\"top\" size=\"large\">\n            {list.map(({ name }) => {\n              return (\n                <Space\n                  className=\"item\"\n                  direction=\"vertical\"\n                  align=\"center\"\n                  key={name}\n                >\n                  <Icon colorful type={name} size={value} />\n                  <div>{name}</div>\n                </Space>\n              );\n            })}\n          </Space>\n        )}\n      </ColorfulFont>\n    </Space>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Icon\",\n    packageName: \"@components/Icon\",\n    component: component_66\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_67\n},{\n    name: \"ReactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_68\n},{\n    name: \"Global\",\n    packageName: \"@components/Global\",\n    component: component_69\n},{\n    name: \"_axios\",\n    packageName: \"axios\",\n    component: component_70\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_71\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_47 from '@components/Image';\nimport * as component_48 from '@components/Global';\nimport * as component_49 from 'antd';\nconst readmeConfig = {\n    name: `Image`,\n    summary: `<p>用于展示一张图片，和img标签不同的是，可以展示一张普通图片，也可以通过id加载一张oss图片，在加载oss地址和图片数据的时候会显示loading状态</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src</td>\n<td>图片的src地址</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>id</td>\n<td>oss的id</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>加载时显示的组件</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>error</td>\n<td>加载错误时显示的组件</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Image.Avatar</h3>\n<p>用antd的Avatar来显示图片，可以显示默认的男女头像，其他参数参考antd的Avatar组件</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>gender</td>\n<td>性别 F，female，f为女其他为男</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Image_be53a`,\n        style: ``,\n        list: [{\n    title: `通过src加载一个普通图片`,\n    description: `通过src加载一个普通图片`,\n    code: `const {default: Image} = _Image;\nconst BaseExample = () => {\n    return <Image src={window.PUBLIC_URL + \"/logo512.png\"} style={{width: '100px', height: '100px'}}/>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Image\",\n    packageName: \"@components/Image\",\n    component: component_47\n}]\n},{\n    title: `通过id加载一个oss图片`,\n    description: `图片一加载成功，图片二加载中，图片三加载失败`,\n    code: `const {default: Image} = _Image;\nconst {PureGlobal} = global;\nconst {Space} = antd;\nconst BaseExample = () => {\n    return <PureGlobal preset={{\n        apis: {\n            oss: {\n                loader: ({params}) => {\n                    if(params.id ==='logo513.png'){\n                        return new Promise(()=>{\n\n                        });\n                    }\n                    return new Promise((resolve) => {\n                        resolve(window.PUBLIC_URL + '/' + params.id);\n                    });\n\n                }\n            }\n        }\n    }}>\n        <Space>\n            <Image id=\"logo512.png\" style={{width: '100px', height: '100px'}}/>\n            <Image id=\"logo513.png\" style={{width: '100px', height: '100px'}}/>\n            <Image id=\"logo511.png\" style={{width: '100px', height: '100px'}}/>\n        </Space>\n    </PureGlobal>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Image\",\n    packageName: \"@components/Image\",\n    component: component_47\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_48\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_49\n}]\n},{\n    title: `显示一个头像`,\n    description: `显示图片头像和默认头像`,\n    code: `const { default: Image } = _Image;\nconst { Space } = antd;\nconst BaseExample = () => {\n  return (\n    <Space>\n      <Image.Avatar src={window.PUBLIC_URL + \"/avatar.png\"} shape=\"circle\" />\n      <Image.Avatar\n        src={window.PUBLIC_URL + \"/avatar.png\"}\n        shape=\"circle\"\n        size={80}\n      />\n      <Image.Avatar\n        src={window.PUBLIC_URL + \"/avatar.png\"}\n        shape=\"circle\"\n        size={50}\n      />\n\n      <Image.Avatar shape=\"circle\" />\n      <Image.Avatar gender=\"M\" shape=\"circle\" size={80} />\n      <Image.Avatar gender=\"female\" shape=\"circle\" size={50} />\n      <Image.Avatar gender=\"m\" shape=\"circle\" size={50} />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Image\",\n    packageName: \"@components/Image\",\n    component: component_47\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_49\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_43 from '@components/InfoPage';\nimport * as component_44 from '@components/Content';\nimport * as component_45 from '@components/Descriptions';\nimport * as component_46 from 'antd';\nconst readmeConfig = {\n    name: `InfoPage`,\n    summary: `<h3>何时使用</h3>\n<p>一般用在复杂的详情展示页面，InfoPage提供了一个标准的展示信息的格式</p>\n<h3>特点</h3>\n<ul>\n<li>支持Content组件Descriptions组件的组合</li>\n<li>支持Collapse组件组合</li>\n<li>InfoPage.Part 需要放在InfoPage之下，InfoPage.Collapse,Content,Descriptions 需要放在 InfoPage.Part之下</li>\n</ul>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children</td>\n<td>内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>InfoPage.Part</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>title</td>\n<td>标题</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>extra</td>\n<td>额外内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>InfoPage.Collapse</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children</td>\n<td>内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `InfoPage_fb7ea`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: InfoPage } = _InfoPage;\nconst { default: Content } = _Content;\nconst { default: Descriptions } = _Descriptions;\nconst { Space } = antd;\nconst BaseExample = () => {\n  return (\n    <InfoPage>\n      <InfoPage.Part title=\"退票信息\">\n        <Descriptions\n          dataSource={[\n            [\n              { label: \"客户名称\", content: \"腾讯\" },\n              { label: \"发票抬头\", content: \"腾讯科技公司\" },\n            ],\n            [\n              { label: \"发票类型\", content: \"增值税专用发票\" },\n              { label: \"发票开具日期\", content: \"2022-08-15\" },\n            ],\n            [{ label: \"退票金额\", content: \"22000.00元\" }],\n            [\n              {\n                label: \"发票号\",\n                content: (\n                  <div>\n                    <div>00384895992774</div>\n                    <div>00384895992774</div>\n                    <div>00384895992774</div>\n                    <div>00384895992774</div>\n                  </div>\n                ),\n              },\n            ],\n            [\n              { label: \"是否需要重开发票\", content: \"否\" },\n              { label: \"是否涉及金融变动\", content: \"否\" },\n            ],\n            [\n              { label: \"是否造成实质损失\", content: \"否\" },\n              { label: \"责任归属\", content: \"客户原因\" },\n            ],\n            [\n              {\n                label: \"退票原因\",\n                content: \"退票原因的描述退票原因的描述退票原因的描\",\n              },\n            ],\n            [{ label: \"附件\", content: \"附件名称\" }],\n            [\n              { label: \"操作时间\", content: \"2022-08-01 16:32\" },\n              { label: \"操作人\", content: \"西西歪\" },\n            ],\n          ]}\n        />\n      </InfoPage.Part>\n      <InfoPage.Part title=\"开票信息\">\n        <Space direction=\"vertical\" size={24}>\n          <Descriptions\n            dataSource={[\n              [{ label: \"客户名称\", content: \"腾讯\" }],\n              [{ label: \"合同\", content: \"合同3\" }],\n            ]}\n          />\n          <InfoPage.Part title=\"发票费用信息\">\n            <Space direction=\"vertical\">\n              <InfoPage.Collapse defaultActiveKey={[\"0\", \"1\"]}>\n                <InfoPage.Collapse.Panel key=\"0\" header=\"项目类型1\">\n                  <Content\n                    labelAlign=\"auto\"\n                    col={3}\n                    gutter={[0, 12]}\n                    list={[\n                      { label: \"项目类型\", content: \"面试到岗\" },\n                      { label: \"费用类型\", content: \"服务费\" },\n                      { label: \"费用总金额\", content: \"10,000元\" },\n                      { label: \"本次支付费用比例\", content: \"30%\" },\n                      { label: \"本次支付费用金额\", content: \"3,000元\" },\n                      { label: \"开票候选人\", content: \"李小萌\" },\n                    ]}\n                  />\n                </InfoPage.Collapse.Panel>\n                <InfoPage.Collapse.Panel key=\"1\" header=\"项目类型2\">\n                  <Content\n                    labelAlign=\"auto\"\n                    col={3}\n                    gutter={[0, 12]}\n                    list={[\n                      { label: \"项目类型\", content: \"面试到岗\" },\n                      { label: \"费用类型\", content: \"服务费\" },\n                      { label: \"费用总金额\", content: \"10,000元\" },\n                      { label: \"本次支付费用比例\", content: \"30%\" },\n                      { label: \"本次支付费用金额\", content: \"3,000元\" },\n                      { label: \"开票候选人\", content: \"李小萌\" },\n                    ]}\n                  />\n                </InfoPage.Collapse.Panel>\n              </InfoPage.Collapse>\n              <Descriptions\n                dataSource={[\n                  [\n                    { label: \"客户付税比例\", content: \"1%\" },\n                    { label: \"客户所付税金\", content: \"30元\" },\n                  ],\n                  [\n                    { label: \"服务费\", content: \"2886.29元\" },\n                    { label: \"发票增值税\", content: \"172.38元\" },\n                  ],\n                  [{ label: \"发票金额\", content: \"22000.00元\" }],\n                  [\n                    {\n                      label: \"发票备注\",\n                      content: \"备注的内容备注的内容备注的内容备注的内容\",\n                    },\n                  ],\n                ]}\n              />\n            </Space>\n          </InfoPage.Part>\n          <InfoPage.Part title=\"发票信息\">\n            <Descriptions\n              dataSource={[\n                [{ label: \"付款信息\", content: \"ASB54492789374983798\" }],\n                [{ label: \"发票收件人\", content: \"西西歪\" }],\n                [{ label: \"附件\", content: \"附件名称\" }],\n                [{ label: \"预计入职日期\", content: \"2022-08-15\" }],\n              ]}\n            />\n          </InfoPage.Part>\n          <InfoPage.Part title=\"业绩分配\">\n            <InfoPage.Collapse defaultActiveKey={[\"0\", \"1\"]}>\n              <InfoPage.Collapse.Panel key=\"0\" header=\"项目类型1\">\n                <Content\n                  labelAlign=\"auto\"\n                  col={3}\n                  gutter={[0, 12]}\n                  list={[\n                    { label: \"分配用户\", content: \"王亚男\" },\n                    { label: \"分配比例\", content: \"40%\" },\n                    { label: \"分配金额\", content: \"1,200元\" },\n                  ]}\n                />\n              </InfoPage.Collapse.Panel>\n              <InfoPage.Collapse.Panel key=\"1\" header=\"项目类型2\">\n                <Content\n                  labelAlign=\"auto\"\n                  col={3}\n                  gutter={[0, 12]}\n                  list={[\n                    { label: \"分配用户\", content: \"王亚男\" },\n                    { label: \"分配比例\", content: \"40%\" },\n                    { label: \"分配金额\", content: \"1,200元\" },\n                  ]}\n                />\n              </InfoPage.Collapse.Panel>\n            </InfoPage.Collapse>\n          </InfoPage.Part>\n        </Space>\n      </InfoPage.Part>\n    </InfoPage>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_InfoPage\",\n    packageName: \"@components/InfoPage\",\n    component: component_43\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_44\n},{\n    name: \"_Descriptions\",\n    packageName: \"@components/Descriptions\",\n    component: component_45\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_46\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","const message = {\n    ButtonText: \"confirm\"\n};\n\nexport default message;","const message = {\n    ButtonText: \"确定\"\n};\n\nexport default message;","import * as component_84 from '@components/Intl';\nimport * as component_85 from '@components/Global';\nimport * as component_86 from 'antd';\nimport * as component_87 from '@components/Intl/doc/locale/en-US';\nimport * as component_88 from '@components/Intl/doc/locale/zh-CN';\nconst readmeConfig = {\n    name: `Intl`,\n    summary: `<p>支持系统国际化</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Intl_51734`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {FormattedMessage, IntlProvider} = _Intl;\nconst {PureGlobal} = global;\nconst {Select, Space} = antd;\nconst {default: en} = localeEN;\nconst {default: cn} = localeCN;\nconst {useState} = React;\nconst BaseExample = () => {\n    const [locale, setLocale] = useState('zh-CN');\n    return (<Space>\n        <Select value={locale} onChange={setLocale}\n                options={['zh-CN', 'en-US'].map(key => ({value: key, label: key}))}/>\n        <PureGlobal\n            preset={{\n                locale\n            }}\n        >\n            <IntlProvider locale={locale} importMessages={locale => {\n                return {\n                    default: {\n                        'zh-CN': cn, 'en-US': en\n                    }[locale]\n                };\n            }}>\n                <FormattedMessage defaultMessage=\"按钮\" id=\"ButtonText\">\n                    {text => <div>{text}</div>}\n                </FormattedMessage>\n            </IntlProvider>\n\n        </PureGlobal>\n    </Space>);\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Intl\",\n    packageName: \"@components/Intl\",\n    component: component_84\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_85\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_86\n},{\n    name: \"localeEN\",\n    packageName: \"@components/Intl/doc/locale/en-US\",\n    component: component_87\n},{\n    name: \"localeCN\",\n    packageName: \"@components/Intl/doc/locale/zh-CN\",\n    component: component_88\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_74 from '@components/Layout';\nimport * as component_75 from '@components/Global';\nimport * as component_76 from 'antd';\nimport * as component_77 from '@components/Filter';\nconst readmeConfig = {\n    name: `Layout`,\n    summary: `<h3>何时使用</h3>\n<p>每个登录后的系统页面都应该在Layout的框架之下，它定义了页面的基本框架。根据设计对于页面的不同要求，适当选择不同的组合</p>\n<h3>特点</h3>\n<p>Layout将整个页面划分成以下几个区域</p>\n<ol>\n<li>导航区</li>\n<li>内容区</li>\n<li>左菜单区</li>\n<li>右操作区</li>\n<li>页头区</li>\n<li>页头信息区</li>\n<li>页面标题区</li>\n</ol>\n<p>通过给Page配置不同的参数实现不同区域的显示</p>\n<h3>注意</h3>\n<ul>\n<li>Page的name参数必须要传，用来在页面跳转时确定Page是不是同一个，决定着Page是否走install周期</li>\n<li>Page组件的参数是通过Context保存在Layout中的，这样做的目的是为了让页面跳转时，除页面区以外的区域在前后俩页面差别不大的情况下走更新周期而不是install周期，以此带来更快的渲染速度避免不必要的重复安装和卸载</li>\n<li>请尽量通过Page提供的参数来配置出设计要求的页面，不要自行用css实现，以便于Layout组件能从整体控制页面的基本形式和不同区域的padding和margin，让系统更加统一化标准化</li>\n</ul>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>navigation</td>\n<td>导航参数参考 Navigation 组件参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>一般放置Page组件</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Page</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>menu</td>\n<td>左菜单区内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>页面标题位置筛选器参数,参考 Filter 组件参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>menuOpen</td>\n<td>左菜单是否默认打开</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>menuWidth</td>\n<td>左菜单宽度</td>\n<td>string</td>\n<td>240px</td>\n</tr>\n<tr>\n<td>menuFixed</td>\n<td>左菜单是否fixed布局</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>menuCloseButton</td>\n<td>控制左菜单显示隐藏的按钮是否显示</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>header</td>\n<td>页头区内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>headerFixed</td>\n<td>页头区是否fixed布局</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>headerInfo</td>\n<td>页头信息区内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>backUrl</td>\n<td>右侧内容区的标题前展示返回按钮，并返回到该url</td>\n<td>参考 useNavigate</td>\n<td>-</td>\n</tr>\n<tr>\n<td>title</td>\n<td>页面标题</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>titleExtra</td>\n<td>页面标题区右侧位置内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>titleLeftExtra</td>\n<td>页面标题区左侧位置内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>noMargin</td>\n<td>页面内容区是否去掉Margin</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>noPadding</td>\n<td>页面内容区是否去掉Padding</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>option</td>\n<td>右操作区内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>optionWidth</td>\n<td>右操作区宽度</td>\n<td>string</td>\n<td>400px</td>\n</tr>\n<tr>\n<td>optionNoPadding</td>\n<td>右操作区是否去掉Padding</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>optionFixed</td>\n<td>右操作区是否fixed布局</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>optionFooter</td>\n<td>右操作区底部内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>openFeatures</td>\n<td>Page是否启用Features，启用时如果配置文件中没有该模块id则判断为模块关闭，会将name作为Features的id进行设置</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3>Affix</h3>\n<p>可以控制其中的内容是否是fixed布局</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>isFixed</td>\n<td>内容是否fixed布局</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>offsetTop</td>\n<td>距离窗口顶部达到指定偏移量后触发</td>\n<td>number</td>\n<td>0</td>\n</tr>\n<tr>\n<td>offsetBottom</td>\n<td>距离窗口底部达到指定偏移量后触发</td>\n<td>number</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>固定状态改变时触发的回调函数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Menu</h3>\n<p>显示一个菜单，最多支持两级，支持第一级展开收起，支持路径匹配自动高亮</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>items</td>\n<td>菜单项</td>\n<td>array[object]</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>items[].label</td>\n<td>菜单项显示内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].key</td>\n<td>菜单项的key要求必须唯一</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].iconType</td>\n<td>菜单项前面的icon类型参考 Icon组件的type参数</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].path</td>\n<td>菜单项的路径</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].onClick</td>\n<td>菜单项点击触发事件，注意：如果菜单项已经传入path参数则该参数不生效</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].children</td>\n<td>菜单项的第二级项列表，参考items参数。注意该组件只支持两级菜单，所以该参数内部的菜单项不再支持children参数</td>\n<td>array[object]</td>\n<td>-</td>\n</tr>\n<tr>\n<td>currentKey</td>\n<td>当前被选中的菜单项的key，如果菜单项又path参数，不需要传递该参数，组件会根据路由自动判断选中项</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>currentKey产生修改时触发函数，注意：如果菜单项已经传入path参数则该参数不生效</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>allowCollapsed</td>\n<td>是否允许一级菜单收起</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>defaultOpenKeys</td>\n<td>初始展开的 SubMenu 菜单项 key 数组</td>\n<td>string[]</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>PermissionsPage</h3>\n<p>加入权限判断的Page，错误类型默认为error，即在该页面没有权限时显示错误</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>permissions</td>\n<td>权限列表参考 Permissions 组件参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Layout_ebd9b`,\n        style: `.Layout_ebd9b .layout-content {\n  color: #fff;\n  background: var(--primary-color-4);\n  height: 100%;\n  text-align: center;\n  line-height: 300px; }\n\n.Layout_ebd9b .with-title-layout-content {\n  height: 100%; }\n\n.Layout_ebd9b .layout-menu {\n  background: #ff9c6e;\n  color: #fff;\n  height: 110vh;\n  text-align: center;\n  line-height: 300px; }\n\n.Layout_ebd9b .header {\n  background: #ff9c6e;\n  height: 100px;\n  padding: 10px;\n  color: #fff; }\n\n.Layout_ebd9b .right-options {\n  background: var(--primary-color-4);\n  height: 110vh;\n  color: #fff; }\n\n.Layout_ebd9b .header-info {\n  padding: 10px;\n  height: 100px;\n  background: var(--primary-color-4);\n  color: #fff; }\n`,\n        list: [{\n    title: `基础上下布局`,\n    description: `展示最基础的上导航栏，下内容的布局`,\n    code: `const { default: Layout, Page } = _Layout;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        enums: {\n          helperGuide: () => [\n            {\n              value: \"base-detail\",\n              content: \"测试帮助文档\",\n              url: \"/\",\n            },\n          ],\n        },\n      }}\n    >\n      <Layout navigation={{ isFixed: false }}>\n        <Page name=\"base\" helperGuideName=\"base-detail\">\n          <div className=\"layout-content\">内容区</div>\n        </Page>\n      </Layout>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Layout\",\n    packageName: \"@components/Layout\",\n    component: component_74\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_75\n}]\n},{\n    title: `带有左侧菜单布局`,\n    description: `展示带有左侧菜单布局`,\n    code: `const { default: Layout, Page, Menu } = layout;\nconst { Button, Space } = antd;\nconst { PureGlobal } = global;\n\nconst Example = () => {\n  return (\n    <Layout navigation={{ isFixed: false }}>\n      <Page\n        name=\"left-menu\"\n        menuFixed={false}\n        menu={\n          <Menu\n            items={[\n              {\n                label: \"父级标题1\",\n                key: \"p-0\",\n                iconType: \"icon-zhanghaodenglu\",\n                children: [\n                  {\n                    label: \"子标题1\",\n                    key: \"s-0\",\n                    path: \"/link1\",\n                  },\n                  {\n                    label: \"子标题2\",\n                    key: \"s-1\",\n                    path: \"/link2\",\n                  },\n                ],\n              },\n              {\n                label: \"父级标题2\",\n                key: \"p-1\",\n                iconType: \"icon-zhanghaodenglu\",\n                children: [\n                  {\n                    label: \"子标题1\",\n                    key: \"s-2\",\n                    path: \"/link3\",\n                  },\n                  {\n                    label: \"子标题2\",\n                    key: \"s-3\",\n                    path: \"/link4\",\n                  },\n                ],\n              },\n              {\n                label: \"父级标题3\",\n                key: \"p-2\",\n                iconType: \"icon-zhanghaodenglu\",\n                path: \"/link5\",\n              },\n            ]}\n          />\n        }\n        titleExtra={\n          <Space>\n            <Button type=\"primary\">新建</Button>\n          </Space>\n        }\n        backUrl={\"/\"}\n        title=\"标题\"\n      >\n        <div className=\"layout-content with-title-layout-content\">内容区</div>\n      </Page>\n    </Layout>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <Example />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_74\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_76\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_75\n}]\n},{\n    title: `左侧固定带Header`,\n    description: `展示带有header的左侧固定菜单布局`,\n    code: `const { default: Layout, Page } = layout;\nconst { Button, Space } = antd;\nconst { PureGlobal } = global;\n\nconst Example = () => {\n  return (\n    <Space className=\"container\" direction=\"vertical\">\n      <Layout navigation={{ isFixed: false }}>\n        <Page\n          name=\"with-header\"\n          helperGuideName=\"base-detail\"\n          menu={<div className=\"layout-menu\">左侧菜单区</div>}\n          titleExtra={\n            <Space>\n              <Button type=\"primary\">新建</Button>\n            </Space>\n          }\n          title=\"标题\"\n          hideCloseSvg={true}\n          headerHeight=\"40px\"\n          menuFixed={false}\n          header={<div className=\"header\">header</div>}\n          headerFixed={false}\n          headerInfo={<div className=\"header-info\">header info区域</div>}\n        >\n          <div>内容区</div>\n        </Page>\n      </Layout>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal\n    preset={{\n      enums: {\n        helperGuide: () => [\n          {\n            value: \"base-detail\",\n            content: \"测试帮助文档\",\n            url: \"/\",\n          },\n        ],\n      },\n    }}\n  >\n    <Example />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_74\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_76\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_75\n}]\n},{\n    title: `右侧固定`,\n    description: `展示带有header的右侧固定菜单布局`,\n    code: `const { default: Layout, Page } = layout;\nconst { Button, Space } = antd;\nconst { PureGlobal } = global;\n\nconst Example = () => {\n  return (\n    <Layout navigation={{ isFixed: false }}>\n      <Page\n        name=\"fix-right-menu\"\n        optionFixed={false}\n        option={<div className=\"right-options\">右侧操作区域</div>}\n        optionFooter={\n          <Space>\n            <Button type=\"primary\">新建</Button>\n          </Space>\n        }\n        titleExtra={\n          <Space>\n            <Button type=\"primary\">新建</Button>\n          </Space>\n        }\n        title=\"标题\"\n        header={<div className=\"header\">header</div>}\n        headerFixed={false}\n        menuFixed={false}\n      >\n        <div>内容区</div>\n      </Page>\n    </Layout>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <Example />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_74\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_76\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_75\n}]\n},{\n    title: `带有filter的列表页`,\n    description: `展示带有filter的列表页`,\n    code: `const { default: Layout, Page } = layout;\nconst {\n  InputFilterItem,\n  CityFilterItem,\n  AdvancedSelectFilterItem,\n  UserFilterItem,\n  FunctionSelectFilterItem,\n  IndustrySelectFilterItem,\n  getFilterValue,\n} = filter;\nconst { useState } = React;\nconst { Space, Button } = antd;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  const [filter, setFilter] = useState([]);\n  return (\n    <PureGlobal preset={{}}>\n      <Layout navigation={{ isFixed: false }}>\n        <Page\n          name=\"base\"\n          helperGuideName=\"base-detail\"\n          titleExtra={\n            <Space>\n              <Button type=\"primary\">添加</Button>\n            </Space>\n          }\n          filter={{\n            extraExpand: (\n              <Button type=\"primary\" size=\"small\">\n                订阅筛选项\n              </Button>\n            ),\n            value: filter,\n            onChange: (value) => {\n              setFilter(value);\n              console.log(getFilterValue(value));\n            },\n            list: [\n              [\n                <InputFilterItem label=\"文字\" name=\"text\" />,\n                <CityFilterItem label=\"城市\" name=\"city\" />,\n                <AdvancedSelectFilterItem\n                  label=\"高级选择\"\n                  name=\"select\"\n                  api={{\n                    loader: () => {\n                      return {\n                        pageData: [\n                          { label: \"第一项\", value: 1 },\n                          { label: \"第二项\", value: 2, disabled: true },\n                          {\n                            label: \"第三项\",\n                            value: 3,\n                          },\n                        ],\n                      };\n                    },\n                  }}\n                />,\n                <UserFilterItem\n                  label=\"用户选择\"\n                  name=\"user\"\n                  api={{\n                    loader: () => {\n                      return {\n                        pageData: [\n                          {\n                            label: \"用户一\",\n                            value: 1,\n                            description: \"我是用户描述\",\n                          },\n                          {\n                            label: \"用户二\",\n                            value: 2,\n                            description: \"我是用户描述\",\n                          },\n                          {\n                            label: \"用户三\",\n                            value: 3,\n                            description: \"我是用户描述\",\n                          },\n                        ],\n                      };\n                    },\n                  }}\n                />,\n                <FunctionSelectFilterItem\n                  label=\"职能选择\"\n                  name=\"function\"\n                  onlyAllowLastLevel\n                  single\n                />,\n                <IndustrySelectFilterItem\n                  label=\"行业选择\"\n                  name=\"industry\"\n                  onlyAllowLastLevel\n                />,\n              ],\n              [\n                <UserFilterItem\n                  label=\"职位协助人\"\n                  name=\"position_user\"\n                  api={{\n                    loader: () => {\n                      return {\n                        pageData: [\n                          {\n                            label: \"用户一\",\n                            value: 1,\n                            description: \"我是用户描述\",\n                          },\n                          {\n                            label: \"用户二\",\n                            value: 2,\n                            description: \"我是用户描述\",\n                          },\n                          {\n                            label: \"用户三\",\n                            value: 3,\n                            description: \"我是用户描述\",\n                          },\n                        ],\n                      };\n                    },\n                  }}\n                />,\n              ],\n            ],\n          }}\n        >\n          <div className=\"layout-content\">内容区</div>\n        </Page>\n      </Layout>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_74\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_76\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_75\n},{\n    name: \"filter\",\n    packageName: \"@components/Filter\",\n    component: component_77\n}]\n},{\n    title: `左侧导航菜单`,\n    description: `展示一个左侧导航菜单`,\n    code: `const { Menu } = layout;\nconst { Space } = antd;\nconst { useState } = React;\n\nconst ControlMenu = () => {\n  const [current, setCurrent] = useState();\n  return (\n    <Menu\n      currentKey={current}\n      onChange={setCurrent}\n      items={[\n        {\n          label: \"父级标题1\",\n          key: \"p-0\",\n          iconType: \"icon-zhanghaodenglu\",\n          children: [\n            {\n              label: \"子标题1\",\n              key: \"s-0\",\n            },\n            {\n              label: \"子标题2\",\n              key: \"s-1\",\n            },\n          ],\n        },\n        {\n          label: \"父级标题2\",\n          key: \"p-1\",\n          iconType: \"icon-zhanghaodenglu\",\n          children: [\n            {\n              label: \"子标题1\",\n              key: \"s-2\",\n            },\n            {\n              label: \"子标题2\",\n              key: \"s-3\",\n            },\n          ],\n        },\n        {\n          label: \"父级标题3\",\n          key: \"p-2\",\n          iconType: \"icon-zhanghaodenglu\",\n        },\n      ]}\n    />\n  );\n};\n\nconst Example = () => {\n  return (\n    <Space size={10}>\n      <Menu\n        items={[\n          {\n            label: \"父级标题1\",\n            key: \"p-0\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-0\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-1\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            key: \"p-1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-2\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-3\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            key: \"p-2\",\n            iconType: \"icon-zhanghaodenglu\",\n            path: \"/link5\",\n          },\n        ]}\n      />\n      <Menu\n        items={[\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题1\",\n            key: \"s-0\",\n            path: \"/link1\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题2\",\n            key: \"s-1\",\n            path: \"/link2\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题1\",\n            key: \"s-2\",\n            path: \"/link3\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题2\",\n            key: \"s-3\",\n            path: \"/link4\",\n          },\n        ]}\n      />\n      <Menu\n        allowCollapsed={false}\n        items={[\n          {\n            label: \"父级标题1\",\n            key: \"p-0\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-0\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-1\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            key: \"p-1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-2\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-3\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            key: \"p-2\",\n            iconType: \"icon-zhanghaodenglu\",\n            path: \"/link5\",\n          },\n        ]}\n      />\n      <ControlMenu />\n    </Space>\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"layout\",\n    packageName: \"@components/Layout\",\n    component: component_74\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_76\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_89 from '@components/LoadingButton';\nimport * as component_90 from 'antd';\nconst readmeConfig = {\n    name: `LoadingButton`,\n    summary: `<h3>何时使用</h3>\n<p>当点击按钮时，需要显示loading状态，当然你可以使用antd Button的loading属性，但是这样你需要自己声明一个state来控制，LoadingButton组件可以帮你做好这件事情</p>\n<h3>特点</h3>\n<p>通过onClick返回的Promise来控制Button的loading状态</p>\n<p>children除了可以传正常的jsx以外还接受function参数，可以接收到loading状态以便根据loading状态显示不同文案</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onClick</td>\n<td>点击按钮触发函数，可以返回一个Promise，当Promise再pending状态时Button将自动处于loading状态，当Promise返回结果会自动从loading切换回普通状态</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>Button的子元素，可以为jsx或者function，为function时可以接收到loading状态用来切换显示内容</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `LoadingButton_cd4ed`,\n        style: ``,\n        list: [{\n    title: `带有加载状态按钮`,\n    description: `点击按钮切换到加载状态，加载方法完成后自动切换为普通状态`,\n    code: `const { default: LoadingButton } = _LoadingButton;\nconst { Space, message } = antd;\n\nconst clickHandler = () => {\n  message.success(\"点击按钮1s后完成加载\");\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      message.success(\"完成\");\n      resolve();\n    }, 1000);\n  });\n};\nconst BaseExample = () => {\n  return (\n    <Space wrap>\n      <LoadingButton onClick={clickHandler}>按钮</LoadingButton>\n      <LoadingButton onClick={clickHandler}>\n        {(isLoading) => (isLoading ? \"正在加载中...\" : \"切换加载文案\")}\n      </LoadingButton>\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_LoadingButton\",\n    packageName: \"@components/LoadingButton\",\n    component: component_89\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_90\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_72 from '@components/Menu';\nimport * as component_73 from 'antd';\nconst readmeConfig = {\n    name: `Menu`,\n    summary: `<p>支持远程加载数据的菜单</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Menu_b6154`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Menu } = _Menu;\nconst { Space } = antd;\nconst { useState } = React;\n\nconst ControlMenu = () => {\n  const [current, setCurrent] = useState(\"s-0\");\n  return (\n    <Menu\n      currentKey={current}\n      onChange={setCurrent}\n      items={[\n        {\n          label: \"父级标题1\",\n          key: \"p-0\",\n          iconType: \"icon-zhanghaodenglu\",\n          children: [\n            {\n              label: \"子标题1\",\n              key: \"s-0\",\n            },\n            {\n              label: \"子标题2\",\n              key: \"s-1\",\n            },\n          ],\n        },\n        {\n          label: \"父级标题2\",\n          key: \"p-1\",\n          iconType: \"icon-zhanghaodenglu\",\n          children: [\n            {\n              label: \"子标题1\",\n              key: \"s-2\",\n            },\n            {\n              label: \"子标题2\",\n              key: \"s-3\",\n            },\n          ],\n        },\n        {\n          label: \"父级标题3\",\n          key: \"p-2\",\n          iconType: \"icon-zhanghaodenglu\",\n        },\n      ]}\n    />\n  );\n};\nconst BaseExample = () => {\n  return (\n    <Space>\n      <Menu\n        defaultItems={[\n          {\n            label: \"父级标题1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            iconType: \"icon-zhanghaodenglu\",\n            fetchOptions: {\n              loader: () => {\n                return new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve([\n                      {\n                        label: \"子标题1\",\n                        path: \"/link5\",\n                      },\n                      {\n                        label: \"子标题2\",\n                        path: \"/link6\",\n                      },\n                    ]);\n                  }, 1000);\n                });\n              },\n            },\n          },\n        ]}\n      />\n      <Menu\n        items={[\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题1\",\n            key: \"s-0\",\n            path: \"/link1\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题2\",\n            key: \"s-1\",\n            path: \"/link2\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题1\",\n            key: \"s-2\",\n            path: \"/link3\",\n          },\n          {\n            iconType: \"icon-zhanghaodenglu\",\n            label: \"子标题2\",\n            key: \"s-3\",\n            path: \"/link4\",\n          },\n        ]}\n      />\n      <Menu\n        allowCollapsed={false}\n        items={[\n          {\n            label: \"父级标题1\",\n            key: \"p-0\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-0\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-1\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            key: \"p-1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                key: \"s-2\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                key: \"s-3\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            key: \"p-2\",\n            iconType: \"icon-zhanghaodenglu\",\n            path: \"/link5\",\n          },\n        ]}\n      />\n      <Menu\n        allowCollapsed={false}\n        defaultItems={[\n          {\n            label: \"父级标题1\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            iconType: \"icon-zhanghaodenglu\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link4\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题3\",\n            iconType: \"icon-zhanghaodenglu\",\n            fetchOptions: {\n              loader: () => {\n                return new Promise((resolve) => {\n                  setTimeout(() => {\n                    resolve([\n                      {\n                        label: \"子标题1\",\n                        path: \"/link5\",\n                      },\n                      {\n                        label: \"子标题2\",\n                        path: \"/link6\",\n                      },\n                    ]);\n                  }, 1000);\n                });\n              },\n            },\n          },\n        ]}\n      />\n      <Menu\n        defaultItems={[\n          {\n            label: \"父级标题1\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link1\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link2\",\n              },\n            ],\n          },\n          {\n            label: \"父级标题2\",\n            children: [\n              {\n                label: \"子标题1\",\n                path: \"/link3\",\n              },\n              {\n                label: \"子标题2\",\n                path: \"/link4\",\n              },\n            ],\n          },\n        ]}\n      />\n      <ControlMenu />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Menu\",\n    packageName: \"@components/Menu\",\n    component: component_72\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_73\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_78 from '@components/Modal';\nimport * as component_79 from '@components/Global';\nimport * as component_80 from 'antd';\nimport * as component_81 from '@kne/react-fetch';\nimport * as component_82 from '@components/Content';\nimport * as component_83 from '@components/FormInfo';\nconst readmeConfig = {\n    name: `Modal`,\n    summary: `<h3>何时使用</h3>\n<p>需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以在当前页面正中打开一个浮层，承载相应的操作。</p>\n<h3>特点</h3>\n<p>该组件是antd Modal组件的再封装：</p>\n<ul>\n<li>修改了footer部分的设置逻辑,能更加简单的定义footer区域的功能</li>\n<li>添加了withDecorator可以更加方便的处理Modal外层的显示逻辑</li>\n<li>扩展了用于方法调用的useModal的hooks，可以通过hooks获得一个Modal的调用方法，并且保证其和Modal组件式调用有相同的UI表现和行为</li>\n<li>扩展了ModalButton组件，可以在点击该按钮时执行加载数据，并且Button的状态变为loading，在数据加载完成之后再弹出弹窗</li>\n<li>扩展了TabsModal组件，它是一个Tabs和Modal组合起来的组件，对弹窗title做了特殊处理，更加符合UI交互逻辑</li>\n</ul>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>footer</td>\n<td>弹窗的footer，当其被显式设置成null且footerButtons没有设置过时弹窗不显示footer。当它类型为function时可以得到close方法和withDecorator设置的props</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>footerButtons</td>\n<td>弹窗footer的按钮区，默认为确认和取消按钮，默认按钮分别响应onConfirm和onCancel方法，如果自定义设置footerButtons则需要自行传入onClick参数，onConfirm和onCancel方法将不生效</td>\n<td>array</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>弹窗关闭时调用，弹窗受控时由该方法将外部open状态修改</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onConfirm</td>\n<td>当footerButtons未自定义设置时点击确认按钮触发执行该方法，当其返回Promise点击后Promise，resolve之前确认按钮显示为loading状态，返回值为false或者Promise的resolve值为false时弹窗不会被关闭，其他情况弹窗默认关闭</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>和onConfirm类似，其为点击取消按钮触发</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>children</td>\n<td>弹窗内容，可以为jsx或者function，为function时可以接收到close和withDecorator设置的props</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>withDecorator</td>\n<td>弹窗修饰器，会接收到弹窗children的render方法，可以在其外部添加修饰内容后执行render方法，给render方法传入的值可以在children,footer,rightOptions类型为function时接收到对应的参数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>rightOptions</td>\n<td>弹窗右侧区域，和children类似可以为jsx或者function类型</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>maskClosable</td>\n<td>点击蒙层是否允许关闭</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数参考antd Modal组件</p>\n<h3>useModal</h3>\n<p>获取一个执行后可以弹出一个Modal组件的方法</p>\n<h4>return:modal</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>modal</td>\n<td>执行后可以弹出一个Modal弹窗，参数同Modal组件参数</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>\n<h3>TabsModal</h3>\n<p>一个Tabs和Modal组合起来的组件，对弹窗title做了特殊处理，更加符合UI交互逻辑</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>items</td>\n<td>同antd Tabs的items参数</td>\n<td>array</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].label</td>\n<td>选项卡头显示文字</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].children</td>\n<td>选项卡头显示内容，和antd Tabs不同的是它可以是一个function和Modal的children类似可以接收items[].withDecorator传入的参数</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>items[].key</td>\n<td>对应activeKey值</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>activeKey</td>\n<td>当前激活 tab 面板的 key</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>withDecorator</td>\n<td>弹窗修饰器和Modal的withDecorator作用一致</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>defaultActiveKey</td>\n<td>初始化选中面板的 key，如果没有设置 activeKey</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>切换面板的回调</td>\n<td>function</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>useTabsModal</h3>\n<p>获取一个执行后可以弹出一个TabsModal组件的方法</p>\n<h4>return:tabsModal</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tabsModal</td>\n<td>执行后可以弹出一个TabsModal弹窗，参数同TabsModal组件参数</td>\n<td>function</td>\n</tr>\n</tbody>\n</table>\n<h3>ModalButton</h3>\n<p>点击以后可以执行获取数据，在数据未返回时按钮展示为loading状态，数据返回后弹出Modal弹窗</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>@kne/react-fetch 所需参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modalProps</td>\n<td>同Modal参数,当它为function时，执行function后返回的值作为modalProps</td>\n<td>object,function({data,fetchApi,close})</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数同antd Button 组件</p>\n<h3>TabsModalButton</h3>\n<p>点击以后可以执行获取数据，在数据未返回时按钮展示为loading状态，数据返回后弹出TabsModal弹窗</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>@kne/react-fetch 所需参数</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>modalProps</td>\n<td>同TabsModal参数,当它为function时，执行function后返回的值作为modalProps</td>\n<td>object,function({data,fetchApi,close})</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数同antd Button 组件</p>`,\n    example: {\n        isFull: false,\n        className: `Modal_c59d6`,\n        style: ``,\n        list: [{\n    title: `普通弹窗`,\n    description: `展示弹窗的基本用法，自定义footer等功能。\n注意:\n1.onConfirm和onCancel只对于默认的footerButtons生效，如果是自定义的footerButtons则不需要传这两个参数，直接定义按钮的onClick即可。\n2.自定义的footerButtons的onClick可以返回一个Promise来延迟关闭弹窗，resolve的值为false不关闭弹窗，其他情况会自动关闭弹窗。在resolve未返回之前按钮会变成loading状态`,\n    code: `const { default: Modal, useModal } = _Modal;\nconst { useState } = React;\nconst { Button, Space, message, Radio } = antd;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  const modal = useModal();\n  const [size, setSize] = useState(\"default\");\n  const [open, setOpen] = useState(false);\n  return (\n    <Space direction=\"vertical\">\n      <Radio.Group\n        value={size}\n        options={[\n          { label: \"small\", value: \"small\" },\n          { label: \"default\", value: \"default\" },\n          {\n            label: \"large\",\n            value: \"large\",\n          },\n        ]}\n        onChange={(e) => {\n          setSize(e.target.value);\n        }}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n      <Space wrap>\n        <Modal\n          title=\"确定延迟关闭弹窗\"\n          size={size}\n          open={open}\n          onClose={() => {\n            setOpen(false);\n          }}\n          onConfirm={() => {\n            return new Promise((resolve) => {\n              message.success(\"弹窗1s后关闭\");\n              setTimeout(() => {\n                message.success(\"弹窗关闭\");\n                resolve();\n              }, 1000);\n            });\n          }}\n        >\n          <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>\n        </Modal>\n        <Button\n          onClick={() => {\n            setOpen(true);\n          }}\n        >\n          确定延迟关闭弹窗\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"hooks调用弹框\",\n              size,\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n            });\n          }}\n        >\n          hooks调用弹框\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"超高弹窗\",\n              size,\n              children: (\n                <div style={{ height: \"2000px\" }}>\n                  超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗超高弹窗\n                </div>\n              ),\n            });\n          }}\n        >\n          展示超高弹窗\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"自定义footer弹框\",\n              size,\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n              footer: ({ close }) => (\n                <Space>\n                  <span>自定义footer</span>\n                  <Button\n                    type=\"link\"\n                    onClick={() => {\n                      close();\n                    }}\n                  >\n                    关闭\n                  </Button>\n                </Space>\n              ),\n            });\n          }}\n        >\n          展示自定义footer弹框\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"无footer弹框\",\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n              footer: null,\n            });\n          }}\n        >\n          无footer弹框\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"自定义按钮组\",\n              size,\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n              footerButtons: [\n                {\n                  children: \"按钮一\",\n                },\n                {\n                  type: \"primary\",\n                  children: \"按钮二\",\n                },\n                {\n                  children: \"按钮三\",\n                },\n              ],\n            });\n          }}\n        >\n          自定义按钮组\n        </Button>\n        <Button\n          onClick={() => {\n            modal({\n              title: \"有rightOptions的弹窗\",\n              size,\n              children: <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>,\n              rightOptions: <div>右侧内容右侧内容右侧内容右侧内容</div>,\n            });\n          }}\n        >\n          有rightOptions的弹窗\n        </Button>\n      </Space>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_78\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_79\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_80\n}]\n},{\n    title: `需要加载数据的弹窗`,\n    description: `可以通过withDecorator属性实现弹窗的加载数据或者加载远程组件的逻辑，在数据或者远程组件加载完成之前弹窗展示loading状态，加载完成之后children可以获取到加载的数据`,\n    code: `const { default: Modal, useModal } = _Modal;\nconst { useState } = React;\nconst { Button, Space } = antd;\nconst { default: Fetch } = fetch;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst BaseExample = () => {\n  const modal = useModal();\n  const [open, setOpen] = useState(false);\n  return (\n    <Space wrap>\n      <Modal\n        title=\"组件调用方式\"\n        withDecorator={(render) => (\n          <Fetch\n            loader={() => {\n              return new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve([\n                    {\n                      label: \"内容1\",\n                      content: \"内容1内容1内容1内容1内容1内容1内容1\",\n                    },\n                    {\n                      label: \"内容2\",\n                      content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n                    },\n                  ]);\n                }, 1000);\n              });\n            }}\n            render={({ data }) => render({ data })}\n          />\n        )}\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n      >\n        {({ data }) => <Content list={data} col={2} />}\n      </Modal>\n      <Button\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        组件调用方式\n      </Button>\n      <Button\n        onClick={() => {\n          modal({\n            title: \"hooks调用方式\",\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        {\n                          label: \"内容1\",\n                          content: \"内容1内容1内容1内容1内容1内容1内容1\",\n                        },\n                        {\n                          label: \"内容2\",\n                          content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: ({ data }) => <Content list={data} col={2} />,\n          });\n        }}\n      >\n        hooks调用方式\n      </Button>\n      <Button\n        onClick={() => {\n          modal({\n            title: (props) => {\n              return \"hooks调用方式\";\n            },\n            withDecorator: (render) => (\n              <Fetch\n                loader={() => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve([\n                        {\n                          label: \"内容1\",\n                          content: \"内容1内容1内容1内容1内容1内容1内容1\",\n                        },\n                        {\n                          label: \"内容2\",\n                          content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n                        },\n                      ]);\n                    }, 1000);\n                  });\n                }}\n                render={({ data }) => render({ data })}\n              />\n            ),\n            children: ({ data }) => <Content list={data} col={2} />,\n          });\n        }}\n      >\n        hooks title调用方式\n      </Button>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_78\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_79\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_80\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_81\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_82\n}]\n},{\n    title: `可以弹出弹窗的按钮`,\n    description: `可以点击按钮弹出弹窗，并且在弹窗弹出之前可以加载数据，加载数据时，按钮为loading状态，数据加载完成之后再弹出弹窗`,\n    code: `const { ModalButton, TabsModalButton } = _Modal;\nconst { Space } = antd;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\nconst { default: FormInfo, Input, TextArea } = _FormInfo;\n\nconst api = {\n  loader: () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve([\n          { label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" },\n          {\n            label: \"内容2\",\n            content: \"内容2内容2内容2内容2内容2内容2内容2内容2\",\n          },\n        ]);\n      }, 1000);\n    });\n  },\n};\n\nconst BaseExample = () => {\n  return (\n    <Space wrap>\n      <ModalButton\n        api={api}\n        modalProps={({ data }) => {\n          return {\n            title: \"加载数据的弹窗\",\n            children: <Content list={data} col={2} />,\n          };\n        }}\n      >\n        点击加载数据\n      </ModalButton>\n      <TabsModalButton\n        api={api}\n        modalProps={({ data }) => {\n          return {\n            items: data.map(({ label, content }, index) => {\n              return {\n                key: index,\n                children: content,\n                label,\n              };\n            }),\n          };\n        }}\n      >\n        点击加载数据的Tabs弹窗\n      </TabsModalButton>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_78\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_79\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_80\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_82\n},{\n    name: \"_FormInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_83\n}]\n},{\n    title: `tabs弹窗`,\n    description: `展示一个tabs弹窗，tabs的选项的label会占据弹窗title位置，弹框的title将不显示\ntabs的items多加了withDecorator参数和Modal的withDecorator参数类似可以控制其外部显示及渲染内容\ntabs的items的children也可以是function，同样可以接收到TabsModal的withDecorator传回的参数`,\n    code: `const { TabsModal, useTabsModal } = _Modal;\nconst { useState } = React;\nconst { default: Fetch } = fetch;\nconst { Button, Space } = antd;\nconst { PureGlobal } = global;\nconst { default: Content } = _Content;\n\nconst BaseExample = () => {\n  const [open, setOpen] = useState(false);\n  const tabsModal = useTabsModal();\n  return <Space wrap>\n    <TabsModal open={open} onClose={() => {\n      setOpen(false);\n    }} items={[{\n      label: \"项目 1\", key: \"item-1\", children: <div>项目 1项目 1项目 1项目 1项目 1项目 1项目 1项目 1</div>\n    }, {\n      label: \"项目 2\", key: \"item-2\", children: <div>项目 2项目 2项目 2项目 2项目 2项目 2项目 2项目 2</div>\n    }]} rightOptions={<div>右边栏内容右边栏内容右边栏内容右边栏内容</div>}>\n      <div>弹窗弹窗弹窗弹窗弹窗弹窗弹窗</div>\n    </TabsModal>\n    <Button onClick={() => {\n      setOpen(true);\n    }}>组件调用方式</Button>\n    <Button onClick={() => {\n      tabsModal({\n        rightOptions: <div>右边栏内容右边栏内容右边栏内容右边栏内容</div>, items: [{\n          label: \"项目 1\", key: \"item-1\", children: <div>项目 1项目 1项目 1项目 1项目 1项目 1项目 1项目 1</div>\n        }, {\n          label: \"项目 2\", key: \"item-2\", children: <div>项目 2项目 2项目 2项目 2项目 2项目 2项目 2项目 2</div>\n        }]\n      });\n    }}>hooks调用方式</Button>\n    <Button onClick={() => {\n      tabsModal({\n        title: \"此title不展示\",\n        rightOptions: ({ data }) => <Content list={data} />,\n        withDecorator: (render) => <Fetch loader={() => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve([{ label: \"内容1\", content: \"内容1内容1内容1内容1内容1内容1内容1\" }, {\n                label: \"内容2\", content: \"内容2内容2内容2内容2内容2内容2内容2内容2\"\n              }]);\n            }, 1000);\n          });\n        }} render={({ data }) => render({ data })} />,\n        items: [{\n          label: \"项目 1\", key: \"item-1\", children: ({ data }) => <Content list={data} col={2} />\n        }, {\n          withDecorator: (render) => <Fetch loader={() => {\n            return new Promise((resolve) => {\n              setTimeout(() => {\n                resolve([{ label: \"内容3\", content: \"内容3内容3内容3内容3内容3内容3内容3\" }, {\n                  label: \"内容4\", content: \"内容4内容4内容4内容4内容4内容4内容4内容4\"\n                }]);\n              }, 1000);\n            });\n          }} render={({ data }) => render({ tabData: data })} />,\n          label: \"项目 2\",\n          key: \"item-2\",\n          children: ({ data, tabData }) => <Content list={[...data, ...tabData]} col={2} />\n        }]\n      });\n    }}>复杂数据加载</Button>\n  </Space>;\n};\n\nrender(<PureGlobal><BaseExample /></PureGlobal>);\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_78\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_79\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_80\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_81\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_82\n}]\n},{\n    title: `消息确认和提示`,\n    description: `展示确认消息提醒`,\n    code: `const { default: Modal, useConfirmModal } = _Modal;\nconst { useState } = React;\nconst { Button, Space, message } = antd;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  const confirmModal = useConfirmModal();\n  return (\n    <Space wrap>\n      <Button\n        onClick={() => {\n          confirmModal({\n            danger: true,\n            type: \"confirm\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        confirm\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"confirm\",\n            confirmType: \"warning\",\n            title: \"确定要编辑吗？\",\n            message:\n              \"确定要编辑确定要编辑确定要编辑确定要编辑确定要编辑确定要编辑确定要编辑\",\n          });\n        }}\n      >\n        confirm 警告\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"info\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        info\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"info\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        info无标题\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"success\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        success\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"warning\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        warning\n      </Button>\n      <Button\n        onClick={() => {\n          confirmModal({\n            type: \"error\",\n            title: \"确定要删除吗？\",\n            message:\n              \"确定要删除确定要删除确定要删除确定要删除确定要删除确定要删除\",\n          });\n        }}\n      >\n        error\n      </Button>\n    </Space>\n  );\n};\n\nrender(\n  <PureGlobal>\n    <BaseExample />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Modal\",\n    packageName: \"@components/Modal\",\n    component: component_78\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_79\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_80\n},{\n    name: \"fetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_81\n},{\n    name: \"_Content\",\n    packageName: \"@components/Content\",\n    component: component_82\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_94 from '@components/Navigation';\nimport * as component_95 from '@components/Global';\nimport * as component_96 from 'antd';\nconst readmeConfig = {\n    name: `Navigation`,\n    summary: `<h3>何时使用</h3>\n<p>系统的顶部导航，一级导航项偏左靠近 logo 放置，辅助菜单偏右放置。</p>\n<h3>特点</h3>\n<ul>\n<li>集成了Permissions权限判断，可以通过权限列表来判断导项是否显示</li>\n<li>在屏幕显示不了全部的一级导航时可以自动将后面的导航项收起到更多下拉菜单里面</li>\n</ul>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Navigation_84649`,\n        style: `.Navigation_84649 .fold-items {\n  width: 600px; }\n`,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Navigation } = _Navigation;\nconst { PureGlobal } = global;\n\nconst menuList = [\n  {\n    key: \"client\",\n    title: \"客户\",\n    path: \"/client\",\n    permission: \"client:client:look\",\n  },\n  {\n    key: \"position\",\n    title: \"职位\",\n    path: \"/position\",\n    permission: \"jd:job:look\",\n  },\n  {\n    key: \"ats\",\n    title: \"招聘流程\",\n    path: \"/ats\",\n  },\n  {\n    key: \"talent\",\n    title: \"人才库\",\n    permission: \"cv:cv:look\",\n    path: \"/talent\",\n  },\n  {\n    key: \"contract\",\n    title: \"合同\",\n    permission: \"contract:mgr:look\",\n    path: \"/contract\",\n  },\n  {\n    key: \"payment\",\n    title: \"付款信息\",\n    permission: \"payment:mgr:look\",\n    path: \"/payment\",\n  },\n  {\n    key: \"invoice-center\",\n    title: \"开票\",\n    permission: \"client:invoice:center\",\n    path: \"/invoice-center\",\n  },\n  {\n    key: \"invoice-manage\",\n    title: \"发票管理\",\n    permission: \"client:invoice:manager\",\n    path: \"/invoice-manage\",\n  },\n  {\n    key: \"setting\",\n    title: \"设置\",\n    permission: (permissions) =>\n      permissions.some(\n        (x) =>\n          [\n            \"system:permissions:mgr\",\n            \"system:org:mgr\",\n            \"system:user:mgr\",\n          ].indexOf(x) !== -1\n      ),\n    path: \"/setting\",\n  },\n];\n\nrender(\n  <PureGlobal>\n    <Navigation\n      list={menuList}\n      isFixed={false}\n      permissions={[\n        \"client:client:look\",\n        \"jd:job:look\",\n        \"cv:cv:look\",\n        \"contract:mgr:look\",\n        \"payment:mgr:look\",\n        \"client:invoice:center\",\n        \"client:invoice:manager\",\n        \"system:permissions:mgr\",\n      ]}\n    />\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Navigation\",\n    packageName: \"@components/Navigation\",\n    component: component_94\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_95\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Navigation } = _Navigation;\nconst { PureGlobal } = global;\n\nconst menuList = [\n  {\n    key: \"client\",\n    title: \"客户\",\n    path: \"/client\",\n    permission: \"client:client:look\",\n  },\n  {\n    key: \"position\",\n    title: \"职位\",\n    path: \"/position\",\n    permission: \"jd:job:look\",\n  },\n  {\n    key: \"ats\",\n    title: \"招聘流程\",\n    path: \"/ats\",\n  },\n  {\n    key: \"talent\",\n    title: \"人才库\",\n    permission: \"cv:cv:look\",\n    path: \"/talent\",\n  },\n  {\n    key: \"contract\",\n    title: \"合同\",\n    permission: \"contract:mgr:look\",\n    path: \"/contract\",\n  },\n  {\n    key: \"payment\",\n    title: \"付款信息\",\n    permission: \"payment:mgr:look\",\n    path: \"/payment\",\n  },\n  {\n    key: \"invoice-center\",\n    title: \"开票\",\n    permission: \"client:invoice:center\",\n    path: \"/invoice-center\",\n  },\n  {\n    key: \"invoice-manage\",\n    title: \"发票管理\",\n    permission: \"client:invoice:manager\",\n    path: \"/invoice-manage\",\n  },\n  {\n    key: \"setting\",\n    title: \"设置\",\n    permission: (permissions) =>\n      permissions.some(\n        (x) =>\n          [\n            \"system:permissions:mgr\",\n            \"system:org:mgr\",\n            \"system:user:mgr\",\n          ].indexOf(x) !== -1\n      ),\n    path: \"/setting\",\n  },\n];\n\nrender(\n  <PureGlobal>\n    <div className=\"fold-items\">\n      <Navigation\n        isFixed={false}\n        list={menuList}\n        permissions={[\n          \"client:client:look\",\n          \"jd:job:look\",\n          \"cv:cv:look\",\n          \"contract:mgr:look\",\n          \"payment:mgr:look\",\n          \"client:invoice:center\",\n          \"client:invoice:manager\",\n          \"system:permissions:mgr\",\n        ]}\n      />\n    </div>\n  </PureGlobal>\n);\n\n`,\n    scope: [{\n    name: \"_Navigation\",\n    packageName: \"@components/Navigation\",\n    component: component_94\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_95\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { useState } = React;\nconst { PureGlobal } = global;\nconst { default: Navigation } = _Navigation;\nconst { Checkbox, Space } = antd;\n\nconst menuList = [\n  {\n    key: \"client\",\n    title: \"客户\",\n    path: \"/client\",\n    permission: \"client:client:look\",\n  },\n  {\n    key: \"position\",\n    title: \"职位\",\n    path: \"/position\",\n    permission: \"jd:job:look\",\n  },\n  {\n    key: \"ats\",\n    title: \"招聘流程\",\n    path: \"/ats\",\n  },\n  {\n    key: \"talent\",\n    title: \"人才库\",\n    permission: \"cv:cv:look\",\n    path: \"/talent\",\n  },\n  {\n    key: \"contract\",\n    title: \"合同\",\n    permission: \"contract:mgr:look\",\n    path: \"/contract\",\n  },\n  {\n    key: \"payment\",\n    title: \"付款信息\",\n    permission: \"payment:mgr:look\",\n    path: \"/payment\",\n  },\n  {\n    key: \"invoice-center\",\n    title: \"开票\",\n    permission: \"client:invoice:center\",\n    path: \"/invoice-center\",\n  },\n  {\n    key: \"invoice-manage\",\n    title: \"发票管理\",\n    permission: \"client:invoice:manager\",\n    path: \"/invoice-manage\",\n  },\n  {\n    key: \"setting\",\n    title: \"设置\",\n    permission: (permissions) =>\n      permissions.some(\n        (x) =>\n          [\n            \"system:permissions:mgr\",\n            \"system:org:mgr\",\n            \"system:user:mgr\",\n          ].indexOf(x) !== -1\n      ),\n    path: \"/setting\",\n  },\n];\n\nconst Example = () => {\n  const [permissions, setPermissions] = useState([]);\n  return (\n    <PureGlobal>\n      <Space className=\"container\" direction=\"vertical\" size={32}>\n        <Navigation isFixed={false} list={menuList} permissions={permissions} />\n        <Checkbox.Group\n          value={permissions}\n          options={[\n            \"client:client:look\",\n            \"jd:job:look\",\n            \"cv:cv:look\",\n            \"contract:mgr:look\",\n            \"payment:mgr:look\",\n            \"client:invoice:center\",\n            \"client:invoice:manager\",\n            \"system:permissions:mgr\",\n          ]}\n          onChange={(values) => {\n            setPermissions(values);\n          }}\n        />\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"_Navigation\",\n    packageName: \"@components/Navigation\",\n    component: component_94\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_96\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_95\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"style_notification__Vv-MM__EG6bw\",\"list\":\"style_list__l8KOo__EG6bw\",\"header\":\"style_header__3dcv8__EG6bw\",\"item\":\"style_item__d92RS__EG6bw\",\"item-box\":\"style_item-box__dd-Lk__EG6bw\",\"index-1\":\"style_index-1__f97L0__EG6bw\",\"index-2\":\"style_index-2__04vAw__EG6bw\",\"item-box-main\":\"style_item-box-main__lnSak__EG6bw\",\"item-title\":\"style_item-title__mArMd__EG6bw\",\"level-high\":\"style_level-high__Uys7Y__EG6bw\",\"level-middle\":\"style_level-middle__EewyC__EG6bw\",\"level-low\":\"style_level-low__8kVyL__EG6bw\",\"title-icon\":\"style_title-icon__1EoAG__EG6bw\",\"item-subtitle\":\"style_item-subtitle__xeFJs__EG6bw\",\"close-btn\":\"style_close-btn__7qpG3__EG6bw\",\"is-loading\":\"style_is-loading__upVL+__EG6bw\",\"item-content\":\"style_item-content__8MlsG__EG6bw\",\"link-outer\":\"style_link-outer__kegyZ__EG6bw\",\"link\":\"style_link__F2CO-__EG6bw\",\"is-last-item\":\"style_is-last-item__MytRl__EG6bw\"};","import { Row, Col, Button, Typography } from \"antd\";\nimport QueueAnim from \"rc-queue-anim\";\nimport classnames from \"classnames\";\nimport SimpleBar from \"@common/components/SimpleBar\";\nimport { useGlobalContext, usePreset } from \"@components/Global\";\nimport Icon from \"@components/Icon\";\nimport Content from \"@components/Content\";\nimport style from \"./style.module.scss\";\nimport { useMemo, useRef, useState, useEffect } from \"react\";\nimport groupBy from \"lodash/groupBy\";\nimport first from \"lodash/first\";\nimport range from \"lodash/range\";\nimport LoadingButton, { useLoading } from \"@components/LoadingButton\";\nimport findIndex from \"lodash/findIndex\";\n\nconst LEVEL = [\"high\", \"middle\", \"low\"];\n\nconst NotificationItem = ({\n  level,\n  title,\n  groupLength,\n  subtitle,\n  content,\n  link,\n  id,\n  children,\n  className,\n}) => {\n  const { setGlobal } = useGlobalContext(\"notification\");\n  const { apis, ajax } = usePreset();\n  const { isLoading, callback } = useLoading(async () => {\n    const { data: resData } = apis?.notification?.read\n      ? await ajax(\n          Object.assign({}, apis.notification.read, {\n            data: { ids: [id] },\n          })\n        )\n      : { data: { code: 0 } };\n\n    if (resData.code === 0) {\n      setGlobal((notification) => {\n        const newList = (notification?.list || []).slice(0);\n        const index = findIndex(newList, (item) => id === item.id);\n        if (index > -1) {\n          newList.splice(index, 1);\n        }\n        return Object.assign({}, notification, { list: newList });\n      });\n    }\n  });\n  return (\n    <div\n      className={classnames(style[\"item\"], className)}\n      style={{ \"--group-length\": Math.min(groupLength, 3) || 1 }}\n    >\n      {groupLength &&\n        groupLength > 1 &&\n        range(1, Math.min(groupLength, 3))\n          .reverse()\n          .map((number) => (\n            <div\n              className={classnames(\n                style[\"item-box\"],\n                style[`index-${number}`]\n              )}\n              key={number}\n            />\n          ))}\n      <div className={classnames(style[\"item-box\"], style[\"item-box-main\"])}>\n        <div\n          className={classnames(style[\"item-title\"], style[`level-${level}`])}\n        >\n          <Icon\n            className={style[\"title-icon\"]}\n            type={level === \"high\" ? \"icon-tishi\" : \"icon-daiwochuli\"}\n          />\n          <Typography.Text ellipsis>{title}</Typography.Text>\n        </div>\n        <div className={style[\"item-content\"]}>\n          <div className={style[\"item-subtitle\"]}>\n            <Typography.Text ellipsis>{subtitle || \"\"}</Typography.Text>\n            <Icon\n              className={classnames(style[\"close-btn\"], {\n                [style[\"is-loading\"]]: isLoading,\n              })}\n              type=\"icon-close-thin\"\n              onClick={() => {\n                if (isLoading) {\n                  return;\n                }\n\n                if (!id) {\n                  return;\n                }\n\n                callback();\n              }}\n            />\n          </div>\n          {Array.isArray(content) ? (\n            <Content list={content} labelAlign=\"auto\" size=\"small\" />\n          ) : (\n            children\n          )}\n        </div>\n        {link && (\n          <div className={style[\"link-outer\"]}>\n            <LoadingButton\n              className={style[\"link\"]}\n              size=\"small\"\n              onClick={async () => {\n                const { data: resData } = apis?.notification?.read\n                  ? await ajax(\n                      Object.assign({}, apis.notification.read, {\n                        data: { ids: [id] },\n                      })\n                    )\n                  : { data: { code: 0 } };\n                if (resData.code === 0) {\n                  window.open(link);\n                }\n              }}\n            >\n              查看详情\n            </LoadingButton>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nNotificationItem.defaultProps = {\n  level: \"low\",\n};\n\nconst Notification = () => {\n  const { global: notification, setGlobal } = useGlobalContext(\"notification\");\n  const headOptionRef = useRef();\n  const { apis, ajax } = usePreset();\n  const [headOptionHeight, setHeadOptionHeight] = useState(32);\n\n  useEffect(() => {\n    headOptionRef.current &&\n      setHeadOptionHeight(headOptionRef.current?.clientHeight);\n  }, []);\n\n  const { list, expand } = Object.assign(\n    {},\n    {\n      expand: false,\n      list: [],\n    },\n    notification\n  );\n\n  const groupList = useMemo(() => {\n    const group = groupBy(list, (item) => item.level || \"low\");\n    return LEVEL.map((name) => group[name] || []);\n  }, [list]);\n\n  if (list.length === 0) {\n    return null;\n  }\n\n  return (\n    <div\n      className={style[\"notification\"]}\n      style={{\n        \"--head-option-height\": `${headOptionHeight}px`,\n      }}\n    >\n      <div ref={headOptionRef}>\n        <Row justify=\"end\" wrap={false} className={style[\"header\"]} gutter={8}>\n          {groupList.some((item) => item.length > 1) && (\n            <Col>\n              <Button\n                size=\"small\"\n                onClick={() => {\n                  setGlobal(\n                    Object.assign({}, notification, { expand: !expand })\n                  );\n                }}\n              >\n                {expand ? \"全部折叠\" : \"全部展开\"}\n              </Button>\n            </Col>\n          )}\n          <Col>\n            <LoadingButton\n              type=\"primary\"\n              size=\"small\"\n              onClick={async () => {\n                const { data: resData } = apis?.notification?.read\n                  ? await ajax(\n                      Object.assign({}, apis.notification.read, {\n                        data: {\n                          ids: list.map((item) => item.id).filter((id) => !!id),\n                        },\n                      })\n                    )\n                  : { data: { code: 0 } };\n                if (resData.code === 0) {\n                  setGlobal(Object.assign({}, notification, { list: [] }));\n                }\n              }}\n            >\n              全部清除\n            </LoadingButton>\n          </Col>\n        </Row>\n      </div>\n      <SimpleBar className={style[\"list\"]}>\n        <QueueAnim leaveReverse duration={200} interval={20}>\n          {groupList\n            .filter((item) => item && item.length > 0)\n            .map((item, groupKey) => {\n              if (expand) {\n                return item.map(\n                  (notification, index) =>\n                    notification && (\n                      <div key={`group-${groupKey}-${index}`}>\n                        <NotificationItem\n                          {...Object.assign({}, notification)}\n                        />\n                      </div>\n                    )\n                );\n              }\n              const firstItem = first(item);\n              return (\n                <div key={`group-${groupKey}-0`}>\n                  <NotificationItem\n                    {...Object.assign({}, firstItem)}\n                    groupLength={item.length}\n                    className={classnames({\n                      [style[\"is-last-item\"]]:\n                        groupList?.length &&\n                        +groupKey + 1 ===\n                          Math.min(\n                            groupList.filter((item) => item && item.length)\n                              ?.length,\n                            3\n                          ),\n                    })}\n                  />\n                </div>\n              );\n            })}\n        </QueueAnim>\n      </SimpleBar>\n    </div>\n  );\n};\n\nexport default Notification;\n","import * as component_97 from '@components/Notification';\nimport * as component_98 from '@components/Global';\nimport * as component_99 from 'antd';\nconst readmeConfig = {\n    name: `Notification`,\n    summary: `<p>消息通知</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Notification_96d00`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Notification } = _Notification;\nconst { PureGlobal } = global;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({ data: { code: 0, data: {} } });\n            }, 1000);\n          });\n        },\n        apis: {\n          notification: {},\n        },\n        global: {\n          notification: {\n            list: [\n              {\n                id: 1,\n                level: \"high\",\n                title:\n                  \"我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知我是一个高级通知\",\n                subtitle:\n                  \"通知标题通知标题通知标题通知标题通知标题通知标题通知标题通知标题\",\n                link: \"https://www.baidu.com\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                  {\n                    label: \"字段\",\n                    content:\n                      \"哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈\",\n                  },\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈\",\n                  },\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 2,\n                level: \"high\",\n                title: \"我是一个高级通知2\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 3,\n                level: \"high\",\n                title: \"我是一个高级通知3\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 4,\n                level: \"high\",\n                title: \"我是一个高级通知4\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 5,\n                level: \"low\",\n                title: \"我是一个低级通知\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 6,\n                level: \"low\",\n                title: \"我是一个低级通知2\",\n                content: [\n                  {\n                    label: \"字段\",\n                    content: \"哈哈哈哈\",\n                  },\n                ],\n              },\n              {\n                id: 7,\n                level: \"middle\",\n                title: \"我是一个中级通知\",\n                children: \"哈哈哈哈\",\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <Notification />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Notification\",\n    packageName: \"@components/Notification\",\n    component: component_97\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_98\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_99\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_91 from '@components/Permissions';\nimport * as component_92 from '@components/Global';\nimport * as component_93 from 'antd';\nconst readmeConfig = {\n    name: `Permissions`,\n    summary: `<h3>何时使用</h3>\n<p>在系统中存在一些功能和操作只允许某些角色用户使用，使用该组件可以让其包裹的组件或者区域根据系统的权限列表配置展示不同的状态</p>\n<h3>特点</h3>\n<p>通过在Global中的preset中设置permissions作为当前用户的权限列表，在Permissions组件配置permissions作为该功能要求具备的权限项，当要求具备的权限项全部在用户的权限列表中找到时为权限通过状态否则为权限不通过状态</p>\n<p>当权限不通过时，Permissions组件可以有三种方式呈现：</p>\n<ol>\n<li>用户可以看到操作功能的组件显示，但是不能进行操作，在鼠标移入时会以ToolTip提示错误原因，一般用在按钮等需要用户交互的功能位置</li>\n<li>用户不能看到操作功能或者数据呈现，对应区域显示错误原因，一般用在要数据展示等场景</li>\n<li>隐藏内部组件，一般用在不需要干扰到用户或用户不需要了解其没有权限的功能或数据等场景</li>\n</ol>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>类型，可选值为hidden，tooltip，error，分别为隐藏，气泡提示，错误提示三种形式</td>\n<td>string</td>\n<td>hidden</td>\n</tr>\n<tr>\n<td>tagName</td>\n<td>当前组件的tagName，同React.createElement的type参数，默认为span</td>\n<td>string</td>\n<td>span</td>\n</tr>\n<tr>\n<td>message</td>\n<td>提示文案</td>\n<td>string</td>\n<td>您暂无权限，请联系管理员</td>\n</tr>\n<tr>\n<td>request</td>\n<td>权限列表为一个字符串数组，每个item为一项权限的key，所有权限在全局的permissions中存在则判断为权限通过</td>\n<td>array[string]</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>children</td>\n<td>该参数可以传function类型，children({isPass, type, request})，isPass为权限校验是否通过，type为提示类型，request为所需权限列表，可以自行实现权限的展示</td>\n<td>jsx,function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Permissions_d08cc`,\n        style: `.Permissions_d08cc .box {\n  padding: 20px;\n  background: #f8f8f8; }\n`,\n        list: [{\n    title: `展示权限不通过的几种形式`,\n    description: `通过切换不同的type，可以预览三种不同type的表现形式`,\n    code: `const { default: Permissions } = _Permissions;\nconst { PureGlobal } = global;\nconst { Button, Radio, Space } = antd;\nconst { useState } = React;\n\nconst BaseExample = () => {\n  const [type, setType] = useState(\"tooltip\");\n  return (\n    <PureGlobal\n      preset={{\n        permissions: [\"permission_1\", \"permission_2\"],\n      }}\n    >\n      <Space direction=\"vertical\">\n        <Radio.Group\n          value={type}\n          options={[\n            { label: \"tooltip\", value: \"tooltip\" },\n            {\n              label: \"error\",\n              value: \"error\",\n            },\n            { label: \"hidden\", value: \"hidden\" },\n          ]}\n          onChange={(e) => {\n            setType(e.target.value);\n          }}\n          optionType=\"button\"\n          buttonStyle=\"solid\"\n        />\n        <Permissions type={type} request={[\"permission_3\"]}>\n          <div className=\"box\">\n            <Button onClick={() => console.log(\"执行操作\")}>操作</Button>\n          </div>\n        </Permissions>\n      </Space>\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Permissions\",\n    packageName: \"@components/Permissions\",\n    component: component_91\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_92\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_93\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","// extracted by mini-css-extract-plugin\nexport default {\"rich-editor\":\"style_rich-editor__guy9h__EG6bw\",\"read-only\":\"style_read-only__mFMiA__EG6bw\",\"hidden\":\"style_hidden__IUpV4__EG6bw\",\"no-border\":\"style_no-border__bKLqc__EG6bw\"};","// base64图片转file的方法（base64图片, 设置生成file的文件名）\nconst base64ToFile = (base64, fileName) => {\n  // 将base64按照 , 进行分割 将前缀  与后续内容分隔开\n  let data = base64.split(\",\");\n  // 利用正则表达式 从前缀中获取图片的类型信息（image/png、image/jpeg、image/webp等）\n  let type = data[0].match(/:(.*?);/)[1] || \"image/jpeg\";\n  // 从图片的类型信息中 获取具体的文件格式后缀（png、jpeg、webp）\n  let suffix = type.split(\"/\")[1] || \"jpg\";\n  // 使用atob()对base64数据进行解码  结果是一个文件数据流 以字符串的格式输出\n  const bstr = window.atob(data[1]);\n  // 获取解码结果字符串的长度\n  let n = bstr.length;\n  // 根据解码结果字符串的长度创建一个等长的整形数字数组\n  // 但在创建时 所有元素初始值都为 0\n  const u8arr = new Uint8Array(n);\n  // 将整形数组的每个元素填充为解码结果字符串对应位置字符的UTF-16 编码单元\n  while (n--) {\n    // charCodeAt()：获取给定索引处字符对应的 UTF-16 代码单元\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  // 利用构造函数创建File文件对象\n  // new File(bits, name, options)\n  const file = new File([u8arr], `${fileName}.${suffix}`, {\n    type: type,\n  });\n  // 将File文件对象返回给方法的调用者\n  return file;\n};\n\nexport default base64ToFile;\n","const isHref = (value) => {\n  const reg = /http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?/;\n  return value ? reg.test(value) : false;\n};\n\nexport default isHref;\n","import style from \"./style.module.scss\";\nimport useControlValue from \"@kne/use-control-value\";\nimport useSimulationBlur from \"@kne/use-simulation-blur\";\nimport { usePreset } from \"@components/Global\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport classnames from \"classnames\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport { message } from \"antd\";\nimport { get, merge, uniqueId, isNaN } from \"lodash\";\nimport ensureSlash from \"@kne/ensure-slash\";\nimport base64ToFile from \"@common/utils/base64ToFile\";\nimport isHref from \"@common/utils/isHref\";\n\nconst toolbarOptions = [\n  [{ header: [1, 2, 3, 4, 5, 6, false] }],\n  [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n  [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n  [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\n  [{ list: \"ordered\" }, { list: \"bullet\" }],\n  [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n  [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n  [{ align: [] }],\n  [\"image\"],\n  [\"link\"],\n  [\"clean\"], // remove formatting button\n];\n\nconst getText = (text) => {\n  const dom = document.createElement(\"div\");\n  dom.innerHTML = text;\n  return { text: dom.innerText };\n};\n\nconst formatEditorJS = (value) => {\n  const ops = [];\n  for (let i = 0; i < (value.blocks || []).length; i++) {\n    const item = value.blocks[i];\n    if (!item.data) {\n      continue;\n    }\n    if (item.type === \"header\") {\n      ops.push({ insert: `${getText(item.data.text).text}` });\n      ops.push({ attributes: { header: item.data.level }, insert: \"\\n\" });\n    }\n    if (item.type === \"paragraph\") {\n      ops.push({ insert: `${getText(item.data.text).text}\\n` });\n    }\n    if (item.type === \"delimiter\") {\n      ops.push({\n        attributes: { color: \"#000000\", size: \"huge\", bold: true },\n        insert: \" * * *\",\n      });\n      ops.push({ attributes: { align: \"center\" }, insert: \"\\n\" });\n    }\n    if (item.type === \"image\") {\n      ops.push({\n        insert: {\n          image: item.data.file.hasOwnProperty(\"id\")\n            ? `${window.location.origin}/attachment/${item.data.file.id}.png?id=${item.data.file.id}&originalName=${item.data.file.filename}`\n            : item.data.file.url,\n        },\n      });\n    }\n    if (item.type === \"list\") {\n      (item.data.items || []).map((it) => {\n        ops.push.apply(ops, [\n          { insert: `${getText(it.content).text}` },\n          { attributes: { list: \"bullet\" }, insert: \"\\n\" },\n        ]);\n      });\n    }\n    if (item.type === \"attaches\") {\n      const title =\n        get(item.data, \"file.title\") || get(item.data, \"title\") || \"\";\n      const extension =\n        get(item.data, \"file.extension\") ||\n        title.substring(title.lastIndexOf(\".\") + 1);\n      const link = item.data.file.hasOwnProperty(\"id\")\n        ? `${window.location.origin}/attachment/${item.data.file.id}.${extension}?id=${item.data.file.id}&originalName=${title}`\n        : item.data.file.url;\n      ops.push.apply(ops, [\n        { attributes: { link: link }, insert: title },\n        { insert: \"\\n\" },\n      ]);\n    }\n  }\n  return { ops };\n};\n\nconst getUrl = (url) => {\n  const a = document.createElement(\"A\");\n  a.href = url;\n  return a;\n};\n\nconst ReactRichEditor = ({\n  className,\n  readOnly,\n  preview,\n  onBlur,\n  placeholder,\n  hideToolbar,\n  border,\n  domain,\n  folder,\n  type,\n  maxHeight,\n  ...props\n}) => {\n  const [value, onChange] = useControlValue(props);\n  const isReadyRef = useRef(false);\n  const reactQuillRef = useRef(null);\n  const ref = useSimulationBlur(() => {\n    onBlur && onBlur();\n  });\n  const { ossApi, ossToStatic, ajax, urlToOss } = usePreset();\n  const formatValue = useMemo(() => {\n    if (value && Object.prototype.toString.call(value) === \"[object Object]\") {\n      if (value.hasOwnProperty(\"ops\")) {\n        return value;\n      }\n      if (value.hasOwnProperty(\"blocks\")) {\n        return formatEditorJS(value);\n      }\n      return value;\n    }\n    if (value && typeof value === \"string\") {\n      return { ops: [{ insert: `${getText(value).text}\\n` }] };\n    }\n    return { ops: [] };\n  }, [value]);\n\n  const isEditorJS = useMemo(() => {\n    if (value && Object.prototype.toString.call(value) === \"[object Object]\") {\n      if (value.hasOwnProperty(\"blocks\")) {\n        return true;\n      }\n    }\n    return false;\n  }, [value]);\n\n  // 将附件域名下的链接上传转为静态文件\n  const loadImage = async (src, folder) => {\n    const obj = getUrl(src);\n    const searchParams = new URLSearchParams(obj.search);\n    const searchId = searchParams?.get(\"id\");\n    const fileName = obj.pathname.substring(obj.pathname.lastIndexOf(\"/\") + 1);\n    const id = searchId || fileName.substring(0, fileName.lastIndexOf(\".\"));\n    if (id) {\n      const { data } = await ajax(\n        merge({}, ossApi, { params: { id }, showError: false })\n      );\n      const linkSrc = ossApi.transformData\n        ? ossApi.transformData(data)\n        : data.data;\n      const url = linkSrc\n        ? await urlToOss({ url: ensureSlash(linkSrc), folder })\n        : src;\n      return url;\n    }\n    const _url = await urlToOss({ url: src, folder });\n    if (_url) {\n      return _url;\n    }\n    return src;\n  };\n\n  const imageHandler = async () => {\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", \"file\");\n    input.setAttribute(\"accept\", \"image/*\");\n    input.click();\n    input.onchange = () => {\n      const file = input.files[0];\n      const hide = message.loading(\"上传中...\", 0);\n      ossToStatic({ file, folder }).then((url) => {\n        let quill = reactQuillRef?.current?.getEditor(); //获取到编辑器本身\n        const cursorPosition = quill.getSelection().index; //获取当前光标位置\n        quill.insertEmbed(cursorPosition, \"image\", url, \"api\"); //插入图片\n        quill.setSelection(cursorPosition + 1); //光标位置加1\n        hide();\n      });\n    };\n  };\n\n  const updateLink = async () => {\n    if (!reactQuillRef.current) return;\n    var linkNodes = ref.current?.querySelectorAll(\".ql-container img\");\n    for (let i = 0; i < linkNodes.length; i++) {\n      const linkNode = linkNodes[i];\n      let obj = getUrl(linkNode.src);\n      const image = new Image();\n      image.src = linkNode.src;\n      // 检查是否是本站点域名链接\n      const isSameOrigin = domain.some((x) => x.host === obj.hostname);\n      const isNeedUpdate = domain.some(\n        (x) => x.host === obj.hostname && x.update === true\n      );\n      if (isSameOrigin) {\n        image.onerror = () => {\n          isNeedUpdate &&\n            loadImage(linkNode.src, folder).then((url) => {\n              linkNode.src = url;\n            });\n        };\n      } else {\n        // 判断图片是否是base64\n        if (/^data:image/.test(linkNode.src)) {\n          const fileName = uniqueId(\"base64_\") + new Date().getTime();\n          const file = base64ToFile(linkNode.src, fileName);\n          ossToStatic({ file, folder }).then(async (url) => {\n            linkNode.src = url;\n          });\n        } else if (isHref(linkNode.src)) {\n          //  如果是第三方网页链接,将第三方网页链接上传转化为本站点服务链接\n          urlToOss({ url: ensureSlash(linkNode.src), folder }).then((url) => {\n            if (url) linkNode.src = url;\n          });\n        }\n      }\n    }\n\n    var linkNodeLinks = ref.current?.querySelectorAll(\".ql-container a\");\n    for (let i = 0; i < linkNodeLinks.length; i++) {\n      const linkNode = linkNodeLinks[i];\n      if (isHref(linkNode.href)) {\n        let obj = getUrl(linkNode.href);\n        // 检查是否是本站点域名链接\n        const isNeedUpdate = domain.some(\n          (x) => x.host === obj.hostname && x.update === true\n        );\n        isNeedUpdate &&\n          loadImage(linkNode.href, folder).then((url) => {\n            linkNode.href = url;\n          });\n      }\n    }\n  };\n\n  const updateEditor = async (editorContent) => {\n    const ops = get(editorContent, \"ops\") || [];\n    for (let i = 0; i < ops.length; i++) {\n      const item = ops[i];\n      const nodeSrc = get(item, \"insert.image\");\n      if (nodeSrc) {\n        let obj = getUrl(nodeSrc);\n        // 检查是否是本站点域名链接\n        const isSameOrigin = domain.some((x) => x.host === obj.hostname);\n        const isNeedUpdate = domain.some(\n          (x) => x.host === obj.hostname && x.update === true\n        );\n        if (isSameOrigin) {\n          const url = isNeedUpdate ? await loadImage(nodeSrc, folder) : nodeSrc;\n          item.insert.image = url;\n        } else {\n          // 判断图片是否是base64\n          if (/^data:image/.test(nodeSrc)) {\n            const fileName = uniqueId(\"base64_\") + new Date().getTime();\n            const file = base64ToFile(nodeSrc, fileName);\n            const url = await ossToStatic({ file, folder });\n            item.insert.image = url;\n          } else if (isHref(nodeSrc)) {\n            //  如果是第三方网页链接,将第三方网页链接上传转化为本站点服务链接\n            const url = await urlToOss({ url: ensureSlash(nodeSrc), folder });\n            item.insert.image = url || nodeSrc;\n          }\n        }\n      }\n    }\n    return { ops };\n  };\n\n  const modules = useMemo(() => {\n    return {\n      toolbar: {\n        container: toolbarOptions,\n        handlers: {\n          image: (value) => {\n            imageHandler.call(this, props);\n          },\n        },\n      },\n      // counter: {\n      //   container: \"#counter\",\n      //   unit: 'word'\n      // }\n    };\n  }, []);\n\n  useEffect(() => {\n    isReadyRef.current = false;\n    const timer = setInterval(() => {\n      if (reactQuillRef.current && reactQuillRef.current.editor) {\n        isReadyRef.current = true;\n        updateLink();\n        clearInterval(timer);\n      }\n    }, 10);\n    return () => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    };\n  }, []);\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        \"--max-height\":\n          maxHeight && !isNaN(parseFloat(maxHeight))\n            ? parseFloat(maxHeight) + \"px\"\n            : \"\",\n      }}\n      className={classnames(className, style[\"rich-editor\"], {\n        [style[\"read-only\"]]: preview || readOnly,\n        [style[\"hidden\"]]: preview || hideToolbar || readOnly,\n        [style[\"no-border\"]]: border === false,\n      })}\n    >\n      <ReactQuill\n        ref={reactQuillRef}\n        readOnly={readOnly}\n        modules={modules}\n        value={type === \"html\" ? value : formatValue}\n        placeholder={placeholder}\n        theme=\"snow\"\n        onChange={async (content, delta, source, editor) => {\n          const editorContent =\n            type === \"html\" ? editor.getHTML() : editor.getContents();\n          updateLink();\n          const result =\n            type === \"html\" ? editorContent : await updateEditor(editorContent);\n          onChange && onChange(result);\n        }}\n      />\n    </div>\n  );\n};\n\nReactRichEditor.defaultProps = {\n  placeholder: \"请输入\",\n  hideToolbar: false,\n  border: true,\n  value: null,\n  readOnly: false,\n  preview: false,\n  defaultValue: { ops: [] },\n  folder: \"richEditor\", // 支持使用/创建子文件夹\n  domain: [\n    { host: \"localhost\", update: true },\n    { host: \"attachment.dev.fatalent.cn\", update: true },\n    { host: \"attachment.test.fatalent.cn\", update: true },\n    { host: \"attachment.fatalent.cn\", update: true },\n    { host: \"fat-dev-static.oss-cn-shanghai.aliyuncs.com\" },\n    { host: \"fat-test-static.oss-cn-shanghai.aliyuncs.com\" },\n    { host: \"fat-static.oss-cn-shanghai.aliyuncs.com\" },\n  ],\n};\n\nexport default ReactRichEditor;\n","import { hooks } from \"@components/FormInfo\";\nimport ReactRichEditor from \"./ReactRichEditor\";\n\nconst { useOnBlur } = hooks;\n\nconst RichEditor = (props) => {\n  const render = useOnBlur(props);\n  return render(ReactRichEditor);\n};\n\nRichEditor.Field = RichEditor.field = ReactRichEditor;\n\nexport default RichEditor;\n","import * as component_100 from '@components/RichEditor';\nimport * as component_101 from '@components/RichEditor/doc/data.json';\nimport * as component_102 from 'antd';\nimport * as component_103 from '@components/Global';\nimport * as component_104 from '@kne/react-form-antd';\nconst readmeConfig = {\n    name: `RichEditor`,\n    summary: `<p>富文本编辑器 <em><strong>（已废弃请勿使用）</strong></em></p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hideToolbar</td>\n<td>是否隐藏工具栏</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>value</td>\n<td>-</td>\n<td>object</td>\n<td>null</td>\n</tr>\n<tr>\n<td>readOnly</td>\n<td>是否只读</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>preview</td>\n<td>是否预览模式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>border</td>\n<td>是否显示border</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: true,\n        className: `RichEditor_801c7`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const RichEditor = _RichEditor.default.field;\nconst { Button } = antd;\nconst { useState } = React;\nconst { PureGlobal: Global } = global;\nconst BaseExample = () => {\n  // const data = {\"ops\": [{\"insert\": {\"image\": \"http://localhost:3001/ui_components/mock/xasdXsdgszxq-Zsdsrw.png?originalName=WechatIMG22%E5%89%AF%E6%9C%AC.jpg&id=xDBhiYMBxoTGC6WmoMbu\"}}]};\n  const data = \"<p>sdfasfsdf</p>\";\n  const [text, setText] = useState(data);\n  return (\n    <Global\n      preset={{\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        uploadFile: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id: \"xDBhiYMBxoTGC6WmoMbu\",\n                    originalName: \"WechatIMG22副本.jpg\",\n                  },\n                },\n              });\n            });\n          });\n        },\n        ossToStatic: ({ file, folder }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        urlToOss: ({ url, folder = \"richEditor\" }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        ajax: (config) => {\n          console.log(config);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: \"/ui_components/mock/xasdXsdgszxq-Zsdsrw.png\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n    >\n      <RichEditor type={\"html\"} value={text} onChange={setText} />\n      <div>值：{text ? JSON.stringify(text, null, 2) : \"\"}</div>\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_RichEditor\",\n    packageName: \"@components/RichEditor\",\n    component: component_100\n},{\n    name: \"data\",\n    packageName: \"@components/RichEditor/doc/data.json\",\n    component: component_101\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_102\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_103\n}]\n},{\n    title: `只读模式`,\n    description: `展示只读模式`,\n    code: `const RichEditor = _RichEditor.default.field;\nconst { Button } = antd;\nconst { useState } = React;\nconst { PureGlobal: Global } = global;\nconst BaseExample = () => {\n  const data = {\n    ops: [\n      { insert: \"Gandalf\", attributes: { bold: true } },\n      { insert: \" the \" },\n      { insert: \"Grey\", attributes: { color: \"#cccccc\" } },\n    ],\n  };\n  return (\n    <Global\n      preset={{\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n        },\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        uploadFile: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id: \"xDBhiYMBxoTGC6WmoMbu\",\n                    originalName: \"WechatIMG22副本.jpg\",\n                  },\n                },\n              });\n            });\n          });\n        },\n        ossToStatic: ({ file, folder }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        urlToOss: ({ url, folder = \"richEditor\" }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        ajax: (config) => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: \"/ui_components/mock/xasdXsdgszxq-Zsdsrw.png\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n    >\n      <RichEditor value={data} readOnly={true} />\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_RichEditor\",\n    packageName: \"@components/RichEditor\",\n    component: component_100\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_102\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_103\n}]\n},{\n    title: `在表单中使用`,\n    description: `展示在表单中使用`,\n    code: `const RichEditor = _RichEditor.default;\nconst { default: Form, SubmitButton } = reactForm;\nconst { PureGlobal: Global } = global;\n\nconst BaseExample = () => {\n  const data = {\n    ops: [\n      { insert: \"Gandalf\", attributes: { bold: true } },\n      { insert: \" the \" },\n      { insert: \"Grey\", attributes: { color: \"#cccccc\" } },\n    ],\n  };\n  return (\n    <Global\n      preset={{\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n        },\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        uploadFile: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id: \"xDBhiYMBxoTGC6WmoMbu\",\n                    originalName: \"WechatIMG22副本.jpg\",\n                  },\n                },\n              });\n            });\n          });\n        },\n        ossToStatic: ({ file, folder }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        urlToOss: ({ url, folder = \"richEditor\" }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        ajax: (config) => {\n          console.log(config);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: \"/ui_components/mock/eXur9YEBzBdA-Vkwaigw.png\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n    >\n      <Form\n        data={{\n          des: data,\n        }}\n        onSubmit={(data) => {\n          console.log(data);\n        }}\n      >\n        <RichEditor name=\"des\" label=\"描述\" />\n        <div>\n          <SubmitButton>提交</SubmitButton>\n        </div>\n      </Form>\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_RichEditor\",\n    packageName: \"@components/RichEditor\",\n    component: component_100\n},{\n    name: \"reactForm\",\n    packageName: \"@kne/react-form-antd\",\n    component: component_104\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_103\n}]\n},{\n    title: `支持Editor格式数据`,\n    description: `支持Editor格式数据`,\n    code: `const RichEditor = _RichEditor.default.field;\nconst { PureGlobal: Global } = global;\nconst { default: value } = data;\nconst { useState } = React;\n\nconst BaseExample = () => {\n  const [text, setText] = useState(value);\n  return (\n    <Global\n      preset={{\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        ossApi: {\n          url: \"/api/v1/attachment/get/link\",\n          transformData: () => {\n            return \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\";\n          },\n        },\n        uploadFile: () => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: {\n                    id: \"xDBhiYMBxoTGC6WmoMbu\",\n                    originalName: \"WechatIMG22副本.jpg\",\n                  },\n                },\n              });\n            });\n          });\n        },\n        ossToStatic: ({ file, folder }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        urlToOss: ({ url, folder = \"richEditor\" }) => {\n          return new Promise(async (resolve) => {\n            setTimeout(() => {\n              resolve(\n                \"https://fat-dev-static.oss-cn-shanghai.aliyuncs.com/position-top.png\"\n              );\n            });\n          });\n        },\n        ajax: (config) => {\n          console.log(config);\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                data: {\n                  code: 0,\n                  data: \"/ui_components/mock/xasdXsdgszxq-Zsdsrw.png\",\n                },\n              });\n            }, 1000);\n          });\n        },\n      }}\n    >\n      <RichEditor value={text} onChange={setText} />\n      <div>转换后值：{JSON.stringify(text, null, 2)}</div>\n      <div>原始值：{JSON.stringify(value, null, 2)}</div>\n    </Global>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_RichEditor\",\n    packageName: \"@components/RichEditor\",\n    component: component_100\n},{\n    name: \"data\",\n    packageName: \"@components/RichEditor/doc/data.json\",\n    component: component_101\n},{\n    name: \"reactForm\",\n    packageName: \"@kne/react-form-antd\",\n    component: component_104\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_103\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_105 from '@components/StateBar';\nimport * as component_106 from 'antd';\nconst readmeConfig = {\n    name: `StateBar`,\n    summary: `<p>用于 State Bar</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>stateOption</td>\n<td>state操作列表</td>\n<td>string</td>\n<td>{key: string, tab: ReactNode}[]</td>\n</tr>\n<tr>\n<td>activeKey</td>\n<td>当前激活 tab 面板的 key</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>type</td>\n<td>当前tab展示样式</td>\n<td>'tab'、'radio'、'step'</td>\n<td>'tab'</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>事件返回选中的key</td>\n<td>(value: string) =&gt; void</td>\n<td></td>\n</tr>\n<tr>\n<td>tabBarExtraContent</td>\n<td>展示在state bar右侧</td>\n<td>ReactNode</td>\n<td>null</td>\n</tr>\n<tr>\n<td>isInner</td>\n<td>底部线延展至总长</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3>Mapping</h3>\n<h4>stateOption</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>对应 activeKey</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>tab</td>\n<td>选项卡头显示文字</td>\n<td>ReactNode</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `StateBar_de00a`,\n        style: ``,\n        list: [{\n    title: `State Bar`,\n    description: `State Bar`,\n    code: `const { default: StateBar } = _StateBar;\nconst { Button, Radio, Space } = antd;\nconst { useState } = React;\n\nconst BaseExample = () => {\n  const [size, setSize] = useState(\"default\");\n  const [isInner, setIsInner] = useState(false);\n  return (\n    <Space direction=\"vertical\">\n      <Radio.Group\n        value={isInner}\n        options={[\n          { label: \"inner\", value: true },\n          { label: \"normal\", value: false },\n        ]}\n        onChange={(e) => {\n          setIsInner(e.target.value);\n        }}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n      <Radio.Group\n        value={size}\n        options={[\n          { label: \"small\", value: \"small\" },\n          { label: \"default\", value: \"default\" },\n          { label: \"large\", value: \"large\" },\n        ]}\n        onChange={(e) => {\n          setSize(e.target.value);\n        }}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n      <StateBar\n        size={size}\n        isInner={isInner}\n        stateOption={[\n          { tab: \"全部\", key: \"1\" },\n          { tab: \"科目一\", key: \"2\" },\n          {\n            tab: \"科目二\",\n            key: \"3\",\n          },\n          { tab: \"科目三\", key: \"4\" },\n          { tab: \"科目四\", key: \"5\" },\n        ]}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateBar\",\n    packageName: \"@components/StateBar\",\n    component: component_105\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_106\n}]\n},{\n    title: `Radio State Bar`,\n    description: `Radio State Bar`,\n    code: `const { default: StateBar } = _StateBar;\nconst { Radio, Space } = antd;\nconst { useState } = React;\n\nconst BaseStateExample = () => {\n  const [size, setSize] = useState(\"default\");\n  return (\n    <Space direction=\"vertical\">\n      <Radio.Group\n        value={size}\n        options={[\n          { label: \"small\", value: \"small\" },\n          { label: \"default\", value: \"default\" },\n          { label: \"large\", value: \"large\" },\n        ]}\n        onChange={(e) => {\n          setSize(e.target.value);\n        }}\n        optionType=\"button\"\n        buttonStyle=\"solid\"\n      />\n      <StateBar\n        size={size}\n        type=\"radio\"\n        stateOption={[\n          { tab: \"全部\", key: \"1\" },\n          { tab: \"科目一\", key: \"2\" },\n          { tab: \"科目二\", key: \"3\" },\n          { tab: \"科目三\", key: \"4\" },\n          { tab: \"科目四\", key: \"5\" },\n          { tab: \"科目一1\", key: \"22\" },\n          { tab: \"科目二2\", key: \"33\" },\n          { tab: \"科目三3\", key: \"44\" },\n          { tab: \"科目四4\", key: \"55\", style: { cursor: \"copy\" } },\n        ]}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseStateExample />);\n\n`,\n    scope: [{\n    name: \"_StateBar\",\n    packageName: \"@components/StateBar\",\n    component: component_105\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_106\n}]\n},{\n    title: `Step State Bar`,\n    description: `Step State Bar`,\n    code: `const { default: StateBar } = _StateBar;\n\nconst BaseStateExample = () => {\n  return (\n    <StateBar\n      type=\"step\"\n      stateOption={[\n        { tab: \"全部\", key: \"1\" },\n        { tab: \"科目一\", key: \"2\" },\n        { tab: \"科目二\", key: \"3\" },\n        { tab: \"科目三\", key: \"4\" },\n        { tab: \"科目四\", key: \"5\" },\n        { tab: \"科目一1\", key: \"22\" },\n        { tab: \"科目二2\", key: \"33\" },\n        { tab: \"科目三3\", key: \"44\" },\n        { tab: \"科目四4\", key: \"55\", className: \"last\" },\n      ]}\n      tabBarExtraContent={<div>测试</div>}\n    />\n  );\n};\n\nrender(<BaseStateExample />);\n\n`,\n    scope: [{\n    name: \"_StateBar\",\n    packageName: \"@components/StateBar\",\n    component: component_105\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_107 from '@components/StateTag';\nimport * as component_108 from '@components/Descriptions';\nimport * as component_109 from 'lodash';\nconst readmeConfig = {\n    name: `StateTag`,\n    summary: `<p>用于展示标签</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>tag的类型，类型决定显示的颜色</td>\n<td>'default'(#666666)、'skill'(#666666)(此时边框颜色为 #EEEEEE)、'success'(#027A48)、'progress'(#F09700)、'danger'(#D14343)、'info'(#155ACF)、'other'(#6740C3)(待定颜色)、'result'(#666666)、'filterResult'(#5CB8B2)</td>\n<td>'default'</td>\n</tr>\n<tr>\n<td>showBorder</td>\n<td>是否展示边框</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>showBackground</td>\n<td>是否展示背景色</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>text</td>\n<td>tag文案</td>\n<td>string</td>\n<td>''</td>\n</tr>\n<tr>\n<td>filterName</td>\n<td>tag类型为“filterResult”时显示在前边的文案</td>\n<td>string</td>\n<td>''</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数参考 <a href=\"https://ant.design/components/tag-cn\">antd Tag.Tag</a></p>`,\n    example: {\n        isFull: true,\n        className: `StateTag_cfeaa`,\n        style: ``,\n        list: [{\n    title: `基本示例`,\n    description: `状态标签`,\n    code: `const { default: StateTag } = _StateTag;\nconst { default: Descriptions } = _Descriptions;\nconst { range } = lodash;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <div>使用场景: 列表页Table,简历详情页</div>\n      <br />\n      <Descriptions\n        dataSource={[\n          [\n            { label: \"使用规则\", content: \"待XX，暂停\" },\n            { label: \"代码示例\", content: \\`{type: \"info\", text: \"标签内容\"}\\` },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"info\", text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: <StateTag {...{ type: \"info\", text: \"待提交开票\" }} />,\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"XX中，正在XX中\" },\n            {\n              label: \"代码示例\",\n              content: \\`{type: \"progress\", text: \"退票审核中\"}\\`,\n            },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"progress\", text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: (\n                <StateTag {...{ type: \"progress\", text: \"退票审核中\" }} />\n              ),\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"通过，成功，完成\" },\n            {\n              label: \"代码示例\",\n              content: \\`{type: \"success\", text: \"标签内容\"}\\`,\n            },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"success\", text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: <StateTag {...{ type: \"success\", text: \"标签内容\" }} />,\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"不通过，失败，淘汰，缺席，拒绝\" },\n            {\n              label: \"代码示例\",\n              content: \\`{type: \"danger\", text: \"退票拒绝\"}\\`,\n            },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"danger\", text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: <StateTag {...{ type: \"danger\", text: \"退票拒绝\" }} />,\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"取消，撤销，停止\" },\n            { label: \"代码示例\", content: \\`{text: \"撤销开票审核\"}\\` },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ text: \"标签内容\" }} />,\n            },\n            {\n              label: \"示例\",\n              content: <StateTag {...{ text: \"撤销开票审核\" }} />,\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"（暂时还未用到）\" },\n            { label: \"代码示例\", content: \\`{type: \"other\", text: \"标签内容\"}\\` },\n          ],\n          [\n            {\n              label: \"标签样式\",\n              content: <StateTag {...{ type: \"other\", text: \"标签内容\" }} />,\n            },\n          ],\n        ]}\n      />\n      <br />\n      <br />\n      <div>个别特殊场景（需要单独询问UI):</div>\n      <br />\n      <Descriptions\n        dataSource={[\n          [\n            { label: \"使用规则\", content: \"待XX，暂停\" },\n            {\n              label: \"示例\",\n              content: (\n                <div>\n                  <StateTag {...{ type: \"success\", text: \"已推荐简历\" }} />\n                  <StateTag {...{ type: \"success\", text: \"已退票\" }} />\n                </div>\n              ),\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"已XX待XX\" },\n            {\n              label: \"示例\",\n              content: (\n                <div>\n                  <StateTag {...{ type: \"success\", text: \"已开票待寄出\" }} />\n                  <StateTag {...{ type: \"success\", text: \"已待寄待收款\" }} />\n                </div>\n              ),\n            },\n          ],\n          [\n            {\n              label: \"使用规则\",\n              content: \"已XX+词语：根据后面的词语语义进行判断\",\n            },\n            {\n              label: \"示例\",\n              content: (\n                <div>\n                  <StateTag {...{ type: \"success\", text: \"已成功\" }} />\n                  <StateTag {...{ type: \"default\", text: \"已取消\" }} />\n                  <StateTag {...{ type: \"danger\", text: \"已失败\" }} />\n                  <StateTag {...{ type: \"progress\", text: \"已暂停\" }} />\n                </div>\n              ),\n            },\n          ],\n          [\n            { label: \"使用规则\", content: \"完全根据语义语境判断\" },\n            {\n              label: \"示例\",\n              content: (\n                <div>\n                  <StateTag {...{ type: \"success\", text: \"全部到款\" }} />\n                  <StateTag {...{ type: \"success\", text: \"部分到款\" }} />\n                  <StateTag {...{ type: \"success\", text: \"简历亮点\" }} />\n                  <StateTag {...{ type: \"danger\", text: \"简历风险点\" }} />\n                </div>\n              ),\n            },\n          ],\n        ]}\n      />\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_107\n},{\n    name: \"_Descriptions\",\n    packageName: \"@components/Descriptions\",\n    component: component_108\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_109\n}]\n},{\n    title: `基本示例`,\n    description: `技能标签`,\n    code: `const { default: StateTag } = _StateTag;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <StateTag\n        text={\"技能标签\"}\n        type={\"skill\"}\n        showBorder\n        showBackground={false}\n      />\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_107\n}]\n},{\n    title: `基本示例`,\n    description: `下拉菜单、弹窗中已选结果标签`,\n    code: `const { default: StateTag } = _StateTag;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <StateTag\n        text={\"技能标签\"}\n        type={\"result\"}\n        showBackground={false}\n        closable\n        onClose={() => console.log(\"close\")}\n      />\n      <StateTag\n        text={\"技能标签\"}\n        type={\"result\"}\n        closable\n        onClose={() => console.log(\"close\")}\n      />\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_107\n}]\n},{\n    title: `基本示例`,\n    description: `筛选组件中筛选结果标签`,\n    code: `const { default: StateTag } = _StateTag;\n\nconst BaseExample = () => {\n  return (\n    <div>\n      <StateTag\n        filterName={\"BD\"}\n        text={\"陈枫林，王晓晨\"}\n        type={\"filterResult\"}\n        closable\n        onClose={() => console.log(\"close\")}\n      />\n      <br />\n      <StateTag\n        filterName={\"添加人\"}\n        text={\"陈枫林，王晓晨，陈路，张力\"}\n        type={\"filterResult\"}\n        closable\n        onClose={() => console.log(\"close\")}\n      />\n    </div>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_107\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_110 from '@components/Table';\nimport * as component_111 from '@components/Global';\nimport * as component_112 from '@kne/react-fetch';\nimport * as component_113 from 'lodash';\nimport * as component_114 from 'antd';\nconst readmeConfig = {\n    name: `Table`,\n    summary: `<p>可以从后端获取数据，然后展示为一个表格</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `Table_51c45`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Table } = _Table;\nconst { PureGlobal } = _Global;\nconst { preset } = reactFetch;\n\nconst ajax = (config) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      if (config.url === \"/api/v1/user/user/user_key_get\") {\n        resolve({\n          data: {\n            code: 0,\n            data: \\`{\"date\":{\"visible\":false},\"serialNumber\":{\"width\":400}}\\`,\n          },\n        });\n      } else if (config.url === \"/api/v1/user/user/user_key_set\") {\n        console.log(config.data);\n        resolve({\n          data: {\n            code: 0,\n            data: \"\",\n          },\n        });\n      }\n    }, 100);\n  });\n};\n\npreset({\n  ajax,\n});\n\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax,\n        tableServerApis: {\n          getDataApi: (name) => {\n            return {\n              url: \"/api/v1/user/user/user_key_get\",\n              method: \"GET\",\n              params: {\n                key: \\`table_config_v2_\\${name}\\`,\n              },\n              transformResponse: (response) => {\n                const { data } = response;\n                response.data = Object.assign({}, data, {\n                  data: (() => {\n                    try {\n                      return JSON.parse(data.data);\n                    } catch (e) {\n                      return [];\n                    }\n                  })(),\n                });\n\n                response.data = {\n                  code: response.data.code === 0 ? 200 : data.code,\n                  msg: response.data.msg,\n                  results: response.data.data,\n                };\n\n                return response;\n              },\n              cache: \"TABLE_PAGE_CONFIG\",\n            };\n          },\n          setDataFunc: (name, data) => {\n            return ajax({\n              url: \"/api/v1/user/user/user_key_set\",\n              data: {\n                map: {\n                  [\\`table_config_v2_\\${name}\\`]: JSON.stringify(data),\n                },\n              },\n            });\n          },\n        },\n      }}\n    >\n      <Table\n        name=\"test-table\"\n        onTablePropsReady={({ columns, dataSource }) => {\n          console.log({ columns, dataSource });\n        }}\n        dataSource={[\n          {\n            id: 0,\n            date: \"2021-07-21\",\n            datetime: \"2023-07-22 09:00:00\",\n            serialNumber: \"SX00192932323434\",\n            serialNumberShort: \"SH0023\",\n            userName: \"林珊珊\",\n            title: \"我是主要字段\",\n            tagEnum: null,\n            enUserName: \"Lin Shanshan\",\n            phoneNumber: \"+86 18792877372\",\n            email: \"a@a.com\",\n            count: 4,\n            description:\n              \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n            description2:\n              \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n            other: \"其他信息\",\n          },\n          {\n            id: 1,\n            date: \"\",\n            datetime: \"2023-07-22 09:00:00\",\n            serialNumber: \"SX00192932323434\",\n            serialNumberShort: \"SH0023\",\n            userName: \"林珊珊1\",\n            title: \"我是主要字段\",\n            tagEnum: \"Y\",\n            enUserName: \"Lin Shanshan\",\n            phoneNumber: null,\n            email: \"a@a.com\",\n            count: 5,\n            description: \"我是一段描述\",\n            description2: \"我是一段描述\",\n            other: \"其他信息\",\n          },\n        ]}\n        columns={[\n          {\n            name: \"date\",\n            title: \"日期\",\n            type: \"date\",\n            hover: true,\n          },\n          {\n            name: \"datetime\",\n            title: \"日期时间\",\n            type: \"datetime\",\n            hideSecond: true,\n          },\n          {\n            name: \"serialNumber\",\n            title: \"编号\",\n            type: \"serialNumber\",\n            primary: true,\n            onClick: async (item) => {\n              console.log(item);\n              return new Promise((resolve) => {\n                setTimeout(() => {\n                  resolve(true);\n                }, 10000);\n              });\n            },\n          },\n          {\n            name: \"serialNumberShort\",\n            title: \"短编号\",\n            type: \"serialNumberShort\",\n          },\n          {\n            name: \"title\",\n            title: \"主要信息\",\n            type: \"mainInfo\",\n          },\n          {\n            name: \"tag\",\n            title: \"状态标签\",\n            type: \"tag\",\n            valueOf: () => ({ type: \"success\", text: \"审核通过\" }),\n          },\n          {\n            name: \"tagEnum\",\n            title: \"标签枚举\",\n            type: \"tag\",\n            valueOf: (item) =>\n              item.tagEnum && {\n                type: \"success\",\n                isEnum: true,\n                moduleName: \"marital\",\n                name: item.tagEnum,\n              },\n          },\n          {\n            name: \"avatar\",\n            title: \"头像\",\n            type: \"avatar\",\n            valueOf: () => ({ gender: \"F\" }),\n          },\n          {\n            name: \"user\",\n            title: \"用户\",\n            type: \"user\",\n            valueOf: (item) => \\`\\${item.enUserName} \\${item.userName}\\`,\n          },\n          {\n            name: \"hideInfo\",\n            title: \"隐藏字段\",\n            type: \"hideInfo\",\n            valueOf: (item) =>\n              item[\"phoneNumber\"] && {\n                loader: () => {\n                  return item[\"phoneNumber\"] + \"-\" + item[\"id\"];\n                },\n              },\n          },\n          {\n            name: \"userName\",\n            title: \"用户名\",\n            type: \"userName\",\n          },\n          {\n            name: \"contacts\",\n            title: \"联系人\",\n            type: \"contacts\",\n            valueOf: (item) => \\`\\${item.userName} \\${item.phoneNumber}\\`,\n          },\n          {\n            name: \"count\",\n            title: \"数量\",\n            type: \"singleRow\",\n            render: ({ target }) => {\n              return target.count === 5 ? { hover: true } : { hover: false };\n            },\n          },\n          {\n            name: \"description\",\n            title: \"描述\",\n            type: \"description\",\n          },\n          {\n            name: \"description2\",\n            title: \"描述(省略)\",\n            type: \"description\",\n            ellipsis: true,\n          },\n          {\n            name: \"other\",\n            title: \"其他\",\n            type: \"other\",\n            hover: true,\n          },\n          {\n            name: \"options\",\n            title: \"操作\",\n            type: \"options\",\n            valueOf: (item) => [\n              {\n                onClick: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                },\n                children: \"分配Program及教练\",\n              } /*,\n              {\n                children: \"审核\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"淘汰\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"一键约面\",\n              },\n              {\n                children: \"删除\",\n              },*/,\n            ],\n          },\n        ]}\n      />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Table\",\n    packageName: \"@components/Table\",\n    component: component_110\n},{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_111\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_112\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { PureGlobal } = _Global;\nconst { TablePage } = _Table;\nconst { range } = lodash;\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        features: {\n          debug: true,\n          profile: {\n            id: \"erc\",\n            type: \"system\",\n            name: \"业务系统\",\n            children: [\n              {\n                id: \"test\",\n                type: \"feature\",\n                name: \"测试功能\",\n                options: {\n                  hiddenColumns: [\"date\", \"datetime\"],\n                },\n              },\n            ],\n          },\n        },\n      }}\n    >\n      <TablePage\n        featureId=\"test\"\n        sticky={false}\n        loader={() => {\n          return {\n            addUserName: \"我是大魔王\",\n            pageData: range(0, 50).map((index) => ({\n              id: index,\n              date: \"2021-07-21\",\n              datetime: \"2023-07-22 09:00:00\",\n              serialNumber: \"SX00192932323434\",\n              serialNumberShort: \"SH0023\",\n              userName: \"林珊珊\" + index,\n              title: \"我是主要字段\",\n              enUserName: \"Lin Shanshan\",\n              phoneNumber: \"+86 18792877372\",\n              email: \"a@a.com\",\n              count: 5,\n              description:\n                \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n              other: \"其他信息\",\n            })),\n            totalCount: 50,\n          };\n        }}\n        columns={[\n          {\n            name: \"date\",\n            title: \"日期\",\n            type: \"date\",\n            hover: true,\n          },\n          {\n            name: \"datetime\",\n            title: \"日期时间\",\n            type: \"datetime\",\n          },\n          {\n            name: \"dateRange\",\n            title: \"日期范围\",\n            type: \"dateRange\",\n            valueOf: ({ date, datetime }) => [date, datetime],\n          },\n          {\n            name: \"serialNumber\",\n            title: \"编号\",\n            type: \"serialNumber\",\n            primary: true,\n          },\n          {\n            name: \"serialNumberShort\",\n            title: \"短编号\",\n            type: \"serialNumberShort\",\n          },\n          {\n            name: \"title\",\n            title: \"主要信息\",\n            type: \"mainInfo\",\n          },\n          {\n            name: \"phone\",\n            title: \"手机号\",\n            type: \"hideInfo\",\n            primary: true,\n            valueOf: (item) => ({\n              loader: () => {\n                return item[\"phoneNumber\"] + \"-\" + item[\"id\"];\n              },\n            }),\n          },\n          {\n            name: \"email\",\n            title: \"邮箱\",\n            type: \"hideInfo\",\n            valueOf: (item) => ({\n              loader: () => {\n                return item[\"email\"] + \"-\" + item[\"id\"];\n              },\n              children: (data) => {\n                return \\`\\${data},\\${item[\"userName\"]}\\`;\n              },\n            }),\n          },\n          {\n            name: \"tag\",\n            title: \"状态标签\",\n            type: \"tag\",\n            valueOf: () => ({ type: \"success\", text: \"审核通过\" }),\n          },\n          {\n            name: \"avatar\",\n            title: \"头像\",\n            type: \"avatar\",\n            valueOf: () => ({ gender: \"F\" }),\n          },\n          {\n            name: \"user\",\n            title: \"用户\",\n            type: \"user\",\n            valueOf: (item) => \\`\\${item.enUserName} \\${item.userName}\\`,\n          },\n          {\n            name: \"userName\",\n            title: \"用户名\",\n            type: \"userName\",\n          },\n          {\n            name: \"contacts\",\n            title: \"联系人\",\n            type: \"contacts\",\n            valueOf: (item) => \\`\\${item.userName} \\${item.phoneNumber}\\`,\n          },\n          {\n            name: \"count\",\n            title: \"数量\",\n            type: \"singleRow\",\n          },\n          {\n            name: \"description\",\n            title: \"描述(省略)\",\n            type: \"description\",\n            ellipsis: true,\n          },\n          {\n            name: \"other\",\n            title: \"其他\",\n            type: \"other\",\n            hover: true,\n          },\n          {\n            name: \"addUser\",\n            title: \"添加人\",\n            type: \"user\",\n            render: ({ data }) => ({ valueOf: () => data.addUserName }),\n          },\n          {\n            name: \"options\",\n            title: \"操作\",\n            type: \"options\",\n            fixed: \"right\",\n            valueOf: (item) => [\n              {\n                onClick: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                },\n                children: \"编辑\",\n                disabled: true,\n              },\n              {\n                children: \"审核\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"淘汰\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"一键约面\",\n              },\n              {\n                children: \"删除\",\n              },\n            ],\n          },\n        ]}\n      />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Table\",\n    packageName: \"@components/Table\",\n    component: component_110\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_113\n},{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_111\n}]\n},{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Table } = _Table;\nconst { PureGlobal } = _Global;\nconst { preset } = reactFetch;\nconst { useState } = React;\nconst { Input } = antd;\nconst ajax = (config) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      if (config.url === \"/api/v1/user/user/user_key_get\") {\n        resolve({\n          data: {\n            code: 0,\n            data: \\`{\"date\":{},\"serialNumber\":{\"width\":400}}\\`,\n          },\n        });\n      } else if (config.url === \"/api/v1/user/user/user_key_set\") {\n        console.log(config.data);\n        resolve({\n          data: {\n            code: 0,\n            data: \"\",\n          },\n        });\n      }\n    }, 100);\n  });\n};\n\npreset({\n  ajax,\n});\n\nconst ValueEdit = ({ value, targetRender }) => {\n  const [isEdit, setIsEdit] = useState(false);\n  return (\n    <span\n      onClick={() => {\n        setIsEdit(true);\n      }}\n    >\n      {isEdit ? (\n        <Input\n          type=\"text\"\n          size=\"small\"\n          defaultValue={value}\n          onBlur={() => {\n            setIsEdit(false);\n          }}\n        />\n      ) : (\n        targetRender(value)\n      )}\n    </span>\n  );\n};\n\nconst BaseExample = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax,\n        tableServerApis: {\n          getDataApi: (name) => {\n            return {\n              url: \"/api/v1/user/user/user_key_get\",\n              method: \"GET\",\n              params: {\n                key: \\`table_config_v2_\\${name}\\`,\n              },\n              transformResponse: (response) => {\n                const { data } = response;\n                response.data = Object.assign({}, data, {\n                  data: (() => {\n                    try {\n                      return JSON.parse(data.data);\n                    } catch (e) {\n                      return [];\n                    }\n                  })(),\n                });\n\n                response.data = {\n                  code: response.data.code === 0 ? 200 : data.code,\n                  msg: response.data.msg,\n                  results: response.data.data,\n                };\n\n                return response;\n              },\n              cache: \"TABLE_PAGE_CONFIG\",\n            };\n          },\n          setDataFunc: (name, data) => {\n            return ajax({\n              url: \"/api/v1/user/user/user_key_set\",\n              data: {\n                map: {\n                  [\\`table_config_v2_\\${name}\\`]: JSON.stringify(data),\n                },\n              },\n            });\n          },\n        },\n      }}\n    >\n      <Table\n        name=\"test-table\"\n        dataSource={[\n          {\n            id: 0,\n            date: \"2021-07-21\",\n            datetime: \"2023-07-22 09:00:00\",\n            serialNumber: \"SX00192932323434\",\n            serialNumberShort: \"SH0023\",\n            userName: \"林珊珊\",\n            title: \"我是主要字段\",\n            tagEnum: \"Y\",\n            enUserName: \"Lin Shanshan\",\n            phoneNumber: \"+86 18792877372\",\n            email: \"a@a.com\",\n            count: 4,\n            description:\n              \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n            description2:\n              \"我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述我是一段描述\",\n            other: \"其他信息\",\n          },\n          {\n            id: 1,\n            date: \"\",\n            datetime: \"2023-07-22 09:00:00\",\n            serialNumber: \"SX00192932323434\",\n            serialNumberShort: \"SH0023\",\n            userName: \"林珊珊1\",\n            title: \"我是主要字段\",\n            tagEnum: \"Y\",\n            enUserName: \"Lin Shanshan\",\n            phoneNumber: \"+86 18792877372\",\n            email: \"a@a.com\",\n            count: 5,\n            description: \"我是一段描述\",\n            description2: \"我是一段描述\",\n            other: \"其他信息\",\n          },\n        ]}\n        columns={[\n          {\n            name: \"date\",\n            title: \"日期\",\n            sort: true,\n            groupHeader: [\n              {\n                name: \"group1\",\n                title: \"分组1\",\n              },\n              {\n                name: \"group1-1\",\n                title: \"分组1-1\",\n              },\n            ],\n            type: \"date\",\n            hover: true,\n          },\n          {\n            name: \"datetime\",\n            title: \"日期时间\",\n            sort: true,\n            groupHeader: [\n              {\n                name: \"group1\",\n                title: \"分组1\",\n              },\n              {\n                name: \"group1-2\",\n                title: \"分组1-2\",\n              },\n            ],\n            type: \"datetime\",\n          },\n          {\n            name: \"serialNumber\",\n            title: \"编号\",\n            sort: true,\n            groupHeader: [\n              {\n                name: \"group1\",\n                title: \"分组1\",\n              },\n              {\n                name: \"group1-1\",\n                title: \"分组1-1\",\n              },\n            ],\n            type: \"serialNumber\",\n            primary: true,\n          },\n          {\n            name: \"serialNumberShort\",\n            title: \"短编号\",\n            type: \"serialNumberShort\",\n          },\n          {\n            name: \"title\",\n            title: \"主要信息\",\n            type: \"mainInfo\",\n            disableColItem: true,\n            valueOf: (item, { targetRender }) => (\n              <ValueEdit value={item[\"title\"]} targetRender={targetRender} />\n            ),\n          },\n          {\n            name: \"tag\",\n            title: \"状态标签\",\n            type: \"tag\",\n            valueOf: () => ({ type: \"success\", text: \"审核通过\" }),\n          },\n          {\n            name: \"tagEnum\",\n            title: \"标签枚举\",\n            type: \"tag\",\n            valueOf: (item) => ({\n              type: \"success\",\n              isEnum: true,\n              moduleName: \"marital\",\n              name: item.tagEnum,\n            }),\n          },\n          {\n            name: \"avatar\",\n            title: \"头像\",\n            type: \"avatar\",\n            valueOf: () => ({ gender: \"F\" }),\n          },\n          {\n            name: \"user\",\n            title: \"用户\",\n            type: \"user\",\n            valueOf: (item) => \\`\\${item.enUserName} \\${item.userName}\\`,\n          },\n          {\n            name: \"hideInfo\",\n            title: \"隐藏字段\",\n            type: \"hideInfo\",\n            valueOf: (item) => ({\n              loader: () => {\n                return item[\"phoneNumber\"] + \"-\" + item[\"id\"];\n              },\n            }),\n          },\n          {\n            name: \"userName\",\n            title: \"用户名\",\n            type: \"userName\",\n          },\n          {\n            name: \"contacts\",\n            title: \"联系人\",\n            type: \"contacts\",\n            valueOf: (item) => \\`\\${item.userName} \\${item.phoneNumber}\\`,\n          },\n          {\n            name: \"count\",\n            title: \"数量\",\n            type: \"singleRow\",\n            render: ({ target }) => {\n              return target.count === 5 ? { hover: true } : { hover: false };\n            },\n          },\n          {\n            name: \"description\",\n            title: \"描述\",\n            type: \"description\",\n          },\n          {\n            name: \"description2\",\n            title: \"描述(省略)\",\n            type: \"description\",\n            ellipsis: true,\n          },\n          {\n            name: \"other\",\n            title: \"其他\",\n            type: \"other\",\n            hover: true,\n            sort: true,\n          },\n          {\n            name: \"options\",\n            title: \"操作\",\n            type: \"options\",\n            fixed: \"right\",\n            sort: true,\n            valueOf: (item) => [\n              {\n                onClick: () => {\n                  return new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                    }, 1000);\n                  });\n                },\n                children: \"分配Program及教练\",\n              },\n              {\n                children: \"审核\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"淘汰\",\n              },\n              {\n                onClick: () => {\n                  console.log(item);\n                },\n                children: \"一键约面\",\n              },\n              {\n                children: \"删除\",\n              },\n            ],\n          },\n        ]}\n        onSortChange={(sort) => {\n          console.log(\">>>>>>\", sort);\n        }}\n      />\n    </PureGlobal>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Table\",\n    packageName: \"@components/Table\",\n    component: component_110\n},{\n    name: \"_Global\",\n    packageName: \"@components/Global\",\n    component: component_111\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_112\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_114\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_115 from '@components/TablePage';\nimport * as component_116 from 'lodash';\nimport * as component_117 from '@components/Global';\nimport * as component_118 from '@kne/react-fetch';\nimport * as component_119 from 'dayjs';\nconst readmeConfig = {\n    name: `TablePage`,\n    summary: `<p>可以从后端获取数据，然后展示为一个表格</p>\n<p><em><strong>（已废弃，不建议使用，请用Table的TablePage组件代替）</strong></em></p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dataFormat</td>\n<td>用于处理后端返回的数据，作为表格数据</td>\n<td>function</td>\n<td>(data) =&gt; {return {list: data.data.pageData,total: data.data.totalCount};}</td>\n</tr>\n<tr>\n<td>pagination</td>\n<td>控制分页参数</td>\n<td>object</td>\n<td>{showSizeChanger: true,showQuickJumper: true,open: true,paramsType: 'data',requestType: 'reload',current: 'currentPage',pageSize: 'perPage',defaultPageSize: 20,size: 'default'}</td>\n</tr>\n<tr>\n<td>getColumns</td>\n<td>获取colums参数的函数,该函数的参数可以拿到请求结果数据,如果不传该函数则默认取colums属性 getColumns({data,formatData}),可以返回Promise</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>stickyOffset</td>\n<td>sticky模式，table header距离顶部位置，默认会取 --nav-height，注意：该组件会覆盖调sticky中设置的值，导致其设置不生效，需要配置该参数来实现功能</td>\n<td>string</td>\n<td>var(--nav-height)</td>\n</tr>\n<tr>\n<td>controllerOpen</td>\n<td>是否开启列控制，调整列宽和列显示</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<p>其他参数参考</p>\n<p>表格参数:</p>\n<p><a href=\"https://ant.design/components/table-cn/\">antd Table</a></p>\n<p>请求数据参数:</p>\n<p><a href=\"/lib/react-fetch\">react-fetch</a></p>`,\n    example: {\n        isFull: true,\n        className: `TablePage_b85cd`,\n        style: `.TablePage_b85cd .table-Limit-height {\n  height: 600px;\n  overflow: auto;\n  max-width: 1000px;\n  margin: 0 auto; }\n`,\n        list: [{\n    title: `普通表格`,\n    description: `展示一个普通的表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { PureGlobal } = global;\nconst { range } = _;\nconst { preset } = reactFetch;\n\nconst ajax = (config) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      if (config.url === \"/api/v1/user/user/user_key_get\") {\n        resolve({\n          data: {\n            code: 0,\n            data: \\`[{\\\"id\\\":\\\"clientName\\\",\\\"name\\\":\\\"客户名称\\\",\\\"width\\\":341,\\\"chosen\\\":false,\\\"selected\\\":false},{\\\"id\\\":\\\"city\\\",\\\"name\\\":\\\"工作地点\\\",\\\"width\\\":341,\\\"chosen\\\":false,\\\"selected\\\":false},{\\\"id\\\":\\\"startTime\\\",\\\"name\\\":\\\"职位开始时间\\\",\\\"hidden\\\":false,\\\"width\\\":200,\\\"chosen\\\":false,\\\"selected\\\":false},{\\\"id\\\":\\\"options\\\",\\\"name\\\":\\\"操作\\\",\\\"fixed\\\":\\\"right\\\",\\\"width\\\":341}]\\`,\n          },\n        });\n      } else if (config.url === \"/api/v1/user/user/user_key_set\") {\n        console.log(config.data);\n        resolve({\n          data: {\n            code: 0,\n            data: \"\",\n          },\n        });\n      }\n    }, 100);\n  });\n};\n\npreset({\n  ajax,\n});\n\nconst Example = () => {\n  return (\n    <PureGlobal\n      preset={{\n        ajax,\n        tablePageServerApis: {\n          getDataApi: (name) => {\n            return {\n              url: \"/api/v1/user/user/user_key_get\",\n              method: \"GET\",\n              params: {\n                key: \\`table_config_\\${name}\\`,\n              },\n              transformResponse: (response) => {\n                const { data } = response;\n                response.data = Object.assign({}, data, {\n                  data: (() => {\n                    try {\n                      return JSON.parse(data.data);\n                    } catch (e) {\n                      return [];\n                    }\n                  })(),\n                });\n\n                response.data = {\n                  code: response.data.code === 0 ? 200 : data.code,\n                  msg: response.data.msg,\n                  results: response.data.data,\n                };\n\n                return response;\n              },\n              cache: \"TABLE_PAGE_CONFIG\",\n            };\n          },\n          setDataFunc: (name, data) => {\n            return ajax({\n              url: \"/api/v1/user/user/user_key_set\",\n              data: {\n                map: {\n                  [\\`table_config_\\${name}\\`]: JSON.stringify(data),\n                },\n              },\n            });\n          },\n        },\n      }}\n    >\n      <TablePage\n        name=\"test1\"\n        rowSelection={{\n          type: \"checkbox\",\n        }}\n        columns={[\n          {\n            title: (\n              <div>\n                职位名称<i>~</i>\n              </div>\n            ),\n            titleText: \"职位名称\",\n            key: \"positionName\",\n            fixed: \"left\",\n            dataIndex: \"positionName\",\n          },\n          {\n            title: \"客户名称\",\n            key: \"clientName\",\n            dataIndex: \"clientName\",\n          },\n          {\n            title: \"工作地点\",\n            key: \"city\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点1\",\n            key: \"city1\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点2\",\n            key: \"city2\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点3\",\n            key: \"city3\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点4\",\n            key: \"city4\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点5\",\n            key: \"city5\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点6\",\n            key: \"city6\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点7\",\n            key: \"city7\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点8\",\n            key: \"city8\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"工作地点9\",\n            key: \"city9\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"职位开始时间\",\n            key: \"startTime\",\n            dataIndex: \"startTime\",\n            hidden: true,\n          },\n          {\n            title: \"操作\",\n            key: \"options\",\n            fixed: \"right\",\n            width: 300,\n            render: () => {\n              return \"操作\";\n            },\n          },\n        ]}\n        sticky={false}\n        data={{ currentPage: 1, perPage: 20 }}\n        loader={({ data }) => {\n          return new Promise((resolve) => {\n            setTimeout(() => {\n              resolve({\n                pageData: range(data.perPage).map((index) => ({\n                  id: index + (data.currentPage - 1) * data.perPage + 1,\n                  positionName:\n                    \"市场运营总监\" +\n                    (index + (data.currentPage - 1) * data.perPage + 1),\n                  clientName: \"大众\",\n                  city: \"北京\",\n                  startTime: \"2020-01-10\",\n                })),\n                totalCount: 100,\n              });\n            }, 100);\n          });\n        }}\n      />\n    </PureGlobal>\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_115\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_116\n},{\n    name: \"global\",\n    packageName: \"@components/Global\",\n    component: component_117\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_118\n}]\n},{\n    title: `树形数据`,\n    description: `展示一个树形数据的表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { range } = _;\n\nconst Example = () => {\n  return (\n    <TablePage\n      name=\"test1\"\n      columns={[\n        {\n          title: \"职位名称\",\n          key: \"positionName\",\n          fixed: \"left\",\n          dataIndex: \"positionName\",\n        },\n        {\n          title: \"客户名称\",\n          key: \"clientName\",\n          dataIndex: \"clientName\",\n        },\n        {\n          title: \"工作地点\",\n          key: \"city\",\n          dataIndex: \"city\",\n        },\n        {\n          title: \"职位开始时间\",\n          key: \"startTime\",\n          dataIndex: \"startTime\",\n          hidden: true,\n        },\n        {\n          title: \"操作\",\n          key: \"options\",\n          fixed: \"right\",\n          width: 300,\n          render: () => {\n            return \"操作\";\n          },\n        },\n      ]}\n      sticky={false}\n      data={{ currentPage: 1, perPage: 20 }}\n      loader={({ data }) => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve({\n              pageData: range(data.perPage).map((index) => ({\n                id: index + (data.currentPage - 1) * data.perPage + 1,\n                positionName:\n                  \"市场运营总监\" +\n                  (index + (data.currentPage - 1) * data.perPage + 1),\n                clientName: \"大众\",\n                city: \"北京\",\n                startTime: \"2020-01-10\",\n                children: range(10).map((i) => {\n                  return {\n                    id:\n                      index +\n                      (data.currentPage - 1) * data.perPage +\n                      1 +\n                      \"-\" +\n                      i,\n                    positionName:\n                      \"市场运营总监\" +\n                      (index + (data.currentPage - 1) * data.perPage + 1) +\n                      \"-\" +\n                      i,\n                    clientName: \"大众\",\n                    city: \"北京\",\n                    startTime: \"2020-01-10\",\n                    children:\n                      index === 0\n                        ? [\n                            {\n                              id:\n                                index +\n                                (data.currentPage - 1) * data.perPage +\n                                1 +\n                                \"-\" +\n                                i +\n                                \"-last\",\n                              positionName: \"最后一层\",\n                              clientName: \"最后一层\",\n                              city: \"最后一层\",\n                              startTime: \"2020-01-10\",\n                            },\n                          ]\n                        : null,\n                  };\n                }),\n              })),\n              totalCount: 100,\n            });\n          }, 100);\n        });\n      }}\n    />\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_115\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_116\n}]\n},{\n    title: `固定表头表格`,\n    description: `展示一个固定表头的表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { range } = _;\nconst { useRef } = React;\n\nconst Example = () => {\n  const ref = useRef();\n  return (\n    <div className=\"table-Limit-height\" ref={ref}>\n      <div\n        style={{\n          height: 700,\n        }}\n      >\n        请往下拉\n      </div>\n      <TablePage\n        stickyOffset=\"0px\"\n        scroller={{\n          getContainer: () => ref.current,\n        }}\n        data={{ currentPage: 1, perPage: 20 }}\n        columns={[\n          {\n            title: \"职位名称\",\n            key: \"positionName\",\n            fixed: \"left\",\n            dataIndex: \"positionName\",\n          },\n          {\n            title: \"客户名称\",\n            key: \"clientName\",\n            dataIndex: \"clientName\",\n          },\n          {\n            title: \"工作地点\",\n            key: \"city\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"职位开始时间\",\n            key: \"startTime\",\n            dataIndex: \"startTime\",\n          },\n        ]}\n        loader={({ data }) => {\n          return {\n            pageData: range(data.perPage).map((index) => ({\n              id: index + (data.currentPage - 1) * data.perPage + 1,\n              positionName:\n                \"市场运营总监\" +\n                (index + (data.currentPage - 1) * data.perPage + 1),\n              clientName: \"大众\",\n              city: \"北京\",\n              startTime: \"2020-01-10\",\n            })),\n            totalCount: 100,\n          };\n        }}\n      />\n    </div>\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_115\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_116\n}]\n},{\n    title: `日期格式化表格`,\n    description: `展示一个日期格式化表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { range } = _;\nconst dayjs = dayjs;\n\nconst dateFormat = (target) => {\n  return dayjs(target).format(\"YYYY-MM-DD HH:mm:ss\");\n};\n\nconst Example = () => {\n  return (\n    <TablePage\n      sticky={false}\n      columns={[\n        {\n          title: \"职位名称\",\n          key: \"positionName\",\n          fixed: \"left\",\n          dataIndex: \"positionName\",\n        },\n        {\n          title: \"客户名称\",\n          key: \"clientName\",\n          dataIndex: \"clientName\",\n        },\n        {\n          title: \"工作地点\",\n          key: \"city\",\n          dataIndex: \"city\",\n        },\n        {\n          title: \"职位开始时间\",\n          key: \"startTime\",\n          dataIndex: \"startTime\",\n          render: dateFormat,\n        },\n        {\n          title: \"职位结束时间\",\n          key: \"endTime\",\n          dataIndex: \"endTime\",\n          render: dateFormat,\n        },\n      ]}\n      data={{ currentPage: 1, perPage: 10 }}\n      loader={({ data }) => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve({\n              pageData: range(data.perPage).map((index) => ({\n                id: index + (data.currentPage - 1) * data.perPage + 1,\n                positionName:\n                  \"市场运营总监\" +\n                  (index + (data.currentPage - 1) * data.perPage + 1),\n                clientName: \"大众\",\n                city: \"北京\",\n                startTime: \"2020-01-10\",\n                endTime: \"2020-02-10\",\n              })),\n              totalCount: 48,\n            });\n          }, 1000);\n        });\n      }}\n    />\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_115\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_116\n},{\n    name: \"dayjs\",\n    packageName: \"dayjs\",\n    component: component_119\n}]\n},{\n    title: `动态column获取`,\n    description: `展示动态column获取的表格`,\n    code: `const { default: TablePage } = tablePage;\nconst { range } = _;\n\nconst Example = () => {\n  return (\n    <TablePage\n      sticky={false}\n      getColumns={({ data, formatData }) => {\n        console.log(data, formatData);\n        return Promise.resolve([\n          {\n            title: \"职位名称\",\n            key: \"positionName\",\n            fixed: \"left\",\n            dataIndex: \"positionName\",\n          },\n          {\n            title: \"客户名称\",\n            key: \"clientName\",\n            dataIndex: \"clientName\",\n          },\n          {\n            title: \"工作地点\",\n            key: \"city\",\n            dataIndex: \"city\",\n          },\n          {\n            title: \"职位开始时间\",\n            key: \"startTime\",\n            dataIndex: \"startTime\",\n          },\n        ]);\n      }}\n      data={{ currentPage: 1, perPage: 20 }}\n      loader={({ data }) => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve({\n              pageData: range(data.perPage).map((index) => ({\n                id: index + (data.currentPage - 1) * data.perPage + 1,\n                positionName:\n                  \"市场运营总监\" +\n                  (index + (data.currentPage - 1) * data.perPage + 1),\n                clientName: \"大众\",\n                city: \"北京\",\n                startTime: \"2020-01-10\",\n              })),\n              totalCount: 100,\n            });\n          }, 1000);\n        });\n      }}\n    />\n  );\n};\n\nrender(<Example />);\n\n`,\n    scope: [{\n    name: \"tablePage\",\n    packageName: \"@components/TablePage\",\n    component: component_115\n},{\n    name: \"_\",\n    packageName: \"lodash\",\n    component: component_116\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_120 from '@components/Tooltip';\nimport * as component_121 from 'antd/lib/space';\nimport * as component_122 from '@components/FormInfo';\nimport * as component_123 from '@kne/react-fetch';\nimport * as component_124 from '@components/Descriptions';\nimport * as component_125 from '@components/StateTag';\nconst readmeConfig = {\n    name: `Tooltip`,\n    summary: `<p>简单的文字提示气泡框</p>`,\n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>size</td>\n<td>默认宽度 360，small 宽度 240</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题内容</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>showInfo</td>\n<td>展示标题旁的提示按钮</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>importantInfo</td>\n<td>重要内容</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>subtitle</td>\n<td>副标题</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>content</td>\n<td>内容</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>importantInfoType</td>\n<td>重要内容类型，success,error,warning</td>\n<td>string,jsx</td>\n<td>-</td>\n</tr>\n<tr>\n<td>moreInfo</td>\n<td>其他内容</td>\n<td>jsx</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>TooltipFetch</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>api</td>\n<td>获取数据的接口，参考@kne/react-fetch</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>fetchContent</td>\n<td>当api接口返回值的时候调用，可以获取到接口参数，返回值会更新到Tootip的参数中</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Tooltip_c9830`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: Tooltip, TooltipInfoLabel } = _Tooltip;\nconst { default: Space } = space;\nconst { default: FormInfo, Form, Input, SubmitButton, CancelButton } = formInfo;\n\nconst MoreInfo = () => {\n  return (\n    <Form>\n      <FormInfo\n        column={1}\n        list={[\n          <Input label=\"姓名\" name=\"name\" rule=\"REQ\" />,\n          <Space\n            style={{\n              width: \"100%\",\n              justifyContent: \"end\",\n            }}\n          >\n            <CancelButton>取消</CancelButton>\n            <SubmitButton>确定</SubmitButton>\n          </Space>,\n        ]}\n      />\n    </Form>\n  );\n};\n\nconst BaseExample = () => {\n  return (\n    <Space>\n      <Tooltip content=\"这里显示完整的信息\">小段信息</Tooltip>\n      <Tooltip\n        size=\"small\"\n        content=\"这里显示完整的信息完整的信息，这里显示完整的信息完整的信息这里显示完整的信息完整的信息这里显示完整的信息完整的信息，这里显示完整的信息。\"\n      >\n        大段信息\n      </Tooltip>\n      <Tooltip title=\"标题\" content=\"内容描述内容描述内容。\">\n        带有标题的小段信息\n      </Tooltip>\n      <Tooltip\n        title=\"标题\"\n        content=\"内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述\"\n      >\n        带有标题的大段信息\n      </Tooltip>\n      <Tooltip\n        importantInfo=\"筛选日期范围内，职位上安排顾问面试的候选人总数。根据所填写的顾问【面试面试】时间来进行统计，而非在系统的操作时间。\"\n        subtitle=\"示例:\"\n        content=\"2022.10.21在系统操作顾问面试，但填写的顾问面试时间为2022.10.20，则数据会统计在2022.10.20，而非2022.10.21 。\"\n      >\n        带有重要信息\n      </Tooltip>\n      <TooltipInfoLabel\n        title=\"带有Info信息\"\n        tooltipTitle={{\n          importantInfo:\n            \"筛选日期范围内，职位上安排顾问面试的候选人总数。根据所填写的顾问【面试面试】时间来进行统计，而非在系统的操作时间。\",\n          subtitle: \"示例:\",\n          content:\n            \"2022.10.21在系统操作顾问面试，但填写的顾问面试时间为2022.10.20，则数据会统计在2022.10.20，而非2022.10.21 。\",\n        }}\n      />\n      <Tooltip\n        title=\"标题\"\n        content=\"辅助信息描述内容辅助信息描述内容辅助信息描述内容辅助信息描述内容辅助信息描述内容\"\n        moreInfo={<MoreInfo />}\n      >\n        带有表单信息\n      </Tooltip>\n    </Space>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Tooltip\",\n    packageName: \"@components/Tooltip\",\n    component: component_120\n},{\n    name: \"space\",\n    packageName: \"antd/lib/space\",\n    component: component_121\n},{\n    name: \"formInfo\",\n    packageName: \"@components/FormInfo\",\n    component: component_122\n}]\n},{\n    title: `带有远程数据加载的提示`,\n    description: `展示带有远程数据加载的提示`,\n    code: `const { TooltipFetch } = _Tooltip;\nconst { preset } = reactFetch;\nconst { default: Descriptions } = _Descriptions;\nconst { default: StateTag } = _StateTag;\n\npreset({\n  ajax: () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({\n          data: {\n            code: 0,\n            data: {\n              clientName: \"腾讯\",\n              title: \"腾讯科技公司\",\n              type: \"增值税专用发票\",\n              date: \"2022-08-15\",\n            },\n          },\n        });\n      }, 1000);\n    });\n  },\n});\n\nconst BaseExample = () => {\n  return (\n    <TooltipFetch\n      api={{\n        url: \"/api/data\",\n      }}\n      size=\"large\"\n      fetchContent={(data) => {\n        return {\n          content: (\n            <Descriptions\n              dataSource={[\n                [\n                  { label: \"客户名称\", content: data.clientName },\n                  { label: \"发票抬头\", content: data.title },\n                ],\n                [\n                  { label: \"发票类型\", content: data.type },\n                  { label: \"发票日期\", content: data.date },\n                ],\n              ]}\n            />\n          ),\n        };\n      }}\n    >\n      <StateTag text=\"哈哈哈\" />\n    </TooltipFetch>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Tooltip\",\n    packageName: \"@components/Tooltip\",\n    component: component_120\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_123\n},{\n    name: \"_Descriptions\",\n    packageName: \"@components/Descriptions\",\n    component: component_124\n},{\n    name: \"_StateTag\",\n    packageName: \"@components/StateTag\",\n    component: component_125\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import { preset as remoteLoaderPreset } from \"@kne/remote-loader\";\nimport { preset as fetchPreset } from \"@kne/react-fetch\";\nimport axios from \"axios\";\nimport { Empty, Result, Spin } from \"antd\";\n\nwindow.PUBLIC_URL = process.env.PUBLIC_URL;\n\nconst remote =\n  process.env.NODE_ENV === \"development\"\n    ? {\n        remote: \"components-core\",\n        url: \"/\",\n        tpl: \"{{url}}\",\n        defaultVersion: process.env.DEFAULT_VERSION,\n      }\n    : {\n        remote: \"components-core\",\n        url: \"https://registry.npmmirror.com\",\n        tpl: \"{{url}}/@kne%2f{{remote}}/{{version}}/files/build\",\n        defaultVersion: process.env.DEFAULT_VERSION,\n      };\n\nremoteLoaderPreset({\n  remotes: {\n    default: remote,\n    \"components-core\": remote,\n    \"components-iconfont\": {\n      remote: \"components-iconfont\",\n      url: \"https://registry.npmmirror.com\",\n      tpl: \"{{url}}/@kne%2f{{remote}}/{{version}}/files/build\",\n      defaultVersion: \"0.1.1\",\n    },\n  },\n});\n\nexport const ajax = axios.create({\n  validateStatus: function () {\n    return true;\n  },\n});\n\nfetchPreset({\n  ajax,\n  loading: (\n    <Spin\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        padding: \"10px\",\n        transform: \"translateX(-50%)\",\n      }}\n    />\n  ),\n  error: <Result status=\"error\" title=\"请求发生错误\" />,\n  empty: <Empty />,\n  transformResponse: (response) => {\n    const { data } = response;\n    response.data = {\n      code: data.code === 0 ? 200 : data.code,\n      msg: data.msg,\n      results: data.data,\n    };\n    return response;\n  },\n});\n","import { HashRouter } from \"react-router-dom\";\nimport createEntry from \"@kne/modules-dev/dist/create-entry\";\nimport \"@kne/modules-dev/dist/create-entry.css\";\nimport readme from \"readme\";\n\nconst ExampleRoutes = createEntry.ExampleRoutes;\n\nconst App = ({ preset, themeToken, ...props }) => {\n  return (\n    <HashRouter>\n      <ExampleRoutes\n        {...props}\n        paths={[\n          {\n            key: \"components\",\n            path: \"/\",\n            title: \"首页\",\n          },\n        ]}\n        preset={preset}\n        themeToken={themeToken}\n        readme={readme}\n      />\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { ajax } from \"./preset\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nconst themeToken = {\n  colorPrimary: \"#4F185A\",\n};\n\nroot.render(\n  <React.StrictMode>\n    <App preset={{ ajax }} themeToken={themeToken} />\n  </React.StrictMode>\n);\n","const importMessages = (locale) => {\n  return {\n    \"en-US\": () => import(\"./en-US\"),\n    \"zh-CN\": () => import(\"./zh-CN\"),\n  }[locale]();\n};\n\nexport default importMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"style_overlay__99t5t__EG6bw\",\"is-danger\":\"style_is-danger__gxyAB__EG6bw\",\"title\":\"style_title__EEPu2__EG6bw\",\"content\":\"style_content__mZZg5__EG6bw\",\"has-title\":\"style_has-title__5+PEt__EG6bw\"};","import React from \"react\";\nimport { Button, Popconfirm, Space, Typography } from \"antd\";\nimport importMessages from \"./locale\";\nimport Icon from \"@components/Icon\";\nimport { createWithIntl, useIntl } from \"@components/Intl\";\nimport { useModal } from \"@components/Modal\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\n\nexport const withConfirm = (WrappedComponent) => {\n  const ConfirmComponent = createWithIntl({\n    moduleName: \"ConfirmButton\",\n    importMessages,\n  })(\n    ({\n      title,\n      message,\n      isDelete = true,\n      onClick,\n      onCancel,\n      disabled,\n      showCancel,\n      cancelText,\n      isModal,\n      okText,\n      placement,\n      getContainer,\n      ...props\n    }) => {\n      const { formatMessage } = useIntl({ moduleName: \"ConfirmButton\" });\n      const modal = useModal();\n      if (isModal) {\n        return (\n          <WrappedComponent\n            {...props}\n            onClick={(e) => {\n              const cancelButton = {\n                children: cancelText || formatMessage({ id: \"cancel\" }),\n                onClick: onCancel,\n              };\n              const confirmButton = {\n                type: \"primary\",\n                children: okText\n                  ? okText\n                  : isDelete\n                  ? formatMessage({ id: \"delete\" })\n                  : formatMessage({ id: \"confirm\" }),\n                onClick: () => onClick(e),\n                danger: isDelete,\n              };\n              modal({\n                title: title && (\n                  <Space size={0} className={style[\"title\"]}>\n                    <Icon className=\"title-icon\" type=\"icon-tishi-tianchong\" />\n                    {title}\n                  </Space>\n                ),\n                getContainer,\n                wrapClassName: classnames(style[\"overlay\"], {\n                  [style[\"is-danger\"]]: isDelete,\n                }),\n                children: (\n                  <Space\n                    size={0}\n                    className={classnames(style[\"content\"], {\n                      [style[\"has-title\"]]: title,\n                    })}\n                  >\n                    {!title && (\n                      <Icon\n                        className=\"title-icon\"\n                        type=\"icon-tishi-tianchong\"\n                      />\n                    )}\n                    {message || formatMessage({ id: \"message\" })}\n                  </Space>\n                ),\n                footerButtons: showCancel\n                  ? [cancelButton, confirmButton]\n                  : [confirmButton],\n              });\n            }}\n          />\n        );\n      }\n      return (\n        <Popconfirm\n          title={\n            <Space\n              direction=\"vertical\"\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n            >\n              {title && (\n                <Space size={0} align=\"start\" className={style[\"title\"]}>\n                  <Icon className=\"title-icon\" type=\"icon-tishi-tianchong\" />\n                  {title}\n                </Space>\n              )}\n              <Space\n                size={0}\n                align=\"start\"\n                className={classnames(style[\"content\"], {\n                  [style[\"has-title\"]]: title,\n                })}\n              >\n                {!title && (\n                  <Icon className=\"title-icon\" type=\"icon-tishi-tianchong\" />\n                )}\n                {message || formatMessage({ id: \"message\" })}\n              </Space>\n            </Space>\n          }\n          placement={placement}\n          onConfirm={onClick}\n          okButtonProps={{\n            danger: isDelete,\n          }}\n          onCancel={onCancel}\n          overlayClassName={classnames(style[\"overlay\"], {\n            [style[\"is-danger\"]]: isDelete,\n          })}\n          getPopupContainer={getContainer}\n          disabled={disabled}\n          showCancel={showCancel}\n          cancelText={cancelText}\n          okText={\n            okText\n              ? okText\n              : isDelete\n              ? formatMessage({ id: \"delete\" })\n              : formatMessage({ id: \"confirm\" })\n          }\n        >\n          <WrappedComponent {...props} disabled={disabled} />\n        </Popconfirm>\n      );\n    }\n  );\n\n  ConfirmComponent.defaultProps = {\n    isModal: false,\n  };\n\n  return ConfirmComponent;\n};\n\nexport const ConfirmLink = withConfirm(Typography.Link);\n\nexport default withConfirm(Button);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"style_content__KHqQn__EG6bw\",\"size-small\":\"style_size-small__RwAEB__EG6bw\",\"label\":\"style_label__EG-qx__EG6bw\",\"content-content\":\"style_content-content__AkJj-__EG6bw\",\"item\":\"style_item__WV0-i__EG6bw\"};","import { useLayoutEffect, useRef, useState } from \"react\";\nimport { Col, Row, Space } from \"antd\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\n\nexport const Label = ({ className, children, setWidth }) => {\n  const ref = useRef(null);\n  const setWidthRef = useRef(setWidth);\n  setWidthRef.current = setWidth;\n  useLayoutEffect(() => {\n    const computed = () => {\n      if (!ref.current) {\n        return;\n      }\n      const { width } = ref.current.getBoundingClientRect();\n      setWidth(width);\n    };\n    const resizeObserver = new ResizeObserver(computed);\n    resizeObserver.observe(ref.current);\n    computed();\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [setWidth]);\n  return (\n    <div ref={ref} className={className}>\n      {children}：\n    </div>\n  );\n};\n\nconst Content = ({ list, labelAlign, col, gutter, className, size }) => {\n  const labelWidthListRef = useRef([]);\n  const [maxLabelWidth, setMaxLabelWidth] = useState(0);\n  return (\n    <Row\n      data-testid=\"components-core-content\"\n      className={classnames(style[\"content\"], className, {\n        [style[\"size-small\"]]: size === \"small\",\n      })}\n      gutter={gutter}\n    >\n      {list\n        .filter((item) => {\n          if (typeof item.display === \"function\") {\n            return item.display();\n          }\n          return item.display !== false;\n        })\n        .map(({ label, content, block }, index) => {\n          return (\n            <Col\n              span={block === true ? 24 : 24 / col}\n              key={index}\n              className={style[\"item\"]}\n            >\n              <Space key={index} className={style[\"item\"]}>\n                {label ? (\n                  <div\n                    style={\n                      maxLabelWidth && labelAlign !== \"auto\"\n                        ? {\n                            minWidth: maxLabelWidth,\n                            textAlign: labelAlign,\n                          }\n                        : null\n                    }\n                  >\n                    <Label\n                      className={classnames(style[\"label\"], \"content-label\")}\n                      setWidth={(width) => {\n                        labelWidthListRef.current[index] = width;\n                        setMaxLabelWidth(\n                          Math.max(...labelWidthListRef.current)\n                        );\n                      }}\n                    >\n                      {label}\n                    </Label>\n                  </div>\n                ) : null}\n                <div\n                  className={classnames(\n                    style[\"content-content\"],\n                    \"content-content\"\n                  )}\n                >\n                  {content}\n                </div>\n              </Space>\n            </Col>\n          );\n        })}\n    </Row>\n  );\n};\n\nContent.defaultProps = {\n  labelAlign: \"left\",\n  col: 1,\n  gutter: 0,\n  list: [],\n};\n\nexport default Content;\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptions\":\"style_descriptions__HozsO__EG6bw\",\"descriptions-item\":\"style_descriptions-item__vV+UK__EG6bw\",\"col-label\":\"style_col-label__ZFEwt__EG6bw\",\"col-content\":\"style_col-content__wtZ9I__EG6bw\"};","import { Col, Row } from \"antd\";\nimport classnames from \"classnames\";\nimport Features from \"@components/Features\";\nimport style from \"./style.module.scss\";\n\nconst Descriptions = ({ dataSource, isFull, className, ...props }) => {\n  return (\n    <Row {...props} className={classnames(style[\"descriptions\"], className)}>\n      {dataSource.map((colItem, colIndex) => {\n        const _colItem = colItem.slice(0, 2).filter((item) => {\n          if (typeof item.display === \"function\") {\n            return item.display(item, dataSource);\n          }\n          return item.display !== false;\n        });\n        return _colItem\n          .slice(0, 2)\n          .map(({ label, content, featureId }, itemIndex) => {\n            const render = (\n              <Col\n                span={24 / _colItem.length}\n                className={classnames(\n                  style[\"col-item\"],\n                  \"descriptions-col-item\"\n                )}\n                key={`${colIndex}-${itemIndex}`}\n              >\n                <Row\n                  wrap={false}\n                  className={classnames(\n                    style[\"descriptions-item\"],\n                    \"descriptions-item\"\n                  )}\n                >\n                  <Col\n                    span={isFull ? 8 : 4 * _colItem.length}\n                    className={classnames(\n                      style[\"col-label\"],\n                      \"descriptions-col-label\"\n                    )}\n                  >\n                    {label}\n                  </Col>\n                  <Col\n                    span={isFull ? 16 : 24 - 4 * _colItem.length}\n                    className={classnames(\n                      style[\"col-content\"],\n                      \"descriptions-col-content\"\n                    )}\n                  >\n                    {content}\n                  </Col>\n                </Row>\n              </Col>\n            );\n            return featureId ? (\n              <Features id={featureId} key={`${colIndex}-${itemIndex}`}>\n                {render}\n              </Features>\n            ) : (\n              render\n            );\n          });\n      })}\n    </Row>\n  );\n};\n\nexport default Descriptions;\n","import get from \"lodash/get\";\nimport axios from \"axios\";\nimport { App, Button } from \"antd\";\nimport { usePreset } from \"@components/Global\";\nimport Icon from \"@components/Icon\";\nimport { useFetch } from \"@kne/react-fetch\";\nimport { useEffect, useState } from \"react\";\nimport useRefCallback from \"@kne/use-ref-callback\";\n\nexport const downloadBlobFile = async (res, filename) => {\n  const download = (url) => {\n    const element = document.createElement(\"a\"),\n      event = new MouseEvent(\"click\");\n    element.download = filename; // 设置文件名称\n    element.href = url; // 将生成的URL设置为a.href属性\n    element.dispatchEvent(event); // 触发a的单击事件\n  };\n\n  if (!res) {\n    throw new Error(\"未获取到下载的文件信息\");\n  }\n\n  if (typeof res === \"string\" && /blob:http(s)?:/.test(res)) {\n    download(res);\n    return;\n  }\n\n  if (Object.prototype.toString.call(res) === \"[object Blob]\") {\n    const blob = new Blob([res], {\n      type: get(res, \"type\"),\n    });\n    download(URL.createObjectURL(blob));\n    return;\n  }\n\n  const { data } = await axios({ url: res, responseType: \"blob\" });\n  download(\n    URL.createObjectURL(\n      new Blob([data], {\n        type: get(data, \"type\"),\n      })\n    )\n  );\n};\n\nconst useDownload = ({\n  id,\n  filename,\n  apis: currentApis,\n  onError,\n  onSuccess,\n}) => {\n  const { message } = App.useApp();\n  const { apis: baseApis } = usePreset();\n  const apis = Object.assign({}, baseApis, currentApis);\n  const [downLoading, setDownLoading] = useState(false);\n\n  const { isLoading, data, error, refresh, ...fetchProps } = useFetch(\n    Object.assign({}, apis.oss, { auto: false })\n  );\n\n  const showError = useRefCallback(onError || message.error);\n  const successHandler = useRefCallback(onSuccess);\n\n  useEffect(() => {\n    if (isLoading) {\n      return;\n    }\n    if (error) {\n      showError(error);\n      return;\n    }\n    if (!data) {\n      return;\n    }\n    setDownLoading(true);\n    downloadBlobFile(data, filename)\n      .then(successHandler)\n      .catch((e) => {\n        showError(e.message);\n      })\n      .then(() => {\n        setDownLoading(false);\n      });\n  }, [isLoading, error, data, filename, showError, successHandler]);\n  return {\n    ...fetchProps,\n    isLoading: isLoading || downLoading,\n    download: () => refresh(id && { params: { id } }),\n  };\n};\n\nconst Download = ({\n  id,\n  filename,\n  api,\n  onSuccess,\n  onError,\n  onClick,\n  ...props\n}) => {\n  const { isLoading, download } = useDownload({\n    id,\n    filename,\n    api,\n    onError,\n    onSuccess,\n  });\n  return (\n    <Button\n      icon={<Icon type=\"icon-xiazai\" />}\n      {...props}\n      loading={isLoading}\n      onClick={(...args) => {\n        onClick && onClick(...args);\n        download();\n      }}\n    />\n  );\n};\n\nDownload.defaultProps = {\n  filename: \"未命名下载文件\",\n};\n\nDownload.useDownload = useDownload;\nDownload.downloadBlobFile = downloadBlobFile;\n\nexport default Download;\n","// extracted by mini-css-extract-plugin\nexport default {\"file-modal-outer\":\"style_file-modal-outer__1guNh__EG6bw\",\"file-title\":\"style_file-title__8bnUq__EG6bw\",\"ellipse\":\"style_ellipse__kDaLC__EG6bw\"};","import { useModal } from \"@components/Modal\";\nimport FilePreview from \"@components/FilePreview\";\nimport Download from \"./Download\";\nimport { App, Space } from \"antd\";\nimport { useCallback } from \"react\";\nimport style from \"./style.module.scss\";\n\nconst useFileModal = () => {\n  const modal = useModal();\n  const { message } = App.useApp();\n  return useCallback(\n    ({ title, id, originName, apis, openDownload = true, ...modalProps }) => {\n      return modal(\n        Object.assign(\n          {\n            footer: null,\n          },\n          modalProps,\n          {\n            title: (\n              <Space size={10} className={style[\"file-title\"]}>\n                <span className={style[\"ellipse\"]}>{title || originName}</span>\n                {openDownload && (\n                  <Download\n                    className=\"btn-no-padding\"\n                    type=\"link\"\n                    id={id}\n                    apis={apis}\n                    filename={originName}\n                    onSuccess={() => {\n                      message.success(\"下载成功\");\n                    }}\n                  />\n                )}\n              </Space>\n            ),\n            children: (\n              <div className={style[\"file-modal-outer\"]}>\n                <FilePreview id={id} originName={originName} apis={apis} />\n              </div>\n            ),\n          }\n        )\n      );\n    },\n    [modal, message]\n  );\n};\n\nexport default useFileModal;\n","import { Button, Space } from \"antd\";\nimport Icon from \"@components/Icon\";\nimport ConfirmButton from \"@components/ConfirmButton\";\nimport DownloadButton from \"../Download\";\nimport FormInfo, { Input, useFormModal } from \"@components/FormInfo\";\nimport { useIntl } from \"@components/Intl\";\nimport last from \"lodash/last\";\nimport dropRight from \"lodash/dropRight\";\nimport useFileModal from \"../useFileModal\";\n\nconst OptionButtons = ({ item, hasPreview, getPermission, apis }) => {\n  const { filename, id } = item;\n  const { formatMessage } = useIntl({ moduleName: \"File\" });\n  const formModal = useFormModal();\n  const fileModal = useFileModal();\n  return (\n    <Space size={0}>\n      {hasPreview && getPermission(\"preview\", item) && (\n        <Button\n          type=\"text\"\n          icon={<Icon type=\"icon-yulan\" />}\n          onClick={() => {\n            apis.onPreview\n              ? apis.onPreview(item)\n              : fileModal({ id, originName: filename, apis });\n          }}\n        />\n      )}\n      {getPermission(\"edit\", item) && (\n        <Button\n          type=\"text\"\n          icon={<Icon type=\"icon-bianji\" />}\n          onClick={() => {\n            const modalApi = formModal({\n              size: \"small\",\n              title: formatMessage({ id: \"editDocumentName\" }),\n              formProps: {\n                data: {\n                  name: dropRight(item.filename.split(\".\")).join(\".\"),\n                },\n                onSubmit: async (data) => {\n                  const res =\n                    apis.onEdit &&\n                    (await apis.onEdit({\n                      formData: Object.assign({}, data, {\n                        name: `${data.name}.${last(item.filename.split(\".\"))}`,\n                      }),\n                      item,\n                    }));\n                  if (res !== false) {\n                    modalApi.close();\n                  }\n                },\n              },\n              children: (\n                <FormInfo\n                  column={1}\n                  list={[\n                    <Input\n                      name=\"name\"\n                      label={formatMessage({ id: \"documentName\" })}\n                      rule=\"REQ LEN-0-100\"\n                    />,\n                  ]}\n                />\n              ),\n            });\n          }}\n        />\n      )}\n      {getPermission(\"download\", item) && (\n        <DownloadButton type=\"text\" id={id} filename={filename} />\n      )}\n      {getPermission(\"delete\", item) && (\n        <ConfirmButton\n          type=\"text\"\n          icon={<Icon type=\"icon-shanchu\" />}\n          onClick={() => {\n            return apis.onDelete && apis.onDelete(item);\n          }}\n        />\n      )}\n    </Space>\n  );\n};\n\nOptionButtons.defaultProps = {\n  hasPreview: true,\n  apis: {},\n  getPermission: (type, item) => {\n    return true;\n  },\n};\n\nexport default OptionButtons;\n","// extracted by mini-css-extract-plugin\nexport default {\"list-item-outer\":\"style_list-item-outer__0jlCN__EG6bw\",\"list-item\":\"style_list-item__nmPCB__EG6bw\",\"split\":\"style_split__kgSlH__EG6bw\",\"loading\":\"style_loading__kQUX5__EG6bw\",\"list-options\":\"style_list-options__aEila__EG6bw\",\"list-time\":\"style_list-time__Khoxc__EG6bw\"};","const importMessages = (locale) => {\n  return {\n    \"en-US\": () => import(\"./en-US\"),\n    \"zh-CN\": () => import(\"./zh-CN\"),\n  }[locale]();\n};\n\nexport default importMessages;\n","import { Col, List as AntdList, Row, Space, Spin, Typography } from \"antd\";\nimport FileType from \"@kne/react-file-type\";\nimport OptionButtons from \"./OptionButtons\";\nimport last from \"lodash/last\";\nimport dayjs from \"dayjs\";\nimport style from \"./style.module.scss\";\nimport importMessages from \"../locale\";\nimport { FormattedMessage, IntlProvider } from \"@components/Intl\";\n\nconst List = ({\n  className,\n  dataSource,\n  getPermission,\n  infoItemRenders,\n  apis,\n}) => {\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"File\">\n      <AntdList\n        className={className}\n        dataSource={dataSource.map((item, index) => {\n          item.index = index;\n          return item;\n        })}\n        rowKey={(item) =>\n          `item_${\n            (item.uuid && `uuid_${item.uuid}`) || (item.id && `id_${item.id}`)\n          }`\n        }\n        renderItem={(item) => {\n          const { type, filename } = item;\n          return (\n            <AntdList.Item className={style[\"list-item-outer\"]}>\n              <Row\n                justify=\"space-between\"\n                wrap={false}\n                className={style[\"list-item\"]}\n              >\n                <Col flex={1}>\n                  <div className={style[\"split\"]} />\n                  <Space className=\"is-block\" align=\"start\" size={4}>\n                    <FileType type={last(filename?.split(\".\"))} size={14} />\n                    {filename}\n                  </Space>\n                </Col>\n                {infoItemRenders &&\n                  infoItemRenders.map((render, index) => {\n                    return (\n                      <Col span={render.span || 4} key={index}>\n                        {type !== \"uploading\" &&\n                          (typeof render === \"function\"\n                            ? render\n                            : render.render)(item)}\n                        <div className={style[\"split\"]} />\n                      </Col>\n                    );\n                  })}\n                <Col className={style[\"list-options\"]}>\n                  {type !== \"uploading\" ? (\n                    <OptionButtons\n                      getPermission={getPermission}\n                      item={item}\n                      apis={apis}\n                    />\n                  ) : (\n                    <Space className={style[\"loading\"]}>\n                      <Spin size=\"small\" />\n                      <Typography.Link>\n                        <FormattedMessage id=\"uploading\" moduleName=\"File\" />\n                      </Typography.Link>\n                    </Space>\n                  )}\n                </Col>\n              </Row>\n            </AntdList.Item>\n          );\n        }}\n        bordered\n      />\n    </IntlProvider>\n  );\n};\n\nList.defaultProps = {\n  infoItemRenders: [\n    (item) => {\n      return item.userName ? (\n        <Typography.Text>{item.userName}</Typography.Text>\n      ) : null;\n    },\n    (item) => {\n      return item.date ? (\n        <Typography.Text>\n          {dayjs(item.date).format(\"YYYY-MM-DD HH:mm:ss\")}\n        </Typography.Text>\n      ) : null;\n    },\n  ],\n};\n\nexport default List;\n\nexport { OptionButtons };\n","import withOSSFile from \"@common/hocs/withOSSFile\";\n\nconst File = withOSSFile(({ data, children, ...props }) => {\n  return children({ url: data, ...props });\n});\n\nexport default File;\n","import { Typography } from \"antd\";\nimport useFileModal from \"./useFileModal\";\n\nconst FileLink = ({\n  id,\n  originName,\n  openDownload,\n  children,\n  modalProps,\n  ...props\n}) => {\n  const modal = useFileModal();\n  return (\n    <Typography.Link\n      {...props}\n      onClick={() => {\n        modal({ ...modalProps, id, originName, openDownload });\n      }}\n    >\n      {children || originName}\n    </Typography.Link>\n  );\n};\n\nFileLink.defaultProps = {\n  openDownload: true,\n};\n\nexport default FileLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__9Fu-3__EG6bw\",\"container-html\":\"style_container-html__IsNVq__EG6bw\",\"html-inner\":\"style_html-inner__S05cI__EG6bw\",\"loading\":\"style_loading__r3aiE__EG6bw\",\"control-bar\":\"style_control-bar__kTKau__EG6bw\",\"scroller\":\"style_scroller__HOq7b__EG6bw\",\"outer\":\"style_outer__ntu--__EG6bw\",\"file-name\":\"style_file-name__UPbbe__EG6bw\",\"file-options\":\"style_file-options__5TE5l__EG6bw\",\"scale-input\":\"style_scale-input__JdF1K__EG6bw\",\"text-outer\":\"style_text-outer__TzhuG__EG6bw\",\"error\":\"style_error__wSaxt__EG6bw\",\"text-inner\":\"style_text-inner__jdi-A__EG6bw\",\"image-inner\":\"style_image-inner__zTiFU__EG6bw\"};","import iFrameResize from \"iframe-resizer\";\nimport { useEffect, useRef } from \"react\";\nimport { getPublicPath } from \"@kne/remote-loader\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\nimport { createWithFetch } from \"@kne/react-fetch\";\n\nconst HtmlInnerPreview = createWithFetch({\n  transformResponse: ({ data }) => {\n    return {\n      data: {\n        code: 200,\n        results: data,\n      },\n    };\n  },\n})(({ data }) => {\n  const ref = useRef(null);\n  useEffect(() => {\n    const parser = new DOMParser();\n    const domDocument = parser.parseFromString(data, \"text/html\");\n    domDocument.querySelectorAll(\"script\").forEach((el) => {\n      el.parentElement.removeChild(el);\n    });\n    const scriptPath =\n      getPublicPath(\"components-core\") + \"/iframeResizer.contentWindow.js\";\n    const script = document.createElement(\"script\");\n    script.src = scriptPath;\n    domDocument.head.appendChild(script);\n    const style = document.createElement(\"style\");\n    style.innerText =\n      \"html,body{height:auto!important;}body{pointer-events: none;background: #FFFFFF;}\";\n    domDocument.head.appendChild(style);\n    ref.current.srcdoc = domDocument.documentElement.outerHTML;\n  }, [data]);\n  useEffect(() => {\n    iFrameResize.iframeResize({ checkOrigin: false }, ref.current);\n  }, []);\n  return <iframe title=\"简历预览\" frameBorder=\"0\" width=\"100%\" ref={ref} />;\n});\n\nconst HtmlPreview = ({ className, url, maxWidth }) => {\n  return (\n    <div\n      className={classnames(className, style[\"container\"])}\n      style={{\n        maxWidth,\n      }}\n    >\n      <HtmlInnerPreview url={url} />\n      {/*<iframe\n        title=\"简历预览\"\n        src={url}\n        frameBorder=\"0\"\n        width=\"100%\"\n        ref={ref}\n        onLoad={() => {\n          const scriptPath =\n            getPublicPath(\"components-core\") +\n            \"/iframeResizer.contentWindow.js\";\n          if (!ref.current.contentDocument) {\n            console.warn(\n              `跨域情况无法开启自动高度计算，请将${scriptPath}脚本加入目标页面`\n            );\n            return;\n          }\n          const script = document.createElement(\"script\");\n          script.src = scriptPath;\n          ref.current.contentDocument.head.appendChild(script);\n          ref.current.contentDocument.body.style = \"pointer-events: none;\";\n        }}\n      />*/}\n    </div>\n  );\n};\n\nexport default HtmlPreview;\n","import { usePreset } from \"@components/Global\";\nimport { createWithFetch } from \"@kne/react-fetch\";\nimport { typeFormatComponent } from \"./typeFormat\";\n\nconst OfficePreviewInner = createWithFetch({\n  cache: \"office-preview\",\n})(({ data, className, ...props }) => {\n  const { data: fileList } = data;\n  return fileList.map(({ url }) => {\n    const PreviewComponent = typeFormatComponent(url);\n    return (\n      <PreviewComponent {...props} url={url} key={url} className={className} />\n    );\n  });\n});\n\nconst OfficePreview = ({ id, apis: propsApis, className, ...props }) => {\n  const { apis: baseApis } = usePreset();\n  const apis = Object.assign({}, baseApis, propsApis);\n  return (\n    <OfficePreviewInner\n      {...props}\n      {...apis.previewOffice}\n      data={{ id }}\n      className={className}\n    />\n  );\n};\n\nexport default OfficePreview;\n","import { memo, useState } from \"react\";\nimport { Space, Spin } from \"antd\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport \"react-pdf/dist/esm/Page/TextLayer.css\";\nimport style from \"./style.module.scss\";\nimport { useResize } from \"@components/Common\";\nimport { getPublicPath } from \"@kne/remote-loader\";\nimport classnames from \"classnames\";\n\nconst PdfPreview = memo(({ url, maxWidth, scale, rotate, className }) => {\n  const [numPages, setNumPages] = useState(0);\n  pdfjs.GlobalWorkerOptions.workerSrc =\n    getPublicPath(\"components-core\") + \"/pdfjs/build/pdf.worker.js\";\n  const [width, setWidth] = useState(maxWidth);\n  const ref = useResize(() => {\n    if (ref.current.clientWidth) {\n      setWidth(Math.min(ref.current.clientWidth, maxWidth));\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={classnames(className, style[\"container\"])}\n      style={{\n        maxWidth: maxWidth,\n      }}\n    >\n      <Document\n        file={{ url }}\n        options={{\n          standardFontDataUrl:\n            getPublicPath(\"components-core\") + \"/pdfjs/standard_fonts/\",\n          cMapUrl: getPublicPath(\"components-core\") + \"/pdfjs/cmaps/\",\n          cMapPacked: true,\n        }}\n        error=\"PDF文件加载失败\"\n        loading={\n          <div className={style[\"loading\"]}>\n            <Spin />\n          </div>\n        }\n        noData=\"未指定PDF文件\"\n        onLoadSuccess={({ numPages }) => {\n          setNumPages(numPages);\n          console.log(\"onLoadSuccess\");\n        }}\n        onLoadError={(props) => {\n          console.log(\"onLoadError\", props);\n        }}\n        onSourceError={(props) => {\n          console.log(\"onSourceError\", props);\n        }}\n      >\n        <Space direction=\"vertical\">\n          {numPages >= 1 &&\n            Array.from(new Array(numPages), (el, index) => (\n              <Page\n                key={`page_${index}`}\n                className=\"preview-item\"\n                scale={scale / 100}\n                rotate={rotate}\n                pageNumber={index + 1}\n                width={width}\n                loading={null}\n                renderAnnotationLayer={false}\n                renderTextLayer={true}\n                noData=\"未指定页面\"\n              />\n            ))}\n        </Space>\n      </Document>\n    </div>\n  );\n});\n\nPdfPreview.defaultProps = {\n  autoSize: true,\n  renderTextLayer: false,\n  scale: 100,\n  rotate: 0,\n  maxWidth: 1200,\n};\n\nexport default PdfPreview;\n","import { useState, useEffect } from \"react\";\nimport TextEscape from \"@kne/react-text-escape\";\nimport axios from \"axios\";\nimport style from \"./style.module.scss\";\nimport { Spin } from \"antd\";\nimport classnames from \"classnames\";\n\nconst TextPreview = ({ url, className, maxWidth }) => {\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    axios.get(url).then(\n      ({ data }) => {\n        setText(data);\n        setLoading(false);\n      },\n      () => {\n        setLoading(false);\n        setError(true);\n      }\n    );\n  }, [url]);\n\n  return (\n    <div\n      className={classnames(className, style[\"container\"])}\n      style={{\n        maxWidth,\n      }}\n    >\n      {loading ? (\n        <div className={style[\"loading\"]}>\n          <Spin />\n        </div>\n      ) : null}\n      <div className={style[\"text-outer\"]}>\n        {error ? (\n          <div className={style[\"error\"]}>文件加载失败</div>\n        ) : (\n          <TextEscape text={text} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TextPreview;\n","import { Result } from \"antd\";\nimport style from \"./style.module.scss\";\n\nconst UnknownPreview = ({ maxWidth }) => {\n  return (\n    <div\n      className={style[\"container\"]}\n      style={{\n        maxWidth,\n      }}\n    >\n      <div className={style[\"text-outer\"]}>\n        <Result\n          status=\"500\"\n          title=\"不支持的文件类型\"\n          subTitle=\"系统不支持该文件类型预览，请下载到本地后进行预览\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default UnknownPreview;\n","import { useEffect, useState } from \"react\";\nimport style from \"./style.module.scss\";\nimport { Spin } from \"antd\";\nimport classnames from \"classnames\";\n\nconst ImagePreview = ({ url, scale, rotate, className, maxWidth }) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const image = new Image();\n    image.src = url;\n    const handlerLoad = () => {\n      setLoading(false);\n    };\n\n    const handlerError = () => {\n      setLoading(false);\n      setError(true);\n    };\n\n    image.addEventListener(\"load\", handlerLoad);\n    image.addEventListener(\"error\", handlerError);\n    return () => {\n      image.removeEventListener(\"load\", handlerLoad);\n      image.removeEventListener(\"error\", handlerError);\n    };\n  }, [url, scale, rotate]);\n  return (\n    <div\n      className={classnames(className, style[\"container\"])}\n      style={{\n        maxWidth,\n      }}\n    >\n      {loading ? (\n        <div className={style[\"loading\"]}>\n          <Spin />\n        </div>\n      ) : null}\n      {error ? (\n        <div className={style[\"error\"]}>图片加载失败</div>\n      ) : (\n        <img src={url} alt=\"简历预览\" />\n      )}\n    </div>\n  );\n};\n\nexport default ImagePreview;\n","import HtmlPreview from \"./HtmlPreview\";\nimport OfficePreview from \"./OfficePreview\";\nimport PdfPreview from \"./PdfPreview\";\nimport TextPreview from \"./TextPreview\";\nimport UnknownPreview from \"./UnknownPreview\";\nimport ImagePreview from \"./ImagePreview\";\n\nconst typeFormat = (url) => {\n  const path = (url || \"\").split(\"?\")[0];\n  const _path = path.toLowerCase();\n  if (/.txt$/.test(_path)) {\n    return \"txt\";\n  }\n  if (/.pdf$/.test(_path)) {\n    return \"pdf\";\n  }\n  if (/.(png|jpg|jpeg)$/.test(_path)) {\n    return \"image\";\n  }\n  if (/.(html|htm)$/.test(_path)) {\n    return \"html\";\n  }\n  if (/.(doc|docx|xls|xlsx|ppt|pptx)$/.test(_path)) {\n    return \"office\";\n  }\n  return \"unknown\";\n};\n\nexport default typeFormat;\n\nexport const typeFormatComponent = (url) => {\n  const mapping = {\n    txt: TextPreview,\n    pdf: PdfPreview,\n    image: ImagePreview,\n    html: HtmlPreview,\n    office: OfficePreview,\n    unknown: UnknownPreview,\n  };\n\n  return mapping[typeFormat(url)];\n};\n","import withOSSFile from \"@common/hocs/withOSSFile\";\nimport typeFormat, { typeFormatComponent } from \"./typeFormat\";\nimport OfficePreview from \"./OfficePreview\";\n\nconst OSSFilePreview = withOSSFile(({ data, id, className, ...props }) => {\n  const PreviewComponent = typeFormatComponent(data);\n  if (typeFormat(data) === \"office\") {\n    return <OfficePreview {...props} id={id} className={className} />;\n  }\n  return <PreviewComponent {...props} className={className} url={data} />;\n});\n\nexport default OSSFilePreview;\n","import typeFormat from \"./typeFormat\";\nimport OfficePreview from \"./OfficePreview\";\nimport OSSFilePreview from \"./OSSFilePreview\";\n\nconst FilePreview = ({ id, originName, ...props }) => {\n  if (typeFormat(originName) === \"office\") {\n    return <OfficePreview {...props} id={id} originName={originName} />;\n  }\n  return <OSSFilePreview {...props} id={id} originName={originName} />;\n};\n\nexport default FilePreview;\n","import useResize from \"@common/hooks/useResize\";\nimport last from \"lodash/last\";\nimport { forwardRef, useRef, useState } from \"react\";\nimport { List } from \"antd\";\nimport Fetch from \"@kne/react-fetch\";\nimport isEqual from \"lodash/isEqual\";\nimport classnames from \"classnames\";\n\nconst defaultColumns = [\n  {\n    width: 786,\n    col: 1,\n    size: 15,\n  },\n  {\n    width: 960,\n    col: 2,\n    size: 12,\n  },\n  {\n    width: 1360,\n    col: 3,\n    size: 12,\n  },\n  {\n    width: 1680,\n    col: 4,\n    size: 12,\n  },\n  {\n    width: 1920,\n    col: 5,\n    size: 15,\n  },\n];\n\nexport const useFlexBox = (props) => {\n  const { columns, onChange } = Object.assign(\n    {},\n    { columns: defaultColumns },\n    props\n  );\n  const [column, setColumn] = useState(null);\n  const columnRef = useRef(null);\n  const ref = useResize((el) => {\n    const width = el.clientWidth;\n    const column =\n      columns.find((item, index) => {\n        return item.width >= width;\n      }) || last(columns);\n    if (!isEqual(column, columnRef.current)) {\n      setColumn(column);\n      columnRef.current && onChange && onChange(column);\n      columnRef.current = column;\n    }\n  });\n\n  return { ref, column };\n};\n\nconst FlexBox = ({ columns, outerClassName, gutter, ...props }) => {\n  const { ref, column } = useFlexBox({ columns });\n  return (\n    <div ref={ref} className={outerClassName}>\n      {column && (\n        <List\n          {...props}\n          grid={{\n            gutter,\n            column: column.col,\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nFlexBox.defaultProps = {\n  gutter: 16,\n  columns: defaultColumns,\n};\n\nFlexBox.Item = List.Item;\n\nconst FlexBoxFetch = forwardRef(\n  (\n    {\n      columns,\n      api,\n      getFetchApi,\n      outerClassName,\n      className,\n      gutter,\n      dataFormat,\n      ...props\n    },\n    forwardRef\n  ) => {\n    const { ref, column } = useFlexBox({ columns });\n    return (\n      <div ref={ref} className={outerClassName}>\n        {column && (\n          <Fetch\n            {...(api || getFetchApi(column))}\n            ref={forwardRef}\n            render={({ data, isComplete }) => {\n              return (\n                <List\n                  {...props}\n                  className={classnames(className, \"loading-container\", {\n                    \"is-loading\": !isComplete,\n                  })}\n                  dataSource={dataFormat(data)}\n                  grid={{\n                    gutter,\n                    column: column.col,\n                  }}\n                />\n              );\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nFlexBoxFetch.defaultProps = {\n  gutter: 16,\n  columns: defaultColumns,\n  dataFormat: (data) => {\n    return data.pageData;\n  },\n};\n\nFlexBox.Fetch = FlexBoxFetch;\n\nexport default FlexBox;\n","import { useFormContext, util } from \"@kne/react-form-antd\";\nimport { Popover } from \"antd\";\nimport { useLayoutEffect, useState, useRef, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport useClickOutside from \"@kne/use-click-outside\";\nimport style from \"./style.module.scss\";\n\nconst useErrorMsg = ({ name, groupName, groupIndex }) => {\n  const { emitter, formState } = useFormContext();\n  const targetFieldInfo = useRef({ name, groupName, groupIndex });\n  targetFieldInfo.current = { name, groupName, groupIndex };\n  const formStateRef = useRef(formState);\n  formStateRef.current = formState;\n  const [currentError, setCurrentError] = useState(null);\n  useEffect(() => {\n    const target = emitter.addListener(\n      \"form-field-validate-complete\",\n      ({ id, validate }) => {\n        const field = formStateRef.current[id];\n        if (!field) {\n          return;\n        }\n        const currentField = targetFieldInfo.current;\n        if (\n          field.name === currentField.name &&\n          (!currentField.groupName ||\n            (field.groupName === currentField.groupName &&\n              field.groupIndex === currentField.groupIndex))\n        ) {\n          setCurrentError(\n            validate.status === 2\n              ? Object.assign({}, validate, {\n                  label: field.label,\n                  errMsg: util.compileErrMsg(validate.msg, field.label),\n                })\n              : null\n          );\n        }\n      }\n    );\n    return () => {\n      target && target.remove();\n    };\n  }, [emitter]);\n  return currentError;\n};\n\nconst ErrorTip = ({\n  name,\n  groupName,\n  overlayClassName,\n  errorRender,\n  groupIndex,\n  children,\n}) => {\n  const currentError = useErrorMsg({ name, groupName, groupIndex });\n  const [isHover, setIsHover] = useState(false);\n  const open = currentError && isHover;\n  const errorContent =\n    open &&\n    errorRender(\n      Object.assign({}, currentError, { closeHover: () => setIsHover(false) })\n    );\n  const popoverChildrenRef = useRef(null),\n    popoverContentRef = useRef(null);\n\n  const outerRef = useClickOutside(() => {\n    setIsHover(false);\n  });\n  outerRef.current = {\n    contains: (target) => {\n      return (\n        popoverChildrenRef.current.contains(target) ||\n        (popoverContentRef.current &&\n          popoverContentRef.current.contains(target))\n      );\n    },\n  };\n  const [width, setWidth] = useState(0);\n  useLayoutEffect(() => {\n    const callback = () => {\n      const target = popoverChildrenRef.current.querySelector(\n        \".react-form__field-component\"\n      );\n      target && setWidth(target.clientWidth);\n    };\n    callback();\n    const resizeObserver = new ResizeObserver(callback);\n    resizeObserver.observe(popoverChildrenRef.current);\n    const mutationObserver = new MutationObserver(callback);\n    mutationObserver.observe(popoverChildrenRef.current, {\n      subtree: true,\n      childList: true,\n    });\n    return () => {\n      mutationObserver.disconnect();\n      resizeObserver.disconnect();\n    };\n  }, []);\n  return (\n    <Popover\n      open={!!errorContent}\n      overlayClassName={classnames(\n        overlayClassName,\n        style[\"error-tip-overlay\"]\n      )}\n      content={\n        errorContent && (\n          <div\n            ref={popoverContentRef}\n            style={{ width }}\n            className={classnames(style[\"error-tip-overlay-content\"])}\n          >\n            {errorContent}\n          </div>\n        )\n      }\n      placement=\"bottom\"\n      transitionName={\"ant-slide-up\"}\n      arrow={false}\n    >\n      <div\n        className={classnames(\"error-tip\")}\n        ref={popoverChildrenRef}\n        onMouseEnter={() => {\n          setIsHover(true);\n        }}\n      >\n        {children}\n      </div>\n    </Popover>\n  );\n};\n\nErrorTip.defaultProps = {\n  errorRender: () => {\n    return null;\n  },\n};\n\nexport default ErrorTip;\n","import { Col, Row } from \"antd\";\nimport { useFormContext } from \"@kne/react-form-antd\";\nimport Features from \"@components/Features\";\nimport { Fragment, useEffect, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Tooltip from \"@components/Tooltip\";\nimport Icon from \"@components/Icon\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\n\nconst FieldList = ({ list, groupArgs, itemRender }) => {\n  const context = useFormContext();\n  const contextApi = Object.assign({}, context, groupArgs ? { groupArgs } : {});\n  const hiddenRef = useRef(null);\n  const [isMount, setIsMount] = useState(false);\n  useEffect(() => {\n    setIsMount(true);\n  }, []);\n\n  return (\n    <>\n      <div ref={hiddenRef} style={{ display: \"none\" }} />\n      {list\n        .filter((item) => {\n          if (typeof item.props.display === \"function\") {\n            return item.props.display(contextApi);\n          }\n          return item.props.display !== false;\n        })\n        .map((item, index) => {\n          const key =\n            item.props.name + index ||\n            (groupArgs && groupArgs[0] + index) ||\n            index;\n          const targetProps = { key, list, props: item.props },\n            componentProps = Object.assign({}, item.props),\n            ComponentItem = item.type;\n          [\n            \"display\",\n            \"block\",\n            \"hidden\",\n            \"setExtraProps\",\n            \"isBlock\",\n            \"featureId\",\n            \"tips\",\n          ].forEach((key) => {\n            if (item.props.hasOwnProperty(key)) {\n              targetProps[key] = item.props[key];\n            }\n            delete componentProps[key];\n          });\n\n          if (targetProps.hasOwnProperty(\"isBlock\")) {\n            componentProps[\"block\"] = targetProps.isBlock;\n          }\n\n          const innerComponent = (\n            <ComponentItem\n              {...Object.assign(\n                {},\n                componentProps,\n                typeof targetProps.setExtraProps === \"function\"\n                  ? targetProps.setExtraProps({\n                      props: componentProps,\n                      contextApi,\n                    })\n                  : {}\n              )}\n              onChange={(...args) => {\n                return (\n                  item.props.onChange &&\n                  item.props.onChange(...args, contextApi)\n                );\n              }}\n            />\n          );\n          const inner = targetProps.hidden\n            ? isMount && createPortal(innerComponent, hiddenRef.current)\n            : itemRender(\n                targetProps.tips ? (\n                  <Row gutter={8} align=\"top\">\n                    <Col flex={1}>{innerComponent}</Col>\n                    <Col>\n                      <Tooltip content={targetProps.tips}>\n                        <span\n                          className={classnames(style[\"field-tips\"], {\n                            [style[\"label-hidden\"]]: componentProps.labelHidden,\n                          })}\n                        >\n                          <Icon type=\"icon-xinxi-miaobian\" />\n                        </span>\n                      </Tooltip>\n                    </Col>\n                  </Row>\n                ) : (\n                  innerComponent\n                ),\n                targetProps\n              );\n          return (\n            <Fragment key={key}>\n              {targetProps.hasOwnProperty(\"featureId\") ? (\n                <Features id={targetProps.featureId} key={key}>\n                  {inner}\n                </Features>\n              ) : (\n                inner\n              )}\n            </Fragment>\n          );\n        })}\n    </>\n  );\n};\n\nexport default FieldList;\n","import { forwardRef, useEffect, useState } from \"react\";\nimport { usePreset } from \"@components/Global\";\nimport get from \"lodash/get\";\nimport formPreset from \"@components/FormInfo/preset\";\nimport { IntlProvider } from \"@components/Intl\";\nimport importMessages from \"@components/FormInfo/locale\";\nimport FormLangProvider from \"@components/FormInfo/FormLangProvider\";\nimport InfoPage from \"@components/InfoPage\";\nimport { Provider as HelperGuideProvider } from \"@components/FormInfo/HelperGuideLabel\";\nimport { FormAntd as ReactForm } from \"@kne/react-form-antd\";\nimport classnames from \"classnames\";\nimport style from \"@components/FormInfo/style.module.scss\";\n\nconst SetPreset = ({ children }) => {\n  const [isPreset, setIsPreset] = useState(false);\n  const preset = usePreset();\n  const formInfo = get(preset, \"formInfo\", {}),\n    locale = get(preset, \"locale\");\n  useEffect(() => {\n    formPreset(formInfo, { locale });\n    setIsPreset(true);\n  }, [formInfo, locale]);\n  if (!isPreset) {\n    return null;\n  }\n  return children;\n};\n\nconst Form = forwardRef(\n  ({ className, helperGuideName, children, lang, ...props }, ref) => {\n    return (\n      <IntlProvider importMessages={importMessages} moduleName=\"FormInfo\">\n        <FormLangProvider value={lang}>\n          <InfoPage>\n            <HelperGuideProvider value={helperGuideName}>\n              <ReactForm\n                {...props}\n                ref={ref}\n                className={classnames(className, style[\"form-outer\"])}\n              >\n                <SetPreset>{children}</SetPreset>\n              </ReactForm>\n            </HelperGuideProvider>\n          </InfoPage>\n        </FormLangProvider>\n      </IntlProvider>\n    );\n  }\n);\nForm.defaultProps = {\n  type: \"inner\",\n};\n\nexport default Form;\n","import { useFormContext } from \"@kne/react-form-antd\";\nimport LoadingButton from \"@components/LoadingButton\";\n\nconst FormApiButton = ({ onClick, ...props }) => {\n  const context = useFormContext();\n  return (\n    <LoadingButton\n      {...props}\n      onClick={(e) => {\n        return onClick(context, e);\n      }}\n    />\n  );\n};\n\nexport default FormApiButton;\n","import Drawer, { useDrawer } from \"@components/Drawer\";\nimport classnames from \"classnames\";\nimport {\n  CancelButton,\n  FormAntd as Form,\n  SubmitButton,\n} from \"@kne/react-form-antd\";\nimport FetchButton from \"@common/components/FetchButton\";\nimport { IntlProvider } from \"@components/Intl\";\nimport style from \"./style.module.scss\";\nimport importMessages from \"./locale\";\n\nconst defaultFooterButtons = [\n  { children: \"取消\", ButtonComponent: CancelButton },\n  {\n    type: \"primary\",\n    children: \"保存\",\n    ButtonComponent: SubmitButton,\n    autoClose: false,\n  },\n];\n\nconst computedCommonProps = ({\n  className,\n  withDecorator,\n  footerButtons = defaultFooterButtons,\n  formProps,\n  ...props\n}) => {\n  return {\n    ...props,\n    footerButtons,\n    className: classnames(className, style[\"form-outer\"], style[\"form-drawer\"]),\n    withDecorator: (render) => {\n      const innerRender = (props) => {\n        const _formProps =\n          typeof formProps === \"function\" ? formProps(props) : formProps;\n        return (\n          <Form {..._formProps}>\n            <IntlProvider importMessages={importMessages} moduleName=\"FormInfo\">\n              {render(props)}\n            </IntlProvider>\n          </Form>\n        );\n      };\n      return typeof withDecorator === \"function\"\n        ? withDecorator(innerRender)\n        : innerRender();\n    },\n  };\n};\n\nconst FormDrawer = (props) => {\n  return <Drawer {...computedCommonProps(props)} />;\n};\n\nexport default FormDrawer;\n\nexport const useFormDrawer = () => {\n  const drawer = useDrawer();\n  return (props) => drawer(computedCommonProps(props));\n};\n\nexport const FormDrawerButton = (props) => {\n  const formDrawer = useFormDrawer();\n  return <FetchButton {...props} modalFunc={formDrawer} />;\n};\n","import { Col, Row } from \"antd\";\nimport InfoPage from \"@components/InfoPage\";\nimport { useFlexBox } from \"@components/FlexBox\";\nimport FieldList from \"./FieldList\";\n\nconst FormInfo = ({ list, groupArgs, column, gap, ...props }) => {\n  const { ref: flexBoxRef, column: flexBoxColumn } = useFlexBox();\n\n  const renderInner = (column) => {\n    return (\n      <Row gutter={[gap || 24, 0]}>\n        <FieldList\n          list={list}\n          groupArgs={groupArgs}\n          itemRender={(children, targetProps) => {\n            return (\n              <Col\n                span={\n                  targetProps.block === true\n                    ? 24\n                    : Math.round(24 / (column || 1))\n                }\n              >\n                {children}\n              </Col>\n            );\n          }}\n        />\n      </Row>\n    );\n  };\n\n  const renderColumn = () => {\n    if (Number.isInteger(column) && column > 0) {\n      return renderInner(column);\n    }\n    if (flexBoxColumn) {\n      return renderInner(flexBoxColumn.col);\n    }\n\n    return renderInner(2);\n  };\n\n  return (\n    <InfoPage.Part {...props}>\n      <div ref={flexBoxRef}>{renderColumn()}</div>\n    </InfoPage.Part>\n  );\n};\n\nFormInfo.defaultProps = {\n  column: 2,\n  list: [],\n};\n\nexport default FormInfo;\n","import { useFormContext } from \"@kne/react-form-antd\";\n\nconst FormItem = ({ children }) => {\n  const { openApi, formData } = useFormContext();\n  return children({ ...openApi, formData });\n};\n\nexport default FormItem;\n","import { createContext, useContext } from \"react\";\n\nconst context = createContext([]);\n\nexport const { Provider, Consumer } = context;\n\nexport const useFormLang = () => {\n  return useContext(context);\n};\n\nexport default Provider;\n","import Modal, { useModal } from \"@components/Modal\";\nimport classnames from \"classnames\";\nimport { CancelButton, SubmitButton } from \"@kne/react-form-antd\";\nimport { Form } from \"./formModule\";\nimport FetchButton from \"@common/components/FetchButton\";\nimport { IntlProvider, FormattedMessage } from \"@components/Intl\";\nimport style from \"./style.module.scss\";\nimport importMessages from \"./locale\";\n\nconst localeModuleName = \"FormInfo\";\n\nconst computedCommonProps = ({\n  className,\n  withDecorator,\n  footerButtons,\n  formProps,\n  ...props\n}) => {\n  return {\n    ...props,\n    footerButtons: footerButtons || [\n      {\n        children: (\n          <IntlProvider\n            importMessages={importMessages}\n            moduleName={localeModuleName}\n          >\n            <FormattedMessage id={\"Cancel\"} moduleName={localeModuleName} />\n          </IntlProvider>\n        ),\n        ButtonComponent: CancelButton,\n      },\n      {\n        type: \"primary\",\n        children: (\n          <IntlProvider\n            importMessages={importMessages}\n            moduleName={localeModuleName}\n          >\n            <FormattedMessage id={\"Save\"} moduleName={localeModuleName} />\n          </IntlProvider>\n        ),\n        ButtonComponent: SubmitButton,\n        autoClose: false,\n      },\n    ],\n    className: classnames(className, style[\"form-outer\"], style[\"form-modal\"]),\n    withDecorator: (render) => {\n      const innerRender = (props) => {\n        const _formProps =\n          typeof formProps === \"function\" ? formProps(props) : formProps;\n        return (\n          <Form {..._formProps}>\n            <IntlProvider importMessages={importMessages} moduleName=\"FormInfo\">\n              {render(props)}\n            </IntlProvider>\n          </Form>\n        );\n      };\n      return typeof withDecorator === \"function\"\n        ? withDecorator(innerRender)\n        : innerRender();\n    },\n  };\n};\n\nconst FormModal = (props) => {\n  return <Modal {...computedCommonProps(props)} />;\n};\n\nexport default FormModal;\n\nexport const useFormModal = () => {\n  const modal = useModal();\n  return (props) => modal(computedCommonProps(props));\n};\n\nexport const FormModalButton = (props) => {\n  const formModal = useFormModal();\n  return <FetchButton {...props} modalFunc={formModal} />;\n};\n","import FormModal, { FormModalButton, useFormModal } from \"./FormModal\";\nimport { Space, Steps } from \"antd\";\nimport { useState } from \"react\";\nimport {\n  CancelButton,\n  SubmitButton,\n  useFormContext,\n} from \"@kne/react-form-antd\";\n\nconst StepsContent = ({\n  setCurrent,\n  current,\n  items,\n  setStepData,\n  stepData,\n}) => {\n  const currentItem = items[current];\n  const { formData } = useFormContext();\n  return (\n    <Space className=\"full-space\" direction=\"vertical\">\n      <Steps\n        current={current}\n        onChange={(current) => {\n          setStepData((stepData) => {\n            const newStepData = stepData.slice(0);\n            newStepData[current] = formData;\n            return newStepData;\n          });\n          setCurrent(current);\n        }}\n        items={items}\n      />\n      {currentItem.children}\n    </Space>\n  );\n};\n\nconst useSteps = () => {\n  const [stepData, setStepData] = useState([]);\n  const [current, setCurrent] = useState(0);\n\n  return ({ items, formProps }) => {\n    const isLastStep = current === items.length - 1;\n    return {\n      stepData,\n      formProps: Object.assign({}, formProps, {\n        data: Object.assign({}, formProps.data?.[current], stepData[current]),\n        onSubmit: (data) => {\n          const newStepData = stepData.slice(0);\n          newStepData[current] = data;\n          setStepData(newStepData);\n          if (isLastStep) {\n            return formProps?.onSubmit(stepData);\n          }\n          setCurrent(current + 1);\n        },\n      }),\n      children: (\n        <StepsContent\n          items={items}\n          current={current}\n          setCurrent={setCurrent}\n          stepData={stepData}\n          setStepData={setStepData}\n        />\n      ),\n      footerButtons: [\n        { children: \"取消\", ButtonComponent: CancelButton },\n        {\n          type: \"primary\",\n          children: !isLastStep ? \"下一步\" : \"保存\",\n          ButtonComponent: SubmitButton,\n          autoClose: false,\n        },\n      ],\n    };\n  };\n};\n\nconst FormStepModal = (props) => {\n  const createSteps = useSteps();\n  const { footerButtons, children, formProps } = createSteps(props);\n  return (\n    <FormModal {...props} formProps={formProps} footerButtons={footerButtons}>\n      {children}\n    </FormModal>\n  );\n};\n\nexport default FormStepModal;\n\nexport const useFormStepModal = () => {\n  const formModal = useFormModal();\n  const createSteps = useSteps();\n  return (props) => {\n    const { footerButtons, children, formProps } = createSteps(props);\n    return formModal({\n      ...props,\n      formProps,\n      footerButtons,\n      children,\n    });\n  };\n};\n\nexport const FormStepModalButton = ({ modalProps, ...props }) => {\n  const createSteps = useSteps();\n  const { footerButtons, children, formProps } = createSteps(modalProps);\n  return (\n    <FormModalButton\n      {...props}\n      modalProps={Object.assign({}, modalProps, {\n        formProps,\n        footerButtons,\n        children,\n      })}\n    />\n  );\n};\n","import HelperGuide from \"@components/HelperGuide\";\nimport { createContext, useContext as useReactContext } from \"react\";\nimport { useGroup } from \"@kne/react-form-antd\";\nimport style from \"./style.module.scss\";\n\nconst context = createContext(\"\");\nexport const { Provider } = context;\n\nconst useContext = () => {\n  return useReactContext(context);\n};\n\nconst HelperGuideLabel = ({ name }) => {\n  const helperGuideName = useContext();\n  const group = useGroup();\n  return (\n    helperGuideName && (\n      <HelperGuide\n        className={style[\"helper-guide-field\"]}\n        name={\n          helperGuideName + \"-\" + (group.name ? group.name + \"-\" : \"\") + name\n        }\n      />\n    )\n  );\n};\n\nexport default HelperGuideLabel;\n","import { cloneElement, useRef } from \"react\";\nimport { Divider, Typography } from \"antd\";\nimport ConfirmButton from \"@components/ConfirmButton\";\nimport Icon from \"@components/Icon\";\nimport InfoPage from \"@components/InfoPage\";\nimport { GroupList, useFormContext } from \"@kne/react-form-antd\";\nimport FormInfo from \"./FormInfo\";\nimport classnames from \"classnames\";\nimport importMessages from \"./locale\";\nimport { FormattedMessage, IntlProvider } from \"@components/Intl\";\nimport get from \"lodash/get\";\nimport style from \"./style.module.scss\";\n\nconst List = ({\n  title,\n  addText,\n  minLength,\n  isUnshift,\n  maxLength,\n  defaultLength,\n  label,\n  name,\n  beforeAdd,\n  afterDelete,\n  column,\n  list,\n  listRender,\n  itemTitle,\n  outer,\n  renderChildren,\n  className,\n}) => {\n  const groupRef = useRef(null);\n  const context = useFormContext();\n  const { formData } = context;\n  return (\n    <IntlProvider importMessages={importMessages} moduleName=\"FormInfo\">\n      {cloneElement(\n        outer,\n        {\n          title,\n          addText,\n          className: classnames(className, style[\"list-part\"]),\n          allowAdd: !(\n            maxLength && maxLength <= get(formData, `${name}.length`, 0)\n          ),\n          add: () => {\n            if (\n              typeof beforeAdd === \"function\"\n                ? beforeAdd(name, context) !== false\n                : true\n            ) {\n              groupRef.current.onAdd({ isUnshift: isUnshift });\n            }\n          },\n        },\n        renderChildren(\n          <GroupList name={name} defaultLength={defaultLength} ref={groupRef}>\n            {(...groupArgs) => {\n              const [key, { index, onRemove, length }] = groupArgs;\n              const formInfoProps = {\n                key,\n                column,\n                list:\n                  typeof list === \"function\"\n                    ? list(...groupArgs, context)\n                    : list,\n                title:\n                  typeof itemTitle === \"function\"\n                    ? itemTitle({ index, key, onRemove })\n                    : itemTitle,\n                groupArgs,\n                extra: (\n                  <FormattedMessage id=\"delText\" moduleName=\"FormInfo\">\n                    {(text) => (\n                      <ConfirmButton\n                        disabled={minLength && minLength >= length}\n                        danger\n                        className={\"btn-no-padding\"}\n                        message={\n                          <FormattedMessage\n                            id=\"delConfirm\"\n                            moduleName=\"FormInfo\"\n                            values={{ name: label || title }}\n                          />\n                        }\n                        type=\"link\"\n                        onClick={() => {\n                          onRemove(key);\n                          afterDelete && afterDelete(...groupArgs, context);\n                        }}\n                      >\n                        <Icon type=\"icon-shanchu\" />\n                        {text}\n                      </ConfirmButton>\n                    )}\n                  </FormattedMessage>\n                ),\n              };\n              return (\n                <div key={key} className={style[\"list-item\"]}>\n                  {typeof listRender === \"function\" ? (\n                    listRender(formInfoProps)\n                  ) : (\n                    <FormInfo\n                      {...formInfoProps}\n                      className={style[\"list-item-part\"]}\n                      gap={16}\n                    />\n                  )}\n                  <Divider />\n                </div>\n              );\n            }}\n          </GroupList>\n        )\n      )}\n    </IntlProvider>\n  );\n};\n\nconst Outer = ({ add, addText, className, allowAdd, ...props }) => {\n  return (\n    <InfoPage.Part\n      {...props}\n      className={className}\n      extra={\n        allowAdd && (\n          <FormattedMessage id=\"addText\" moduleName=\"FormInfo\">\n            {(text) => (\n              <Typography.Link className={style[\"list-btn\"]} onClick={add}>\n                <Icon type=\"icon-tianjia\" />\n                {addText || text}\n              </Typography.Link>\n            )}\n          </FormattedMessage>\n        )\n      }\n    />\n  );\n};\n\nList.defaultProps = {\n  minLength: 0,\n  isUnshift: true,\n  defaultLength: 1,\n  outer: <Outer />,\n  renderChildren: (children) => children,\n};\n\nexport default List;\n","// extracted by mini-css-extract-plugin\nexport default {\"ant-tag\":\"style_ant-tag__7ct2q__EG6bw\",\"input\":\"style_input__+OpvV__EG6bw\",\"overlay\":\"style_overlay__CXfU5__EG6bw\",\"is-disabled\":\"style_is-disabled__uX4qq__EG6bw\",\"input-icon\":\"style_input-icon__E3NjK__EG6bw\",\"large\":\"style_large__vMozz__EG6bw\",\"small\":\"style_small__ubqQ+__EG6bw\",\"input-inner\":\"style_input-inner__sY-6k__EG6bw\",\"input-custom\":\"style_input-custom__Kxq3n__EG6bw\",\"display-content\":\"style_display-content__qA1jn__EG6bw\",\"overlay-footer-extra\":\"style_overlay-footer-extra__yCzWX__EG6bw\",\"selected-tag\":\"style_selected-tag__BZsMM__EG6bw\",\"selected-tag-list\":\"style_selected-tag-list__As0ho__EG6bw\",\"selected-tag-inner\":\"style_selected-tag-inner__2NH59__EG6bw\",\"text-inner\":\"style_text-inner__Bq2Ji__EG6bw\",\"placeholder\":\"style_placeholder__odotY__EG6bw\",\"is-modal\":\"style_is-modal__4cj8L__EG6bw\",\"overlay-content\":\"style_overlay-content__kpGRn__EG6bw\"};","import createContext from \"@common/utils/createContext\";\n\nexport const { context, useContext, Provider, Consumer } = createContext();\n\nexport default context;\n","import style from \"./style.module.scss\";\nimport { Provider, useContext } from \"./context\";\nimport {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport useControlValue from \"@kne/use-control-value\";\nimport { withFetch } from \"@kne/react-fetch\";\nimport get from \"lodash/get\";\nimport { App, Popover, Space, Tag } from \"antd\";\nimport classnames from \"classnames\";\nimport Modal from \"@components/Modal\";\nimport Icon from \"@components/Icon\";\nimport isNil from \"lodash/isNil\";\nimport clone from \"lodash/clone\";\nimport last from \"lodash/last\";\nimport SimpleBar from \"@common/components/SimpleBar\";\n\nconst createValueWithMaxLength =\n  ({ maxLength, single, setValue, value, message }) =>\n  (newValue) =>\n    setValue(\n      (() => {\n        if (\n          !single &&\n          Number.isInteger(maxLength) &&\n          maxLength > 0 &&\n          newValue.length > maxLength\n        ) {\n          message(`最多选择${maxLength}个`);\n          return value;\n        }\n        return newValue;\n      })()\n    );\n\nconst renderDisplayLabel = ({ single, value, mapping, onClose }) => {\n  if (!value || !Array.isArray(value) || value.length === 0) {\n    return null;\n  }\n\n  if (single) {\n    return (\n      <span className={style[\"text-inner\"]}>\n        {get(mapping.get(value[0]), \"label\") || value[0]}\n      </span>\n    );\n  }\n\n  return value.map((item) => {\n    const mappingItem = mapping.get(item);\n    return (\n      <Tag\n        key={item}\n        className={style[\"display-tag\"]}\n        closable\n        onClose={(e) => {\n          e.preventDefault();\n          onClose(item, mappingItem);\n        }}\n      >\n        <span className={style[\"tag-inner\"]}>\n          {get(mappingItem, \"label\") || item}\n        </span>\n      </Tag>\n    );\n  });\n};\n\nconst ModalContent = forwardRef(\n  (\n    {\n      value: propsValue,\n      onChange,\n      extra,\n      showSelectedTag,\n      renderSelectedContent,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [value, setValue] = useState(propsValue);\n    const propsValueRef = useRef(propsValue);\n    propsValueRef.current = propsValue;\n    const [modalOpen, setModalOpen] = useState(false);\n    const { message } = App.useApp();\n    const setValueWithMaxLength = createValueWithMaxLength({\n      maxLength: props.maxLength,\n      single: props.single,\n      setValue,\n      value,\n      message: message.error,\n    });\n    useEffect(() => {\n      if (modalOpen) {\n        setValue(propsValueRef.current);\n      }\n    }, [modalOpen]);\n    useImperativeHandle(ref, () => {\n      return {\n        modalOpen: () => {\n          setModalOpen(true);\n        },\n        close: () => {\n          setModalOpen(false);\n        },\n      };\n    });\n    return (\n      <Modal\n        {...props}\n        open={modalOpen}\n        onConfirm={() => {\n          onChange(value);\n        }}\n        onClose={() => {\n          setModalOpen(false);\n        }}\n        footer={\n          (showSelectedTag || extra) && (\n            <Space direction=\"vertical\" className={style[\"overlay-footer\"]}>\n              {extra && (\n                <div className={style[\"overlay-footer-extra\"]}>{extra}</div>\n              )}\n              {showSelectedTag &&\n                renderSelectedContent({\n                  value,\n                  setValue: setValueWithMaxLength,\n                })}\n            </Space>\n          )\n        }\n      >\n        {typeof children === \"function\"\n          ? children({ value, setValue: setValueWithMaxLength })\n          : children}\n      </Modal>\n    );\n  }\n);\n\nconst PopupContent = forwardRef(\n  (\n    {\n      value,\n      setValue,\n      children,\n      renderSelectedContent,\n      showSelectedTag,\n      placement,\n      inputContent,\n      single,\n      extra,\n      overlayWidth,\n      wrapClassName,\n      ...props\n    },\n    ref\n  ) => {\n    const [open, setOpen] = useState(false);\n    useImperativeHandle(\n      ref,\n      () => {\n        return {\n          close: () => {\n            setOpen(false);\n          },\n        };\n      },\n      []\n    );\n    return (\n      <Popover\n        {...props}\n        open={open}\n        onOpenChange={setOpen}\n        overlayClassName={style[\"overlay\"]}\n        arrow={false}\n        content={\n          <div\n            style={overlayWidth ? { \"--overlay-width\": overlayWidth } : {}}\n            className={style[\"overlay-content\"]}\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          >\n            <div className={style[\"overlay-inner\"]}>\n              {typeof children === \"function\"\n                ? children({\n                    value,\n                    setValue: (newValue) => {\n                      !(single && value[0] === newValue[0]) &&\n                        setValue(newValue);\n                      single && setOpen(false);\n                    },\n                  })\n                : children}\n            </div>\n            {(showSelectedTag || extra) && (\n              <div className={style[\"overlay-footer\"]}>\n                {extra && (\n                  <div className={style[\"overlay-footer-extra\"]}>{extra}</div>\n                )}\n                {showSelectedTag && renderSelectedContent({ value, setValue })}\n              </div>\n            )}\n          </div>\n        }\n        trigger=\"click\"\n        placement={placement}\n      >\n        <div className={style[\"input-inner\"]}>{inputContent}</div>\n      </Popover>\n    );\n  }\n);\n\nconst DisplayLabel = withFetch(\n  ({ setFetchApi, wrapClassName, ...fetchApi }) => {\n    const [hover, setHover] = useState(false);\n    const modalRef = useRef(null);\n    const popupRef = useRef(null);\n    const selectInnerContext = useContext();\n    const { valueState, mapping, props } = selectInnerContext;\n    const [value, setValue] = valueState;\n    const {\n      single,\n      placement,\n      getPopupContainer,\n      placeholder,\n      isPopup,\n      disabled,\n      showSelectedTag,\n      extra,\n      inputContent: inputContentRender,\n    } = props;\n    const fetchApiRef = useRef(fetchApi);\n    fetchApiRef.current = fetchApi;\n\n    useEffect(() => {\n      setFetchApi(\n        Object.assign({}, fetchApiRef.current, {\n          data: fetchApi.data,\n          isComplete: fetchApi.isComplete,\n        })\n      );\n    }, [fetchApi.data, setFetchApi, fetchApi.isComplete]);\n\n    const inner = renderDisplayLabel({\n      single,\n      value,\n      mapping,\n      onClose: (item) => {\n        setValue((value) => {\n          const newValue = value.slice(0);\n          const index = value.indexOf(item);\n          index > -1 && newValue.splice(index, 1);\n          return newValue;\n        });\n      },\n    });\n\n    const renderSelectedContent = ({ value, setValue }) => (\n      <Space className={style[\"selected-tag\"]} align={\"center\"} wrap>\n        <div>\n          已选\n          {!props.single &&\n          Number.isInteger(props.maxLength) &&\n          props.maxLength > 0\n            ? `(${value.length}/${props.maxLength})`\n            : \"\"}\n          :\n        </div>\n        <SimpleBar className={style[\"selected-tag-list\"]}>\n          <div className={style[\"selected-tag-inner\"]}>\n            {renderDisplayLabel({\n              value,\n              mapping,\n              onClose: (item) => {\n                setValue((value) => {\n                  const newValue = value.slice(0);\n                  const index = value.indexOf(item);\n                  index > -1 && newValue.splice(index, 1);\n                  return newValue;\n                });\n              },\n            })}\n          </div>\n        </SimpleBar>\n      </Space>\n    );\n\n    const inputContent = inputContentRender ? (\n      inputContentRender(selectInnerContext)\n    ) : (\n      <Space\n        className={style[\"display-content\"]}\n        onMouseOver={() => {\n          setHover(true);\n        }}\n        onMouseOut={() => {\n          setHover(false);\n        }}\n      >\n        <div>\n          {inner || <span className={style[\"placeholder\"]}>{placeholder}</span>}\n        </div>\n        {hover && value && value.length > 0 && !disabled ? (\n          <Icon\n            className={classnames(\n              style[\"close\"],\n              style[\"input-icon\"],\n              \"close\",\n              \"input-icon\"\n            )}\n            type=\"icon-shibai\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setValue([]);\n            }}\n          />\n        ) : (\n          <Icon\n            className={classnames(\n              style[\"input-icon\"],\n              \"input-icon-arrow\",\n              \"input-icon\"\n            )}\n            type=\"icon-arrow-thin-down\"\n          />\n        )}\n      </Space>\n    );\n\n    if (isPopup) {\n      return (\n        <PopupContent\n          ref={popupRef}\n          overlayWidth={props.overlayWidth}\n          value={value}\n          setValue={setValue}\n          single={single}\n          inputContent={inputContent}\n          extra={\n            typeof extra === \"function\"\n              ? extra({\n                  close: () => popupRef.current.close(),\n                  context: selectInnerContext,\n                })\n              : extra\n          }\n          renderSelectedContent={renderSelectedContent}\n          showSelectedTag={showSelectedTag}\n          trigger=\"click\"\n          placement={placement}\n          getPopupContainer={getPopupContainer}\n        >\n          {props.children}\n        </PopupContent>\n      );\n    }\n\n    return (\n      <div\n        className={style[\"input-inner\"]}\n        onClick={() => {\n          modalRef.current.modalOpen();\n        }}\n      >\n        <ModalContent\n          size={props.modalSize}\n          ref={modalRef}\n          single={props.single}\n          maxLength={props.maxLength}\n          disabledScroller\n          wrapClassName={classnames(\n            style[\"overlay\"],\n            style[\"is-modal\"],\n            wrapClassName\n          )}\n          title={props.placeholder}\n          value={value}\n          onChange={setValue}\n          extra={\n            typeof extra === \"function\"\n              ? extra({\n                  close: () => modalRef.current.close(),\n                  context: selectInnerContext,\n                })\n              : extra\n          }\n          showSelectedTag={showSelectedTag}\n          renderSelectedContent={renderSelectedContent}\n        >\n          {props.children}\n        </ModalContent>\n        {inputContent}\n      </div>\n    );\n  }\n);\n\nconst getValueInType = (value, mapping, type) => {\n  if (type !== \"all\") {\n    return value;\n  }\n  return value.map((item) => mapping.get(item));\n};\n\nconst setValueInType = (value, setMapping, type) => {\n  if (type !== \"all\") {\n    return value;\n  }\n  setMapping(value);\n  return value.map((item) => item.value);\n};\n\nconst SelectInnerInput = ({\n  api,\n  className,\n  displayItems,\n  wrapClassName,\n  ...props\n}) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [mapping, setMapping] = useState(\n    new Map(displayItems.map((item) => [item.value, item]))\n  );\n  const [fetchApi, setFetchApi] = useState({});\n  const { message } = App.useApp();\n  const appendMapping = (items) => {\n    const newItems = items.filter((item) => mapping.get(item.value) !== item);\n    if (newItems.length === 0) {\n      return;\n    }\n\n    setMapping((mapping) => {\n      const newMapping = clone(mapping);\n      newItems.forEach((item) => {\n        newMapping.set(item.value, item);\n      });\n      return newMapping;\n    });\n  };\n\n  const transformValue = (value) => {\n    return setValueInType(\n      props.single ? (isNil(value) ? [] : [value]) : value || [],\n      appendMapping,\n      props.valueType\n    );\n  };\n\n  const [value, setValue] = useControlValue(\n    Object.assign(\n      {},\n      props,\n      {\n        onChange: (value) => {\n          const newValue = getValueInType(value, mapping, props.valueType);\n          props.onChange &&\n            props.onChange(props.single ? last(newValue) : newValue);\n        },\n      },\n      \"value\" in props\n        ? { value: transformValue(props.value) }\n        : { defaultValue: transformValue(props.defaultValue) }\n    )\n  );\n\n  const setValueWithMaxLength = createValueWithMaxLength({\n    maxLength: props.maxLength,\n    single: props.single,\n    setValue,\n    value,\n    message: message.error,\n  });\n\n  return (\n    <Provider\n      value={{\n        mapping,\n        searchText,\n        setSearchText,\n        appendMapping,\n        setItems: (data) => {\n          fetchApi.setData(data);\n          appendMapping(get(props.dataFormat(data), \"list\", []));\n        },\n        fetchApi,\n        valueState: [value, setValueWithMaxLength],\n        props,\n      }}\n    >\n      <div\n        className={classnames(\n          style[\n            `input${\n              props.inputContent && typeof props.inputContent === \"function\"\n                ? \"-custom\"\n                : \"\"\n            }`\n          ],\n          className\n        )}\n      >\n        <DisplayLabel\n          {...api}\n          wrapClassName={wrapClassName}\n          loading={null}\n          setFetchApi={setFetchApi}\n          onRequestSuccess={(data) => {\n            appendMapping(get(props.dataFormat(data), \"list\", []));\n            api.onRequestSuccess && api.onRequestSuccess(data);\n          }}\n        />\n      </div>\n    </Provider>\n  );\n};\n\nSelectInnerInput.defaultProps = {\n  placeholder: \"请选择\",\n  displayItems: [],\n  extra: null,\n  api: {\n    loader: () => [],\n  },\n  dataFormat: (data) => {\n    return { list: data };\n  },\n  placement: \"bottomLeft\",\n  getPopupContainer: null,\n  showSelectedTag: true,\n};\n\nSelectInnerInput.useContext = useContext;\n\nexport default SelectInnerInput;\n","import List from \"./List\";\nimport FieldList from \"./FieldList\";\nimport { Col, Row } from \"antd\";\nimport clone from \"lodash/clone\";\nimport { forwardRef, useImperativeHandle, useRef, useState } from \"react\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\n\nconst TableHeader = forwardRef((props, ref) => {\n  const [headers, setHeaders] = useState(new Map());\n  useImperativeHandle(\n    ref,\n    () => {\n      return (targetProps) => {\n        setTimeout(() => {\n          setHeaders((headers) => {\n            if (headers.has(targetProps.key)) {\n              return headers;\n            }\n            const newHeaders = clone(headers);\n            newHeaders.set(targetProps.key, targetProps.props);\n            return newHeaders;\n          });\n        });\n      };\n    },\n    []\n  );\n\n  return (\n    <Row\n      wrap={false}\n      className={style[\"table-list-header\"]}\n      style={{\n        \"--col-width\": `${100 / headers.size}%`,\n      }}\n    >\n      {Array.from(headers).map(([key, { label, rule }]) => (\n        <Col\n          key={key}\n          className={classnames({\n            [style[\"is-req\"]]: rule.split(\" \").indexOf(\"REQ\") === 0,\n          })}\n        >\n          {label}\n        </Col>\n      ))}\n      <Col className={style[\"table-list-extra\"]}></Col>\n    </Row>\n  );\n});\n\nconst TableList = ({ list, className, ...props }) => {\n  const headerRef = useRef(null);\n  return (\n    <List\n      {...props}\n      className={classnames(className, style[\"table-list\"])}\n      list={list}\n      renderChildren={(children) => (\n        <div className={style[\"table-list-inner\"]}>\n          <TableHeader ref={headerRef} />\n          {children}\n        </div>\n      )}\n      listRender={({ list, groupArgs, extra, key }) => {\n        return (\n          <Row\n            key={key}\n            wrap={false}\n            align=\"middle\"\n            style={{\n              \"--col-width\": `${100 / list.length}%`,\n            }}\n          >\n            <FieldList\n              list={list}\n              groupArgs={groupArgs}\n              itemRender={(children, targetProps) => {\n                headerRef.current(targetProps);\n                return (\n                  <Col className={style[\"table-list-field\"]} flex={1}>\n                    {children}\n                  </Col>\n                );\n              }}\n            />\n            <Col className={style[\"table-list-extra\"]}>{extra}</Col>\n          </Row>\n        );\n      }}\n    />\n  );\n};\n\nexport default TableList;\n","import { hooks } from \"@kne/react-form-antd\";\nimport { AddressInputField, AddressSelectField } from \"@components/Common\";\n\nconst { useOnChange, useDecorator } = hooks;\nconst AddressSelect = (props) => {\n  const render = useOnChange(\n    Object.assign({}, { placeholder: \"请选择\" + props.label }, props)\n  );\n  return render(AddressSelectField);\n};\n\nAddressSelect.Field = AddressSelectField;\nAddressSelect.AddressEnum = AddressSelectField.AddressEnum;\nAddressSelect.createAddressApi = AddressSelectField.createAddressApi;\nAddressSelect.withAddressApi = AddressSelectField.withAddressApi;\n\nexport default AddressSelect;\n\nexport const AddressInput = (props) => {\n  const render = useDecorator(\n    Object.assign(\n      {},\n      {\n        placeholder: \"请选择\" + props.label,\n        inputPlaceholder: \"请输入\" + props.label,\n      },\n      props\n    )\n  );\n  return render(AddressInputField);\n};\n\nAddressInput.Field = AddressInputField;\n","import { hooks } from \"@kne/react-form-antd\";\nimport {\n  AdvancedSelectField,\n  createListField,\n  TableField,\n  UserField,\n} from \"@components/Common\";\n\nconst { useOnChange } = hooks;\n\nconst createdField = (WrappedComponent) => {\n  const List = (props) => {\n    const render = useOnChange(\n      Object.assign({}, { placeholder: \"请选择\" + props.label }, props)\n    );\n    return render(WrappedComponent);\n  };\n\n  List.field = List.Field = WrappedComponent;\n\n  return List;\n};\n\nexport const createdList = ({ renderList, defaultProps }) =>\n  createdField(\n    createListField({\n      renderList,\n      defaultProps,\n    })\n  );\n\nexport const User = createdField(UserField);\nexport const Table = createdField(TableField);\n\nconst AdvancedSelect = createdField(AdvancedSelectField);\nAdvancedSelect.createdList = createdList;\nAdvancedSelect.User = User;\nAdvancedSelect.Table = Table;\nexport default AdvancedSelect;\n","// extracted by mini-css-extract-plugin\nexport default {\"upload-btn\":\"style_upload-btn__-6XtP__EG6bw\",\"square\":\"style_square__UPkfA__EG6bw\",\"is-loading\":\"style_is-loading__wx6Pd__EG6bw\",\"upload-btn-tips\":\"style_upload-btn-tips__YtxWz__EG6bw\",\"drop-tips\":\"style_drop-tips__N-v59__EG6bw\",\"preview-area\":\"style_preview-area__aV3SN__EG6bw\"};","import { forwardRef, useLayoutEffect, useRef, useState } from \"react\";\nimport withInputFile, { InputFileLink } from \"@common/hocs/withInputFile\";\nimport Image from \"@components/Image\";\nimport { usePreset } from \"@components/Global\";\nimport { useModal } from \"@components/Modal\";\nimport Icon from \"@components/Icon\";\nimport {\n  Avatar as AntdAvatar,\n  Col,\n  message,\n  Row,\n  Slider,\n  Space,\n  Spin,\n  Tooltip,\n} from \"antd\";\nimport AvatarEditor from \"react-avatar-editor\";\nimport get from \"lodash/get\";\nimport classnames from \"classnames\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { hooks } from \"@kne/react-form-antd\";\nimport merge from \"lodash/merge\";\nimport style from \"./style.module.scss\";\nimport defaultAvatar from \"../../../../defaultAvatar.svg\";\nimport { IntlProvider, FormattedMessage, useIntl } from \"@components/Intl\";\nimport importMessages from \"@components/FormInfo/locale\";\n\nconst { useOnChange } = hooks;\n\nconst AvatarDisplay = Image.Avatar;\n\nconst localeModuleName = \"FormInfo\";\n\nconst UploadButton = withInputFile(\n  ({\n    className,\n    icon,\n    loading,\n    value,\n    gender,\n    width,\n    height,\n    children,\n    shape,\n    defaultAvatar,\n    apis,\n  }) => {\n    const inner = (\n      <>\n        <AvatarDisplay\n          id={get(value, \"id\")}\n          gender={gender}\n          width={(64 * width) / height}\n          height={64}\n          shape={shape}\n          defaultAvatar={defaultAvatar}\n          apis={apis}\n        />\n        <div className={style[\"upload-btn-tips\"]}>\n          {icon || <Icon type=\"icon-chuanzhaopian\" size={16} />}\n        </div>\n        {children}\n      </>\n    );\n    return (\n      <div\n        className={classnames(className, style[\"upload-btn\"], {\n          [style[\"is-loading\"]]: loading,\n          [style[\"square\"]]: shape === \"square\" || !(width && width === height),\n        })}\n        style={{ width: (64 * width) / height }}\n      >\n        {loading ? <Spin>{inner}</Spin> : inner}\n      </div>\n    );\n  }\n);\n\nconst dataURLtoBlob = (dataURL) => {\n  let arr = dataURL.split(\",\");\n  // 注意base64的最后面中括号和引号是不转译的\n  let _arr = arr[1].substring(0, arr[1].length - 2);\n  let mime = arr[0].match(/:(.*?);/)[1],\n    bstr = atob(_arr),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new Blob([u8arr], {\n    type: mime,\n  });\n};\n\nconst ControlAvatarEditor = forwardRef(\n  (\n    {\n      image: propsImage,\n      width,\n      height,\n      borderRadius,\n      preview,\n      fileSize,\n      accept,\n      renderTips,\n      getApi,\n      shape,\n      border,\n      ...props\n    },\n    ref\n  ) => {\n    const intl = useIntl({ moduleName: localeModuleName });\n    const [baseWidth, setBaseWidth] = useState(0);\n    const outerRef = useRef(null);\n    const [image, setImage] = useState(propsImage);\n    const [scale, setScale] = useState(1);\n    const [rotate, setRotate] = useState(0);\n    const [previewImg, setPreviewImg] = useState(\"\");\n    const editorRef = useRef(null);\n    useLayoutEffect(() => {\n      setBaseWidth((outerRef.current.clientWidth * 2) / 3);\n    }, []);\n    getApi({\n      getImage: () => {\n        const canvas = editorRef.current.getImage();\n\n        const targetCanvas = document.createElement(\"canvas\");\n        const targetCtx = targetCanvas.getContext(\"2d\");\n        targetCanvas.width = width;\n        targetCanvas.height = height;\n\n        targetCtx.drawImage(\n          canvas,\n          0,\n          0,\n          targetCanvas.width,\n          targetCanvas.height\n        );\n\n        return new window.File(\n          [dataURLtoBlob(targetCanvas.toDataURL())],\n          image.name,\n          { type: image.type }\n        );\n      },\n    });\n    const makePreviewInner = () => {\n      setPreviewImg(editorRef.current.getImage().toDataURL());\n    };\n    const makePreview = useDebouncedCallback(makePreviewInner, 500);\n\n    return (\n      <div ref={outerRef}>\n        <Row wrap={false} align=\"middle\">\n          <Col span={preview ? 16 : 24}>\n            {baseWidth && (\n              <Space direction=\"vertical\">\n                <AvatarEditor\n                  {...props}\n                  ref={editorRef}\n                  image={image}\n                  scale={scale}\n                  rotate={rotate}\n                  width={baseWidth - border * 2}\n                  height={\n                    (height * baseWidth) / width - (border * 2 * height) / width\n                  }\n                  border={border}\n                  color={[0, 0, 0, 0.6]}\n                  borderRadius={(borderRadius * baseWidth) / width}\n                  onImageReady={makePreviewInner}\n                  onImageChange={makePreview}\n                />\n                <div className={style[\"drop-tips\"]}>\n                  {renderTips(\n                    `${intl.formatMessage({ id: \"PictureFormat\" })}${accept\n                      .map((str) => str.replace(/^\\./, \"\"))\n                      .join(\" \")} ${intl.formatMessage({\n                      id: \"ImageSize\",\n                    })}${intl.formatMessage(\n                      { id: \"NotExceeding\" },\n                      { size: fileSize }\n                    )}`,\n                    {\n                      accept,\n                      fileSize,\n                    }\n                  )}\n                </div>\n                <Row gutter={14} align=\"middle\">\n                  <Col>\n                    <Tooltip\n                      title={intl.formatMessage({ id: \"Rotate\" })}\n                      placement=\"bottom\"\n                    >\n                      <Icon\n                        type=\"icon-xuanzhuan\"\n                        onClick={() => {\n                          setRotate((rotate) => {\n                            return (rotate - 90) % 360;\n                          });\n                        }}\n                      />\n                    </Tooltip>\n                  </Col>\n                  <Col>\n                    <Tooltip\n                      title={intl.formatMessage({ id: \"ImageFull\" })}\n                      placement=\"bottom\"\n                    >\n                      <Icon\n                        type=\"icon-chongman\"\n                        onClick={() => {\n                          setScale(1);\n                        }}\n                      />\n                    </Tooltip>\n                  </Col>\n                  <Col flex={1}>\n                    <Slider\n                      tooltip={{\n                        placement: \"bottom\",\n                        formatter: () => intl.formatMessage({ id: \"Size\" }),\n                      }}\n                      value={scale}\n                      step={0.05}\n                      min={0.2}\n                      max={3}\n                      onChange={setScale}\n                    />\n                  </Col>\n                  <Col>\n                    <InputFileLink\n                      accept={accept}\n                      onChange={(fileList) => {\n                        if (fileList[0].size > fileSize * 1024 * 1024) {\n                          message.error(\n                            intl.formatMessage(\n                              { id: \"FileNotExceeding\" },\n                              { name: fileList[0].name, size: fileSize }\n                            )\n                          );\n                          return;\n                        }\n                        setRotate(0);\n                        setScale(1);\n                        setImage(fileList[0]);\n                      }}\n                    >\n                      <FormattedMessage\n                        id={\"ReUpload\"}\n                        moduleName={localeModuleName}\n                      />\n                    </InputFileLink>\n                  </Col>\n                </Row>\n              </Space>\n            )}\n          </Col>\n          {preview && (\n            <Col span={8}>\n              <div className={style[\"preview-area\"]}>\n                <Space direction=\"vertical\">\n                  <AntdAvatar\n                    src={previewImg}\n                    // alt=\"预览\"\n                    shape={shape}\n                    style={{\n                      width: baseWidth / 2 - 36,\n                      height: ((baseWidth / 2 - 36) * height) / width,\n                    }}\n                  />\n                  <div\n                    style={{\n                      textAlign: \"center\",\n                    }}\n                  >\n                    <FormattedMessage\n                      id={\"Preview\"}\n                      moduleName={localeModuleName}\n                    />\n                  </div>\n                </Space>\n              </div>\n            </Col>\n          )}\n        </Row>\n      </div>\n    );\n  }\n);\n\nControlAvatarEditor.defaultProps = {\n  border: 1,\n};\n\nconst useDropModal = () => {\n  const modal = useModal();\n  return (props) => {\n    const {\n      image,\n      width,\n      height,\n      borderRadius,\n      getApi,\n      preview,\n      fileSize,\n      accept,\n      renderTips,\n      border,\n      dropModalSize,\n      ...others\n    } = Object.assign(\n      {},\n      {\n        title: \"编辑头像\",\n        width: 200,\n        height: 200,\n        borderRadius:\n          props.shape === \"circle\" &&\n          props.width &&\n          props.width === props.height\n            ? props.width / 2\n            : 2,\n        preview: true,\n      },\n      props\n    );\n    return modal({\n      ...others,\n      size: dropModalSize,\n      children: (\n        <ControlAvatarEditor\n          preview={preview}\n          fileSize={fileSize}\n          accept={accept}\n          getApi={getApi}\n          renderTips={renderTips}\n          width={width}\n          height={height}\n          shape={\n            props.shape === \"circle\" &&\n            props.width &&\n            props.width === props.height\n              ? \"circle\"\n              : \"square\"\n          }\n          borderRadius={borderRadius}\n          image={image}\n          border={border}\n          scale={1}\n          rotate={0}\n        />\n      ),\n    });\n  };\n};\n\nconst AvatarField = ({\n  value,\n  gender,\n  fileSize,\n  accept,\n  openEditor,\n  apis: currentApis,\n  renderTips,\n  onChange,\n  shape,\n  width,\n  height,\n  title,\n  border,\n  icon,\n  dropModalSize,\n  defaultAvatar,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const { apis: baseApis } = usePreset();\n  const apis = merge({}, baseApis, currentApis);\n  const { ossUpload } = apis;\n  const dropRef = useRef(null);\n  const dropModal = useDropModal();\n  const intl = useIntl({ moduleName: localeModuleName });\n  return (\n    <UploadButton\n      value={value}\n      gender={gender}\n      accept={accept}\n      width={width}\n      height={height}\n      shape={shape}\n      icon={icon}\n      loading={loading}\n      defaultAvatar={defaultAvatar}\n      apis={apis}\n      onChange={(fileList) => {\n        if (fileList[0].size > fileSize * 1024 * 1024) {\n          message.error(\n            intl.formatMessage(\n              { id: \"FileNotExceeding\" },\n              { name: fileList[0].name, size: fileSize }\n            )\n          );\n          return;\n        }\n        const doUpload = (file) => {\n          setLoading(true);\n          return ossUpload({ file })\n            .then(({ data }) => {\n              if (data.code !== 0) {\n                message.error(\n                  intl.formatMessage(\n                    { id: \"UploadFailed\" },\n                    { msg: data.msg ? \":\" + data.msg : \"\" }\n                  )\n                );\n                return;\n              }\n              onChange(data.data);\n            })\n            .finally(() => {\n              setLoading(false);\n            });\n        };\n        if (openEditor) {\n          dropModal({\n            image: fileList[0],\n            width,\n            height,\n            title,\n            shape,\n            border,\n            dropModalSize,\n            getApi: (api) => (dropRef.current = api),\n            fileSize,\n            accept,\n            renderTips,\n            onConfirm: () => {\n              doUpload(dropRef.current.getImage());\n            },\n          });\n          return;\n        }\n        doUpload(fileList[0]);\n      }}\n    />\n  );\n};\n\nAvatarField.defaultProps = {\n  defaultAvatar,\n  openEditor: true,\n  fileSize: 2,\n  width: 200,\n  height: 200,\n  dropModalSize: \"small\",\n  border: 1,\n  title: (\n    <IntlProvider importMessages={importMessages} moduleName=\"FormInfo\">\n      <FormattedMessage id={\"Crop\"} moduleName=\"FormInfo\" />\n    </IntlProvider>\n  ),\n  accept: [\".jpg\", \".png\", \".jpeg\"],\n  renderTips: (defaultTips) => {\n    return defaultTips;\n  },\n  shape: \"circle\",\n};\n\nconst Avatar = (props) => {\n  const render = useOnChange(props);\n  return render(AvatarField);\n};\n\nAvatar.defaultProps = {};\n\nAvatar.Field = Avatar;\nAvatar.useDropModal = useDropModal;\n\nexport default Avatar;\n","import { hooks } from \"@kne/react-form-antd\";\nimport { CascaderField, createTreeUtils } from \"@components/Common\";\nconst { useOnChange } = hooks;\n\nconst Cascader = (props) => {\n  const render = useOnChange(\n    Object.assign({}, { placeholder: \"请选择\" + props.label }, props)\n  );\n  return render(CascaderField);\n};\n\nCascader.Field = CascaderField;\nCascader.createTreeUtils = createTreeUtils;\n\nexport { createTreeUtils };\nexport default Cascader;\n","import { FunctionSelectField } from \"@components/Common\";\nimport { hooks } from \"@kne/react-form-antd\";\n\nconst { useOnChange } = hooks;\n\nconst FunctionSelect = (props) => {\n  const render = useOnChange(\n    Object.assign({}, { placeholder: \"请选择\" + props.label }, props)\n  );\n  return render(FunctionSelectField);\n};\n\nFunctionSelect.Field = FunctionSelectField;\nFunctionSelect.Enum = FunctionSelectField.Enum;\n\nexport default FunctionSelect;\n","import { IndustrySelectField } from \"@components/Common\";\nimport { hooks } from \"@kne/react-form-antd\";\n\nconst { useOnChange } = hooks;\n\nconst IndustrySelect = (props) => {\n  const render = useOnChange(\n    Object.assign({}, { placeholder: \"请选择\" + props.label }, props)\n  );\n  return render(IndustrySelectField);\n};\n\nIndustrySelect.Field = IndustrySelectField;\nIndustrySelect.Enum = IndustrySelectField.Enum;\n\nexport default IndustrySelect;\n","import { Input } from \"antd\";\nimport useControlValue from \"@kne/use-control-value\";\nimport { createWithRemoteLoader } from \"@kne/remote-loader\";\n\nconst InputUpperCaseField = ({ ...props }) => {\n  const [value, onChange] = useControlValue(props);\n\n  return (\n    <Input\n      {...props}\n      value={value}\n      onChange={(e) => {\n        onChange(\n          e.target.value ? e.target.value.toUpperCase() : e.target.value,\n          e\n        );\n      }}\n    />\n  );\n};\n\nconst InputUpperCase = createWithRemoteLoader({\n  modules: [\"FormInfo@formModule\"],\n})(({ remoteModules, ...props }) => {\n  const [formModule] = remoteModules;\n  const { hooks } = formModule;\n  const { useDecorator } = hooks;\n  const render = useDecorator(\n    Object.assign({ placeholder: `请输入${props.label || \"\"}` }, props)\n  );\n  return render(InputUpperCaseField);\n});\n\nInputUpperCase.field = InputUpperCaseField;\n\nexport default InputUpperCase;\n","// extracted by mini-css-extract-plugin\nexport default {\"money-input\":\"style_money-input__Pyur7__EG6bw\",\"money-description\":\"style_money-description__9pFk4__EG6bw\"};","import useControlValue from \"@kne/use-control-value\";\nimport { hooks, util } from \"@kne/react-form-antd\";\nimport { InputNumber } from \"antd\";\nimport changeMoneyToChinese, {\n  MAX_NUM,\n} from \"@common/utils/changeMoneyToChinese\";\nimport style from \"./style.module.scss\";\nimport classnames from \"classnames\";\nimport merge from \"lodash/merge\";\nimport { useState } from \"react\";\n\nconst { isNotEmpty } = util;\nconst { useOnChange } = hooks;\nconst MoneyInputField = ({\n  chineseEmpty,\n  className,\n  showError,\n  errorDesc,\n  transformMoneyToChinese,\n  onBlur,\n  moneyFormat,\n  ...props\n}) => {\n  const [status, setStatus] = useState(\"\");\n  const [value, onChange] = useControlValue(props);\n  const inputNumberProps = merge(\n    {\n      controls: false,\n      precision: 2,\n      addonAfter: \"元\",\n    },\n    props,\n    {\n      max: isNotEmpty(props.max)\n        ? props.max > MAX_NUM\n          ? MAX_NUM\n          : props.max\n        : MAX_NUM,\n    }\n  );\n  return (\n    <div className={classnames(className, \"money-input\", style[\"money-input\"])}>\n      <InputNumber\n        {...inputNumberProps}\n        status={status}\n        formatter={\n          moneyFormat\n            ? (value) => {\n                return `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n              }\n            : null\n        }\n        parser={(parserValue) => {\n          const value = moneyFormat\n            ? parserValue?.replace(/\\$\\s?|(,*)/g, \"\")\n            : parserValue;\n          if (isNotEmpty(value)) {\n            if (\n              Number(value) > Number(inputNumberProps.max) ||\n              (isNotEmpty(inputNumberProps.min) &&\n                Number(value) < Number(inputNumberProps.min))\n            ) {\n              setStatus(\"error\");\n            }\n          } else {\n            setStatus(\"\");\n          }\n          return isNotEmpty(value) ? Number(value) : null;\n        }}\n        onChange={(val) => {\n          onChange(val);\n        }}\n        onBlur={(e) => {\n          onBlur && onBlur(e, setStatus);\n        }}\n      />\n      <div className={classnames(style[\"money-description\"])}>\n        {status === \"error\" && showError\n          ? errorDesc\n          : isNotEmpty(value)\n          ? changeMoneyToChinese(\n              transformMoneyToChinese ? transformMoneyToChinese(value) : value\n            )\n          : chineseEmpty}\n      </div>\n    </div>\n  );\n};\n\nconst MoneyInput = (props) => {\n  const render = useOnChange(\n    Object.assign({ placeholder: `请输入${props.label || \"\"}` }, props)\n  );\n  return render(MoneyInputField);\n};\n\nMoneyInput.Field = MoneyInputField;\nMoneyInput.toChineseCharacter = changeMoneyToChinese;\n\nexport default MoneyInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"country-select\":\"style_country-select__Ztf-V__EG6bw\",\"flag-img\":\"style_flag-img__RGhcM__EG6bw\"};","import { AsYouType, getCountryCallingCode } from \"libphonenumber-js\";\nimport { Input, Select, Space } from \"antd\";\nimport { hooks } from \"@kne/react-form-antd\";\nimport useSimulationBlur from \"@kne/use-simulation-blur\";\nimport useControlValue from \"@kne/use-control-value\";\nimport get from \"lodash/get\";\nimport style from \"./style.module.scss\";\nimport { createWithRemoteLoader } from \"@kne/remote-loader\";\n\nconst { useDecorator } = hooks;\n\nconst CountrySelect = createWithRemoteLoader({\n  modules: [\"components-iconfont:CountyFlag\"],\n})(({ remoteModules, value, onChange }) => {\n  const [CountyFlag] = remoteModules;\n  return (\n    <CountyFlag>\n      {({ list }) => {\n        return (\n          <Select\n            popupMatchSelectWidth={300}\n            className={style[\"country-select\"]}\n            value={value || \"CN\"}\n            onChange={onChange}\n            placeholder=\"请选择国家\"\n            showSearch\n            filterOption={(input, option) => {\n              return option.name.indexOf(input) > -1;\n            }}\n            optionLabelProp=\"code\"\n            options={list.map(({ country_name_cn, country_code, ab }) => ({\n              value: ab,\n              code: `(+${country_code})`,\n              name: country_name_cn,\n              label: (\n                <Space align=\"center\">\n                  <span className={style[\"country-name\"]}>\n                    {country_name_cn}\n                  </span>\n                  <div>(+{country_code})</div>\n                </Space>\n              ),\n            }))}\n          />\n        );\n      }}\n    </CountyFlag>\n  );\n});\n\nconst PhoneNumberField = (props) => {\n  const { className, onBlur, name, ...others } = props;\n  const [value, onChange] = useControlValue(props);\n  const ref = useSimulationBlur(onBlur || (() => {}));\n  const parsePhone = (value) => {\n    const askType = new AsYouType(get(value, \"code\", \"CN\"));\n    return askType.input(get(value, \"value\", \"\"));\n  };\n  return (\n    <div className={className} ref={ref}>\n      <Input\n        {...others}\n        addonBefore={\n          <CountrySelect\n            value={get(value, \"code\", \"CN\")}\n            onChange={(code) => {\n              onChange &&\n                onChange(\n                  Object.assign({}, value, {\n                    code,\n                    value: parsePhone({ code, value: get(value, \"value\", \"\") }),\n                  })\n                );\n              onBlur && onBlur();\n            }}\n          />\n        }\n        value={get(value, \"value\", \"\")}\n        onChange={(e) => {\n          onChange &&\n            onChange(\n              Object.assign({ code: \"CN\" }, value, {\n                value: e.target.value,\n                code: get(value, \"code\", \"CN\"),\n              })\n            );\n        }}\n        onBlur={(e) => {\n          onChange &&\n            onChange(\n              Object.assign({ code: \"CN\" }, value, {\n                value: parsePhone({\n                  value: e.target.value,\n                  code: get(value, \"code\", \"CN\"),\n                }),\n              })\n            );\n          onBlur && onBlur();\n        }}\n      />\n    </div>\n  );\n};\n\nconst PhoneNumber = ({ rule, ...props }) => {\n  const render = useDecorator(\n    Object.assign(\n      {\n        placeholder: `请输入${props.label || \"\"}`,\n        rule: ((rule) => {\n          const rules = (rule || \"\").split(\" \");\n          const reqIndex = rules.indexOf(\"REQ\");\n          if (reqIndex > -1) {\n            rules.splice(reqIndex + 1, 0, \"PHONE_NUMBER\");\n          } else {\n            rules.unshift(\"PHONE_NUMBER\");\n          }\n          return rules.join(\" \");\n        })(rule),\n      },\n      props\n    )\n  );\n  return render(PhoneNumberField);\n};\n\nPhoneNumber.Field = PhoneNumberField;\n\nPhoneNumber.defaultProps = {};\n\nPhoneNumber.format = ({ code, value }) => {\n  const phoneCode = code ? getCountryCallingCode(code) : null;\n\n  if (!phoneCode || !value) {\n    return \"\";\n  }\n  return `+${phoneCode} ${value}`;\n};\n\nexport const PHONE_NUMBER = async (value, { field }) => {\n  if (\n    (field.rule || \"\").split(\" \").indexOf(\"REQ\") > -1 &&\n    !get(value, \"value\")\n  ) {\n    return { result: false, errMsg: \"%s不能为空\" };\n  }\n  if (!get(value, \"value\")) {\n    return { result: true };\n  }\n\n  const result = await import(\"libphonenumber-js/max\").then(\n    ({ isValidPhoneNumber }) => {\n      return isValidPhoneNumber(get(value, \"value\", \"\"), {\n        defaultCountry: get(value, \"code\", \"CN\"),\n        extract: true,\n      });\n    }\n  );\n  return { result, errMsg: \"%s格式不正确\" };\n};\n\nexport default PhoneNumber;\n","import { Rate } from \"antd\";\nimport { hooks } from \"@kne/react-form-antd\";\n\nconst { useOnChange } = hooks;\n\nconst _Rate = (props) => {\n  const render = useOnChange(\n    Object.assign({ placeholder: `请选择${props.label || \"\"}` }, props)\n  );\n  return render(Rate);\n};\n\n_Rate.defaultProps = {\n  fieldName: \"rate\",\n};\n\nexport default _Rate;\n","// extracted by mini-css-extract-plugin\nexport default {\"salary\":\"style_salary__sUOtT__EG6bw\",\"salary-type\":\"style_salary-type__Sl1LC__EG6bw\",\"input-number\":\"style_input-number__eoEZr__EG6bw\",\"full\":\"style_full__NPqJm__EG6bw\",\"input-group\":\"style_input-group__toLB7__EG6bw\",\"input-group-no-mb\":\"style_input-group-no-mb__C4nzh__EG6bw\"};","import React, { cloneElement } from \"react\";\nimport { hooks, Select } from \"@kne/react-form-antd\";\nimport useSimulationBlur from \"@kne/use-simulation-blur\";\nimport { Col, Input, InputNumber, Row, Space } from \"antd\";\nimport style from \"./style.module.scss\";\nimport { IntlProvider, useIntl } from \"@components/Intl\";\nimport importMessages from \"../../locale\";\nimport Enum from \"@components/Enum\";\nimport useControlValue from \"@kne/use-control-value\";\nimport { get } from \"lodash\";\n\nconst { field: SelectField } = Select.Fetch;\n\nconst { useDecorator, useUIDecorator } = hooks;\n\nexport const InputNumberField = (props) => {\n  const render = useUIDecorator(props);\n  return render(InputNumber);\n};\nconst numberFormat = (value) => {\n  if (!value) return \"\";\n  const _value = isNaN(Number(value)) ? value : Math.abs(Number(value));\n  return value.split(\".\")[1] && value.split(\".\")[1].length > 2\n    ? _value.toFixed(2)\n    : _value;\n};\n\nconst FormField = ({ children, isError }) => {\n  return (\n    <div\n      style={{ marginBottom: 0 }}\n      className={`react-form__field ${isError ? \"is-error\" : \"\"}`}\n    >\n      <div className=\"react-form__field-main\">\n        <div className=\"react-form__field-input\">\n          {cloneElement(children, { className: \"react-form__field-component\" })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SalaryInputField = ({\n  getPopupContainer,\n  onBlur,\n  api,\n  isRange = true,\n  placeholder,\n  disabled,\n  showMonth,\n  remindUnit,\n  req,\n  ...props\n}) => {\n  const [value, onChange] = useControlValue(props);\n  console.log(value, \"薪资\");\n  const { formatMessage } = useIntl({ moduleName: \"FormInfo\" });\n  const _placeholder = formatMessage(\n    { id: \"defaultSelectPlaceholder\" },\n    { label: \"\" }\n  );\n  const _placeholderInput = formatMessage(\n    { id: \"defaultInputPlaceholder\" },\n    { label: \"\" }\n  );\n\n  const isTenThousand = [6].indexOf(get(value, \"type\")) > -1,\n    isFace = get(value, \"type\") === 1,\n    isOther = get(value, \"type\") === 7;\n\n  const transform = (value) => {\n    if (!value) {\n      return;\n    }\n    return isTenThousand ? value / 10000 : value;\n  };\n\n  const ref = useSimulationBlur(onBlur ? onBlur : () => {});\n\n  return (\n    <div ref={ref} className={style[\"salary\"]}>\n      <Row wrap={false} gutter={10}>\n        <Col>\n          <SelectField\n            className={style[\"salary-type\"]}\n            {...api}\n            value={get(value, \"type\")}\n            onChange={(type) => {\n              onChange &&\n                onChange(\n                  Object.assign({}, isFace ? {} : value, {\n                    type,\n                    min: \"\",\n                    max: \"\",\n                  })\n                );\n            }}\n            placeholder={placeholder || _placeholder}\n            getPopupContainer={getPopupContainer}\n            disabled={disabled}\n          >\n            {({ data }) => {\n              return { options: data || [] };\n            }}\n          </SelectField>\n        </Col>\n        {isFace ? null : (\n          <Col flex={1}>\n            {isRange && (\n              <Space.Compact\n                className={\n                  remindUnit && [5, 6].includes(value?.type)\n                    ? style[\"input-group\"]\n                    : style[\"input-group-no-mb\"]\n                }\n              >\n                <FormField isError={!get(value, \"min\") && req}>\n                  <InputNumber\n                    disabled={disabled}\n                    placeholder={_placeholderInput}\n                    formatter={numberFormat}\n                    value={transform(get(value, \"min\"))}\n                    style={{\n                      width: 100,\n                      textAlign: \"center\",\n                    }}\n                    onChange={(min) => {\n                      onChange(\n                        Object.assign({}, value, {\n                          min: isTenThousand ? min * 10000 : min,\n                        })\n                      );\n                    }}\n                    // status={'warning'}\n                    description={\n                      remindUnit && [5, 6].includes(value?.type) ? (\n                        <span style={{ color: \"#fc3333\" }}>\n                          注意：\n                          <Enum\n                            name={value?.type}\n                            moduleName=\"salaryTypeEnum\"\n                          />\n                          的单位为\n                          {isTenThousand\n                            ? formatMessage({ id: \"thousand\" })\n                            : isOther\n                            ? \"\"\n                            : formatMessage({ id: \"yuan\" })}\n                        </span>\n                      ) : null\n                    }\n                  />\n                </FormField>\n                <Input\n                  style={{\n                    width: 30,\n                    borderLeft: 0,\n                    borderRight: 0,\n                    pointerEvents: \"none\",\n                  }}\n                  placeholder=\"~\"\n                  disabled\n                />\n                <FormField isError={!get(value, \"max\") && req}>\n                  <InputNumber\n                    disabled={disabled}\n                    placeholder={_placeholderInput}\n                    formatter={numberFormat}\n                    value={transform(get(value, \"max\"))}\n                    style={{\n                      width: showMonth ? 108 : 131,\n                      textAlign: \"center\",\n                    }}\n                    addonAfter={\n                      isTenThousand\n                        ? formatMessage({ id: \"thousand\" })\n                        : isOther\n                        ? \"\"\n                        : formatMessage({ id: \"yuan\" })\n                    }\n                    onChange={(max) => {\n                      onChange(\n                        Object.assign({}, value, {\n                          max: isTenThousand ? max * 10000 : max,\n                        })\n                      );\n                    }}\n                  />\n                </FormField>\n                {/*<span className={!get(value, 'max') && get(value, 'min') && req ? 'error' : ''}>*/}\n                {/*  */}\n                {/*</span>*/}\n                {get(value, \"type\") === 5 && showMonth && (\n                  <span\n                    className={\n                      get(value, \"max\") &&\n                      get(value, \"min\") &&\n                      !get(value, \"month\") &&\n                      req\n                        ? \"error\"\n                        : \"\"\n                    }\n                  >\n                    <span className={style[\"input-number\"]}>X</span>\n                    <InputNumber\n                      min={12}\n                      disabled={disabled}\n                      value={get(value, \"month\")}\n                      onChange={(v) => {\n                        onChange(Object.assign({}, value, { month: v }));\n                      }}\n                      style={{\n                        width: 100,\n                        textAlign: \"center\",\n                      }}\n                      placeholder=\"数量\"\n                      addonAfter=\"月\"\n                    />\n                  </span>\n                )}\n              </Space.Compact>\n            )}\n            {!isRange && !isOther && (\n              <InputNumber\n                disabled={disabled}\n                min={0}\n                max={100000000}\n                placeholder={_placeholderInput}\n                className={style.full}\n                formatter={numberFormat}\n                value={transform(get(value, \"max\"))}\n                style={{\n                  width: 151,\n                  textAlign: \"center\",\n                }}\n                addonAfter={\n                  isTenThousand\n                    ? formatMessage({ id: \"thousand\" })\n                    : isOther\n                    ? \"\"\n                    : formatMessage({ id: \"yuan\" })\n                }\n                onChange={(max) => {\n                  onChange(\n                    Object.assign({}, value, {\n                      max: isTenThousand ? max * 10000 : max,\n                    })\n                  );\n                }}\n              />\n            )}\n            {!isRange && isOther && (\n              <Input\n                disabled={disabled}\n                placeholder={_placeholderInput}\n                className={style.full}\n                onChange={(e) => {\n                  onChange(Object.assign({}, value, { max: e.target.value }));\n                }}\n                value={get(value, \"max\")}\n                style={{\n                  width: 151,\n                  textAlign: \"center\",\n                }}\n              />\n            )}\n          </Col>\n        )}\n      </Row>\n    </div>\n  );\n};\nconst SalaryField = (props) => {\n  return (\n    <IntlProvider moduleName=\"FormInfo\" importMessages={importMessages}>\n      <SalaryInputField {...props} />\n    </IntlProvider>\n  );\n};\n\nSalaryField.defaultProps = {\n  api: {\n    loader: () => {\n      return [\n        {\n          value: 1,\n          label: \"面议\",\n        },\n        {\n          value: 2,\n          label: \"时薪\",\n        },\n        {\n          value: 3,\n          label: \"日薪\",\n        },\n        {\n          value: 4,\n          label: \"周薪\",\n        },\n        {\n          value: 5,\n          label: \"月薪\",\n        },\n        {\n          value: 6,\n          label: \"年薪\",\n        },\n      ];\n    },\n  },\n  defaultValue: {\n    type: 5,\n    min: \"\",\n    max: \"\",\n    month: 12,\n  },\n};\n\nconst SalaryInput = (props) => {\n  const render = useDecorator({\n    ...props,\n    req: props?.rule?.indexOf(\"REQ\") > -1,\n  });\n  return render(SalaryField);\n};\n\nSalaryInput.Field = SalaryField;\n\nexport default SalaryInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"style_table__A9nBK__EG6bw\"};","import { withFetch } from \"@kne/react-fetch\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\nimport { get, omit, pick } from \"lodash\";\nimport { Table } from \"@components/TablePage\";\nimport { hooks } from \"@kne/react-form-antd\";\nimport useControlValue from \"@kne/use-control-value\";\nimport { useEffect, useRef } from \"react\";\n\nconst { useOnChange } = hooks;\n\nconst TableInner = withFetch(({ ...props }) => {\n  const [value, onChange] = useControlValue(props);\n  const fetchProps = [\n    \"isLoading\",\n    \"isComplete\",\n    \"data\",\n    \"requestParams\",\n    \"error\",\n    \"send\",\n    \"refresh\",\n    \"reload\",\n    \"loadMore\",\n    \"setData\",\n  ];\n  const fetchApi = pick(props, fetchProps);\n  const tableProps = omit(props, fetchProps);\n  const {\n    rowKey = \"id\",\n    columns,\n    className,\n    innerName,\n    headerRender,\n    footerRender,\n  } = tableProps;\n  const formatData = props.dataFormat(fetchApi.data);\n\n  const handleChange = (list, value, { current, rowKeyValue, dataIndex }) => {\n    const result = {};\n    const dataList = list.slice(0).map((item) => {\n      if (item[rowKey] === rowKeyValue) {\n        result[item[rowKey]] = {\n          ...item,\n          [dataIndex]: current,\n        };\n        return {\n          ...item,\n          [dataIndex]: current,\n        };\n      } else {\n        const _currentItem = value[item[rowKey]];\n        result[item[rowKey]] = Object.assign({}, item, _currentItem);\n        return Object.assign({}, item, _currentItem);\n      }\n    });\n    const data = {\n      pageData: dataList,\n      totalCount: dataList.length,\n    };\n    fetchApi.setData(data);\n    onChange && onChange(result);\n  };\n\n  const changeRef = useRef(null);\n  changeRef.current = handleChange;\n\n  useEffect(() => {\n    // 判断value中是否全部存在list属性值\n    const hasExist = formatData.list.every((x) => {\n      const obj = value[x[rowKey]] || {};\n      return Object.keys(x).every((it) => obj.hasOwnProperty(it));\n    });\n    if (\n      (!hasExist || Object.keys(value).length !== formatData.list.length) &&\n      fetchApi.isComplete\n    ) {\n      changeRef.current(formatData.list, value, {});\n    }\n  }, [fetchApi.isComplete, value, formatData.list, rowKey]);\n\n  return (\n    <div>\n      {headerRender && headerRender(fetchApi)}\n      <Table\n        {...tableProps}\n        className={classnames(style[\"table\"], className)}\n        rowKey={rowKey}\n        dataSource={formatData.list}\n        pagination={false}\n        columns={columns.map((column) => {\n          const item = { ...column };\n          if (item.dataIndex) {\n            return Object.assign({}, item, {\n              render: (text, record, index) => {\n                const editable = item.editable\n                  ? typeof item.editable === \"function\"\n                    ? item.editable(text, record, index, formatData.list)\n                    : item.editable\n                  : true;\n                const rowKeyValue = record[rowKey];\n                const valueItem = value[rowKeyValue];\n                const defaultValue = get(valueItem, item.dataIndex) || text;\n                if (editable && item.field) {\n                  if (item.field?.render) {\n                    return (\n                      <>\n                        {item.field.render(\n                          {\n                            value: defaultValue,\n                            name: `${innerName}.${rowKeyValue}.${item.dataIndex}`,\n                            label: \" \",\n                            labelHidden: item.labelHidden,\n                            onChange: (...args) => {\n                              const _value = item.field?.getValue\n                                ? item.field.getValue(args[0])\n                                : args[0];\n                              handleChange(formatData.list, value, {\n                                current: _value,\n                                rowKeyValue,\n                                dataIndex: item.dataIndex,\n                              });\n                              return (\n                                item.field.onChange &&\n                                item.field.onChange(...args, fetchApi)\n                              );\n                            },\n                          },\n                          record,\n                          index,\n                          fetchApi\n                        )}\n                      </>\n                    );\n                  }\n                  const Component = item.field?.type;\n                  return (\n                    <Component\n                      {...omit(item.field, [\"type\", \"getValue\"])}\n                      value={defaultValue}\n                      name={`${innerName}.${rowKeyValue}.${item.dataIndex}`}\n                      label={\" \"}\n                      labelHidden={item.labelHidden}\n                      onChange={(...args) => {\n                        const _value = item.field?.getValue\n                          ? item.field.getValue(args[0])\n                          : args[0];\n                        handleChange(formatData.list, value, {\n                          current: _value,\n                          rowKeyValue,\n                          dataIndex: item.dataIndex,\n                        });\n                        return (\n                          item.field.onChange &&\n                          item.field.onChange(...args, fetchApi)\n                        );\n                      }}\n                    />\n                  );\n                } else {\n                  return item.render\n                    ? item.render(defaultValue, record, index)\n                    : defaultValue;\n                }\n              },\n            });\n          }\n          return item;\n        })}\n      />\n      {footerRender && footerRender(fetchApi)}\n    </div>\n  );\n});\n\nTableInner.defaultProps = {\n  mergeList: (data, newData) => {\n    return Object.assign({}, newData, {\n      pageData: (data.pageData || []).concat(newData.pageData || []),\n    });\n  },\n  dataFormat: (data) => {\n    return {\n      list: data.pageData,\n      total: data.totalCount,\n    };\n  },\n};\n\nconst TableInputField = ({ api, ...props }) => {\n  return <TableInner {...props} {...api} />;\n};\n\nTableInputField.defaultProps = {\n  api: {},\n  value: {},\n};\n\nconst TableInput = (props) => {\n  const render = useOnChange(\n    Object.assign(\n      {\n        placeholder: `请选择${props.label}`,\n        innerName: props.name,\n      },\n      props\n    )\n  );\n  return render(TableInputField);\n};\n\nTableInput.Field = TableInputField;\n\nexport default TableInput;\n","import TypeDateRangePickerField from \"@common/components/TypeDateRangePickerField\";\nimport { hooks } from \"@kne/react-form-antd\";\n\nconst { useOnChange } = hooks;\n\nconst TypeDateRangePicker = (props) => {\n  const render = useOnChange(Object.assign({}, {}, props));\n  return render(TypeDateRangePickerField);\n};\n\nTypeDateRangePicker.Field = TypeDateRangePickerField;\n\nexport default TypeDateRangePicker;\n","// extracted by mini-css-extract-plugin\nexport default {\"upload\":\"style_upload__t422Q__EG6bw\",\"upload-list\":\"style_upload-list__Q9HDc__EG6bw\",\"upload-input\":\"style_upload-input__vXk4w__EG6bw\",\"tips\":\"style_tips__3Gpnu__EG6bw\"};","import { Space } from \"antd\";\nimport classnames from \"classnames\";\nimport useControlValue from \"@kne/use-control-value\";\nimport style from \"./style.module.scss\";\nimport Icon from \"@components/Icon\";\nimport { List as FileList } from \"@components/File\";\nimport { hooks } from \"@kne/react-form-antd\";\nimport omit from \"lodash/omit\";\nimport { InputFileButton, useFileUpload } from \"@common/hocs/withInputFile\";\n\nconst { useOnChange } = hooks;\n\nconst UploadField = ({\n  className,\n  fileSize,\n  maxLength,\n  multiple,\n  size,\n  accept,\n  children,\n  renderTips,\n  showUploadList,\n  onSave,\n  ossUpload,\n  getPermission,\n  ...props\n}) => {\n  const [propsValue, onChange] = useControlValue(props);\n  const value = propsValue || [];\n  const { fileList: uploadingList, onFileSelected } = useFileUpload({\n    multiple,\n    onSave,\n    ossUpload,\n    fileSize,\n    maxLength,\n    value,\n    onChange,\n    concurrentCount: 10,\n  });\n  const previewFileList = [...uploadingList, ...value];\n\n  const tipsText = renderTips(\n    `支持扩展名${accept\n      .map((str) => str.replace(/^\\./, \"\"))\n      .join(\"、\")},单个文件大小不超过${fileSize}M，最多上传${maxLength}个附件`,\n    {\n      fileSize,\n      maxLength,\n      accept,\n    }\n  );\n\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <InputFileButton\n          {...omit(props, [\"value\", \"onChange\"])}\n          size={size}\n          multiple={multiple}\n          accept={accept}\n          className={classnames(style[\"upload\"], className)}\n          onChange={onFileSelected}\n        >\n          {children}\n        </InputFileButton>\n        {tipsText && <div className={style[\"tips\"]}>{tipsText}</div>}\n      </Space>\n      {showUploadList && previewFileList.length > 0 && (\n        <FileList\n          className={style[\"upload-list\"]}\n          dataSource={previewFileList}\n          infoItemRenders={[]}\n          getPermission={\n            getPermission\n              ? getPermission\n              : (type) => {\n                  return type === \"delete\";\n                }\n          }\n          apis={{\n            onDelete: (target) => {\n              const newList = value.slice(0);\n              const index = newList.indexOf(target);\n              index > -1 && newList.splice(index, 1);\n              onChange(newList);\n            },\n          }}\n        />\n      )}\n    </Space>\n  );\n};\n\nUploadField.defaultProps = {\n  defaultValue: [],\n  children: (\n    <>\n      <Icon type=\"icon-shangchuanfujian\" />\n      上传附件\n    </>\n  ),\n  accept: [\n    \".pdf\",\n    \".jpg\",\n    \".png\",\n    \".jpeg\",\n    \".doc\",\n    \".docx\",\n    \".xls\",\n    \".xlsx\",\n    \".html\",\n    \".msg\",\n    \".zip\",\n  ],\n  renderTips: (defaultTips) => {\n    return defaultTips;\n  },\n  multiple: true,\n  showUploadList: true,\n  maxLength: 10,\n  fileSize: 30,\n};\n\nconst Upload = (props) => {\n  const render = useOnChange(props);\n  return render(UploadField);\n};\n\nUpload.defaultProps = {\n  interceptor: \"file-format\",\n};\n\nUpload.field = UploadField;\n\nexport default Upload;\n","import {\n  DatePicker as ReactDatePicker,\n  DatePickerToday as ReactDatePickerToday,\n  Input as ReactInput,\n  InputNumber as ReactInputNumber,\n  Select as ReactSelect,\n  TextArea as ReactTextArea,\n  TimePicker as ReactTimePicker,\n  TreeSelect as ReactTreeSelect,\n  RadioGroup,\n  CheckboxGroup,\n} from \"@kne/react-form-antd\";\nimport AdvancedSelectField from \"./AdvancedSelect\";\nimport AddressSelect, { AddressInput } from \"./AddressSelect\";\nimport Cascader from \"./Cascader\";\nimport FunctionSelect from \"./FunctionSelect\";\nimport IndustrySelect from \"./IndustrySelect\";\nimport MoneyInput from \"./MoneyInput\";\nimport PhoneNumber from \"./PhoneNumber\";\nimport Upload from \"./Upload\";\nimport Avatar from \"./Avatar\";\nimport SalaryInput from \"./SalaryInput\";\nimport InputUpperCaseField from \"./InputUpperCase\";\nimport TableInput from \"./TableInput\";\nimport Rate from \"./Rate\";\nimport compose from \"@kne/compose\";\nimport { forwardRef } from \"react\";\nimport { FormattedMessage, useIntl } from \"@components/Intl\";\nimport { useGroup } from \"@kne/react-form-antd\";\nimport get from \"lodash/get\";\nimport { get as _get } from \"lodash\";\nimport { useFormLang } from \"@components/FormInfo/FormLangProvider\";\nimport TypeDateRangePicker from \"./TypeDateRangePicker\";\n\nconst createWithFieldDecorator = (decoratorList) => (WrappedComponent) => {\n  const TargetComponent = compose(...decoratorList)(\n    ({ forwardedRef, ...props }) => (\n      <WrappedComponent {...props} ref={forwardedRef} />\n    )\n  );\n  const ForwardComponent = forwardRef((props, ref) => {\n    return <TargetComponent {...props} forwardedRef={ref} />;\n  });\n  Object.keys(WrappedComponent)\n    .filter((key) => {\n      return [\"$$typeof\", \"render\", \"field\"].indexOf(key) === -1;\n    })\n    .forEach((key) => {\n      ForwardComponent[key] = WrappedComponent[key];\n    });\n\n  return ForwardComponent;\n};\n\nconst withInputDefaultPlaceholder = (WrappedComponent) => {\n  return ({ placeholder, label, ...props }) => (\n    <FormattedMessage\n      id=\"defaultInputPlaceholder\"\n      moduleName=\"FormInfo\"\n      values={{ label }}\n    >\n      {(text) => (\n        <WrappedComponent\n          {...props}\n          label={label}\n          placeholder={placeholder || text}\n        />\n      )}\n    </FormattedMessage>\n  );\n};\n\nconst withSelectDefaultPlaceholder = (WrappedComponent) => {\n  return ({ placeholder, label, ...props }) => (\n    <FormattedMessage\n      id=\"defaultSelectPlaceholder\"\n      moduleName=\"FormInfo\"\n      values={{ label }}\n    >\n      {(text) => (\n        <WrappedComponent\n          {...props}\n          label={label}\n          placeholder={placeholder || text}\n        />\n      )}\n    </FormattedMessage>\n  );\n};\n\nconst withLang = (WrappedComponent) => {\n  return (props) => {\n    const group = useGroup();\n    const groupName = get(group, \"name\");\n    const groupIndex = _get(group, \"index\");\n    const lang = useFormLang();\n    if (lang && Array.isArray(lang) && lang.length > 0) {\n      return lang.map((item) => {\n        if (typeof item === \"string\") {\n          return <WrappedComponent {...props} key={item} />;\n        }\n        const { name, label, options } = item;\n        const ignoreList = get(options, \"ignore\", []),\n          disabledList = get(options, \"disabled\", []),\n          fields = get(options, \"fields\", []);\n        const getCurrentField = (item) =>\n          props.name === item.name &&\n          !(item.hasOwnProperty(\"groupName\") && item.groupName !== groupName) &&\n          !(\n            item.hasOwnProperty(\"groupIndex\") && item.groupIndex !== groupIndex\n          );\n\n        if (ignoreList.length > 0 && ignoreList.find(getCurrentField)) {\n          return null;\n        }\n\n        if (fields.length > 0 && !fields.find(getCurrentField)) {\n          return null;\n        }\n\n        let newProps = Object.assign({}, props, {\n          name: get(\n            options,\n            \"nameTransform\",\n            (name, langName) => `${name}${langName}`\n          )(props.name, name),\n          label: get(\n            options,\n            \"labelTransform\",\n            (label, langLabel) => label && `${label}${langLabel}`\n          )(props.label, label),\n        });\n\n        if (disabledList.length > 0 && disabledList.find(getCurrentField)) {\n          newProps.disabled = true;\n          newProps.rule = \"\";\n        }\n        return <WrappedComponent {...newProps} key={name} />;\n      });\n    }\n\n    return <WrappedComponent {...props} />;\n  };\n};\n\nconst Input = createWithFieldDecorator([withLang, withInputDefaultPlaceholder])(\n  ReactInput\n);\n\nconst InputNumber = createWithFieldDecorator([\n  withLang,\n  withInputDefaultPlaceholder,\n])(ReactInputNumber);\nInput.Password = createWithFieldDecorator([\n  withLang,\n  withInputDefaultPlaceholder,\n])(ReactInput.Password);\n\nconst DatePicker = createWithFieldDecorator([\n  withLang,\n  withSelectDefaultPlaceholder,\n])(ReactDatePicker);\nDatePicker.MonthPicker = createWithFieldDecorator([\n  withLang,\n  withSelectDefaultPlaceholder,\n])(ReactDatePicker.MonthPicker);\n\nDatePicker.RangePicker = createWithFieldDecorator([\n  withLang,\n  withSelectDefaultPlaceholder,\n])(ReactDatePicker.RangePicker);\n\nDatePicker.WeekPicker = createWithFieldDecorator([\n  withLang,\n  withSelectDefaultPlaceholder,\n])(ReactDatePicker.WeekPicker);\n\nconst TimePicker = createWithFieldDecorator([\n  withLang,\n  withSelectDefaultPlaceholder,\n])(ReactTimePicker);\n\nTimePicker.RangePicker = createWithFieldDecorator([\n  withLang,\n  withSelectDefaultPlaceholder,\n])(ReactTimePicker.RangePicker);\n\nconst DatePickerToday = createWithFieldDecorator([withLang])(\n  ({ placeholder, label, soFarText, ...props }) => {\n    const { formatMessage } = useIntl({ moduleName: \"FormInfo\" });\n    return (\n      <ReactDatePickerToday\n        {...props}\n        label={label}\n        placeholder={[\n          formatMessage({ id: \"startDate\" }),\n          formatMessage({ id: \"endDate\" }),\n        ]}\n        soFarText={soFarText || formatMessage({ id: \"soFarText\" })}\n      />\n    );\n  }\n);\n\nconst fields = {\n  Input,\n  InputNumber,\n  DatePicker,\n  TimePicker,\n  DatePickerToday,\n  RadioGroup: createWithFieldDecorator([withLang])(RadioGroup),\n  CheckboxGroup: createWithFieldDecorator([withLang])(CheckboxGroup),\n  Rate: createWithFieldDecorator([withLang])(Rate),\n  TableInput: createWithFieldDecorator([withLang])(TableInput),\n  SalaryInput: createWithFieldDecorator([withLang])(SalaryInput),\n  TypeDateRangePicker: createWithFieldDecorator([withLang])(\n    TypeDateRangePicker\n  ),\n  MoneyInput: createWithFieldDecorator([withLang])(MoneyInput),\n  PhoneNumber: createWithFieldDecorator([withLang])(PhoneNumber),\n  Upload: createWithFieldDecorator([withLang])(Upload),\n  Avatar: createWithFieldDecorator([withLang])(Avatar),\n  FunctionSelect: createWithFieldDecorator([\n    withLang,\n    withSelectDefaultPlaceholder,\n  ])(FunctionSelect),\n  IndustrySelect: createWithFieldDecorator([\n    withLang,\n    withSelectDefaultPlaceholder,\n  ])(IndustrySelect),\n  Cascader: createWithFieldDecorator([withLang, withSelectDefaultPlaceholder])(\n    Cascader\n  ),\n  AddressSelect: createWithFieldDecorator([\n    withLang,\n    withSelectDefaultPlaceholder,\n  ])(AddressSelect),\n  AddressInput: createWithFieldDecorator([\n    withLang,\n    withSelectDefaultPlaceholder,\n  ])(AddressInput),\n  TreeSelect: createWithFieldDecorator([\n    withLang,\n    withSelectDefaultPlaceholder,\n  ])(ReactTreeSelect),\n  ReactInputNumber: createWithFieldDecorator([\n    withLang,\n    withInputDefaultPlaceholder,\n  ])(ReactInputNumber),\n  InputUpperCase: createWithFieldDecorator([\n    withLang,\n    withInputDefaultPlaceholder,\n  ])(InputUpperCaseField),\n  Select: createWithFieldDecorator([withLang, withSelectDefaultPlaceholder])(\n    ReactSelect\n  ),\n  TextArea: createWithFieldDecorator([withLang, withInputDefaultPlaceholder])(\n    ReactTextArea\n  ),\n  AdvancedSelect: createWithFieldDecorator([\n    withLang,\n    withSelectDefaultPlaceholder,\n  ])(AdvancedSelectField),\n};\n\nexport default fields;\n\nexport const fieldDecorator = {\n  createWithFieldDecorator,\n  withInputDefaultPlaceholder,\n  withSelectDefaultPlaceholder,\n  withLang,\n};\n","import { hooks } from \"@kne/react-form-antd\";\nimport { Input, Typography } from \"antd\";\nimport useControlValue from \"@kne/use-control-value\";\n\nconst { useDecorator } = hooks;\n\nconst TextField = ({ children, ...props }) => {\n  const [value] = useControlValue(props);\n  return (\n    <Typography.Text {...props}>\n      <div style={{ height: 0, width: 0, overflow: \"hidden\" }}>\n        <Input value={value} />\n      </div>\n      {children ? children : value}\n    </Typography.Text>\n  );\n};\n\nconst Text = (props) => {\n  const render = useDecorator(props);\n  return render(TextField);\n};\n\nText.Field = TextField;\n\nexport default Text;\n","import * as reactFormAntd from \"@kne/react-form-antd\";\nimport {\n  DatePicker as ReactDatePicker,\n  DatePickerToday as ReactDatePickerToday,\n  Input as ReactInput,\n  InputNumber as ReactInputNumber,\n  Select as ReactSelect,\n  TextArea as ReactTextArea,\n  TimePicker as ReactTimePicker,\n  TreeSelect as ReactTreeSelect,\n} from \"@kne/react-form-antd\";\nimport Form from \"./Form\";\nimport { FormattedMessage, useIntl } from \"@components/Intl\";\nimport { forwardRef } from \"react\";\nimport FormItem from \"./FormItem\";\nimport style from \"./style.module.scss\";\nimport AdvancedSelectField from \"./fields/AdvancedSelect\";\nimport AddressSelect, {\n  AddressInput as AddressInputField,\n} from \"./fields/AddressSelect\";\nimport Cascader from \"./fields/Cascader\";\nimport FunctionSelect from \"./fields/FunctionSelect\";\nimport IndustrySelect from \"./fields/IndustrySelect\";\nimport MoneyInput from \"./fields/MoneyInput\";\nimport PhoneNumber from \"./fields/PhoneNumber\";\nimport Upload from \"./fields/Upload\";\nimport Avatar from \"./fields/Avatar\";\nimport SalaryInput from \"./fields/SalaryInput\";\nimport InputUpperCaseField from \"./fields/InputUpperCase\";\nimport TypeDateRangePicker from \"./fields/TypeDateRangePicker\";\nimport TableInput from \"./fields/TableInput\";\nimport Text from \"./fields/Text\";\nimport Rate from \"./fields/Rate\";\nimport ErrorTip from \"./ErrorTip\";\n\nconst withInputDefaultPlaceholder = (WrappedComponent) => {\n  const TargetComponent = forwardRef(\n    ({ placeholder, label, ...props }, ref) => (\n      <FormattedMessage\n        id=\"defaultInputPlaceholder\"\n        moduleName=\"FormInfo\"\n        values={{ label }}\n      >\n        {(text) => (\n          <WrappedComponent\n            {...props}\n            ref={ref}\n            label={label}\n            placeholder={placeholder || text}\n          />\n        )}\n      </FormattedMessage>\n    )\n  );\n  Object.keys(WrappedComponent)\n    .filter((key) => {\n      return [\"$$typeof\", \"render\", \"field\"].indexOf(key) === -1;\n    })\n    .forEach((key) => {\n      TargetComponent[key] = WrappedComponent[key];\n    });\n\n  return TargetComponent;\n};\n\nconst withTextAreaDefaultPlaceholder =\n  (WrappedComponent) =>\n  ({ placeholder, label, className, ...props }) =>\n    (\n      <FormattedMessage\n        id=\"defaultInputPlaceholder\"\n        moduleName=\"FormInfo\"\n        values={{ label }}\n      >\n        {(text) => (\n          <div className={style[\"textarea-wrapped-component\"]}>\n            <WrappedComponent\n              {...props}\n              label={label}\n              placeholder={placeholder || text}\n            />\n          </div>\n        )}\n      </FormattedMessage>\n    );\n\nconst withSelectDefaultPlaceholder = (WrappedComponent) => {\n  const TargetComponent = forwardRef(\n    ({ placeholder, label, ...props }, ref) => (\n      <FormattedMessage\n        id=\"defaultSelectPlaceholder\"\n        moduleName=\"FormInfo\"\n        values={{ label }}\n      >\n        {(text) => (\n          <WrappedComponent\n            {...props}\n            ref={ref}\n            label={label}\n            placeholder={placeholder || text}\n          />\n        )}\n      </FormattedMessage>\n    )\n  );\n\n  Object.keys(WrappedComponent)\n    .filter((key) => {\n      return [\"$$typeof\", \"render\", \"field\"].indexOf(key) === -1;\n    })\n    .forEach((key) => {\n      TargetComponent[key] = WrappedComponent[key];\n    });\n\n  return TargetComponent;\n};\n\nexport { default as ErrorTip } from \"./ErrorTip\";\n\nexport { default as FormItem } from \"./FormItem\";\n\n// export { default as AdvancedSelect } from \"./fields/AdvancedSelect\";\nexport const AdvancedSelect = withSelectDefaultPlaceholder(AdvancedSelectField);\n\nexport { default as AddressSelect } from \"./fields/AddressSelect\";\nexport const AddressInput = withSelectDefaultPlaceholder(AddressInputField);\n\nexport {\n  Cascader,\n  FunctionSelect,\n  IndustrySelect,\n  MoneyInput,\n  PhoneNumber,\n  Upload,\n  Avatar,\n  SalaryInput,\n  TableInput,\n  Text,\n  Rate,\n  TypeDateRangePicker,\n};\nexport const InputUpperCase = withInputDefaultPlaceholder(InputUpperCaseField);\nexport const Input = withInputDefaultPlaceholder(ReactInput);\nInput.Password = withInputDefaultPlaceholder(ReactInput.Password);\n\nexport const TextArea = withTextAreaDefaultPlaceholder(ReactTextArea);\n\nexport const Select = withSelectDefaultPlaceholder(ReactSelect);\n\nSelect.Fetch = withSelectDefaultPlaceholder(ReactSelect.Fetch);\nSelect.Fetch.field = ReactSelect.Fetch.field;\n\nexport const InputNumber = withInputDefaultPlaceholder(ReactInputNumber);\n\nexport const TreeSelect = withSelectDefaultPlaceholder(ReactTreeSelect);\nTreeSelect.Fetch = withSelectDefaultPlaceholder(ReactTreeSelect.Fetch);\nTreeSelect.Fetch.field = ReactTreeSelect.Fetch.field;\n\nexport const TimePicker = withSelectDefaultPlaceholder(ReactTimePicker);\n\nTimePicker.RangePicker = withSelectDefaultPlaceholder(\n  ReactTimePicker.RangePicker\n);\n\nexport const DatePicker = withSelectDefaultPlaceholder(ReactDatePicker);\n\nDatePicker.MonthPicker = withSelectDefaultPlaceholder(\n  ReactDatePicker.MonthPicker\n);\n\nDatePicker.RangePicker = withSelectDefaultPlaceholder(\n  ReactDatePicker.RangePicker\n);\n\nDatePicker.WeekPicker = withSelectDefaultPlaceholder(\n  ReactDatePicker.WeekPicker\n);\n\nexport const DatePickerToday = ({\n  placeholder,\n  label,\n  soFarText,\n  ...props\n}) => {\n  const { formatMessage } = useIntl({ moduleName: \"FormInfo\" });\n  return (\n    <ReactDatePickerToday\n      {...props}\n      label={label}\n      placeholder={[\n        formatMessage({ id: \"startDate\" }),\n        formatMessage({ id: \"endDate\" }),\n      ]}\n      soFarText={soFarText || formatMessage({ id: \"soFarText\" })}\n    />\n  );\n};\n\nexport { Form };\n\nexport const formModule = Object.assign({}, reactFormAntd, {\n  Input,\n  InputUpperCase,\n  TextArea,\n  Select,\n  InputNumber,\n  TreeSelect,\n  TimePicker,\n  DatePicker,\n  DatePickerToday,\n  Form,\n  FormItem,\n  AdvancedSelect,\n  AddressSelect,\n  AddressInput,\n  MoneyInput,\n  PhoneNumber,\n  Cascader,\n  FunctionSelect,\n  IndustrySelect,\n  TypeDateRangePicker,\n  Upload,\n  Avatar,\n  SalaryInput,\n  TableInput,\n  Text,\n  Rate,\n  ErrorTip,\n});\n","import preset from \"./preset\";\nimport FormInfo from \"./FormInfo\";\nimport fields, { fieldDecorator } from \"./fields\";\nimport List from \"./List\";\nimport TableList from \"./TableList\";\nimport FormApiButton from \"./FormApiButton\";\nimport FormModal, { useFormModal, FormModalButton } from \"./FormModal\";\nimport FormStepModal, {\n  useFormStepModal,\n  FormStepModalButton,\n} from \"./FormStepModal\";\nimport FormDrawer, { useFormDrawer, FormDrawerButton } from \"./FormDrawer\";\nimport Form from \"./Form\";\nimport FormItem from \"./FormItem\";\nimport ErrorTip from \"./ErrorTip\";\nimport { SubmitButton, CancelButton } from \"@kne/react-form-antd\";\n\npreset();\n\nFormInfo.fields = fields;\nFormInfo.List = List;\nFormInfo.TableList = TableList;\nFormInfo.FormApiButton = FormApiButton;\nFormInfo.FormModal = FormModal;\nFormInfo.useFormModal = useFormModal;\nFormInfo.FormModalButton = FormModalButton;\nFormInfo.FormStepModal = FormStepModal;\nFormInfo.useFormStepModal = useFormStepModal;\nFormInfo.FormStepModalButton = FormStepModalButton;\nFormInfo.FormDrawer = FormDrawer;\nFormInfo.useFormDrawer = useFormDrawer;\nFormInfo.FormDrawerButton = FormDrawerButton;\nFormInfo.Form = Form;\nFormInfo.FormItem = FormItem;\nFormInfo.ErrorTip = ErrorTip;\nFormInfo.SubmitButton = SubmitButton;\nFormInfo.CancelButton = CancelButton;\nFormInfo.fieldDecorator = fieldDecorator;\n\nexport * from \"@kne/react-form-antd\";\n\nexport * from \"./formModule\";\n\nexport {\n  Form,\n  FormItem,\n  ErrorTip,\n  fields,\n  fieldDecorator,\n  List,\n  TableList,\n  FormApiButton,\n  FormModal,\n  useFormModal,\n  FormModalButton,\n  FormStepModal,\n  useFormStepModal,\n  FormStepModalButton,\n  FormDrawer,\n  useFormDrawer,\n  FormDrawerButton,\n};\n\nexport { default as SelectInnerInput } from \"./SelectInnerInput\";\n\nexport default FormInfo;\n","import { interceptors, preset, RULES } from \"@kne/react-form-antd\";\nimport dayjs from \"dayjs\";\nimport merge from \"lodash/merge\";\nimport get from \"lodash/get\";\nimport \"@kne/react-form-antd/dist/index.css\";\nimport { PHONE_NUMBER } from \"./fields/PhoneNumber\";\nimport HelperGuideLabel from \"@components/FormInfo/HelperGuideLabel\";\n\nconst formPreset = (options, otherOptions) => {\n  const { locale } = Object.assign({}, otherOptions);\n\n  interceptors.output.use(\"photo-string\", (value) => {\n    if (!value || typeof value === \"string\") {\n      return value;\n    }\n    return value.id?.split(\"?\")?.[0] || value.id;\n  });\n\n  interceptors.input.use(\"to-array\", (value) => {\n    return Array.isArray(value) ? value[0] : value;\n  });\n\n  interceptors.output.use(\"to-array\", (value) => {\n    return [value];\n  });\n\n  interceptors.input.use(\"array-single\", (value) => {\n    return value ? [value] : [];\n  });\n\n  interceptors.output.use(\"array-single\", (value) => {\n    return value ? value[0] : null;\n  });\n\n  interceptors.input.use(\"date-string\", (value) => {\n    return value ? dayjs(value) : null;\n  });\n\n  interceptors.output.use(\"date-string\", (value) => {\n    return value ? new Date(value.valueOf()).toISOString() : \"\";\n  });\n\n  interceptors.input.use(\"date-range-string\", (value) => {\n    if (!Array.isArray(value)) {\n      return [];\n    }\n\n    const output = [];\n\n    if (value[0]) {\n      output.push(dayjs(value[0]));\n    }\n    if (value[0] && value[1] && value[1] === \"sofar\") {\n      output.push(\"至今\");\n    }\n    if (value[0] && value[1] && value[1] !== \"至今\") {\n      output.push(dayjs(value[1]));\n    }\n\n    return output;\n  });\n\n  interceptors.output.use(\"date-range-string\", (value) => {\n    if (!Array.isArray(value)) {\n      return [];\n    }\n\n    const output = [];\n\n    if (value[0]) {\n      output.push(new Date(value[0].valueOf()).toISOString());\n    }\n    if (value[0] && value[1] && value[1] === \"至今\") {\n      output.push(\"sofar\");\n    }\n    if (value[0] && value[1] && value[1] !== \"至今\") {\n      output.push(new Date(value[1].valueOf()).toISOString());\n    }\n    return output;\n  });\n\n  interceptors.output.use(\"file-format\", (value) => {\n    if (!Array.isArray(value)) {\n      return [];\n    }\n    return value.map((item) => ({\n      id: item.id || item.ossId,\n      originalName: item.filename,\n    }));\n  });\n\n  interceptors.input.use(\"file-format\", (value) => {\n    if (!Array.isArray(value)) {\n      return [];\n    }\n    return value.map((item) => ({\n      id: item.id || item.ossId,\n      ossId: item.id || item.ossId,\n      filename: item.originalName,\n    }));\n  });\n\n  const _olderREQ = RULES.REQ;\n  const _olderLEN = RULES.LEN;\n\n  const getLocaleMsg = (type, values) => {\n    values = Object.assign({}, values);\n    const mapping = {\n      REQ: {\n        \"zh-CN\": \"%s不能为空\",\n        \"en-US\": \"%s cannot be empty \",\n      },\n      LENGTH_EQUAL: {\n        \"zh-CN\": `%s必须等于${values.end}`,\n        \"en-US\": `%s must be equal to ${values.end}`,\n      },\n      LENGTH_MORE: {\n        \"zh-CN\": `%s必须大于${values.start}`,\n        \"en-US\": `%s must be greater than ${values.start}`,\n      },\n      LENGTH_LESS: {\n        \"zh-CN\": `%s必须小于${values.end}`,\n        \"en-US\": `%s must be less than ${values.end}`,\n      },\n    };\n    const target = get(mapping, `${type}.${locale}`);\n    if (target) {\n      return target;\n    }\n    return get(mapping, `${type}.zh-CN`);\n  };\n\n  preset(\n    merge(\n      {},\n      {\n        rules: {\n          REQ: (...args) => {\n            return Object.assign({}, _olderREQ(...args), {\n              errMsg: getLocaleMsg(\"REQ\"),\n            });\n          },\n          LEN: (...args) => {\n            const [value, start, end] = args;\n            let ruleName = \"\";\n            if (end === start && value.length !== Number(end)) {\n              ruleName = \"LENGTH_EQUAL\";\n            }\n            if (value.length < start) {\n              ruleName = \"LENGTH_MORE\";\n            }\n            if (end && value.length > end) {\n              ruleName = \"LENGTH_LESS\";\n            }\n            return Object.assign({}, _olderLEN(...args), {\n              errMsg: getLocaleMsg(ruleName, { start, end }),\n            });\n          },\n          PHONE_NUMBER,\n          ARRAY_LENGTH: (value, start, end) => {\n            if (end === start && value.length !== Number(end)) {\n              return {\n                result: false,\n                errMsg: getLocaleMsg(\"LENGTH_EQUAL\", { start, end }),\n              };\n            }\n            if (value.length < start) {\n              return {\n                result: false,\n                errMsg: getLocaleMsg(\"LENGTH_MORE\", { start, end }),\n              };\n            }\n            if (end && value.length > end) {\n              return {\n                result: false,\n                errMsg: getLocaleMsg(\"LENGTH_LESS\", { start, end }),\n              };\n            }\n            return { result: true };\n          },\n        },\n        field: {\n          datePicker: {\n            defaultProps: {\n              interceptor: \"date-string\",\n            },\n          },\n          rangeDatePicker: {\n            defaultProps: {\n              interceptor: \"date-range-string\",\n            },\n          },\n          textArea: {\n            defaultProps: {\n              autoSize: {\n                minRows: 2,\n                maxRows: 6,\n              },\n            },\n          },\n        },\n        globalProps: {\n          labelTips: (props) => {\n            return <HelperGuideLabel {...props} />;\n          },\n        },\n      },\n      typeof options === \"function\" ? options({ interceptors, RULES }) : options\n    )\n  );\n};\n\nexport default formPreset;\n","// extracted by mini-css-extract-plugin\nexport default {\"part\":\"style_part__+Vw3+__EG6bw\",\"collapse\":\"style_collapse__ARl-O__EG6bw\",\"is-active\":\"style_is-active__i1zHH__EG6bw\"};","import { Collapse as CollapseAntd } from \"antd\";\nimport Icon from \"@components/Icon\";\nimport style from \"./style.module.scss\";\nimport classnames from \"classnames\";\n\nconst Collapse = ({ children, className, ...props }) => {\n  return (\n    <CollapseAntd\n      {...props}\n      className={classnames(style[\"collapse\"], className)}\n      expandIcon={({ isActive }) => (\n        <Icon\n          size={12}\n          className={classnames({\n            [style[\"is-active\"]]: isActive,\n          })}\n          type=\"icon-triangle-right\"\n        />\n      )}\n    >\n      {children}\n    </CollapseAntd>\n  );\n};\n\nCollapse.Panel = CollapseAntd.Panel;\n\nexport default Collapse;\n","import { Card, Space } from \"antd\";\nimport classnames from \"classnames\";\nimport Collapse from \"./Collapse\";\nimport style from \"./style.module.scss\";\n\nconst Part = ({ className, title, extra, children, ...props }) => {\n  return (\n    <Card\n      className={classnames(style[\"part\"], className, {\n        \"no-title\": !title,\n      })}\n      bordered={false}\n      title={title}\n      extra={extra}\n      {...props}\n    >\n      {children}\n    </Card>\n  );\n};\n\nconst InfoPage = ({ className, children }) => {\n  return (\n    <Space className={className} direction=\"vertical\" size={24}>\n      {children}\n    </Space>\n  );\n};\n\nInfoPage.Part = Part;\nInfoPage.Collapse = Collapse;\nexport default InfoPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"style_tooltip__zHGMI__EG6bw\",\"large\":\"style_large__lvmsm__EG6bw\",\"small\":\"style_small__nUt0r__EG6bw\",\"popup-content\":\"style_popup-content__-rKQN__EG6bw\",\"title\":\"style_title__1EQPq__EG6bw\",\"important-info\":\"style_important-info__qTSZY__EG6bw\",\"error\":\"style_error__yTTq3__EG6bw\",\"warning\":\"style_warning__CMJxz__EG6bw\",\"success\":\"style_success__AvJVx__EG6bw\",\"sub-title\":\"style_sub-title__uD8CH__EG6bw\",\"content\":\"style_content__lzgUz__EG6bw\",\"alone\":\"style_alone__q6q82__EG6bw\",\"fetch-content\":\"style_fetch-content__tEOEV__EG6bw\",\"fetch-loading\":\"style_fetch-loading__tN-WB__EG6bw\",\"title-info-icon\":\"style_title-info-icon__iY8Q+__EG6bw\"};","import { Space, Tooltip as AntdTooltip } from \"antd\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\n\nconst Tooltip = ({\n  overlayClassName,\n  title,\n  size,\n  subtitle,\n  content,\n  importantInfo,\n  importantInfoType,\n  moreInfo,\n  ...props\n}) => {\n  return (\n    <AntdTooltip\n      {...props}\n      overlayClassName={classnames(overlayClassName, style[\"tooltip\"], {\n        [style[\"small\"]]: size === \"small\",\n        [style[\"large\"]]: size === \"large\",\n      })}\n      title={\n        <Space direction=\"vertical\" className={style[\"popup-content\"]}>\n          {title && <div className={style[\"title\"]}>{title}</div>}\n          {importantInfo && (\n            <div\n              className={classnames(style[\"important-info\"], {\n                [style[\"success\"]]: importantInfoType === \"success\",\n                [style[\"warning\"]]: importantInfoType === \"warning\",\n                [style[\"error\"]]: importantInfoType === \"error\",\n              })}\n            >\n              {importantInfo}\n            </div>\n          )}\n          {subtitle && <div className={style[\"sub-title\"]}>{subtitle}</div>}\n          {content && (\n            <div\n              className={classnames(style[\"content\"], {\n                [style[\"alone\"]]: [\n                  title,\n                  subtitle,\n                  importantInfo,\n                  moreInfo,\n                ].every((item) => !item),\n              })}\n            >\n              {content}\n            </div>\n          )}\n          {moreInfo && <div>{moreInfo}</div>}\n        </Space>\n      }\n    />\n  );\n};\n\nTooltip.defaultProps = {};\n\nexport default Tooltip;\n","import style from \"./style.module.scss\";\nimport Tooltip from \"./index\";\nimport Icon from \"@components/Icon\";\n\nconst TooltipInfoLabel = ({ title, tooltipTitle }) => {\n  return (\n    <div>\n      {title}\n      {tooltipTitle ? (\n        <Tooltip {...tooltipTitle}>\n          <span>\n            <Icon\n              type=\"icon-xinxi-miaobian\"\n              className={style[\"title-info-icon\"]}\n              size={14}\n            />\n          </span>\n        </Tooltip>\n      ) : null}\n    </div>\n  );\n};\n\nexport default TooltipInfoLabel;\n","import { useState } from \"react\";\nimport { useFetch } from \"@kne/react-fetch\";\nimport { Spin } from \"antd\";\nimport style from \"./style.module.scss\";\nimport Tooltip from \"./index\";\nimport classnames from \"classnames\";\n\nconst TooltipFetch = ({\n  api,\n  children,\n  fetchContent,\n  showLoading,\n  loadingClassName,\n  force,\n  ...props\n}) => {\n  const [open, setOpen] = useState(false);\n  const fetchApi = useFetch(Object.assign({}, api, { auto: false }));\n  const { isComplete, isLoading, data, send } = fetchApi;\n  return (\n    <Tooltip\n      {...Object.assign(\n        {},\n        props,\n        isComplete ? fetchContent(data, fetchApi) : {}\n      )}\n      open={open}\n      onOpenChange={async (open) => {\n        if (open && (!isComplete || force)) {\n          await send({ type: \"refresh\" });\n        }\n        setOpen(open);\n      }}\n    >\n      <span className={style[\"fetch-content\"]}>\n        {children}\n        {showLoading && isLoading ? (\n          <Spin\n            size=\"small\"\n            className={classnames(loadingClassName, style[\"fetch-loading\"])}\n          />\n        ) : null}\n      </span>\n    </Tooltip>\n  );\n};\n\nTooltipFetch.defaultProps = {\n  showLoading: true,\n};\n\nexport default TooltipFetch;\n","// extracted by mini-css-extract-plugin\nexport default {\"form-outer\":\"style_form-outer__IWUs0__EG6bw\",\"form-drawer\":\"style_form-drawer__uYDXS__EG6bw\",\"table-list\":\"style_table-list__6lp-A__EG6bw\",\"list-item\":\"style_list-item__hVzQa__EG6bw\",\"table-list-inner\":\"style_table-list-inner__uc8DK__EG6bw\",\"table-list-field\":\"style_table-list-field__JSJfB__EG6bw\",\"table-list-header\":\"style_table-list-header__KXvKa__EG6bw\",\"is-req\":\"style_is-req__LfXQf__EG6bw\",\"table-list-extra\":\"style_table-list-extra__faYTK__EG6bw\",\"list-btn\":\"style_list-btn__WKYkm__EG6bw\",\"list-part\":\"style_list-part__Ld0GA__EG6bw\",\"list-item-part\":\"style_list-item-part__MzKP7__EG6bw\",\"money-input\":\"style_money-input__J86Pb__EG6bw\",\"money-description\":\"style_money-description__Gz3p7__EG6bw\",\"components-upload-wrapper\":\"style_components-upload-wrapper__Ir0gz__EG6bw\",\"textarea-wrapped-component\":\"style_textarea-wrapped-component__r1oKc__EG6bw\",\"helper-guide-field\":\"style_helper-guide-field__Wke3w__EG6bw\",\"field-tips\":\"style_field-tips__7CIJi__EG6bw\",\"label-hidden\":\"style_label-hidden__FzFEN__EG6bw\",\"error-tip-overlay\":\"style_error-tip-overlay__aNCGc__EG6bw\",\"error-tip-overlay-content\":\"style_error-tip-overlay-content__kDOoQ__EG6bw\"};","var map = {\n\t\"./Binary_Property/ASCII.js\": 75532,\n\t\"./Binary_Property/ASCII_Hex_Digit.js\": 51444,\n\t\"./Binary_Property/Alphabetic.js\": 77946,\n\t\"./Binary_Property/Any.js\": 17375,\n\t\"./Binary_Property/Assigned.js\": 10588,\n\t\"./Binary_Property/Bidi_Control.js\": 98145,\n\t\"./Binary_Property/Bidi_Mirrored.js\": 85184,\n\t\"./Binary_Property/Case_Ignorable.js\": 5004,\n\t\"./Binary_Property/Cased.js\": 14997,\n\t\"./Binary_Property/Changes_When_Casefolded.js\": 36358,\n\t\"./Binary_Property/Changes_When_Casemapped.js\": 82477,\n\t\"./Binary_Property/Changes_When_Lowercased.js\": 64655,\n\t\"./Binary_Property/Changes_When_NFKC_Casefolded.js\": 96616,\n\t\"./Binary_Property/Changes_When_Titlecased.js\": 81356,\n\t\"./Binary_Property/Changes_When_Uppercased.js\": 30783,\n\t\"./Binary_Property/Dash.js\": 1026,\n\t\"./Binary_Property/Default_Ignorable_Code_Point.js\": 64935,\n\t\"./Binary_Property/Deprecated.js\": 29263,\n\t\"./Binary_Property/Diacritic.js\": 66789,\n\t\"./Binary_Property/Emoji.js\": 25716,\n\t\"./Binary_Property/Emoji_Component.js\": 20910,\n\t\"./Binary_Property/Emoji_Modifier.js\": 26235,\n\t\"./Binary_Property/Emoji_Modifier_Base.js\": 51581,\n\t\"./Binary_Property/Emoji_Presentation.js\": 34994,\n\t\"./Binary_Property/Extended_Pictographic.js\": 79834,\n\t\"./Binary_Property/Extender.js\": 8023,\n\t\"./Binary_Property/Grapheme_Base.js\": 22933,\n\t\"./Binary_Property/Grapheme_Extend.js\": 26243,\n\t\"./Binary_Property/Hex_Digit.js\": 42892,\n\t\"./Binary_Property/IDS_Binary_Operator.js\": 37799,\n\t\"./Binary_Property/IDS_Trinary_Operator.js\": 33874,\n\t\"./Binary_Property/ID_Continue.js\": 79406,\n\t\"./Binary_Property/ID_Start.js\": 62960,\n\t\"./Binary_Property/Ideographic.js\": 20954,\n\t\"./Binary_Property/Join_Control.js\": 45293,\n\t\"./Binary_Property/Logical_Order_Exception.js\": 9786,\n\t\"./Binary_Property/Lowercase.js\": 11337,\n\t\"./Binary_Property/Math.js\": 43877,\n\t\"./Binary_Property/Noncharacter_Code_Point.js\": 64291,\n\t\"./Binary_Property/Pattern_Syntax.js\": 14930,\n\t\"./Binary_Property/Pattern_White_Space.js\": 43288,\n\t\"./Binary_Property/Quotation_Mark.js\": 16178,\n\t\"./Binary_Property/Radical.js\": 7120,\n\t\"./Binary_Property/Regional_Indicator.js\": 84863,\n\t\"./Binary_Property/Sentence_Terminal.js\": 63181,\n\t\"./Binary_Property/Soft_Dotted.js\": 79478,\n\t\"./Binary_Property/Terminal_Punctuation.js\": 59460,\n\t\"./Binary_Property/Unified_Ideograph.js\": 61232,\n\t\"./Binary_Property/Uppercase.js\": 19003,\n\t\"./Binary_Property/Variation_Selector.js\": 6260,\n\t\"./Binary_Property/White_Space.js\": 8216,\n\t\"./Binary_Property/XID_Continue.js\": 45176,\n\t\"./Binary_Property/XID_Start.js\": 50050,\n\t\"./General_Category/Cased_Letter.js\": 85858,\n\t\"./General_Category/Close_Punctuation.js\": 87219,\n\t\"./General_Category/Connector_Punctuation.js\": 57463,\n\t\"./General_Category/Control.js\": 7351,\n\t\"./General_Category/Currency_Symbol.js\": 74040,\n\t\"./General_Category/Dash_Punctuation.js\": 32834,\n\t\"./General_Category/Decimal_Number.js\": 13387,\n\t\"./General_Category/Enclosing_Mark.js\": 14404,\n\t\"./General_Category/Final_Punctuation.js\": 83326,\n\t\"./General_Category/Format.js\": 32241,\n\t\"./General_Category/Initial_Punctuation.js\": 58682,\n\t\"./General_Category/Letter.js\": 85543,\n\t\"./General_Category/Letter_Number.js\": 8279,\n\t\"./General_Category/Line_Separator.js\": 56370,\n\t\"./General_Category/Lowercase_Letter.js\": 22788,\n\t\"./General_Category/Mark.js\": 12454,\n\t\"./General_Category/Math_Symbol.js\": 18715,\n\t\"./General_Category/Modifier_Letter.js\": 33569,\n\t\"./General_Category/Modifier_Symbol.js\": 18769,\n\t\"./General_Category/Nonspacing_Mark.js\": 57184,\n\t\"./General_Category/Number.js\": 49659,\n\t\"./General_Category/Open_Punctuation.js\": 51584,\n\t\"./General_Category/Other.js\": 89954,\n\t\"./General_Category/Other_Letter.js\": 3291,\n\t\"./General_Category/Other_Number.js\": 33772,\n\t\"./General_Category/Other_Punctuation.js\": 25673,\n\t\"./General_Category/Other_Symbol.js\": 68365,\n\t\"./General_Category/Paragraph_Separator.js\": 69731,\n\t\"./General_Category/Private_Use.js\": 79735,\n\t\"./General_Category/Punctuation.js\": 58705,\n\t\"./General_Category/Separator.js\": 52649,\n\t\"./General_Category/Space_Separator.js\": 55051,\n\t\"./General_Category/Spacing_Mark.js\": 26962,\n\t\"./General_Category/Surrogate.js\": 76985,\n\t\"./General_Category/Symbol.js\": 39215,\n\t\"./General_Category/Titlecase_Letter.js\": 52830,\n\t\"./General_Category/Unassigned.js\": 31860,\n\t\"./General_Category/Uppercase_Letter.js\": 32420,\n\t\"./Script/Adlam.js\": 66093,\n\t\"./Script/Ahom.js\": 4112,\n\t\"./Script/Anatolian_Hieroglyphs.js\": 4830,\n\t\"./Script/Arabic.js\": 56594,\n\t\"./Script/Armenian.js\": 56519,\n\t\"./Script/Avestan.js\": 31533,\n\t\"./Script/Balinese.js\": 56955,\n\t\"./Script/Bamum.js\": 949,\n\t\"./Script/Bassa_Vah.js\": 49197,\n\t\"./Script/Batak.js\": 16311,\n\t\"./Script/Bengali.js\": 75582,\n\t\"./Script/Bhaiksuki.js\": 31873,\n\t\"./Script/Bopomofo.js\": 27201,\n\t\"./Script/Brahmi.js\": 57032,\n\t\"./Script/Braille.js\": 36662,\n\t\"./Script/Buginese.js\": 90080,\n\t\"./Script/Buhid.js\": 8986,\n\t\"./Script/Canadian_Aboriginal.js\": 98841,\n\t\"./Script/Carian.js\": 12377,\n\t\"./Script/Caucasian_Albanian.js\": 12080,\n\t\"./Script/Chakma.js\": 50406,\n\t\"./Script/Cham.js\": 68570,\n\t\"./Script/Cherokee.js\": 45468,\n\t\"./Script/Chorasmian.js\": 32553,\n\t\"./Script/Common.js\": 4351,\n\t\"./Script/Coptic.js\": 54444,\n\t\"./Script/Cuneiform.js\": 57930,\n\t\"./Script/Cypriot.js\": 97939,\n\t\"./Script/Cypro_Minoan.js\": 98567,\n\t\"./Script/Cyrillic.js\": 77624,\n\t\"./Script/Deseret.js\": 3822,\n\t\"./Script/Devanagari.js\": 13928,\n\t\"./Script/Dives_Akuru.js\": 51445,\n\t\"./Script/Dogra.js\": 69118,\n\t\"./Script/Duployan.js\": 40480,\n\t\"./Script/Egyptian_Hieroglyphs.js\": 96328,\n\t\"./Script/Elbasan.js\": 44125,\n\t\"./Script/Elymaic.js\": 72829,\n\t\"./Script/Ethiopic.js\": 86161,\n\t\"./Script/Georgian.js\": 28078,\n\t\"./Script/Glagolitic.js\": 24582,\n\t\"./Script/Gothic.js\": 52023,\n\t\"./Script/Grantha.js\": 28325,\n\t\"./Script/Greek.js\": 34867,\n\t\"./Script/Gujarati.js\": 19116,\n\t\"./Script/Gunjala_Gondi.js\": 52943,\n\t\"./Script/Gurmukhi.js\": 74637,\n\t\"./Script/Han.js\": 85069,\n\t\"./Script/Hangul.js\": 18678,\n\t\"./Script/Hanifi_Rohingya.js\": 44740,\n\t\"./Script/Hanunoo.js\": 68335,\n\t\"./Script/Hatran.js\": 96501,\n\t\"./Script/Hebrew.js\": 88282,\n\t\"./Script/Hiragana.js\": 99258,\n\t\"./Script/Imperial_Aramaic.js\": 41152,\n\t\"./Script/Inherited.js\": 67083,\n\t\"./Script/Inscriptional_Pahlavi.js\": 4010,\n\t\"./Script/Inscriptional_Parthian.js\": 14799,\n\t\"./Script/Javanese.js\": 95393,\n\t\"./Script/Kaithi.js\": 51885,\n\t\"./Script/Kannada.js\": 34217,\n\t\"./Script/Katakana.js\": 8648,\n\t\"./Script/Kayah_Li.js\": 50027,\n\t\"./Script/Kharoshthi.js\": 24297,\n\t\"./Script/Khitan_Small_Script.js\": 18823,\n\t\"./Script/Khmer.js\": 55173,\n\t\"./Script/Khojki.js\": 15817,\n\t\"./Script/Khudawadi.js\": 81663,\n\t\"./Script/Lao.js\": 74571,\n\t\"./Script/Latin.js\": 37777,\n\t\"./Script/Lepcha.js\": 80994,\n\t\"./Script/Limbu.js\": 89187,\n\t\"./Script/Linear_A.js\": 32118,\n\t\"./Script/Linear_B.js\": 72916,\n\t\"./Script/Lisu.js\": 62118,\n\t\"./Script/Lycian.js\": 59441,\n\t\"./Script/Lydian.js\": 64613,\n\t\"./Script/Mahajani.js\": 81374,\n\t\"./Script/Makasar.js\": 48237,\n\t\"./Script/Malayalam.js\": 42066,\n\t\"./Script/Mandaic.js\": 67604,\n\t\"./Script/Manichaean.js\": 44323,\n\t\"./Script/Marchen.js\": 35527,\n\t\"./Script/Masaram_Gondi.js\": 70530,\n\t\"./Script/Medefaidrin.js\": 38611,\n\t\"./Script/Meetei_Mayek.js\": 23493,\n\t\"./Script/Mende_Kikakui.js\": 15205,\n\t\"./Script/Meroitic_Cursive.js\": 57098,\n\t\"./Script/Meroitic_Hieroglyphs.js\": 61538,\n\t\"./Script/Miao.js\": 9876,\n\t\"./Script/Modi.js\": 72648,\n\t\"./Script/Mongolian.js\": 64227,\n\t\"./Script/Mro.js\": 57145,\n\t\"./Script/Multani.js\": 78500,\n\t\"./Script/Myanmar.js\": 91444,\n\t\"./Script/Nabataean.js\": 85102,\n\t\"./Script/Nandinagari.js\": 53178,\n\t\"./Script/New_Tai_Lue.js\": 98123,\n\t\"./Script/Newa.js\": 68179,\n\t\"./Script/Nko.js\": 84662,\n\t\"./Script/Nushu.js\": 31157,\n\t\"./Script/Nyiakeng_Puachue_Hmong.js\": 88999,\n\t\"./Script/Ogham.js\": 65835,\n\t\"./Script/Ol_Chiki.js\": 28906,\n\t\"./Script/Old_Hungarian.js\": 28429,\n\t\"./Script/Old_Italic.js\": 60965,\n\t\"./Script/Old_North_Arabian.js\": 88198,\n\t\"./Script/Old_Permic.js\": 69152,\n\t\"./Script/Old_Persian.js\": 95404,\n\t\"./Script/Old_Sogdian.js\": 60266,\n\t\"./Script/Old_South_Arabian.js\": 72607,\n\t\"./Script/Old_Turkic.js\": 5664,\n\t\"./Script/Old_Uyghur.js\": 2901,\n\t\"./Script/Oriya.js\": 35643,\n\t\"./Script/Osage.js\": 63193,\n\t\"./Script/Osmanya.js\": 97392,\n\t\"./Script/Pahawh_Hmong.js\": 81893,\n\t\"./Script/Palmyrene.js\": 26396,\n\t\"./Script/Pau_Cin_Hau.js\": 42514,\n\t\"./Script/Phags_Pa.js\": 72822,\n\t\"./Script/Phoenician.js\": 93197,\n\t\"./Script/Psalter_Pahlavi.js\": 71083,\n\t\"./Script/Rejang.js\": 56278,\n\t\"./Script/Runic.js\": 78645,\n\t\"./Script/Samaritan.js\": 41896,\n\t\"./Script/Saurashtra.js\": 19571,\n\t\"./Script/Sharada.js\": 19180,\n\t\"./Script/Shavian.js\": 87752,\n\t\"./Script/Siddham.js\": 4229,\n\t\"./Script/SignWriting.js\": 41938,\n\t\"./Script/Sinhala.js\": 12142,\n\t\"./Script/Sogdian.js\": 28681,\n\t\"./Script/Sora_Sompeng.js\": 50303,\n\t\"./Script/Soyombo.js\": 17239,\n\t\"./Script/Sundanese.js\": 18671,\n\t\"./Script/Syloti_Nagri.js\": 80230,\n\t\"./Script/Syriac.js\": 69185,\n\t\"./Script/Tagalog.js\": 15815,\n\t\"./Script/Tagbanwa.js\": 29743,\n\t\"./Script/Tai_Le.js\": 79935,\n\t\"./Script/Tai_Tham.js\": 41089,\n\t\"./Script/Tai_Viet.js\": 22170,\n\t\"./Script/Takri.js\": 29859,\n\t\"./Script/Tamil.js\": 41930,\n\t\"./Script/Tangsa.js\": 42437,\n\t\"./Script/Tangut.js\": 47555,\n\t\"./Script/Telugu.js\": 42343,\n\t\"./Script/Thaana.js\": 25252,\n\t\"./Script/Thai.js\": 45968,\n\t\"./Script/Tibetan.js\": 21918,\n\t\"./Script/Tifinagh.js\": 19170,\n\t\"./Script/Tirhuta.js\": 97974,\n\t\"./Script/Toto.js\": 68147,\n\t\"./Script/Ugaritic.js\": 34894,\n\t\"./Script/Vai.js\": 72228,\n\t\"./Script/Vithkuqi.js\": 56545,\n\t\"./Script/Wancho.js\": 30314,\n\t\"./Script/Warang_Citi.js\": 94654,\n\t\"./Script/Yezidi.js\": 56142,\n\t\"./Script/Yi.js\": 50753,\n\t\"./Script/Zanabazar_Square.js\": 1103,\n\t\"./Script_Extensions/Adlam.js\": 98624,\n\t\"./Script_Extensions/Ahom.js\": 98290,\n\t\"./Script_Extensions/Anatolian_Hieroglyphs.js\": 89446,\n\t\"./Script_Extensions/Arabic.js\": 63681,\n\t\"./Script_Extensions/Armenian.js\": 91916,\n\t\"./Script_Extensions/Avestan.js\": 95666,\n\t\"./Script_Extensions/Balinese.js\": 90157,\n\t\"./Script_Extensions/Bamum.js\": 4370,\n\t\"./Script_Extensions/Bassa_Vah.js\": 29137,\n\t\"./Script_Extensions/Batak.js\": 57402,\n\t\"./Script_Extensions/Bengali.js\": 1489,\n\t\"./Script_Extensions/Bhaiksuki.js\": 10366,\n\t\"./Script_Extensions/Bopomofo.js\": 87650,\n\t\"./Script_Extensions/Brahmi.js\": 2100,\n\t\"./Script_Extensions/Braille.js\": 30808,\n\t\"./Script_Extensions/Buginese.js\": 27468,\n\t\"./Script_Extensions/Buhid.js\": 3105,\n\t\"./Script_Extensions/Canadian_Aboriginal.js\": 75109,\n\t\"./Script_Extensions/Carian.js\": 90111,\n\t\"./Script_Extensions/Caucasian_Albanian.js\": 26662,\n\t\"./Script_Extensions/Chakma.js\": 82098,\n\t\"./Script_Extensions/Cham.js\": 82910,\n\t\"./Script_Extensions/Cherokee.js\": 12874,\n\t\"./Script_Extensions/Chorasmian.js\": 91749,\n\t\"./Script_Extensions/Common.js\": 71401,\n\t\"./Script_Extensions/Coptic.js\": 36895,\n\t\"./Script_Extensions/Cuneiform.js\": 27605,\n\t\"./Script_Extensions/Cypriot.js\": 4059,\n\t\"./Script_Extensions/Cypro_Minoan.js\": 24584,\n\t\"./Script_Extensions/Cyrillic.js\": 69923,\n\t\"./Script_Extensions/Deseret.js\": 9694,\n\t\"./Script_Extensions/Devanagari.js\": 9032,\n\t\"./Script_Extensions/Dives_Akuru.js\": 28084,\n\t\"./Script_Extensions/Dogra.js\": 8793,\n\t\"./Script_Extensions/Duployan.js\": 2194,\n\t\"./Script_Extensions/Egyptian_Hieroglyphs.js\": 60562,\n\t\"./Script_Extensions/Elbasan.js\": 58465,\n\t\"./Script_Extensions/Elymaic.js\": 7064,\n\t\"./Script_Extensions/Ethiopic.js\": 62607,\n\t\"./Script_Extensions/Georgian.js\": 39691,\n\t\"./Script_Extensions/Glagolitic.js\": 12863,\n\t\"./Script_Extensions/Gothic.js\": 24612,\n\t\"./Script_Extensions/Grantha.js\": 66821,\n\t\"./Script_Extensions/Greek.js\": 51689,\n\t\"./Script_Extensions/Gujarati.js\": 29766,\n\t\"./Script_Extensions/Gunjala_Gondi.js\": 39903,\n\t\"./Script_Extensions/Gurmukhi.js\": 76135,\n\t\"./Script_Extensions/Han.js\": 1419,\n\t\"./Script_Extensions/Hangul.js\": 40150,\n\t\"./Script_Extensions/Hanifi_Rohingya.js\": 3870,\n\t\"./Script_Extensions/Hanunoo.js\": 19047,\n\t\"./Script_Extensions/Hatran.js\": 32762,\n\t\"./Script_Extensions/Hebrew.js\": 27551,\n\t\"./Script_Extensions/Hiragana.js\": 85355,\n\t\"./Script_Extensions/Imperial_Aramaic.js\": 6978,\n\t\"./Script_Extensions/Inherited.js\": 68536,\n\t\"./Script_Extensions/Inscriptional_Pahlavi.js\": 31942,\n\t\"./Script_Extensions/Inscriptional_Parthian.js\": 43388,\n\t\"./Script_Extensions/Javanese.js\": 24024,\n\t\"./Script_Extensions/Kaithi.js\": 20490,\n\t\"./Script_Extensions/Kannada.js\": 41658,\n\t\"./Script_Extensions/Katakana.js\": 18834,\n\t\"./Script_Extensions/Kayah_Li.js\": 5446,\n\t\"./Script_Extensions/Kharoshthi.js\": 75494,\n\t\"./Script_Extensions/Khitan_Small_Script.js\": 22916,\n\t\"./Script_Extensions/Khmer.js\": 42,\n\t\"./Script_Extensions/Khojki.js\": 74447,\n\t\"./Script_Extensions/Khudawadi.js\": 94509,\n\t\"./Script_Extensions/Lao.js\": 27981,\n\t\"./Script_Extensions/Latin.js\": 94562,\n\t\"./Script_Extensions/Lepcha.js\": 58683,\n\t\"./Script_Extensions/Limbu.js\": 31586,\n\t\"./Script_Extensions/Linear_A.js\": 2578,\n\t\"./Script_Extensions/Linear_B.js\": 87546,\n\t\"./Script_Extensions/Lisu.js\": 1399,\n\t\"./Script_Extensions/Lycian.js\": 59825,\n\t\"./Script_Extensions/Lydian.js\": 42311,\n\t\"./Script_Extensions/Mahajani.js\": 44476,\n\t\"./Script_Extensions/Makasar.js\": 90821,\n\t\"./Script_Extensions/Malayalam.js\": 32909,\n\t\"./Script_Extensions/Mandaic.js\": 5412,\n\t\"./Script_Extensions/Manichaean.js\": 46352,\n\t\"./Script_Extensions/Marchen.js\": 70013,\n\t\"./Script_Extensions/Masaram_Gondi.js\": 46685,\n\t\"./Script_Extensions/Medefaidrin.js\": 64118,\n\t\"./Script_Extensions/Meetei_Mayek.js\": 52762,\n\t\"./Script_Extensions/Mende_Kikakui.js\": 87389,\n\t\"./Script_Extensions/Meroitic_Cursive.js\": 38392,\n\t\"./Script_Extensions/Meroitic_Hieroglyphs.js\": 2014,\n\t\"./Script_Extensions/Miao.js\": 44482,\n\t\"./Script_Extensions/Modi.js\": 44336,\n\t\"./Script_Extensions/Mongolian.js\": 58477,\n\t\"./Script_Extensions/Mro.js\": 62837,\n\t\"./Script_Extensions/Multani.js\": 75361,\n\t\"./Script_Extensions/Myanmar.js\": 65928,\n\t\"./Script_Extensions/Nabataean.js\": 75292,\n\t\"./Script_Extensions/Nandinagari.js\": 42325,\n\t\"./Script_Extensions/New_Tai_Lue.js\": 21222,\n\t\"./Script_Extensions/Newa.js\": 66422,\n\t\"./Script_Extensions/Nko.js\": 1793,\n\t\"./Script_Extensions/Nushu.js\": 38890,\n\t\"./Script_Extensions/Nyiakeng_Puachue_Hmong.js\": 80211,\n\t\"./Script_Extensions/Ogham.js\": 6507,\n\t\"./Script_Extensions/Ol_Chiki.js\": 60772,\n\t\"./Script_Extensions/Old_Hungarian.js\": 70010,\n\t\"./Script_Extensions/Old_Italic.js\": 50060,\n\t\"./Script_Extensions/Old_North_Arabian.js\": 69276,\n\t\"./Script_Extensions/Old_Permic.js\": 4263,\n\t\"./Script_Extensions/Old_Persian.js\": 61069,\n\t\"./Script_Extensions/Old_Sogdian.js\": 10952,\n\t\"./Script_Extensions/Old_South_Arabian.js\": 12828,\n\t\"./Script_Extensions/Old_Turkic.js\": 16302,\n\t\"./Script_Extensions/Old_Uyghur.js\": 65388,\n\t\"./Script_Extensions/Oriya.js\": 31564,\n\t\"./Script_Extensions/Osage.js\": 50994,\n\t\"./Script_Extensions/Osmanya.js\": 69510,\n\t\"./Script_Extensions/Pahawh_Hmong.js\": 86858,\n\t\"./Script_Extensions/Palmyrene.js\": 33003,\n\t\"./Script_Extensions/Pau_Cin_Hau.js\": 864,\n\t\"./Script_Extensions/Phags_Pa.js\": 9785,\n\t\"./Script_Extensions/Phoenician.js\": 82175,\n\t\"./Script_Extensions/Psalter_Pahlavi.js\": 19664,\n\t\"./Script_Extensions/Rejang.js\": 8733,\n\t\"./Script_Extensions/Runic.js\": 18734,\n\t\"./Script_Extensions/Samaritan.js\": 4559,\n\t\"./Script_Extensions/Saurashtra.js\": 80845,\n\t\"./Script_Extensions/Sharada.js\": 86308,\n\t\"./Script_Extensions/Shavian.js\": 28266,\n\t\"./Script_Extensions/Siddham.js\": 9266,\n\t\"./Script_Extensions/SignWriting.js\": 74194,\n\t\"./Script_Extensions/Sinhala.js\": 53576,\n\t\"./Script_Extensions/Sogdian.js\": 22957,\n\t\"./Script_Extensions/Sora_Sompeng.js\": 49587,\n\t\"./Script_Extensions/Soyombo.js\": 61438,\n\t\"./Script_Extensions/Sundanese.js\": 7223,\n\t\"./Script_Extensions/Syloti_Nagri.js\": 68019,\n\t\"./Script_Extensions/Syriac.js\": 75049,\n\t\"./Script_Extensions/Tagalog.js\": 79919,\n\t\"./Script_Extensions/Tagbanwa.js\": 20598,\n\t\"./Script_Extensions/Tai_Le.js\": 28245,\n\t\"./Script_Extensions/Tai_Tham.js\": 99975,\n\t\"./Script_Extensions/Tai_Viet.js\": 66389,\n\t\"./Script_Extensions/Takri.js\": 48036,\n\t\"./Script_Extensions/Tamil.js\": 85276,\n\t\"./Script_Extensions/Tangsa.js\": 3642,\n\t\"./Script_Extensions/Tangut.js\": 67951,\n\t\"./Script_Extensions/Telugu.js\": 2705,\n\t\"./Script_Extensions/Thaana.js\": 72203,\n\t\"./Script_Extensions/Thai.js\": 21043,\n\t\"./Script_Extensions/Tibetan.js\": 18284,\n\t\"./Script_Extensions/Tifinagh.js\": 92160,\n\t\"./Script_Extensions/Tirhuta.js\": 15490,\n\t\"./Script_Extensions/Toto.js\": 23341,\n\t\"./Script_Extensions/Ugaritic.js\": 36291,\n\t\"./Script_Extensions/Vai.js\": 54048,\n\t\"./Script_Extensions/Vithkuqi.js\": 82609,\n\t\"./Script_Extensions/Wancho.js\": 21984,\n\t\"./Script_Extensions/Warang_Citi.js\": 43314,\n\t\"./Script_Extensions/Yezidi.js\": 31655,\n\t\"./Script_Extensions/Yi.js\": 38849,\n\t\"./Script_Extensions/Zanabazar_Square.js\": 27156,\n\t\"./index.js\": 14834,\n\t\"./unicode-version.js\": 44146\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7771;"],"names":["name","summary","api","example","isFull","className","style","list","title","description","code","scope","packageName","component","locale","en-US","zh-CN","GroupItem","_ref","groupName","selected","onChange","isCheckedAll","useMemo","every","x","some","it","_jsx","_Fragment","children","_jsxs","Row","gutter","justify","Col","Checkbox","checked","e","newSelected","target","union","slice","map","item","filter","FormattedMessage","id","moduleName","defaultMessage","span","Space","classnames","wrap","size","push","titleText","RightOptions","_ref2","options","flex","ExportTableInner","forwardRef","_ref3","ref","columns","data","selectedColumns","setSelectColumns","useState","columnsData","Array","isArray","JSON","parse","length","hasOwnProperty","exportHidden","hidden","allColumns","groupBy","visibleColumns","columnsMap","Map","get","useImperativeHandle","IntlProvider","importMessages","ReactSortable","dragClass","ghostClass","forceFallback","setList","setTimeout","animation","delayOnTouchStart","delay","index","List","Item","align","Icon","type","onClick","event","preventDefault","stopPropagation","direction","split","Divider","Object","keys","defaultProps","withExportTable","WrappedComponent","props","tableProps","omit","tableRef","useRef","saveDataApi","featureId","exportTableServerApis","usePreset","_saveDataApi","modal","useModal","async","Component","FetchWrappedComponent","withFetch","getDataApi","_getDataApi","error","withExportTableColumnsData","_ref4","Features","renderFeatureConfig","_ref5","hiddenColumns","indexOf","footer","footerButtons","_tableRef$current","current","message","selectedTip","saveResult","getCache","delByCacheName","concat","onExport","downloadBlobFile","pick","Button","actionText","Calendar","FullCalendar","getByteLen","str","len","i","charCodeAt","ContentComponent","main","disabled","date","candidateName","start","end","_start","dayjs","format","_end","_end_tooltip","timeText","_timeTextTooltip","contentHtml","showStrLength","Tooltip","overlayClassName","content","placement","timezone","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","scrollGridPlugin","initialView","aspectRatio","weekends","slotEventOverlap","displayEventEnd","editable","firstDay","buttonText","today","month","dayMinWidth","headerToolbar","center","left","right","height","handleWindowResize","eventContent","eventInfo","arguments","undefined","_def","showOther","num","dateClick","eventClick","initialDate","transformEvents","events","onClickOtherItem","arr","Boolean","bookable","groupList","startOf","newEvents","forEach","key","_newEvents","orderTimeArr","orderBy","merge","console","log","flatten","context","createContext","Provider","HighlightProvider","highlightClassName","value","caseSensitive","Highlight","tagName","useContext","renderStr","toString","allWordsRe","word","replace","match","join","regExp","RegExp","innerMatch","createElement","dangerouslySetInnerHTML","__html","HistoryStore","storeName","maxLength","label","onSelect","zIndex","getPopupContainer","localStorage","getItem","open","setOpen","openHistory","useCallback","storeNameRef","useEffect","setItem","appendHistory","newList","dropWhile","splice","uniqBy","close","outerRef","useClickOutside","popoverChildrenRef","popoverContentRef","contains","onSelectRef","width","setWidth","useLayoutEffect","callback","clientWidth","resizeObserver","ResizeObserver","observe","mutationObserver","MutationObserver","subtree","childList","disconnect","Popover","transitionName","arrow","StateTag","text","setOnSelect","ButtonText","LEVEL","NotificationItem","level","groupLength","subtitle","link","setGlobal","useGlobalContext","apis","ajax","isLoading","useLoading","_apis$notification","resData","notification","read","assign","ids","findIndex","Math","min","range","reverse","number","Typography","Text","ellipsis","Content","labelAlign","LoadingButton","_apis$notification2","window","Notification","global","headOptionRef","headOptionHeight","setHeadOptionHeight","_headOptionRef$curren","clientHeight","expand","group","_apis$notification3","SimpleBar","QueueAnim","leaveReverse","duration","interval","groupKey","_groupList$filter","firstItem","first","base64ToFile","base64","fileName","suffix","bstr","atob","n","u8arr","Uint8Array","File","test","toolbarOptions","header","color","background","script","indent","getText","dom","document","innerHTML","innerText","getUrl","url","a","href","ReactRichEditor","readOnly","preview","onBlur","placeholder","hideToolbar","border","domain","folder","maxHeight","useControlValue","isReadyRef","reactQuillRef","useSimulationBlur","ossApi","ossToStatic","urlToOss","formatValue","prototype","call","ops","blocks","insert","attributes","bold","image","file","location","origin","filename","items","apply","extension","substring","lastIndexOf","formatEditorJS","loadImage","src","obj","searchParams","URLSearchParams","search","searchId","pathname","params","showError","linkSrc","transformData","ensureSlash","_url","imageHandler","input","setAttribute","click","onchange","files","hide","loading","then","_reactQuillRef$curren","quill","getEditor","cursorPosition","getSelection","insertEmbed","setSelection","updateLink","_ref$current","_ref$current2","linkNodes","querySelectorAll","linkNode","Image","isSameOrigin","host","hostname","isNeedUpdate","update","onerror","uniqueId","Date","getTime","isHref","linkNodeLinks","modules","toolbar","container","handlers","timer","setInterval","editor","clearInterval","isNaN","parseFloat","ReactQuill","theme","delta","source","editorContent","getHTML","getContents","result","nodeSrc","updateEditor","defaultValue","useOnBlur","hooks","RichEditor","render","Field","field","PUBLIC_URL","process","remote","tpl","defaultVersion","remoteLoaderPreset","remotes","default","axios","validateStatus","fetchPreset","Spin","position","padding","transform","Result","status","empty","Empty","transformResponse","response","msg","results","ExampleRoutes","createEntry","preset","themeToken","HashRouter","paths","path","readme","ReactDOM","getElementById","React","App","colorPrimary","withConfirm","ConfirmComponent","createWithIntl","isDelete","onCancel","showCancel","cancelText","isModal","okText","getContainer","formatMessage","useIntl","cancelButton","confirmButton","danger","wrapClassName","Popconfirm","onConfirm","okButtonProps","ConfirmLink","Link","Label","computed","getBoundingClientRect","col","labelWidthListRef","maxLabelWidth","setMaxLabelWidth","display","block","minWidth","textAlign","max","dataSource","colItem","colIndex","_colItem","itemIndex","res","download","element","MouseEvent","dispatchEvent","Error","blob","Blob","URL","createObjectURL","responseType","useDownload","currentApis","onError","onSuccess","useApp","baseApis","downLoading","setDownLoading","refresh","fetchProps","useFetch","oss","auto","useRefCallback","successHandler","catch","Download","icon","useFileModal","originName","openDownload","modalProps","success","FilePreview","OptionButtons","hasPreview","getPermission","formModal","useFormModal","fileModal","onPreview","modalApi","formProps","dropRight","onSubmit","onEdit","formData","last","FormInfo","column","Input","rule","DownloadButton","ConfirmButton","onDelete","infoItemRenders","AntdList","rowKey","uuid","renderItem","FileType","bordered","userName","withOSSFile","FileLink","HtmlInnerPreview","createWithFetch","domDocument","DOMParser","parseFromString","el","parentElement","removeChild","scriptPath","getPublicPath","head","appendChild","srcdoc","documentElement","outerHTML","iFrameResize","checkOrigin","frameBorder","maxWidth","OfficePreviewInner","cache","fileList","PreviewComponent","typeFormatComponent","_createElement","propsApis","previewOffice","PdfPreview","memo","scale","rotate","numPages","setNumPages","pdfjs","GlobalWorkerOptions","workerSrc","useResize","Document","standardFontDataUrl","cMapUrl","cMapPacked","noData","onLoadSuccess","onLoadError","onSourceError","from","Page","pageNumber","renderAnnotationLayer","renderTextLayer","autoSize","setText","setLoading","setError","TextEscape","subTitle","handlerLoad","handlerError","addEventListener","removeEventListener","alt","typeFormat","_path","toLowerCase","txt","TextPreview","pdf","ImagePreview","html","HtmlPreview","office","OfficePreview","unknown","UnknownPreview","OSSFilePreview","defaultColumns","useFlexBox","setColumn","columnRef","find","isEqual","FlexBox","outerClassName","grid","FlexBoxFetch","getFetchApi","dataFormat","Fetch","isComplete","pageData","ErrorTip","errorRender","groupIndex","currentError","emitter","formState","useFormContext","targetFieldInfo","formStateRef","setCurrentError","addListener","validate","currentField","errMsg","util","compileErrMsg","remove","useErrorMsg","isHover","setIsHover","errorContent","closeHover","querySelector","onMouseEnter","groupArgs","itemRender","contextApi","hiddenRef","isMount","setIsMount","targetProps","componentProps","ComponentItem","isBlock","innerComponent","setExtraProps","_len","args","_key","inner","createPortal","tips","labelHidden","Fragment","SetPreset","isPreset","setIsPreset","formInfo","formPreset","Form","helperGuideName","lang","FormLangProvider","InfoPage","HelperGuideProvider","ReactForm","defaultFooterButtons","ButtonComponent","CancelButton","SubmitButton","autoClose","computedCommonProps","withDecorator","innerRender","_formProps","Drawer","useFormDrawer","drawer","useDrawer","FormDrawerButton","formDrawer","FetchButton","modalFunc","gap","flexBoxRef","flexBoxColumn","renderInner","FieldList","round","Part","Number","isInteger","openApi","Consumer","useFormLang","localeModuleName","Modal","FormModalButton","StepsContent","setCurrent","setStepData","stepData","currentItem","Steps","newStepData","useSteps","_formProps$data","isLastStep","createSteps","FormModal","useFormStepModal","FormStepModalButton","useReactContext","useGroup","HelperGuide","addText","minLength","isUnshift","defaultLength","beforeAdd","afterDelete","listRender","itemTitle","outer","renderChildren","groupRef","cloneElement","allowAdd","add","onAdd","GroupList","onRemove","formInfoProps","extra","values","createValueWithMaxLength","single","setValue","newValue","renderDisplayLabel","mapping","onClose","mappingItem","Tag","closable","ModalContent","propsValue","showSelectedTag","renderSelectedContent","propsValueRef","modalOpen","setModalOpen","setValueWithMaxLength","PopupContent","inputContent","overlayWidth","onOpenChange","trigger","DisplayLabel","setFetchApi","fetchApi","hover","setHover","modalRef","popupRef","selectInnerContext","valueState","isPopup","inputContentRender","fetchApiRef","_ref6","onMouseOver","onMouseOut","modalSize","disabledScroller","SelectInnerInput","_ref7","displayItems","searchText","setSearchText","setMapping","appendMapping","newItems","newMapping","clone","set","transformValue","setValueInType","isNil","valueType","getValueInType","setItems","setData","onRequestSuccess","loader","TableHeader","headers","setHeaders","has","newHeaders","headerRef","useOnChange","useDecorator","AddressSelect","AddressSelectField","AddressEnum","createAddressApi","withAddressApi","AddressInput","inputPlaceholder","AddressInputField","createdField","User","UserField","Table","TableField","AdvancedSelect","AdvancedSelectField","createdList","renderList","createListField","AvatarDisplay","Avatar","UploadButton","withInputFile","gender","shape","defaultAvatar","dataURLtoBlob","dataURL","_arr","mime","ControlAvatarEditor","propsImage","borderRadius","fileSize","accept","renderTips","getApi","intl","baseWidth","setBaseWidth","setImage","setScale","setRotate","previewImg","setPreviewImg","editorRef","getImage","canvas","targetCanvas","targetCtx","getContext","drawImage","toDataURL","makePreviewInner","makePreview","useDebouncedCallback","AvatarEditor","onImageReady","onImageChange","Slider","tooltip","formatter","step","InputFileLink","AntdAvatar","useDropModal","dropModalSize","others","AvatarField","openEditor","ossUpload","dropRef","dropModal","doUpload","finally","defaultTips","Cascader","CascaderField","createTreeUtils","FunctionSelect","FunctionSelectField","Enum","IndustrySelect","IndustrySelectField","InputUpperCaseField","toUpperCase","InputUpperCase","createWithRemoteLoader","remoteModules","formModule","isNotEmpty","MoneyInputField","chineseEmpty","errorDesc","transformMoneyToChinese","moneyFormat","setStatus","inputNumberProps","controls","precision","addonAfter","MAX_NUM","InputNumber","parser","parserValue","val","changeMoneyToChinese","MoneyInput","toChineseCharacter","CountrySelect","CountyFlag","Select","popupMatchSelectWidth","showSearch","filterOption","option","optionLabelProp","country_name_cn","country_code","ab","PhoneNumberField","parsePhone","AsYouType","addonBefore","PhoneNumber","rules","reqIndex","unshift","phoneCode","getCountryCallingCode","PHONE_NUMBER","isValidPhoneNumber","defaultCountry","extract","_Rate","Rate","fieldName","SelectField","useUIDecorator","numberFormat","_value","abs","toFixed","FormField","isError","marginBottom","SalaryInputField","isRange","showMonth","remindUnit","req","_placeholder","_placeholderInput","isTenThousand","isFace","isOther","Compact","includes","borderLeft","borderRight","pointerEvents","v","SalaryField","SalaryInput","_props$rule","TableInner","innerName","headerRender","footerRender","formatData","handleChange","rowKeyValue","dataIndex","dataList","_currentItem","totalCount","changeRef","pagination","record","valueItem","_item$field","_item$field3","_item$field2","getValue","_item$field4","_len2","_key2","mergeList","newData","total","TableInputField","TableInput","TypeDateRangePicker","TypeDateRangePickerField","UploadField","multiple","showUploadList","onSave","uploadingList","onFileSelected","useFileUpload","concurrentCount","previewFileList","tipsText","InputFileButton","FileList","Upload","interceptor","createWithFieldDecorator","decoratorList","TargetComponent","compose","forwardedRef","ForwardComponent","withInputDefaultPlaceholder","withSelectDefaultPlaceholder","withLang","_get","ignoreList","disabledList","fields","getCurrentField","newProps","langName","langLabel","ReactInput","ReactInputNumber","Password","DatePicker","ReactDatePicker","MonthPicker","RangePicker","WeekPicker","TimePicker","ReactTimePicker","DatePickerToday","soFarText","ReactDatePickerToday","RadioGroup","CheckboxGroup","TreeSelect","ReactTreeSelect","ReactSelect","TextArea","ReactTextArea","fieldDecorator","TextField","overflow","reactFormAntd","FormItem","TableList","FormApiButton","FormStepModal","FormDrawer","otherOptions","interceptors","output","use","_value$id","_value$id$split","valueOf","toISOString","ossId","originalName","_olderREQ","RULES","REQ","_olderLEN","LEN","getLocaleMsg","LENGTH_EQUAL","LENGTH_MORE","LENGTH_LESS","ruleName","ARRAY_LENGTH","datePicker","rangeDatePicker","textArea","minRows","maxRows","globalProps","labelTips","HelperGuideLabel","Collapse","CollapseAntd","expandIcon","isActive","Panel","Card","importantInfo","importantInfoType","moreInfo","AntdTooltip","tooltipTitle","TooltipFetch","fetchContent","showLoading","loadingClassName","force","send","webpackContext","webpackContextResolve","__webpack_require__","o","resolve","module","exports"],"sourceRoot":""}