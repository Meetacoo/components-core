{"version":3,"file":"static/js/7384.a3297222.chunk.js","mappings":"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","sources":["webpack://@kne-components/components-core/./src/common/components/Scroller/style.module.scss?7480","common/components/Scroller/index.js","components/Features/index.js","webpack://@kne-components/components-core/./src/components/TablePage/style.module.scss?ceb8","components/TablePage/withTableColumnsWidthChanger/useColumnsSortable.js","components/TablePage/withTableColumnsWidthChanger/withTableColumnsData.js","components/TablePage/withTableColumnsWidthChanger/index.js","components/TablePage/locale/index.js","components/TablePage/withTableColumnsWidthChanger/ColumnsControlContent.js","components/TablePage/withTableColumnsWidthChanger/createColumnsControl.js","components/TablePage/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"scroller\":\"style_scroller__EfuqR__6hOBk\",\"scroller-inner\":\"style_scroller-inner__NJSE0__6hOBk\",\"is-moving\":\"style_is-moving__jGuy0__6hOBk\"};","import { createPortal } from \"react-dom\";\nimport { useEffect, useRef, useState } from \"react\";\nimport useRefCallback from \"@kne/use-ref-callback\";\nimport classnames from \"classnames\";\nimport style from \"./style.module.scss\";\n\nconst ScrollBar = ({ onScroll, getContainer, ...scrollerProps }) => {\n  const startRef = useRef(0);\n  const [moving, setMoving] = useState(false);\n  const movingRef = useRef(moving);\n  movingRef.current = moving;\n  const onScrollRef = useRef(onScroll);\n  onScrollRef.current = onScroll;\n  const ratioRef = useRef(1);\n  ratioRef.current = scrollerProps.width / scrollerProps.innerWidth;\n\n  useEffect(() => {\n    const moveHandler = (e) => {\n      movingRef.current &&\n        onScrollRef.current(ratioRef.current * (e.clientX - startRef.current));\n      startRef.current = e.clientX;\n    };\n    const upHandler = () => {\n      setMoving(false);\n    };\n    document.addEventListener(\"mousemove\", moveHandler, true);\n    document.addEventListener(\"mouseup\", upHandler, true);\n    return () => {\n      document.removeEventListener(\"mousemove\", moveHandler, true);\n      document.removeEventListener(\"mouseup\", upHandler, true);\n    };\n  }, []);\n  return createPortal(\n    scrollerProps.hasScroller ? (\n      <div\n        className={style[\"scroller\"]}\n        style={{\n          left: scrollerProps.left,\n          width: scrollerProps.width,\n          height: 15, //scrollerProps.height\n        }}\n      >\n        <div\n          className={classnames(style[\"scroller-inner\"], {\n            [style[\"is-moving\"]]: moving,\n          })}\n          style={{\n            width: scrollerProps.innerWidth,\n            left: scrollerProps.innerLeft,\n          }}\n          onMouseDown={(e) => {\n            e.preventDefault();\n            startRef.current = e.clientX;\n            setMoving(true);\n          }}\n        />\n      </div>\n    ) : null,\n    getContainer() || document.body\n  );\n};\n\nconst Scroller = ({ className, scroller, getScrollTarget, children }) => {\n  const [scrollerProps, setScrollerProps] = useState({\n    left: 0,\n    width: 0,\n    innerLeft: 0,\n    innerWidth: 0,\n    height: 0,\n    hasScroller: false,\n  });\n  const ref = useRef(null);\n  const getScrollEl = useRefCallback(() => {\n    return ref.current && getScrollTarget(ref.current);\n  });\n  const getContainer = useRef();\n\n  getContainer.current =\n    typeof scroller === \"object\" && typeof scroller.getContainer === \"function\"\n      ? scroller.getContainer\n      : () => null;\n  useEffect(() => {\n    const container = getContainer.current() || document.documentElement;\n    let scrollEl;\n    const computed = () => {\n      if (!scrollEl) {\n        return;\n      }\n      const { left, width, top, height } = scrollEl.getBoundingClientRect();\n      const scrollerHeight =\n        scrollEl.offsetHeight - scrollEl.clientHeight || 15;\n      const innerWidth =\n        (width * scrollEl.clientWidth) / scrollEl.scrollWidth - 6;\n      const innerLeft =\n        (scrollEl.scrollLeft * scrollEl.clientWidth) / scrollEl.scrollWidth + 2;\n      const containerRect = container.getBoundingClientRect();\n      //console.log(endRef.current.vi);\n      setScrollerProps((props) => {\n        return Object.assign({}, props, {\n          left,\n          width,\n          innerLeft,\n          innerWidth,\n          height: scrollerHeight,\n          hasScroller:\n            scrollEl.scrollWidth - scrollEl.clientWidth > 0 &&\n            (container === document.documentElement\n              ? top + height - container.offsetHeight > 0 &&\n                top < container.offsetHeight\n              : top < containerRect.top + containerRect.height &&\n                top + height > containerRect.top + containerRect.height),\n        });\n      });\n    };\n    const resizeObserver = new ResizeObserver(computed);\n    const refResizeObserver = new ResizeObserver(() => {\n      scrollEl = getScrollEl();\n      if (!scrollEl) {\n        return;\n      }\n      resizeObserver.disconnect();\n      computed();\n      Array.from(scrollEl.children).forEach((item) => {\n        resizeObserver.observe(item);\n      });\n      scrollEl.addEventListener(\"scroll\", computed);\n    });\n\n    refResizeObserver.observe(ref.current);\n\n    window.addEventListener(\"scroll\", computed);\n    container.addEventListener(\"scroll\", computed);\n    return () => {\n      window.removeEventListener(\"scroll\", computed);\n      container.removeEventListener(\"scroll\", computed);\n    };\n  }, [getScrollEl]);\n  if (!scroller) {\n    return children;\n  }\n  return (\n    <div\n      className={classnames(style[\"scroller-outer\"], className)}\n      ref={ref}\n      style={{\n        \"--scroller-bar-height\": scrollerProps?.hasScroller ? \"15px\" : \"0px\",\n      }}\n    >\n      {children}\n      <ScrollBar\n        {...scrollerProps}\n        getContainer={getContainer.current}\n        onScroll={(x) => {\n          const scrollEl = getScrollEl();\n          scrollEl.scrollLeft += x;\n        }}\n      />\n    </div>\n  );\n};\n\nScroller.defaultProps = {\n  scroller: true,\n  getScrollTarget: () => document.querySelector(\".simplebar-content-wrapper\"),\n};\n\nexport default Scroller;\n","import { createContext, useContext, useEffect } from \"react\";\nimport { usePreset } from \"@components/Global\";\nimport get from \"lodash/get\";\nimport memoize from \"lodash/memoize\";\nimport omit from \"lodash/omit\";\n\nconst treeTraverse = (data, func, pId) => {\n  if (!data) {\n    return;\n  }\n  if (Array.isArray(data)) {\n    data.forEach((item) => {\n      treeTraverse(item, func, pId);\n    });\n    return;\n  }\n  func(Object.assign({}, omit(data, [\"children\"]), { parentId: pId }));\n  treeTraverse(data.children, func, pId ? pId + \":\" + data.id : data.id);\n};\n\nconst parseProfile = memoize((profile) => {\n  const profileMap = (() => {\n    const output = new Map();\n    treeTraverse(profile, (item) => {\n      output.set(item.parentId ? item.parentId + \":\" + item.id : item.id, item);\n    });\n    return output;\n  })();\n\n  const features = ((profileMap) => {\n    return Array.from(profileMap.keys()).filter((id) => {\n      const item = profileMap.get(id);\n      return !(\n        Array.isArray(item.dependencies) &&\n        item.dependencies.length > 0 &&\n        item.dependencies.some((depId) => {\n          return !profileMap.get(id);\n        })\n      );\n    });\n  })(profileMap);\n\n  return { profile, features, profileMap };\n});\n\nconst useFeatures = () => {\n  const preset = usePreset();\n  const { profile, debug } = get(preset, \"features\", {\n    debug: false,\n    profile: {},\n  });\n  return Object.assign({}, parseProfile(profile), { debug });\n};\n\nconst computedIsPaas = (currentId, { profileMap, features }) => {\n  const target = profileMap.get(currentId);\n  return (\n    features.indexOf(currentId) !== -1 &&\n    target.close !== true &&\n    get(target, \"dependencies\", []).every((id) => {\n      const dependenciesTarget = profileMap.get(currentId);\n      return features.indexOf(id) > -1 && dependenciesTarget.close !== true;\n    })\n  );\n};\n\nconst context = createContext(null);\n\nconst { Provider } = context;\n\nexport const useFeatureCall = (id) => {\n  const { features, profile, profileMap, debug } = useFeatures();\n  const systemId = profile.type === \"system\" ? profile.id : \"root\";\n  const parentId = useContext(context);\n  const currentId = parentId ? parentId + \":\" + id : systemId + \":\" + id;\n  useEffect(() => {\n    if (features && features.length > 0 && debug) {\n      console.log(\n        `[featureId] ${currentId},[state] ${computedIsPaas(currentId, {\n          features,\n          profileMap,\n        })}`,\n        profileMap.get(currentId)\n      );\n    }\n  }, [features, profileMap, debug, currentId]);\n  return {\n    isPass:\n      !(id && features && features.length > 0) ||\n      computedIsPaas(currentId, { features, profileMap }),\n    currentId,\n    feature: profileMap.get(currentId),\n  };\n};\n\nconst Features = ({ id, children }) => {\n  const { isPass, feature, currentId } = useFeatureCall(id);\n  return (\n    <Provider value={currentId}>\n      {typeof children === \"function\"\n        ? children({\n            isPass,\n            options: isPass\n              ? get(feature, \"options\")\n              : get(feature, \"rejectedOptions\"),\n            currentId,\n          })\n        : isPass && children}\n    </Provider>\n  );\n};\n\nexport default Features;\n","// extracted by mini-css-extract-plugin\nexport default {\"loading-container\":\"style_loading-container__tATe2__6hOBk\",\"width-changer\":\"style_width-changer__2ZxQE__6hOBk\",\"table-changer-setting\":\"style_table-changer-setting__vHBi5__6hOBk\",\"width-changer-sign\":\"style_width-changer-sign__JpI-0__6hOBk\",\"columns-control\":\"style_columns-control__Yt34Y__6hOBk\",\"columns-control-content\":\"style_columns-control-content__1wnZG__6hOBk\",\"columns-control-content-title\":\"style_columns-control-content-title__MsQpI__6hOBk\",\"columns-control-content-scroller\":\"style_columns-control-content-scroller__VEy4q__6hOBk\",\"columns-control-content-footer\":\"style_columns-control-content-footer__rvk74__6hOBk\",\"columns-control-content-input\":\"style_columns-control-content-input__fYYyr__6hOBk\",\"columns-control-content-list\":\"style_columns-control-content-list__wepM4__6hOBk\",\"columns-control-content-item\":\"style_columns-control-content-item__1cPXT__6hOBk\",\"is-drag\":\"style_is-drag__HRe9m__6hOBk\",\"columns-control-content-item-icon\":\"style_columns-control-content-item-icon__oku-X__6hOBk\",\"sortable-drag\":\"style_sortable-drag__N6+aC__6hOBk\",\"sortable-ghost\":\"style_sortable-ghost__EbwXI__6hOBk\",\"columns-control-overlay\":\"style_columns-control-overlay__QYEXZ__6hOBk\"};","import { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport useRefCallback from \"@kne/use-ref-callback\";\nimport sum from \"lodash/sum\";\nimport isEqualWith from \"lodash/isEqualWith\";\nimport { getCache } from \"@kne/react-fetch\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport style from \"../style.module.scss\";\nimport cursorPng from \"./cursor.png\";\nimport { usePreset } from \"@components/Global\";\nimport classnames from \"classnames\";\n\nconst elementIsHeadTag = (target) => {\n  if (\n    target.tagName.toUpperCase() === \"TH\" &&\n    [].indexOf.call(target.classList, \"ant-table-cell\") > -1 &&\n    [].indexOf.call(target.classList, \"ant-table-selection-column\") === -1\n  ) {\n    return target;\n  }\n  if (target.parentElement === null || target.parentElement === document.body) {\n    return false;\n  }\n  return elementIsHeadTag(target.parentElement);\n};\n\nconst useColumnsSortable = ({ columns, setData, name, initColumnsData }) => {\n  const ref = useRef(null);\n  const nameRef = useRef(name);\n  nameRef.current = name;\n  const columnMap = useMemo(() => {\n    return new Map(\n      columns.map((item) => {\n        return [item.key, item];\n      })\n    );\n  }, [columns]);\n  const columnMapRef = useRef(columnMap);\n  columnMapRef.current = columnMap;\n  const { tablePageServerApis } = usePreset();\n  const setDataFunc = useDebouncedCallback(() => {\n    const cache = getCache();\n    cache.delByCacheName(`TABLE_CONFIG_${nameRef.current}`);\n    if (tablePageServerApis && tablePageServerApis.setDataFunc) {\n      tablePageServerApis.setDataFunc(nameRef.current, columnsSortable);\n      setData(columnsSortable);\n    }\n  }, 1000);\n  const [isActive, setIsActive] = useState(false);\n  const isMoveRef = useRef(false);\n  const moveColumnRef = useRef({ index: -1, width: 0 });\n  const [sign, setSign] = useState({});\n  const startPageXRef = useRef(0);\n  const computedSortableState = useCallback(() => {\n    return initColumnsData &&\n      initColumnsData.length > 0 &&\n      columns.length === initColumnsData.length &&\n      isEqualWith(columns, initColumnsData, (a, b) => a.key === b.id)\n      ? initColumnsData.map(({ id, width, hidden }) => ({\n          id,\n          width,\n          hidden,\n        }))\n      : columns.map((item) => {\n          return {\n            id: item.key,\n            hidden: item.hidden,\n            width: item.width,\n          };\n        });\n  }, [initColumnsData, columns]);\n\n  useEffect(() => {\n    setColumnsSortableState(computedSortableState());\n  }, [computedSortableState]);\n\n  const [columnsSortable, setColumnsSortableState] = useState(\n    computedSortableState\n  );\n\n  const setColumnsSortable = useRefCallback((state) => {\n    setColumnsSortableState(state);\n    setDataFunc();\n  });\n  const columnsSortableRef = useRef(columnsSortable);\n  const popupColumnsSortableRef = useRef(columnsSortable);\n  columnsSortableRef.current = popupColumnsSortableRef.current =\n    columnsSortable;\n\n  const resetFormColumns = useRefCallback(() => {\n    const newColumns = columns.map((item) => {\n      return {\n        id: item.key,\n        hidden: item.hidden,\n        width: item.width,\n      };\n    });\n    popupColumnsSortableRef.current = newColumns;\n    setColumnsSortable(newColumns);\n  });\n\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    const signWidth = 8;\n\n    const handlerCancel = (e) => {\n      const target = e.target;\n      if (\n        !isMoveRef.current &&\n        !target.classList.contains(\"changer-sign\") &&\n        !elementIsHeadTag(target)\n      ) {\n        setIsActive(false);\n      }\n    };\n    const handlerEnter = (e) => {\n      const target = elementIsHeadTag(e.target) || e.target;\n      const { left: baseLeft, top: baseTop } =\n        ref.current.getBoundingClientRect();\n      const { left, width, height } = target.getBoundingClientRect();\n      const thead = ref.current.querySelector(\".ant-table-thead\");\n      const top = thead.getBoundingClientRect().top;\n      const ths = Array.from(thead.querySelectorAll(\"th\"));\n      const thsColumns = Array.from(\n        thead.querySelectorAll(\"th:not(.ant-table-selection-column)\")\n      );\n      if (\n        !isMoveRef.current &&\n        elementIsHeadTag(target) &&\n        0 < e.pageX - left + signWidth\n      ) {\n        moveColumnRef.current = {\n          index: thsColumns.indexOf(target),\n          locationIndex: ths.indexOf(target),\n          width,\n          left,\n          height,\n        };\n        setSign({\n          left: left - baseLeft + width - signWidth,\n          top: top - baseTop,\n          height,\n        });\n        setIsActive(true);\n      }\n      if (\n        !isMoveRef.current &&\n        elementIsHeadTag(target) &&\n        0 > e.pageX - left + signWidth\n      ) {\n        setIsActive(false);\n      }\n      if (isMoveRef.current && moveColumnRef.current.index > -1) {\n        const delta = e.pageX - startPageXRef.current;\n        const scrollLeft = (\n          ref.current.querySelector(\".ant-table-body\") ||\n          ref.current.querySelector(\".ant-table-content\")\n        ).scrollLeft;\n        const currentWidth = Math.max(delta + moveColumnRef.current.width, 100);\n        setSign({\n          left:\n            Math.max(\n              sum(\n                ths\n                  .slice(0, moveColumnRef.current.locationIndex)\n                  .map((item) => item.clientWidth)\n              ) - scrollLeft,\n              0\n            ) +\n            currentWidth -\n            signWidth,\n          top: top - baseTop,\n          height: moveColumnRef.current.height,\n        });\n        setColumnsSortable((list) => {\n          const newList = list.slice(0);\n          newList\n            .filter(({ hidden }) => hidden !== true)\n            .forEach((item, index) => {\n              item.width =\n                moveColumnRef.current.index === index\n                  ? currentWidth\n                  : thsColumns[index]?.clientWidth || 100;\n            });\n          return newList;\n        });\n      }\n    };\n\n    const handlerUp = () => {\n      document.body.style.cursor = \"unset\";\n      isMoveRef.current = false;\n      moveColumnRef.current = { index: -1, width: 0 };\n      setIsActive(false);\n    };\n\n    ref.current.addEventListener(\"mousemove\", handlerEnter, true);\n    window.addEventListener(\"mouseup\", handlerUp);\n    document.addEventListener(\"mousemove\", handlerCancel, true);\n    return () => {\n      document.removeEventListener(\"mousemove\", handlerCancel, true);\n      window.removeEventListener(\"mouseup\", handlerUp);\n    };\n  }, [resetFormColumns, setColumnsSortable]);\n\n  return {\n    ref,\n    sign: isActive && (\n      <div\n        className={classnames(style[\"width-changer-sign\"], \"changer-sign\")}\n        style={{\n          top: sign.top,\n          left: sign.left,\n          height: sign.height,\n        }}\n        onMouseDown={(e) => {\n          e.preventDefault();\n          isMoveRef.current = true;\n          startPageXRef.current = e.pageX;\n          document.body.style.cursor = `url(${cursorPng}) 12 10,col-resize`;\n        }}\n      />\n    ),\n    targetColumns: columnsSortable\n      .filter(({ hidden }) => hidden !== true)\n      .map(({ id, width }) => {\n        return Object.assign({}, columnMap.get(id), { width, ellipsis: false });\n      }),\n    popupColumns: popupColumnsSortableRef.current,\n    columnMap: columnMapRef.current,\n    setColumns: (newColumns) => {\n      popupColumnsSortableRef.current = newColumns;\n    },\n    onConfirm: () => {\n      setColumnsSortable(popupColumnsSortableRef.current);\n    },\n    onCancel: () => {\n      popupColumnsSortableRef.current = columnsSortableRef.current;\n    },\n    onReset: () => {\n      resetFormColumns();\n    },\n  };\n};\n\nexport default useColumnsSortable;\n","import { withFetch } from \"@kne/react-fetch\";\nimport { usePreset } from \"@components/Global\";\n\nconst withTableColumnsData = (WrappedComponent) => {\n  const FetchWrappedComponent = withFetch(WrappedComponent);\n  return (props) => {\n    const { name, controllerOpen } = props;\n    const { tablePageServerApis } = usePreset();\n    if (\n      controllerOpen &&\n      name &&\n      tablePageServerApis &&\n      tablePageServerApis.getDataApi\n    ) {\n      //isLocal ttl={24 * 60 * 60 * 1000}\n      return (\n        <FetchWrappedComponent\n          {...props}\n          {...tablePageServerApis.getDataApi(name)}\n          cache={`TABLE_CONFIG_${name}`}\n          isLocal\n          ttl={5 * 1000}\n          error={<WrappedComponent {...props} />}\n        />\n      );\n    }\n    return <WrappedComponent {...props} />;\n  };\n};\n\nexport default withTableColumnsData;\n","import useColumnsSortable from \"./useColumnsSortable\";\nimport classnames from \"classnames\";\nimport withTableColumnsData from \"./withTableColumnsData\";\nimport compose from \"@kne/compose\";\nimport style from \"../style.module.scss\";\n\nconst withTableColumnsWidthChanger = (WrappedComponent) => {\n  return ({ name, controllerOpen, columns, data, setData, ...props }) => {\n    const { ref, targetColumns, sign } = useColumnsSortable({\n      columns,\n      name,\n      initColumnsData: data,\n      setData,\n    });\n    if (!controllerOpen) {\n      return (\n        <WrappedComponent\n          columns={columns}\n          controllerOpen={controllerOpen}\n          originColumns={columns}\n          name={name}\n          {...props}\n        />\n      );\n    }\n    return (\n      <div\n        className={classnames(\n          style[\"width-changer\"],\n          \"table-page-columns-width-changer\"\n        )}\n        ref={ref}\n      >\n        <WrappedComponent\n          {...props}\n          name={name}\n          controllerOpen={controllerOpen}\n          originColumns={columns}\n          tableColumnFetchApi={{\n            data,\n            setData,\n          }}\n          columns={targetColumns}\n        />\n        {sign}\n      </div>\n    );\n  };\n};\n\nexport default compose(withTableColumnsData, withTableColumnsWidthChanger);\n","const importMessages = (locale) => {\n  return {\n    \"en-US\": () => import(\"./en-US\"),\n    \"zh-CN\": () => import(\"./zh-CN\"),\n  }[locale]();\n};\n\nexport default importMessages;\n","import { useMemo, useState } from \"react\";\nimport groupBy from \"lodash/groupBy\";\nimport Icon from \"@components/Icon\";\nimport LoadingButton from \"@components/LoadingButton\";\nimport { SearchInput } from \"@components/Common\";\nimport style from \"../style.module.scss\";\nimport { Button, Checkbox, Col, Collapse, List, Row, Tooltip } from \"antd\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport classnames from \"classnames\";\n\nconst { Panel } = Collapse;\n\nconst ColumnsControlContent = ({\n  close,\n  onCancel,\n  onConfirm,\n  onReset,\n  columns,\n  setColumns,\n}) => {\n  const [activeColumns, setActiveColumns] = useState(columns);\n  const [searchText, setSearchText] = useState(\"\");\n  const { leftFixedColumns, rightFixedColumns, visibleColumns, hiddenColumns } =\n    useMemo(() => {\n      return Object.assign(\n        {\n          leftFixedColumns: [],\n          rightFixedColumns: [],\n          visibleColumns: [],\n          hiddenColumns: [],\n        },\n        groupBy(activeColumns, (item) => {\n          if (item.fixed === \"right\") {\n            return \"rightFixedColumns\";\n          }\n          if (item.fixed === true || item.fixed === \"left\") {\n            return \"leftFixedColumns\";\n          }\n          return item.hidden ? \"hiddenColumns\" : \"visibleColumns\";\n        })\n      );\n    }, [activeColumns]);\n\n  const handlerColumnsChange = (columns) => {\n    setActiveColumns(columns);\n    setColumns(columns);\n  };\n  return (\n    <div className={style[\"columns-control-content\"]}>\n      <div className={style[\"columns-control-content-title\"]}>\n        <Row align=\"middle\" justify=\"space-between\">\n          <Col>编辑表格</Col>\n          <Col>\n            <Tooltip title=\"恢复默认\">\n              <LoadingButton\n                type=\"text\"\n                icon={<Icon type=\"icon-huifumorenshezhi\" />}\n                onClick={async () => {\n                  onReset && (await onReset());\n                  close();\n                }}\n              />\n            </Tooltip>\n          </Col>\n        </Row>\n      </div>\n      <div className={style[\"columns-control-content-scroller\"]}>\n        <Collapse\n          defaultActiveKey={[\"active\", \"un-active\"]}\n          ghost={true}\n          bordered\n        >\n          <Panel header=\"显示的信息\" key=\"active\">\n            <List className={style[\"columns-control-content-list\"]}>\n              {leftFixedColumns.map((item) => (\n                <List.Item\n                  className={style[\"columns-control-content-item\"]}\n                  key={item.id}\n                >\n                  <Checkbox checked disabled>\n                    {item.name}\n                  </Checkbox>\n                </List.Item>\n              ))}\n              <ReactSortable\n                list={visibleColumns}\n                filter=\".ignore-elements\"\n                dragClass={style[\"sortable-drag\"]}\n                ghostClass={style[\"sortable-ghost\"]}\n                forceFallback\n                setList={(visibleColumns) => {\n                  handlerColumnsChange([\n                    ...leftFixedColumns,\n                    ...visibleColumns,\n                    ...hiddenColumns,\n                    ...rightFixedColumns,\n                  ]);\n                }}\n                animation={300}\n                delayOnTouchStart\n                delay={2}\n              >\n                {visibleColumns.map((item) => (\n                  <List.Item\n                    className={classnames(\n                      style[\"columns-control-content-item\"],\n                      style[\"is-drag\"]\n                    )}\n                    key={item.id}\n                  >\n                    <Icon\n                      type=\"icon-paixu\"\n                      className={style[\"columns-control-content-item-icon\"]}\n                    />\n                    <Checkbox\n                      checked\n                      disabled={item.fixed}\n                      onChange={(e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        const index = activeColumns.indexOf(item);\n                        const newActiveColumns = activeColumns.slice(0);\n                        newActiveColumns[index] = Object.assign(\n                          {},\n                          newActiveColumns[index],\n                          { hidden: true }\n                        );\n                        handlerColumnsChange(newActiveColumns);\n                      }}\n                    >\n                      {item.name}\n                    </Checkbox>\n                  </List.Item>\n                ))}\n              </ReactSortable>\n              {rightFixedColumns.map((item) => (\n                <List.Item\n                  className={style[\"columns-control-content-item\"]}\n                  key={item.id}\n                >\n                  <Checkbox checked disabled>\n                    {item.name}\n                  </Checkbox>\n                </List.Item>\n              ))}\n            </List>\n          </Panel>\n          <Panel\n            header={\n              <Row wrap={false} justify=\"space-between\">\n                <Col>隐藏的信息</Col>\n                <Col\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                  }}\n                >\n                  <SearchInput\n                    prefix={<Icon type=\"icon-sousuo\" size={12} />}\n                    placeholder=\"搜索\"\n                    onSearch={(value) => {\n                      setSearchText(value);\n                    }}\n                    className={style[\"columns-control-content-input\"]}\n                    size=\"small\"\n                  />\n                </Col>\n              </Row>\n            }\n            key=\"un-active\"\n          >\n            <List\n              dataSource={hiddenColumns.filter(\n                (item) =>\n                  typeof item.name === \"string\" &&\n                  item.name.indexOf(searchText) > -1\n              )}\n              renderItem={(item) => {\n                return (\n                  <List.Item\n                    className={style[\"columns-control-content-item\"]}\n                    key={item.id}\n                  >\n                    <Checkbox\n                      checked={false}\n                      onChange={(e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        const index = activeColumns.indexOf(item);\n                        const newActiveColumns = activeColumns.slice(0);\n                        newActiveColumns[index] = Object.assign(\n                          {},\n                          newActiveColumns[index],\n                          {\n                            hidden: false,\n                            width: newActiveColumns[index].width || 200,\n                          }\n                        );\n                        handlerColumnsChange(newActiveColumns);\n                      }}\n                    >\n                      {item.name}\n                    </Checkbox>\n                  </List.Item>\n                );\n              }}\n            />\n          </Panel>\n        </Collapse>\n      </div>\n      <Row\n        className={style[\"columns-control-content-footer\"]}\n        justify=\"end\"\n        gutter={10}\n      >\n        <Col>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              onCancel && onCancel();\n              close();\n            }}\n          >\n            取消\n          </Button>\n        </Col>\n        <Col>\n          <LoadingButton\n            type=\"primary\"\n            size=\"small\"\n            onClick={async () => {\n              onConfirm && (await onConfirm());\n              close();\n            }}\n          >\n            确定\n          </LoadingButton>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default ColumnsControlContent;\n","import { Popover } from \"antd\";\nimport get from \"lodash/get\";\nimport ColumnsControlContent from \"./ColumnsControlContent\";\nimport style from \"../style.module.scss\";\nimport { useState } from \"react\";\nimport Icon from \"@components/Icon\";\nimport useColumnsSortable from \"./useColumnsSortable\";\n\nconst CreateColumnsControl = ({ columns, name, data, setData, ...props }) => {\n  const [open, setOpen] = useState(false);\n  const { popupColumns, columnMap, setColumns, onConfirm, onCancel, onReset } =\n    useColumnsSortable({\n      columns,\n      name,\n      initColumnsData: data,\n      setData,\n    });\n  return (\n    <Popover\n      {...props}\n      open={open}\n      overlayClassName={style[\"columns-control-overlay\"]}\n      trigger=\"click\"\n      autoAdjustOverflow={false}\n      placement=\"bottomRight\"\n      content={\n        <ColumnsControlContent\n          columns={popupColumns.map((item) => {\n            const target = columnMap.get(item.id);\n            return Object.assign({}, item, {\n              name:\n                get(target, \"titleText\") || get(target, \"title\") || \"未命名列\",\n              fixed: get(target, \"fixed\"),\n            });\n          })}\n          setColumns={(data) => {\n            setColumns(\n              data.map(({ id, width, hidden }) => ({ id, width, hidden }))\n            );\n          }}\n          close={() => setOpen(false)}\n          onConfirm={onConfirm}\n          onCancel={onCancel}\n          onReset={onReset}\n        />\n      }\n      onOpenChange={(open) => setOpen(open)}\n    >\n      <span className={style[\"table-changer-setting\"]}>\n        <Icon type=\"icon-shezhi\" />\n      </span>\n    </Popover>\n  );\n};\n\nexport default CreateColumnsControl;\n","import { Table as AntTable } from \"antd\";\nimport { forwardRef, useMemo, useState } from \"react\";\nimport useRefCallback from \"@kne/use-ref-callback\";\nimport Fetch, { withFetch } from \"@kne/react-fetch\";\nimport classnames from \"classnames\";\nimport get from \"lodash/get\";\nimport Scroller from \"@common/components/Scroller\";\nimport { getScrollEl } from \"@common/utils/importantContainer\";\nimport withTableColumnsWidthChanger from \"./withTableColumnsWidthChanger\";\nimport Features from \"@components/Features\";\nimport style from \"./style.module.scss\";\nimport importMessages from \"./locale\";\nimport { FormattedMessage, IntlProvider } from \"@components/Intl\";\nimport CreateColumnsControl from \"./withTableColumnsWidthChanger/createColumnsControl\";\n\nconst AntTableTemplate = ({\n  className,\n  columns,\n  originColumns,\n  controllerOpen,\n  tableColumnFetchApi,\n  name,\n  scroller,\n  featureId,\n  ...props\n}) => {\n  const { data, setData } = tableColumnFetchApi || {};\n\n  const renderFeatureConfig = ({ children }) => {\n    return featureId ? (\n      <Features id={featureId}>{(args) => children(args)}</Features>\n    ) : (\n      children({})\n    );\n  };\n\n  const renderTable = (columns) => {\n    return (\n      <Scroller\n        className=\"table-page-scroller\"\n        scroller={scroller}\n        getScrollTarget={(el) => {\n          return (\n            el.querySelector(\".ant-table-body\") ||\n            el.querySelector(\".ant-table-content\")\n          );\n        }}\n      >\n        {renderFeatureConfig({\n          children: ({ options }) => {\n            const _columns = columns.filter((item) => {\n              if (!item.key) {\n                return true;\n              }\n              if (!Array.isArray(get(options, \"hiddenColumns\"))) {\n                return true;\n              }\n              return options.hiddenColumns.indexOf(item.key) === -1;\n            });\n            return (\n              <AntTable\n                {...props}\n                columns={\n                  controllerOpen === false\n                    ? _columns\n                    : _columns.map((item, index) => {\n                        if (_columns.length - 1 === index) {\n                          return {\n                            ...item,\n                            title: () => {\n                              return (\n                                <>\n                                  <span>{item.title}</span>\n                                  <CreateColumnsControl\n                                    data={data}\n                                    columns={originColumns}\n                                    setData={setData}\n                                    name={name}\n                                  />\n                                </>\n                              );\n                            },\n                          };\n                        }\n                        return item;\n                      })\n                }\n                className={classnames(className, \"table-page\")}\n              />\n            );\n          },\n        })}\n      </Scroller>\n    );\n  };\n\n  return renderTable(columns);\n};\n\nexport const Table = withTableColumnsWidthChanger(AntTableTemplate);\n\nconst TableList = withFetch(\n  ({\n    data,\n    refresh,\n    reload,\n    requestParams,\n    fetchProps,\n    isComplete,\n    setData,\n    loadMore,\n    send,\n    dataFormat,\n    pagination,\n    scroller,\n    getColumns,\n    getColumnsParams,\n    className,\n    columns,\n    featureId,\n    stickyOffset,\n    ...props\n  }) => {\n    const handlerDataFormat = useRefCallback(dataFormat);\n    const handlerGetColumns = useRefCallback(getColumns);\n    const formatData = useMemo(() => {\n      return handlerDataFormat(data);\n    }, [data, handlerDataFormat]);\n    const tableProps = {\n      dataSource: formatData.list,\n      pagination: pagination.open\n        ? {\n            total: formatData.total,\n            showTotal: (total) => (\n              <>\n                <FormattedMessage\n                  id=\"Page_Total\"\n                  moduleName=\"TablePage\"\n                  defaultMessage=\"共\"\n                />\n                <span className={style[\"total_text\"]}>{total}</span>\n                <FormattedMessage\n                  id=\"Page_TotalCount\"\n                  moduleName=\"TablePage\"\n                  defaultMessage=\"条\"\n                />\n              </>\n            ),\n            current: get(\n              requestParams,\n              [pagination.paramsType, pagination.current],\n              1\n            ),\n            pageSize: pagination.defaultPageSize, // || get(requestParams, [pagination.paramsType, pagination.pageSize], 20)\n            onChange: pagination.onChange\n              ? pagination.onChange\n              : (page, size) => {\n                  if (\n                    page !==\n                    get(\n                      requestParams,\n                      [pagination.paramsType, pagination.current],\n                      1\n                    )\n                  ) {\n                    (pagination.requestType === \"refresh\" ? refresh : reload)({\n                      [pagination.paramsType]: {\n                        [pagination.current]: page,\n                        [pagination.pageSize]: size,\n                      },\n                    });\n                  } else {\n                    pagination.onShowSizeChange &&\n                      pagination.onShowSizeChange(page, size);\n                  }\n                },\n            size: pagination.size,\n            showSizeChanger: pagination.showSizeChanger,\n            showQuickJumper: pagination.showQuickJumper,\n          }\n        : false,\n      className: className,\n      style: {\n        \"--sticky-offset\": stickyOffset,\n      },\n    };\n    return (\n      <IntlProvider importMessages={importMessages} moduleName=\"TablePage\">\n        <div\n          className={classnames(\n            style[\"loading-container\"],\n            \"loading-container\",\n            {\n              \"is-loading\": !isComplete,\n            }\n          )}\n        >\n          {typeof getColumns === \"function\" && !columns ? (\n            <Fetch\n              data={data}\n              params={getColumnsParams}\n              loader={({ data, params }) =>\n                handlerGetColumns({\n                  data,\n                  params,\n                  formatData,\n                })\n              }\n              render={({ data }) => (\n                <Table\n                  {...props}\n                  {...tableProps}\n                  columns={data}\n                  scroller={scroller}\n                  featureId={featureId}\n                />\n              )}\n            />\n          ) : (\n            <Table\n              {...props}\n              {...tableProps}\n              columns={columns}\n              scroller={scroller}\n              featureId={featureId}\n            />\n          )}\n        </div>\n      </IntlProvider>\n    );\n  }\n);\n\nconst TablePage = forwardRef(({ pagination, ...props }, ref) => {\n  const [pageSize, setPageSize] = useState(20);\n  pagination = Object.assign(\n    {},\n    {\n      showSizeChanger: true,\n      showQuickJumper: true,\n      open: true,\n      paramsType: \"data\",\n      requestType: \"reload\",\n      current: \"currentPage\",\n      pageSize: \"perPage\",\n      size: \"default\",\n    },\n    pagination\n  );\n  const otherParams = useMemo(() => {\n    const _otherParams = {};\n    if (props.params && Object.keys(props.params).length > 0) {\n      _otherParams[\"params\"] = {\n        ...props.params,\n        [pagination.pageSize]: pageSize,\n      };\n    }\n    if (props.data && Object.keys(props.data).length > 0) {\n      _otherParams[\"data\"] = { ...props.data, [pagination.pageSize]: pageSize };\n    }\n    return _otherParams;\n  }, [props.params, props.data, pagination.pageSize, pageSize]);\n  return (\n    <TableList\n      {...{\n        ...props,\n        pagination: Object.assign(\n          {},\n          {\n            defaultPageSize: pageSize,\n            onShowSizeChange: (current, size) => {\n              setPageSize(size);\n            },\n          },\n          pagination\n        ),\n        ...otherParams,\n      }}\n      ref={ref}\n    />\n  );\n});\n\nTablePage.defaultProps = {\n  controllerOpen: true,\n  size: \"middle\",\n  stickyOffset: \"var(--nav-height)\",\n  sticky: {\n    getContainer: getScrollEl,\n  },\n  scroller: {\n    getContainer: getScrollEl,\n  },\n  scroll: { x: \"max-content\" },\n  rowKey: \"id\",\n  pagination: {},\n  dataFormat: (data) => {\n    return {\n      list: data.pageData,\n      total: data.totalCount,\n    };\n  },\n};\n\nexport default TablePage;\n"],"names":["ScrollBar","_ref","onScroll","getContainer","scrollerProps","startRef","useRef","moving","setMoving","useState","movingRef","current","onScrollRef","ratioRef","width","innerWidth","useEffect","moveHandler","e","clientX","upHandler","document","addEventListener","removeEventListener","createPortal","hasScroller","_jsx","className","style","left","height","children","classnames","innerLeft","onMouseDown","preventDefault","body","Scroller","_ref2","scroller","getScrollTarget","setScrollerProps","ref","getScrollEl","useRefCallback","container","documentElement","scrollEl","computed","top","getBoundingClientRect","scrollerHeight","offsetHeight","clientHeight","clientWidth","scrollWidth","scrollLeft","containerRect","props","Object","assign","resizeObserver","ResizeObserver","disconnect","Array","from","forEach","item","observe","window","_jsxs","x","defaultProps","querySelector","treeTraverse","data","func","pId","isArray","omit","parentId","id","parseProfile","memoize","profile","profileMap","output","Map","set","features","keys","filter","get","dependencies","length","some","depId","computedIsPaas","currentId","target","indexOf","close","every","dependenciesTarget","context","createContext","Provider","useFeatureCall","debug","useFeatures","preset","usePreset","systemId","type","useContext","console","log","concat","isPass","feature","value","options","elementIsHeadTag","tagName","toUpperCase","call","classList","parentElement","columns","setData","name","initColumnsData","nameRef","columnMap","useMemo","map","key","columnMapRef","tablePageServerApis","setDataFunc","useDebouncedCallback","getCache","delByCacheName","columnsSortable","isActive","setIsActive","isMoveRef","moveColumnRef","index","sign","setSign","startPageXRef","computedSortableState","useCallback","isEqualWith","a","b","hidden","setColumnsSortableState","setColumnsSortable","state","columnsSortableRef","popupColumnsSortableRef","resetFormColumns","newColumns","handlerCancel","contains","handlerUp","cursor","baseLeft","baseTop","thead","ths","querySelectorAll","thsColumns","pageX","locationIndex","delta","currentWidth","Math","max","sum","slice","list","newList","_ref3","_thsColumns$index","targetColumns","_ref4","_ref5","ellipsis","popupColumns","setColumns","onConfirm","onCancel","onReset","WrappedComponent","FetchWrappedComponent","withFetch","controllerOpen","getDataApi","cache","isLocal","ttl","error","compose","withTableColumnsData","useColumnsSortable","originColumns","tableColumnFetchApi","locale","en-US","zh-CN","Panel","Collapse","activeColumns","setActiveColumns","searchText","setSearchText","leftFixedColumns","rightFixedColumns","visibleColumns","hiddenColumns","groupBy","fixed","handlerColumnsChange","Row","align","justify","Col","Tooltip","title","LoadingButton","icon","Icon","onClick","async","defaultActiveKey","ghost","bordered","header","List","Item","Checkbox","checked","disabled","ReactSortable","dragClass","ghostClass","forceFallback","setList","animation","delayOnTouchStart","delay","onChange","stopPropagation","newActiveColumns","wrap","SearchInput","prefix","size","placeholder","onSearch","dataSource","renderItem","gutter","Button","open","setOpen","Popover","overlayClassName","trigger","autoAdjustOverflow","placement","content","ColumnsControlContent","onOpenChange","Table","withTableColumnsWidthChanger","featureId","renderFeatureConfig","Features","args","el","_columns","AntTable","_Fragment","CreateColumnsControl","renderTable","TableList","refresh","reload","requestParams","fetchProps","isComplete","loadMore","send","dataFormat","pagination","getColumns","getColumnsParams","stickyOffset","handlerDataFormat","handlerGetColumns","formatData","tableProps","total","showTotal","FormattedMessage","moduleName","defaultMessage","paramsType","pageSize","defaultPageSize","page","requestType","onShowSizeChange","showSizeChanger","showQuickJumper","IntlProvider","importMessages","Fetch","params","loader","render","_ref6","TablePage","forwardRef","_ref7","setPageSize","otherParams","_otherParams","sticky","scroll","rowKey","pageData","totalCount"],"sourceRoot":""}