{"version":3,"file":"static/js/2995.99e26933.chunk.js","mappings":"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","sources":["../node_modules/color-convert/conversions.js","../node_modules/color-convert/index.js","../node_modules/color-convert/route.js","../node_modules/color-name/index.js","../node_modules/color-string/index.js","../node_modules/color/index.js","../node_modules/simple-swizzle/index.js","../node_modules/simple-swizzle/node_modules/is-arrayish/index.js"],"sourcesContent":["/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n"],"names":["cssKeywords","require","reverseKeywords","key","Object","keys","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","gray","module","exports","model","Error","length","defineProperty","value","r","g","b","min","Math","max","delta","h","s","l","rdif","gdif","bdif","v","diff","diffc","c","w","k","reversed","currentClosestKeyword","currentClosestDistance","Infinity","distance","y","x","z","t2","t3","val","t1","i","smin","lmin","hi","floor","f","p","q","t","vmin","sl","wh","bl","ratio","n","m","y2","x2","z2","a","atan2","PI","sqrt","hr","cos","sin","args","saturation","arguments","undefined","round","ansi","color","mult","rem","string","toString","toUpperCase","substring","match","colorString","split","map","char","join","integer","parseInt","chroma","grayscale","hue","pure","mg","conversions","route","forEach","fromModel","routes","toModel","fn","wrappedFn","_len2","Array","_key2","arg0","result","len","conversion","wrapRounded","raw","_len","_key","wrapRaw","deriveBFS","graph","models","parent","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","to","wrapConversion","path","cur","colorNames","swizzle","hasOwnProperty","reverseNames","create","name","call","cs","get","clamp","num","hexDouble","str","toLowerCase","hexAlpha","i2","slice","parseFloat","alpha","isNaN","rgba","percent","hsla","hwba","skippedModels","hashedModelKeys","sort","limiters","Color","object","this","valpha","newArray","prototype","zeroArray","splice","indexOf","hashedKeys","JSON","stringify","push","limit","freeze","toJSON","places","self","percentString","array","unitArray","unitObject","roundToPlace","red","getset","maxfn","green","blue","saturationl","lightness","saturationv","white","wblack","cyan","magenta","yellow","black","hexa","rgbArray","alphaHex","rgbNumber","luminosity","lum","element","entries","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","darken","saturate","desaturate","whiten","blacken","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","includes","isArray","number","Number","toFixed","roundTo","channel","modifier","isArrayish","concat","results","arg","wrap","obj","Function","getOwnPropertyDescriptor","constructor"],"sourceRoot":""}